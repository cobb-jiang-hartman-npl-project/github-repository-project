[
 {
  "repo": "jtleek/datasharing",
  "language": null,
  "readme_contents": "How to share data with a statistician\n===========\n\nThis is a guide for anyone who needs to share data with a statistician or data scientist. The target audiences I have in mind are:\n\n* Collaborators who need statisticians or data scientists to analyze data for them\n* Students or postdocs in various disciplines looking for consulting advice\n* Junior statistics students whose job it is to collate/clean/wrangle data sets\n\nThe goals of this guide are to provide some instruction on the best way to share data to avoid the most common pitfalls\nand sources of delay in the transition from data collection to data analysis. The [Leek group](http://biostat.jhsph.edu/~jleek/) works with a large\nnumber of collaborators and the number one source of variation in the speed to results is the status of the data\nwhen they arrive at the Leek group. Based on my conversations with other statisticians this is true nearly universally.\n\nMy strong feeling is that statisticians should be able to handle the data in whatever state they arrive. It is important\nto see the raw data, understand the steps in the processing pipeline, and be able to incorporate hidden sources of\nvariability in one's data analysis. On the other hand, for many data types, the processing steps are well documented\nand standardized. So the work of converting the data from raw form to directly analyzable form can be performed \nbefore calling on a statistician. This can dramatically speed the turnaround time, since the statistician doesn't\nhave to work through all the pre-processing steps first. \n\n\nWhat you should deliver to the statistician\n====================\n\nTo facilitate the most efficient and timely analysis this is the information you should pass to a statistician:\n\n1. The raw data.\n2. A [tidy data set](http://vita.had.co.nz/papers/tidy-data.pdf) \n3. A code book describing each variable and its values in the tidy data set.  \n4. An explicit and exact recipe you used to go from 1 -> 2,3 \n\nLet's look at each part of the data package you will transfer. \n\n\n### The raw data\n\nIt is critical that you include the rawest form of the data that you have access to. This ensures\nthat data provenance can be maintained throughout the workflow.  Here are some examples of the\nraw form of data:\n\n* The strange [binary file](http://en.wikipedia.org/wiki/Binary_file) your measurement machine spits out\n* The unformatted Excel file with 10 worksheets the company you contracted with sent you\n* The complicated [JSON](http://en.wikipedia.org/wiki/JSON) data you got from scraping the [Twitter API](https://twitter.com/twitterapi)\n* The hand-entered numbers you collected looking through a microscope\n\nYou know the raw data are in the right format if you: \n\n1. Ran no software on the data\n1. Did not modify any of the data values\n1. You did not remove any data from the data set\n1. You did not summarize the data in any way\n\nIf you made any modifications of the raw data it is not the raw form of the data. Reporting modified data\nas raw data is a very common way to slow down the analysis process, since the analyst will often have to do a\nforensic study of your data to figure out why the raw data looks weird. (Also imagine what would happen if new data arrived?)\n\n### The tidy data set\n\nThe general principles of tidy data are laid out by [Hadley Wickham](http://had.co.nz/) in [this paper](http://vita.had.co.nz/papers/tidy-data.pdf)\nand [this video](http://vimeo.com/33727555). While both the paper and the video describe tidy data using [R](http://www.r-project.org/), the principles\nare more generally applicable:\n\n1. Each variable you measure should be in one column\n1. Each different observation of that variable should be in a different row\n1. There should be one table for each \"kind\" of variable\n1. If you have multiple tables, they should include a column in the table that allows them to be joined or merged\n\nWhile these are the hard and fast rules, there are a number of other things that will make your data set much easier\nto handle. First is to include a row at the top of each data table/spreadsheet that contains full row names. \nSo if you measured age at diagnosis for patients, you would head that column with the name `AgeAtDiagnosis` instead\nof something like `ADx` or another abbreviation that may be hard for another person to understand. \n\n\nHere is an example of how this would work from genomics. Suppose that for 20 people you have collected gene expression measurements with \n[RNA-sequencing](http://en.wikipedia.org/wiki/RNA-Seq). You have also collected demographic and clinical information\nabout the patients including their age, treatment, and diagnosis. You would have one table/spreadsheet that contains the clinical/demographic\ninformation. It would have four columns (patient id, age, treatment, diagnosis) and 21 rows (a row with variable names, then one row\nfor every patient). You would also have one spreadsheet for the summarized genomic data. Usually this type of data\nis summarized at the level of the number of counts per exon. Suppose you have 100,000 exons, then you would have a\ntable/spreadsheet that had 21 rows (a row for gene names, and one row for each patient) and 100,001 columns (one row for patient\nids and one row for each data type). \n\nIf you are sharing your data with the collaborator in Excel, the tidy data should be in one Excel file per table. They\nshould not have multiple worksheets, no macros should be applied to the data, and no columns/cells should be highlighted. \nAlternatively share the data in a [CSV](http://en.wikipedia.org/wiki/Comma-separated_values) or [TAB-delimited](http://en.wikipedia.org/wiki/Tab-separated_values) text file. (Beware however that reading CSV files into Excel can sometimes lead to non-reproducible handling of date and time variables.)\n\n\n### The code book\n\nFor almost any data set, the measurements you calculate will need to be described in more detail than you can or should sneak\ninto the spreadsheet. The code book contains this information. At minimum it should contain:\n\n1. Information about the variables (including units!) in the data set not contained in the tidy data \n1. Information about the summary choices you made\n1. Information about the experimental study design you used\n\nIn our genomics example, the analyst would want to know what the unit of measurement for each\nclinical/demographic variable is (age in years, treatment by name/dose, level of diagnosis and how heterogeneous). They \nwould also want to know how you picked the exons you used for summarizing the genomic data (UCSC/Ensembl, etc.). They\nwould also want to know any other information about how you did the data collection/study design. For example,\nare these the first 20 patients that walked into the clinic? Are they 20 highly selected patients by some characteristic\nlike age? Are they randomized to treatments? \n\nA common format for this document is a Word file. There should be a section called \"Study design\" that has a thorough\ndescription of how you collected the data. There is a section called \"Code book\" that describes each variable and its\nunits. \n\n### How to code variables\n\nWhen you put variables into a spreadsheet there are several main categories you will run into depending on their [data type](http://en.wikipedia.org/wiki/Statistical_data_type):\n\n1. Continuous\n1. Ordinal\n1. Categorical\n1. Missing \n1. Censored\n\nContinuous variables are anything measured on a quantitative scale that could be any fractional number. An example\nwould be something like weight measured in kg. [Ordinal data](http://en.wikipedia.org/wiki/Ordinal_data) are data that have a fixed, small (< 100) number of levels but are ordered. \nThis could be for example survey responses where the choices are: poor, fair, good. [Categorical data](http://en.wikipedia.org/wiki/Categorical_variable) are data where there\nare multiple categories, but they aren't ordered. One example would be sex: male or female. This coding is attractive because it is self-documenting.  [Missing data](http://en.wikipedia.org/wiki/Missing_data) are data\nthat are unobserved and you don't know the mechanism. You should code missing values as `NA`. [Censored data](http://en.wikipedia.org/wiki/Censoring_\\(statistics\\)) are data\nwhere you know the missingness mechanism on some level. Common examples are a measurement being below a detection limit\nor a patient being lost to follow-up. They should also be coded as `NA` when you don't have the data. But you should\nalso add a new column to your tidy data called, \"VariableNameCensored\" which should have values of `TRUE` if censored \nand `FALSE` if not. In the code book you should explain why those values are missing. It is absolutely critical to report\nto the analyst if there is a reason you know about that some of the data are missing. You should also not [impute](http://en.wikipedia.org/wiki/Imputation_\\(statistics\\))/make up/\nthrow away missing observations.\n\nIn general, try to avoid coding categorical or ordinal variables as numbers. When you enter the value for sex in the tidy\ndata, it should be \"male\" or \"female\". The ordinal values in the data set should be \"poor\", \"fair\", and \"good\" not 1, 2 ,3.\nThis will avoid potential mixups about which direction effects go and will help identify coding errors. \n\nAlways encode every piece of information about your observations using text. For example, if you are storing data in Excel and use a form of colored text or cell background formatting to indicate information about an observation (\"red variable entries were observed in experiment 1.\") then this information will not be exported (and will be lost!) when the data is exported as raw text.  Every piece of data should be encoded as actual text that can be exported.  \n\n### The instruction list/script\n\nYou may have heard this before, but [reproducibility is a big deal in computational science](http://www.sciencemag.org/content/334/6060/1226).\nThat means, when you submit your paper, the reviewers and the rest of the world should be able to exactly replicate\nthe analyses from raw data all the way to final results. If you are trying to be efficient, you will likely perform\nsome summarization/data analysis steps before the data can be considered tidy. \n\nThe ideal thing for you to do when performing summarization is to create a computer script (in `R`, `Python`, or something else) \nthat takes the raw data as input and produces the tidy data you are sharing as output. You can try running your script\na couple of times and see if the code produces the same output. \n\nIn many cases, the person who collected the data has incentive to make it tidy for a statistician to speed the process\nof collaboration. They may not know how to code in a scripting language. In that case, what you should provide the statistician\nis something called [pseudocode](http://en.wikipedia.org/wiki/Pseudocode). It should look something like:\n\n1. Step 1 - take the raw file, run version 3.1.2 of summarize software with parameters a=1, b=2, c=3\n1. Step 2 - run the software separately for each sample\n1. Step 3 - take column three of outputfile.out for each sample and that is the corresponding row in the output data set\n\nYou should also include information about which system (Mac/Windows/Linux) you used the software on and whether you \ntried it more than once to confirm it gave the same results. Ideally, you will run this by a fellow student/labmate\nto confirm that they can obtain the same output file you did. \n\n\n\n\nWhat you should expect from the analyst\n====================\n\nWhen you turn over a properly tidied data set it dramatically decreases the workload on the statistician. So hopefully\nthey will get back to you much sooner. But most careful statisticians will check your recipe, ask questions about\nsteps you performed, and try to confirm that they can obtain the same tidy data that you did with, at minimum, spot\nchecks.\n\nYou should then expect from the statistician:\n\n1. An analysis script that performs each of the analyses (not just instructions)\n1. The exact computer code they used to run the analysis\n1. All output files/figures they generated. \n\nThis is the information you will use in the supplement to establish reproducibility and precision of your results. Each\nof the steps in the analysis should be clearly explained and you should ask questions when you don't understand\nwhat the analyst did. It is the responsibility of both the statistician and the scientist to understand the statistical\nanalysis. You may not be able to perform the exact analyses without the statistician's code, but you should be able\nto explain why the statistician performed each step to a labmate/your principal investigator. \n\n\nContributors\n====================\n\n* [Jeff Leek](http://biostat.jhsph.edu/~jleek/) - Wrote the initial version.\n* [L. Collado-Torres](http://bit.ly/LColladoTorres) - Fixed typos, added links.\n* [Nick Reich](http://people.umass.edu/nick/) - Added tips on storing data as text.\n* [Nick Horton](https://www.amherst.edu/people/facstaff/nhorton) - Minor wording suggestions.\n\n\n"
 },
 {
  "repo": "rdpeng/ProgrammingAssignment2",
  "language": "R",
  "readme_contents": "### Introduction\n\nThis second programming assignment will require you to write an R\nfunction that is able to cache potentially time-consuming computations.\nFor example, taking the mean of a numeric vector is typically a fast\noperation. However, for a very long vector, it may take too long to\ncompute the mean, especially if it has to be computed repeatedly (e.g.\nin a loop). If the contents of a vector are not changing, it may make\nsense to cache the value of the mean so that when we need it again, it\ncan be looked up in the cache rather than recomputed. In this\nProgramming Assignment you will take advantage of the scoping rules of\nthe R language and how they can be manipulated to preserve state inside\nof an R object.\n\n### Example: Caching the Mean of a Vector\n\nIn this example we introduce the `<<-` operator which can be used to\nassign a value to an object in an environment that is different from the\ncurrent environment. Below are two functions that are used to create a\nspecial object that stores a numeric vector and caches its mean.\n\nThe first function, `makeVector` creates a special \"vector\", which is\nreally a list containing a function to\n\n1.  set the value of the vector\n2.  get the value of the vector\n3.  set the value of the mean\n4.  get the value of the mean\n\n<!-- -->\n\n    makeVector <- function(x = numeric()) {\n            m <- NULL\n            set <- function(y) {\n                    x <<- y\n                    m <<- NULL\n            }\n            get <- function() x\n            setmean <- function(mean) m <<- mean\n            getmean <- function() m\n            list(set = set, get = get,\n                 setmean = setmean,\n                 getmean = getmean)\n    }\n\nThe following function calculates the mean of the special \"vector\"\ncreated with the above function. However, it first checks to see if the\nmean has already been calculated. If so, it `get`s the mean from the\ncache and skips the computation. Otherwise, it calculates the mean of\nthe data and sets the value of the mean in the cache via the `setmean`\nfunction.\n\n    cachemean <- function(x, ...) {\n            m <- x$getmean()\n            if(!is.null(m)) {\n                    message(\"getting cached data\")\n                    return(m)\n            }\n            data <- x$get()\n            m <- mean(data, ...)\n            x$setmean(m)\n            m\n    }\n\n### Assignment: Caching the Inverse of a Matrix\n\nMatrix inversion is usually a costly computation and there may be some\nbenefit to caching the inverse of a matrix rather than computing it\nrepeatedly (there are also alternatives to matrix inversion that we will\nnot discuss here). Your assignment is to write a pair of functions that\ncache the inverse of a matrix.\n\nWrite the following functions:\n\n1.  `makeCacheMatrix`: This function creates a special \"matrix\" object\n    that can cache its inverse.\n2.  `cacheSolve`: This function computes the inverse of the special\n    \"matrix\" returned by `makeCacheMatrix` above. If the inverse has\n    already been calculated (and the matrix has not changed), then\n    `cacheSolve` should retrieve the inverse from the cache.\n\nComputing the inverse of a square matrix can be done with the `solve`\nfunction in R. For example, if `X` is a square invertible matrix, then\n`solve(X)` returns its inverse.\n\nFor this assignment, assume that the matrix supplied is always\ninvertible.\n\nIn order to complete this assignment, you must do the following:\n\n1.  Fork the GitHub repository containing the stub R files at\n    [https://github.com/rdpeng/ProgrammingAssignment2](https://github.com/rdpeng/ProgrammingAssignment2)\n    to create a copy under your own account.\n2.  Clone your forked GitHub repository to your computer so that you can\n    edit the files locally on your own machine.\n3.  Edit the R file contained in the git repository and place your\n    solution in that file (please do not rename the file).\n4.  Commit your completed R file into YOUR git repository and push your\n    git branch to the GitHub repository under your account.\n5.  Submit to Coursera the URL to your GitHub repository that contains\n    the completed R code for the assignment.\n\n### Grading\n\nThis assignment will be graded via peer assessment.\n"
 },
 {
  "repo": "octocat/Spoon-Knife",
  "language": "HTML",
  "readme_contents": "### Well hello there!\n\nThis repository is meant to provide an example for *forking* a repository on GitHub.\n\nCreating a *fork* is producing a personal copy of someone else's project. Forks act as a sort of bridge between the original repository and your personal copy. You can submit *Pull Requests* to help make other people's projects better by offering your changes up to the original project. Forking is at the core of social coding at GitHub.\n\nAfter forking this repository, you can make some changes to the project, and submit [a Pull Request](https://github.com/octocat/Spoon-Knife/pulls) as practice.\n\nFor some more information on how to fork a repository, [check out our guide, \"Forking Projects\"\"](http://guides.github.com/overviews/forking/). Thanks! :sparkling_heart:\n"
 },
 {
  "repo": "tensorflow/tensorflow",
  "language": "C++",
  "readme_contents": "<div align=\"center\">\n  <img src=\"https://www.tensorflow.org/images/tf_logo_social.png\">\n</div>\n\n[![Python](https://img.shields.io/pypi/pyversions/tensorflow.svg?style=plastic)](https://badge.fury.io/py/tensorflow)\n[![PyPI](https://badge.fury.io/py/tensorflow.svg)](https://badge.fury.io/py/tensorflow)\n\n\n**`Documentation`** |\n------------------- |\n[![Documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://www.tensorflow.org/api_docs/) |\n\n[TensorFlow](https://www.tensorflow.org/) is an end-to-end open source platform\nfor machine learning. It has a comprehensive, flexible ecosystem of\n[tools](https://www.tensorflow.org/resources/tools),\n[libraries](https://www.tensorflow.org/resources/libraries-extensions), and\n[community](https://www.tensorflow.org/community) resources that lets\nresearchers push the state-of-the-art in ML and developers easily build and\ndeploy ML-powered applications.\n\nTensorFlow was originally developed by researchers and engineers working on the\nGoogle Brain team within Google's Machine Intelligence Research organization to\nconduct machine learning and deep neural networks research. The system is\ngeneral enough to be applicable in a wide variety of other domains, as well.\n\nTensorFlow provides stable [Python](https://www.tensorflow.org/api_docs/python)\nand [C++](https://www.tensorflow.org/api_docs/cc) APIs, as well as\nnon-guaranteed backward compatible API for\n[other languages](https://www.tensorflow.org/api_docs).\n\nKeep up-to-date with release announcements and security updates by subscribing\nto\n[announce@tensorflow.org](https://groups.google.com/a/tensorflow.org/forum/#!forum/announce).\nSee all the [mailing lists](https://www.tensorflow.org/community/forums).\n\n## Install\n\nSee the [TensorFlow install guide](https://www.tensorflow.org/install) for the\n[pip package](https://www.tensorflow.org/install/pip), to\n[enable GPU support](https://www.tensorflow.org/install/gpu), use a\n[Docker container](https://www.tensorflow.org/install/docker), and\n[build from source](https://www.tensorflow.org/install/source).\n\nTo install the current release, which includes support for\n[CUDA-enabled GPU cards](https://www.tensorflow.org/install/gpu) *(Ubuntu and\nWindows)*:\n\n```\n$ pip install tensorflow\n```\n\nA smaller CPU-only package is also available:\n\n```\n$ pip install tensorflow-cpu\n```\n\nTo update TensorFlow to the latest version, add `--upgrade` flag to the above\ncommands.\n\n*Nightly binaries are available for testing using the\n[tf-nightly](https://pypi.python.org/pypi/tf-nightly) and\n[tf-nightly-cpu](https://pypi.python.org/pypi/tf-nightly-cpu) packages on PyPi.*\n\n#### *Try your first TensorFlow program*\n\n```shell\n$ python\n```\n\n```python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\nb'Hello, TensorFlow!'\n```\n\nFor more examples, see the\n[TensorFlow tutorials](https://www.tensorflow.org/tutorials/).\n\n## Contribution guidelines\n\n**If you want to contribute to TensorFlow, be sure to review the\n[contribution guidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.**\n\n**We use [GitHub issues](https://github.com/tensorflow/tensorflow/issues) for\ntracking requests and bugs, please see\n[TensorFlow Discuss](https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss)\nfor general questions and discussion, and please direct specific questions to\n[Stack Overflow](https://stackoverflow.com/questions/tagged/tensorflow).**\n\nThe TensorFlow project strives to abide by generally accepted best practices in\nopen-source software development:\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1486/badge)](https://bestpractices.coreinfrastructure.org/projects/1486)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n\n## Continuous build status\n\n### Official Builds\n\nBuild Type               | Status                                                                                                                                                                           | Artifacts\n------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux CPU**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html)           | [PyPI](https://pypi.org/project/tf-nightly/)\n**Linux GPU**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html) | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Linux XLA**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html)         | TBA\n**macOS**                | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html)     | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows CPU**          | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html)       | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows GPU**          | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html)       | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Android**              | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html)               | [![Download](https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg)](https://bintray.com/google/tensorflow/tensorflow/_latestVersion)\n**Raspberry Pi 0 and 1** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html)           | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl)\n**Raspberry Pi 2 and 3** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html)           | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl)\n\n### Community Supported Builds\n\nBuild Type                                                        | Status                                                                                                                                                                                        | Artifacts\n----------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux AMD ROCm GPU** Nightly                                    | [![Build Status](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/badge/icon)](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly)                                                  | [Nightly](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/lastSuccessfulBuild/)\n**Linux AMD ROCm GPU** Stable Release                             | [![Build Status](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/badge/icon)](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/)                                                 | Release [1.15](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/lastSuccessfulBuild/) / [2.x](http://ml-ci.amd.com:21096/job/tensorflow-rocm-v2-release/lastSuccessfulBuild/)\n**Linux s390x** Nightly                                           | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon)](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)                                                             | [Nightly](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)\n**Linux s390x CPU** Stable Release                                | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/badge/icon)](https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/)                                      | [Release](https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/)\n**Linux ppc64le CPU** Nightly                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/)\n**Linux ppc64le CPU** Stable Release                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/)                       | Release [1.15](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/) / [2.x](https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_CPU_Release_Build/)\n**Linux ppc64le GPU** Nightly                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/)\n**Linux ppc64le GPU** Stable Release                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/)                       | Release [1.15](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/) / [2.x](https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_GPU_Release_Build/)\n**Linux CPU with Intel\u00ae MKL-DNN** Nightly                         | [![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/badge/icon)](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)                     | [Nightly](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)\n**Linux CPU with Intel\u00ae MKL-DNN** Stable Release                  | ![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon)                                                                                              | Release [1.15](https://pypi.org/project/intel-tensorflow/1.15.0/) / [2.x](https://pypi.org/project/intel-tensorflow/)\n**Red Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU** <br> Python 2.7, 3.6 | [![Build Status](https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&build=2)](https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/) | [1.13.1 PyPI](https://tensorflow.pypi.thoth-station.ninja/index/)\n\n## Resources\n\n*   [TensorFlow.org](https://www.tensorflow.org)\n*   [TensorFlow Tutorials](https://www.tensorflow.org/tutorials/)\n*   [TensorFlow Official Models](https://github.com/tensorflow/models/tree/master/official)\n*   [TensorFlow Examples](https://github.com/tensorflow/examples)\n*   [TensorFlow in Practice from Coursera](https://www.coursera.org/specializations/tensorflow-in-practice)\n*   [TensorFlow: Data and Deployment from Coursera](https://www.coursera.org/specializations/tensorflow-data-and-deployment)\n*   [Getting Started with TensorFlow 2 from Coursera](https://www.coursera.org/learn/getting-started-with-tensor-flow2)\n*   [Intro to TensorFlow for Deep Learning from Udacity](https://www.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187)\n*   [Introduction to TensorFlow Lite from Udacity](https://www.udacity.com/course/intro-to-tensorflow-lite--ud190)\n*   [Machine Learning with TensorFlow on GCP](https://www.coursera.org/specializations/machine-learning-tensorflow-gcp)\n*   [TensorFlow Blog](https://blog.tensorflow.org)\n*   [Learn ML with TensorFlow](https://www.tensorflow.org/resources/learn-ml)\n*   [TensorFlow Twitter](https://twitter.com/tensorflow)\n*   [TensorFlow YouTube](https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ)\n*   [TensorFlow Roadmap](https://www.tensorflow.org/community/roadmap)\n*   [TensorFlow White Papers](https://www.tensorflow.org/about/bib)\n*   [TensorBoard Visualization Toolkit](https://github.com/tensorflow/tensorboard)\n\nLearn more about the\n[TensorFlow community](https://www.tensorflow.org/community) and how to\n[contribute](https://www.tensorflow.org/community/contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
 },
 {
  "repo": "SmartThingsCommunity/SmartThingsPublic",
  "language": "Groovy",
  "readme_contents": "# SmartThings Public GitHub Repo\n\nAn official list of SmartApps and Device Types from SmartThings.\n\nHere are some links to help you get started coding right away:\n\n* [GitHub-specific Documentation](http://docs.smartthings.com/en/latest/tools-and-ide/github-integration.html)\n* [Full Documentation](http://docs.smartthings.com)\n* [IDE & Simulator](http://ide.smartthings.com)\n* [Community Forums](http://community.smartthings.com)\n\nFollow us on the web:\n\n* Twitter: http://twitter.com/smartthingsdev\n* Facebook: http://facebook.com/smartthingsdevelopers\n"
 },
 {
  "repo": "twbs/bootstrap",
  "language": "JavaScript",
  "readme_contents": "<p align=\"center\">\n  <a href=\"https://getbootstrap.com/\">\n    <img src=\"https://getbootstrap.com/docs/4.5/assets/brand/bootstrap-solid.svg\" alt=\"Bootstrap logo\" width=\"72\" height=\"72\">\n  </a>\n</p>\n\n<h3 align=\"center\">Bootstrap</h3>\n\n<p align=\"center\">\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  <br>\n  <a href=\"https://getbootstrap.com/docs/4.5/\"><strong>Explore Bootstrap docs \u00bb</strong></a>\n  <br>\n  <br>\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=bug.md\">Report bug</a>\n  \u00b7\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=feature.md&labels=feature\">Request feature</a>\n  \u00b7\n  <a href=\"https://themes.getbootstrap.com/\">Themes</a>\n  \u00b7\n  <a href=\"https://blog.getbootstrap.com/\">Blog</a>\n</p>\n\n\n## Table of contents\n\n- [Quick start](#quick-start)\n- [Status](#status)\n- [What's included](#whats-included)\n- [Bugs and feature requests](#bugs-and-feature-requests)\n- [Documentation](#documentation)\n- [Contributing](#contributing)\n- [Community](#community)\n- [Versioning](#versioning)\n- [Creators](#creators)\n- [Thanks](#thanks)\n- [Copyright and license](#copyright-and-license)\n\n\n## Quick start\n\nSeveral quick start options are available:\n\n- [Download the latest release.](https://github.com/twbs/bootstrap/archive/v4.5.0.zip)\n- Clone the repo: `git clone https://github.com/twbs/bootstrap.git`\n- Install with [npm](https://www.npmjs.com/): `npm install bootstrap`\n- Install with [yarn](https://yarnpkg.com/): `yarn add bootstrap@4.5.0`\n- Install with [Composer](https://getcomposer.org/): `composer require twbs/bootstrap:4.5.0`\n- Install with [NuGet](https://www.nuget.org/): CSS: `Install-Package bootstrap` Sass: `Install-Package bootstrap.sass`\n\nRead the [Getting started page](https://getbootstrap.com/docs/4.5/getting-started/introduction/) for information on the framework contents, templates and examples, and more.\n\n\n## Status\n\n[![Slack](https://bootstrap-slack.herokuapp.com/badge.svg)](https://bootstrap-slack.herokuapp.com/)\n[![Build Status](https://github.com/twbs/bootstrap/workflows/Tests/badge.svg?branch=master)](https://github.com/twbs/bootstrap/actions?query=workflow%3ATests+branch%3Amaster)\n[![npm version](https://img.shields.io/npm/v/bootstrap.svg)](https://www.npmjs.com/package/bootstrap)\n[![Gem version](https://img.shields.io/gem/v/bootstrap.svg)](https://rubygems.org/gems/bootstrap)\n[![Meteor Atmosphere](https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue.svg)](https://atmospherejs.com/twbs/bootstrap)\n[![Packagist Prerelease](https://img.shields.io/packagist/vpre/twbs/bootstrap.svg)](https://packagist.org/packages/twbs/bootstrap)\n[![NuGet](https://img.shields.io/nuget/vpre/bootstrap.svg)](https://www.nuget.org/packages/bootstrap/absoluteLatest)\n[![peerDependencies Status](https://img.shields.io/david/peer/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=peer)\n[![devDependency Status](https://img.shields.io/david/dev/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=dev)\n[![Coverage Status](https://img.shields.io/coveralls/github/twbs/bootstrap/master.svg)](https://coveralls.io/github/twbs/bootstrap?branch=master)\n[![CSS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/css/bootstrap.min.css?compression=gzip&label=CSS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/css/bootstrap.min.css)\n[![JS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/js/bootstrap.min.js?compression=gzip&label=JS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/js/bootstrap.min.js)\n[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)](https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)\n[![Backers on Open Collective](https://img.shields.io/opencollective/backers/bootstrap.svg)](#backers)\n[![Sponsors on Open Collective](https://img.shields.io/opencollective/sponsors/bootstrap.svg)](#sponsors)\n\n\n## What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\n\n```text\nbootstrap/\n\u2514\u2500\u2500 dist/\n    \u251c\u2500\u2500 css/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n```\n\nWe provide compiled CSS and JS (`bootstrap.*`), as well as compiled and minified CSS and JS (`bootstrap.min.*`). [source maps](https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps) (`bootstrap.*.map`) are available for use with certain browsers' developer tools. Bundled JS files (`bootstrap.bundle.js` and minified `bootstrap.bundle.min.js`) include [Popper](https://popper.js.org/).\n\n\n## Bugs and feature requests\n\nHave a bug or a feature request? Please first read the [issue guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md#using-the-issue-tracker) and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/twbs/bootstrap/issues/new).\n\n\n## Documentation\n\nBootstrap's documentation, included in this repo in the root directory, is built with [Hugo](https://gohugo.io/) and publicly hosted on GitHub Pages at <https://getbootstrap.com/>. The docs may also be run locally.\n\nDocumentation search is powered by [Algolia's DocSearch](https://community.algolia.com/docsearch/). Working on our search? Be sure to set `debug: true` in `site/assets/js/src/search.js` file.\n\n### Running documentation locally\n\n1. Run `npm install` to install the Node.js dependencies, including Hugo (the site builder).\n2. Run `npm run test` (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\n3. From the root `/bootstrap` directory, run `npm run docs-serve` in the command line.\n4. Open `http://localhost:9001/` in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its [documentation](https://gohugo.io/documentation/).\n\n### Documentation for previous releases\n\nYou can find all our previous releases docs on <https://getbootstrap.com/docs/versions/>.\n\n[Previous releases](https://github.com/twbs/bootstrap/releases) and their documentation are also available for download.\n\n\n## Contributing\n\nPlease read through our [contributing guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.\n\nMoreover, if your pull request contains JavaScript patches or features, you must include [relevant unit tests](https://github.com/twbs/bootstrap/tree/master/js/tests). All HTML and CSS should conform to the [Code Guide](https://github.com/mdo/code-guide), maintained by [Mark Otto](https://github.com/mdo).\n\nEditor preferences are available in the [editor config](https://github.com/twbs/bootstrap/blob/master/.editorconfig) for easy use in common text editors. Read more and download plugins at <https://editorconfig.org/>.\n\n\n## Community\n\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\n- Follow [@getbootstrap on Twitter](https://twitter.com/getbootstrap).\n- Read and subscribe to [The Official Bootstrap Blog](https://blog.getbootstrap.com/).\n- Join [the official Slack room](https://bootstrap-slack.herokuapp.com/).\n- Chat with fellow Bootstrappers in IRC. On the `irc.freenode.net` server, in the `##bootstrap` channel.\n- Implementation help may be found at Stack Overflow (tagged [`bootstrap-4`](https://stackoverflow.com/questions/tagged/bootstrap-4)).\n- Developers should use the keyword `bootstrap` on packages which modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/browse/keyword/bootstrap) or similar delivery mechanisms for maximum discoverability.\n\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under [the Semantic Versioning guidelines](https://semver.org/). Sometimes we screw up, but we adhere to those rules whenever possible.\n\nSee [the Releases section of our GitHub project](https://github.com/twbs/bootstrap/releases) for changelogs for each release version of Bootstrap. Release announcement posts on [the official Bootstrap blog](https://blog.getbootstrap.com/) contain summaries of the most noteworthy changes made in each release.\n\n\n## Creators\n\n**Mark Otto**\n\n- <https://twitter.com/mdo>\n- <https://github.com/mdo>\n\n**Jacob Thornton**\n\n- <https://twitter.com/fat>\n- <https://github.com/fat>\n\n\n## Thanks\n\n<a href=\"https://www.browserstack.com/\">\n  <img src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\" width=\"192\" height=\"42\">\n</a>\n\nThanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/bootstrap#sponsor)]\n\n[![OC sponsor 0](https://opencollective.com/bootstrap/sponsor/0/avatar.svg)](https://opencollective.com/bootstrap/sponsor/0/website)\n[![OC sponsor 1](https://opencollective.com/bootstrap/sponsor/1/avatar.svg)](https://opencollective.com/bootstrap/sponsor/1/website)\n[![OC sponsor 2](https://opencollective.com/bootstrap/sponsor/2/avatar.svg)](https://opencollective.com/bootstrap/sponsor/2/website)\n[![OC sponsor 3](https://opencollective.com/bootstrap/sponsor/3/avatar.svg)](https://opencollective.com/bootstrap/sponsor/3/website)\n[![OC sponsor 4](https://opencollective.com/bootstrap/sponsor/4/avatar.svg)](https://opencollective.com/bootstrap/sponsor/4/website)\n[![OC sponsor 5](https://opencollective.com/bootstrap/sponsor/5/avatar.svg)](https://opencollective.com/bootstrap/sponsor/5/website)\n[![OC sponsor 6](https://opencollective.com/bootstrap/sponsor/6/avatar.svg)](https://opencollective.com/bootstrap/sponsor/6/website)\n[![OC sponsor 7](https://opencollective.com/bootstrap/sponsor/7/avatar.svg)](https://opencollective.com/bootstrap/sponsor/7/website)\n[![OC sponsor 8](https://opencollective.com/bootstrap/sponsor/8/avatar.svg)](https://opencollective.com/bootstrap/sponsor/8/website)\n[![OC sponsor 9](https://opencollective.com/bootstrap/sponsor/9/avatar.svg)](https://opencollective.com/bootstrap/sponsor/9/website)\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/bootstrap#backer)]\n\n[![Backers](https://opencollective.com/bootstrap/backers.svg?width=890)](https://opencollective.com/bootstrap#backers)\n\n\n## Copyright and license\n\nCode and documentation copyright 2011\u20132020 the [Bootstrap Authors](https://github.com/twbs/bootstrap/graphs/contributors) and [Twitter, Inc.](https://twitter.com) Code released under the [MIT License](https://github.com/twbs/bootstrap/blob/master/LICENSE). Docs released under [Creative Commons](https://creativecommons.org/licenses/by/3.0/).\n"
 },
 {
  "repo": "github/gitignore",
  "language": null,
  "readme_contents": "# A collection of `.gitignore` templates\n\nThis is GitHub\u2019s collection of [`.gitignore`][man] file templates.\nWe use this list to populate the `.gitignore` template choosers available\nin the GitHub.com interface when creating new repositories and files.\n\nFor more information about how `.gitignore` files work, and how to use them,\nthe following resources are a great place to start:\n\n- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.\n- The [Ignoring Files article][help] on the GitHub Help site.\n- The [gitignore(5)][man] manual page.\n\n[man]: http://git-scm.com/docs/gitignore\n[help]: https://help.github.com/articles/ignoring-files\n[chapter]: https://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository#_ignoring\n[progit]: http://git-scm.com/book\n\n## Folder structure\n\nWe support a collection of templates, organized in this way:\n\n- the root folder contains templates in common use, to help people get started\n  with popular programming languages and technologies. These define a meaningful\n  set of rules to help get started, and ensure you are not committing\n  unimportant files into your repository\n- [`Global`](./Global) contains templates for various editors, tools and\n  operating systems that can be used in different situations. It is recommended\n  that you either [add these to your global template](https://help.github.com/articles/ignoring-files/#create-a-global-gitignore)\n  or merge these rules into your project-specific templates if you want to use\n  them permanently.\n- [`community`](./community) contains specialized templates for other popular\n  languages, tools and project, which don't currently belong in the mainstream\n  templates. These should be added to your project-specific templates when you\n  decide to adopt the framework or tool.\n\n## What makes a good template?\n\nA template should contain a set of rules to help Git repositories work with a\nspecific programming language, framework, tool or environment.\n\nIf it's not possible to curate a small set of useful rules for this situation,\nthen the template is not a good fit for this collection.\n\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework), it could live under the `community`\ndirectory. See [versioned templates](#versioned-templates) for more details.\n\nIf you have a small set of rules, or want to support a technology that is not\nwidely in use, and still believe this will be helpful to others, please read the\nsection about [specialized templates](#specialized-templates) for more details.\n\nInclude details when opening pull request if the template is important and visible. We\nmay not accept it immediately, but we can promote it to the root at a later date\nbased on interest.\n\nPlease also understand that we can\u2019t list every tool that ever existed.\nOur aim is to curate a collection of the _most common and helpful_ templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, it\u2019s not because it\u2019s not awesome.\n\n## Contributing guidelines\n\nWe\u2019d love for you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n- **Provide a link to the application or project\u2019s homepage**. Unless it\u2019s\n  extremely popular, there\u2019s a chance the maintainers don\u2019t know about or use\n  the language, framework, editor, app, or project your change applies to.\n\n- **Provide links to documentation** supporting the change you\u2019re making.\n  Current, canonical documentation mentioning the files being ignored is best.\n  If documentation isn\u2019t available to support your change, do the best you can\n  to explain what the files being ignored are for.\n\n- **Explain why you\u2019re making a change**. Even if it seems self-evident, please\n  take a sentence or two to tell us why your change or addition should happen.\n  It\u2019s especially helpful to articulate why this change applies to _everyone_\n  who works with the applicable technology, rather than just you or your team.\n\n- **Please consider the scope of your change**. If your change is specific to a\n  certain language or framework, then make sure the change is made to the\n  template for that language or framework, rather than to the template for an\n  editor, tool, or operating system.\n\n- **Please only modify _one template_ per pull request**. This helps keep pull\n  requests and feedback focused on a specific project or technology.\n\nIn general, the more you can do to help us understand the change you\u2019re making,\nthe more likely we\u2019ll be to accept your contribution quickly.\n\n## Versioned templates\n\nSome templates can change greatly between versions, and if you wish to contribute\nto this repository we need to follow this specific flow:\n\n- the template at the root should be the current supported version\n- the template at the root should not have a version in the filename (i.e.\n  \"evergreen\")\n- previous versions of templates should live under `community/`\n- previous versions of the template should embed the version in the filename,\n  for readability\n\nThis helps ensure users get the latest version (because they'll use whatever is\nat the root) but helps maintainers support older versions still in the wild.\n\n## Specialized templates\n\nIf you have a template that you would like to contribute, but it isn't quite\nmainstream, please consider adding this to the `community` directory under a\nfolder that best suits where it belongs.\n\nThe rules in your specialized template should be specific to the framework or\ntool, and any additional templates should be mentioned in a comment in the\nheader of the template.\n\nFor example, this template might live at `community/DotNet/InforCRM.gitignore`:\n\n```\n# gitignore template for InforCRM (formerly SalesLogix)\n# website: https://www.infor.com/product-summary/cx/infor-crm/\n#\n# Recommended: VisualStudio.gitignore\n\n# Ignore model files that are auto-generated\nModelIndex.xml\nExportedFiles.xml\n\n# Ignore deployment files\n[Mm]odel/[Dd]eployment\n\n# Force include portal SupportFiles\n!Model/Portal/*/SupportFiles/[Bb]in/\n!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in\n```\n\n## Contributing workflow\n\nHere\u2019s how we suggest you go about proposing a change to this project:\n\n1. [Fork this project][fork] to your account.\n2. [Create a branch][branch] for the change you intend to make.\n3. Make your changes to your fork.\n4. [Send a pull request][pr] from your fork\u2019s branch to our `master` branch.\n\nUsing the web-based interface to make changes is fine too, and will help you\nby automatically forking the project and prompting to send a pull request too.\n\n[fork]: https://help.github.com/articles/fork-a-repo/\n[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository\n[pr]: https://help.github.com/articles/using-pull-requests/\n\n## License\n\n[CC0-1.0](./LICENSE).\n"
 },
 {
  "repo": "rdpeng/ExData_Plotting1",
  "language": null,
  "readme_contents": "## Introduction\n\nThis assignment uses data from\nthe <a href=\"http://archive.ics.uci.edu/ml/\">UC Irvine Machine\nLearning Repository</a>, a popular repository for machine learning\ndatasets. In particular, we will be using the \"Individual household\nelectric power consumption Data Set\" which I have made available on\nthe course web site:\n\n\n* <b>Dataset</b>: <a href=\"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip\">Electric power consumption</a> [20Mb]\n\n* <b>Description</b>: Measurements of electric power consumption in\none household with a one-minute sampling rate over a period of almost\n4 years. Different electrical quantities and some sub-metering values\nare available.\n\n\nThe following descriptions of the 9 variables in the dataset are taken\nfrom\nthe <a href=\"https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption\">UCI\nweb site</a>:\n\n<ol>\n<li><b>Date</b>: Date in format dd/mm/yyyy </li>\n<li><b>Time</b>: time in format hh:mm:ss </li>\n<li><b>Global_active_power</b>: household global minute-averaged active power (in kilowatt) </li>\n<li><b>Global_reactive_power</b>: household global minute-averaged reactive power (in kilowatt) </li>\n<li><b>Voltage</b>: minute-averaged voltage (in volt) </li>\n<li><b>Global_intensity</b>: household global minute-averaged current intensity (in ampere) </li>\n<li><b>Sub_metering_1</b>: energy sub-metering No. 1 (in watt-hour of active energy). It corresponds to the kitchen, containing mainly a dishwasher, an oven and a microwave (hot plates are not electric but gas powered). </li>\n<li><b>Sub_metering_2</b>: energy sub-metering No. 2 (in watt-hour of active energy). It corresponds to the laundry room, containing a washing-machine, a tumble-drier, a refrigerator and a light. </li>\n<li><b>Sub_metering_3</b>: energy sub-metering No. 3 (in watt-hour of active energy). It corresponds to an electric water-heater and an air-conditioner.</li>\n</ol>\n\n## Loading the data\n\n\n\n\n\nWhen loading the dataset into R, please consider the following:\n\n* The dataset has 2,075,259 rows and 9 columns. First\ncalculate a rough estimate of how much memory the dataset will require\nin memory before reading into R. Make sure your computer has enough\nmemory (most modern computers should be fine).\n\n* We will only be using data from the dates 2007-02-01 and\n2007-02-02. One alternative is to read the data from just those dates\nrather than reading in the entire dataset and subsetting to those\ndates.\n\n* You may find it useful to convert the Date and Time variables to\nDate/Time classes in R using the `strptime()` and `as.Date()`\nfunctions.\n\n* Note that in this dataset missing values are coded as `?`.\n\n\n## Making Plots\n\nOur overall goal here is simply to examine how household energy usage\nvaries over a 2-day period in February, 2007. Your task is to\nreconstruct the following plots below, all of which were constructed\nusing the base plotting system.\n\nFirst you will need to fork and clone the following GitHub repository:\n[https://github.com/rdpeng/ExData_Plotting1](https://github.com/rdpeng/ExData_Plotting1)\n\n\nFor each plot you should\n\n* Construct the plot and save it to a PNG file with a width of 480\npixels and a height of 480 pixels.\n\n* Name each of the plot files as `plot1.png`, `plot2.png`, etc.\n\n* Create a separate R code file (`plot1.R`, `plot2.R`, etc.) that\nconstructs the corresponding plot, i.e. code in `plot1.R` constructs\nthe `plot1.png` plot. Your code file **should include code for reading\nthe data** so that the plot can be fully reproduced. You should also\ninclude the code that creates the PNG file.\n\n* Add the PNG file and R code file to your git repository\n\nWhen you are finished with the assignment, push your git repository to\nGitHub so that the GitHub version of your repository is up to\ndate. There should be four PNG files and four R code files.\n\n\nThe four plots that you will need to construct are shown below. \n\n\n### Plot 1\n\n\n![plot of chunk unnamed-chunk-2](figure/unnamed-chunk-2.png) \n\n\n### Plot 2\n\n![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-3.png) \n\n\n### Plot 3\n\n![plot of chunk unnamed-chunk-4](figure/unnamed-chunk-4.png) \n\n\n### Plot 4\n\n![plot of chunk unnamed-chunk-5](figure/unnamed-chunk-5.png) \n\n"
 },
 {
  "repo": "tensorflow/models",
  "language": "Python",
  "readme_contents": "![Logo](https://storage.googleapis.com/model_garden_artifacts/TF_Model_Garden.png)\n\n# Welcome to the Model Garden for TensorFlow\n\nThe TensorFlow Model Garden is a repository with a number of different implementations of state-of-the-art (SOTA) models and modeling solutions for TensorFlow users. We aim to demonstrate the best practices for modeling so that TensorFlow users can take full advantage of TensorFlow for their research and product development.\n\n| Directory | Description |\n|-----------|-------------|\n| [official](official) | \u2022 A collection of example implementations for SOTA models using the latest TensorFlow 2's high-level APIs<br />\u2022 Officially maintained, supported, and kept up to date with the latest TensorFlow 2 APIs by TensorFlow<br />\u2022 Reasonably optimized for fast performance while still being easy to read |\n| [research](research) | \u2022 A collection of research model implementations in TensorFlow 1 or 2 by researchers<br />\u2022 Maintained and supported by researchers |\n| [community](community) | \u2022 A curated list of the GitHub repositories with machine learning models and implementations powered by TensorFlow 2 |\n\n## [Announcements](../../wiki/Announcements)\n\n| Date | News |\n|------|------|\n| May 21, 2020 | [Unifying Deep Local and Global Features for Image Search (DELG)](https://github.com/tensorflow/models/tree/master/research/delf#delg) code released\n| May 7, 2020 | [MnasFPN with MobileNet-V2 backbone](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md#mobile-models) released for object detection\n| May 1, 2020 | [DELF: DEep Local Features](https://github.com/tensorflow/models/tree/master/research/delf) updated to support TensorFlow 2.1\n| March 31, 2020 | [Introducing the Model Garden for TensorFlow 2](https://blog.tensorflow.org/2020/03/introducing-model-garden-for-tensorflow-2.html) ([Tweet](https://twitter.com/TensorFlow/status/1245029834633297921)) |\n\n## Contributions\n\n[![help wanted:paper implementation](https://img.shields.io/github/issues/tensorflow/models/help%20wanted%3Apaper%20implementation)](https://github.com/tensorflow/models/labels/help%20wanted%3Apaper%20implementation)\n\nIf you want to contribute, please review the [contribution guidelines](../../wiki/How-to-contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
 },
 {
  "repo": "nightscout/cgm-remote-monitor",
  "language": "JavaScript",
  "readme_contents": "Nightscout Web Monitor (a.k.a. cgm-remote-monitor)\n======================================\n\n![nightscout horizontal](https://cloud.githubusercontent.com/assets/751143/8425633/93c94dc0-1ebc-11e5-99e7-71a8f464caac.png)\n\n[![Build Status][build-img]][build-url]\n[![Dependency Status][dependency-img]][dependency-url]\n[![Coverage Status][coverage-img]][coverage-url]\n[![Codacy Badge][codacy-img]][codacy-url]\n[![Discord chat][discord-img]][discord-url]\n\n[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://azuredeploy.net/) [![Deploy to Heroku][heroku-img]][heroku-url] [![Update your site][update-img]][update-fork]\n\nThis acts as a web-based CGM (Continuous Glucose Monitor) to allow\nmultiple caregivers to remotely view a patient's glucose data in\nreal time.  The server reads a MongoDB which is intended to be data\nfrom a physical CGM, where it sends new SGV (sensor glucose values) as\nthe data becomes available.  The data is then displayed graphically\nand blood glucose values are predicted 0.5 hours ahead using an\nautoregressive second order model.  Alarms are generated for high and\nlow values, which can be cleared by any watcher of the data.\n\n# [#WeAreNotWaiting](https://twitter.com/hashtag/wearenotwaiting?src=hash&vertical=default&f=images) and [this](https://vimeo.com/109767890) is why.\n\nCommunity maintained fork of the\n[original cgm-remote-monitor][original].\n\n[![Coverage Status](https://coveralls.io/repos/github/nightscout/cgm-remote-monitor/badge.svg?branch=master)](https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master)\n\n[build-img]: https://img.shields.io/travis/nightscout/cgm-remote-monitor.svg\n[build-url]: https://travis-ci.org/nightscout/cgm-remote-monitor\n[dependency-img]: https://img.shields.io/david/nightscout/cgm-remote-monitor.svg\n[dependency-url]: https://david-dm.org/nightscout/cgm-remote-monitor\n[coverage-img]: https://img.shields.io/coveralls/nightscout/cgm-remote-monitor/dev.svg\n[coverage-url]: https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master\n[codacy-img]: https://www.codacy.com/project/badge/f79327216860472dad9afda07de39d3b\n[codacy-url]: https://www.codacy.com/app/Nightscout/cgm-remote-monitor\n[discord-img]: https://img.shields.io/discord/629952586895851530?label=discord%20chat\n[discord-url]: https://discord.gg/rTKhrqz\n[heroku-img]: https://www.herokucdn.com/deploy/button.png\n[heroku-url]: https://heroku.com/deploy\n[update-img]: update.png\n[update-fork]: http://nightscout.github.io/pages/update-fork/\n[original]: https://github.com/rnpenguin/cgm-remote-monitor\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**\n\n- [Install](#install)\n  - [Supported configurations:](#supported-configurations)\n  - [Minimum browser requirements for viewing the site:](#minimum-browser-requirements-for-viewing-the-site)\n  - [Windows installation software requirements:](#windows-installation-software-requirements)\n  - [Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:](#installation-notes-for-users-with-nginx-or-apache-reverse-proxy-for-ssltls-offloading)\n  - [Installation notes for Microsoft Azure, Windows:](#installation-notes-for-microsoft-azure-windows)\n- [Usage](#usage)\n  - [Updating my version?](#updating-my-version)\n  - [What is my mongo string?](#what-is-my-mongo-string)\n  - [Configure my uploader to match](#configure-my-uploader-to-match)\n  - [Nightscout API](#nightscout-api)\n      - [Example Queries](#example-queries)\n  - [Environment](#environment)\n    - [Required](#required)\n    - [Features/Labs](#featureslabs)\n    - [Alarms](#alarms)\n    - [Core](#core)\n    - [Predefined values for your browser settings (optional)](#predefined-values-for-your-browser-settings-optional)\n    - [Predefined values for your server settings (optional)](#predefined-values-for-your-server-settings-optional)\n    - [Plugins](#plugins)\n      - [Default Plugins](#default-plugins)\n        - [`delta` (BG Delta)](#delta-bg-delta)\n        - [`direction` (BG Direction)](#direction-bg-direction)\n        - [`upbat` (Uploader Battery)](#upbat-uploader-battery)\n        - [`timeago` (Time Ago)](#timeago-time-ago)\n        - [`devicestatus` (Device Status)](#devicestatus-device-status)\n        - [`errorcodes` (CGM Error Codes)](#errorcodes-cgm-error-codes)\n        - [`ar2` (AR2 Forecasting)](#ar2-ar2-forecasting)\n        - [`simplealarms` (Simple BG Alarms)](#simplealarms-simple-bg-alarms)\n        - [`profile` (Treatment Profile)](#profile-treatment-profile)\n      - [Advanced Plugins:](#advanced-plugins)\n        - [`careportal` (Careportal)](#careportal-careportal)\n        - [`boluscalc` (Bolus Wizard)](#boluscalc-bolus-wizard)\n        - [`food` (Custom Foods)](#food-custom-foods)\n        - [`rawbg` (Raw BG)](#rawbg-raw-bg)\n        - [`iob` (Insulin-on-Board)](#iob-insulin-on-board)\n        - [`cob` (Carbs-on-Board)](#cob-carbs-on-board)\n        - [`bwp` (Bolus Wizard Preview)](#bwp-bolus-wizard-preview)\n        - [`cage` (Cannula Age)](#cage-cannula-age)\n        - [`sage` (Sensor Age)](#sage-sensor-age)\n        - [`iage` (Insulin Age)](#iage-insulin-age)\n        - [`bage` (Battery Age)](#bage-battery-age)\n        - [`treatmentnotify` (Treatment Notifications)](#treatmentnotify-treatment-notifications)\n        - [`basal` (Basal Profile)](#basal-basal-profile)\n        - [`bridge` (Share2Nightscout bridge)](#bridge-share2nightscout-bridge)\n        - [`mmconnect` (MiniMed Connect bridge)](#mmconnect-minimed-connect-bridge)\n        - [`pump` (Pump Monitoring)](#pump-pump-monitoring)\n        - [`openaps` (OpenAPS)](#openaps-openaps)\n        - [`loop` (Loop)](#loop-loop)\n        - [`override` (Override Mode)](#override-override-mode)\n        - [`xdripjs` (xDrip-js)](#xdripjs-xdripjs)\n        - [`alexa` (Amazon Alexa)](#alexa-amazon-alexa)\n        - [`googlehome` (Google Home/DialogFLow)](#googlehome-google-homedialogflow)\n        - [`speech` (Speech)](#speech-speech)\n        - [`cors` (CORS)](#cors-cors)\n      - [Extended Settings](#extended-settings)\n      - [Pushover](#pushover)\n      - [IFTTT Maker](#ifttt-maker)\n    - [Treatment Profile](#treatment-profile)\n  - [Setting environment variables](#setting-environment-variables)\n    - [Vagrant install](#vagrant-install)\n  - [More questions?](#more-questions)\n  - [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# Install\n\n## Supported configurations:\n\nIf you plan to use Nightscout, we recommend using [Heroku](http://www.nightscout.info/wiki/welcome/set-up-nightscout-using-heroku), as Nightscout can reach the usage limits of the free Azure plan and cause it to shut down for hours or days. If you end up needing a paid tier, the $7/mo Heroku plan is also much cheaper than the first paid tier of Azure. Currently, the only added benefit to choosing the $7/mo Heroku plan vs the free Heroku plan is a section showing site use metrics for performance (such as response time). This has limited benefit to the average Nightscout user. In short, Heroku is the free and best option for Nightscout hosting.\n\n- [Nightscout Setup with Heroku](http://www.nightscout.info/wiki/welcome/set-up-nightscout-using-heroku) (recommended)\n- [Nightscout Setup with Microsoft Azure](http://www.nightscout.info/wiki/faqs-2/azure-2) (not recommended, please\n[switch from Azure to Heroku](http://openaps.readthedocs.io/en/latest/docs/While%20You%20Wait%20For%20Gear/nightscout-setup.html#switching-from-azure-to-heroku) )\n- Linux based install (Debian, Ubuntu, Raspbian) install with own Node.JS and MongoDB install (see software requirements below)\n- Windows based install with own Node.JS and MongoDB install (see software requirements below)\n\n## Recommended minimum browser versions for using Nightscout:\n\nOlder versions of the browsers might work, but are untested.\n\n- Android 4\n- iOS 6\n- Chrome 35\n- Edge 17\n- Firefox 61\n- Opera 12.1\n- Safari 6 (macOS 10.7)\n- Internet Explorer: not supported\n\nSome features may not work with devices/browsers on the older end of these requirements.\n\n## Windows installation software requirements:\n\n- [Node.js](http://nodejs.org/) Latest Node 8 LTS (Node 8.15.1 or later) or Node 10 LTS (Node 10.16.0 or later; Node 10.15.2 works for Azure). Node versions that do not have the latest security patches will not work. Use [Install instructions for Node](https://nodejs.org/en/download/package-manager/) or use `setup.sh`)\n- [MongoDB](https://www.mongodb.com/download-center?jmp=nav#community) 3.x or later. MongoDB 2.4 is only supported for Raspberry Pi.\n\nAs a non-root user clone this repo then install dependencies into the root of the project:\n\n```bash\n$ npm install\n```\n\n## Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:\n\n- Your site redirects insecure connections to `https` by default. If you use a reverse proxy like nginx or Apache to handle the connection security for you, make sure it sets the `X-Forwarded-Proto` header. Otherwise nightscout will be unable to know if it was called through a secure connection and will try to redirect you to the https version. If you're unable to set this Header, you can change the `INSECURE_USE_HTTP` setting in nightscout to true in order to allow insecure connections without being redirected.\n- In case you use a proxy. Do not use an external network interfaces for hosting Nightscout. Make sure the unsecure port is not available from a remote network connection\n- HTTP Strict Transport Security (HSTS) headers are enabled by default, use settings `SECURE_HSTS_HEADER` and `SECURE_HSTS_HEADER_*`\n- See [Predefined values for your server settings](#predefined-values-for-your-server-settings-optional) for more details\n\n## Installation notes for Microsoft Azure, Windows:\n\n- If deploying the software to Microsoft Azure, you must set ** in the app settings for *WEBSITE_NODE_DEFAULT_VERSION* and *SCM_COMMAND_IDLE_TIMEOUT* **before** you deploy the latest Nightscout or the site deployment will likely fail. Other hosting environments do not require this setting. Additionally, if using the Azure free hosting tier, the installation might fail due to resource constraints imposed by Azure on the free hosting. Please set the following settings to the environment in Azure:\n```\nWEBSITE_NODE_DEFAULT_VERSION=10.15.2\nSCM_COMMAND_IDLE_TIMEOUT=300\n```\n- See [install MongoDB, Node.js, and Nightscouton a single Windows system](https://github.com/jaylagorio/Nightscout-on-Windows-Server). if you want to host your Nightscout outside of the cloud. Although the instructions are intended for Windows Server the procedure is compatible with client versions of Windows such as Windows 7 and Windows 10.\n- If you deploy to Windows and want to develop or test you need to install [Cygwin](https://www.cygwin.com/) (use [setup-x86_64.exe](https://www.cygwin.com/setup-x86_64.exe) and make sure to install `build-essential` package. Test your configuration by executing `make` and check if all tests are ok.\n\n# Development\n\nWant to help with development, or just see how Nightscout works? Great! See [CONTRIBUTING.md](CONTRIBUTING.md) for development-related documentation.\n\n# Usage\n\nThe data being uploaded from the server to the client is from a\nMongoDB server such as [mLab][mLab].\n\n[mLab]: https://mlab.com/\n[autoconfigure]: https://nightscout.github.io/pages/configure/\n[mongostring]: https://nightscout.github.io/pages/mongostring/\n\n## Updating my version?\n\nThe easiest way to update your version of cgm-remote-monitor to the latest version is to use the [update tool][update-fork]. A step-by-step guide is available [here][http://www.nightscout.info/wiki/welcome/how-to-update-to-latest-cgm-remote-monitor-aka-cookie].\nTo downgrade to an older version, follow [this guide][http://www.nightscout.info/wiki/welcome/how-to-deploy-an-older-version-of-nightscout].\n\n## Configure my uploader to match\n\nUse the [autoconfigure tool][autoconfigure] to sync an uploader to your config.\n\n## Nightscout API\n\nThe Nightscout API enables direct access to your data without the need for Mongo access.\nYou can find CGM data in `/api/v1/entries`, Care Portal Treatments in `/api/v1/treatments`, and Treatment Profiles in `/api/v1/profile`.\nThe server status and settings are available from `/api/v1/status.json`.\n\nBy default the `/entries` and `/treatments` APIs limit results to the the most recent 10 values from the last 2 days.\nYou can get many more results, by using the `count`, `date`, `dateString`, and `created_at` parameters, depending on the type of data you're looking for.\n\nOnce you've installed Nightscout, you can access API documentation by loading `/api-docs/` URL in your instance.\n\n#### Example Queries\n\n(replace `http://localhost:1337` with your own URL)\n\n  * 100's: `http://localhost:1337/api/v1/entries.json?find[sgv]=100`\n  * Count of 100's in a month: `http://localhost:1337/api/v1/count/entries/where?find[dateString][$gte]=2016-09&find[dateString][$lte]=2016-10&find[sgv]=100`\n  * BGs between 2 days: `http://localhost:1337/api/v1/entries/sgv.json?find[dateString][$gte]=2015-08-28&find[dateString][$lte]=2015-08-30`\n  * Juice Box corrections in a year: `http://localhost:1337/api/v1/treatments.json?count=1000&find[carbs]=15&find[eventType]=Carb+Correction&find[created_at][$gte]=2015`\n  * Boluses over 2U: `http://localhost:1337/api/v1/treatments.json?find[insulin][$gte]=2`\n\nThe API is Swagger enabled, so you can generate client code to make working with the API easy.\nTo learn more about the Nightscout API, visit https://YOUR-SITE.com/api-docs/ or review [swagger.yaml](swagger.yaml).\n\n## Environment\n\n`VARIABLE` (default) - description\n\n### Required\n\n  * `MONGODB_URI` - The connection string for your Mongo database. Something like `mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout`.\n  * `API_SECRET` - A secret passphrase that must be at least 12 characters long.\n  * `MONGODB_COLLECTION` (`entries`) - The Mongo collection where CGM entries are stored.\n  * `DISPLAY_UNITS` (`mg/dl`) - Options are `mg/dl` or `mmol/L` (or just `mmol`).  Setting to `mmol/L` puts the entire server into `mmol/L` mode by default, no further settings needed.\n\n### Features\n\n  * `ENABLE` - Used to enable optional features, expects a space delimited list, such as: `careportal rawbg iob`, see [plugins](#plugins) below\n  * `DISABLE` - Used to disable default features, expects a space delimited list, such as: `direction upbat`, see [plugins](#plugins) below\n  * `BASE_URL` - Used for building links to your site's API, i.e. Pushover callbacks, usually the URL of your Nightscout site.\n  * `AUTH_DEFAULT_ROLES` (`readable`) - possible values `readable`, `denied`, or any valid role\n    name.  When `readable`, anyone can view Nightscout without a token.\n    Setting it to `denied` will require a token from every visit, using `status-only` will enable api-secret based login.\n  * `IMPORT_CONFIG` - Used to import settings and extended settings from a url such as a gist.  Structure of file should be something like: `{\"settings\": {\"theme\": \"colors\"}, \"extendedSettings\": {\"upbat\": {\"enableAlerts\": true}}}`\n  * `TREATMENTS_AUTH` (`on`) - possible values `on` or `off`. Deprecated, if set to `off` the `careportal` role will be added to `AUTH_DEFAULT_ROLES`\n\n### Alarms\n\n  These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.\n\n  * `ALARM_TYPES` (`simple` if any `BG_`* ENV's are set, otherwise `predict`) - currently 2 alarm types are supported, and can be used independently or combined.  The `simple` alarm type only compares the current BG to `BG_` thresholds above, the `predict` alarm type uses highly tuned formula that forecasts where the BG is going based on it's trend.  `predict` **DOES NOT** currently use any of the `BG_`* ENV's\n  * `BG_HIGH` (`260`) - the high BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)\n  * `BG_TARGET_TOP` (`180`) - the top of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)\n  * `BG_TARGET_BOTTOM` (`80`) - the bottom of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)\n  * `BG_LOW` (`55`) - the low BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)\n  * `ALARM_URGENT_HIGH` (`on`) - possible values `on` or `off`\n  * `ALARM_URGENT_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent high alarms, space separated for options in browser, first used for pushover\n  * `ALARM_HIGH` (`on`) - possible values `on` or `off`\n  * `ALARM_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze high alarms, space separated for options in browser, first used for pushover\n  * `ALARM_LOW` (`on`) - possible values `on` or `off`\n  * `ALARM_LOW_MINS` (`15 30 45 60`) - Number of minutes to snooze low alarms, space separated for options in browser, first used for pushover\n  * `ALARM_URGENT_LOW` (`on`) - possible values `on` or `off`\n  * `ALARM_URGENT_LOW_MINS` (`15 30 45`) - Number of minutes to snooze urgent low alarms, space separated for options in browser, first used for pushover\n  * `ALARM_URGENT_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover\n  * `ALARM_WARN_MINS` (`30 60 90 120`) - Number of minutes to snooze warning alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover\n\n### Core\n\n  * `MONGO_TREATMENTS_COLLECTION` (`treatments`) -The collection used to store treatments entered in the Care Portal, see the `ENABLE` env var above\n  * `MONGO_DEVICESTATUS_COLLECTION`(`devicestatus`) - The collection used to store device status information such as uploader battery\n  * `MONGO_PROFILE_COLLECTION`(`profile`) - The collection used to store your profiles\n  * `MONGO_FOOD_COLLECTION`(`food`) - The collection used to store your food database\n  * `MONGO_ACTIVITY_COLLECTION`(`activity`) - The collection used to store activity data\n  * `PORT` (`1337`) - The port that the node.js application will listen on.\n  * `HOSTNAME` - The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use `::`.\n  * `SSL_KEY` - Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to your privkey.pem file (private key).\n  * `SSL_CERT` - Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to fullchain.pem file (cert + ca).\n  * `SSL_CA` - Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to chain.pem file (chain).\n  * `HEARTBEAT` (`60`)  - Number of seconds to wait in between database checks\n  * `DEBUG_MINIFY` (`true`)  - Debug option, setting to `false` will disable bundle minification to help tracking down error and speed up development\n  * `DE_NORMALIZE_DATES`(`true`) - The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to `true` causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST.\n\n### Predefined values for your browser settings (optional)\n\n  * `TIME_FORMAT` (`12`)- possible values `12` or `24`\n  * `NIGHT_MODE` (`off`) - possible values `on` or `off`\n  * `SHOW_RAWBG` (`never`) - possible values `always`, `never` or `noise`\n  * `CUSTOM_TITLE` (`Nightscout`) - Title for the main view\n  * `THEME` (`colors`) - possible values `default`, `colors`, or `colorblindfriendly`\n  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning\n  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm\n  * `SHOW_PLUGINS` - enabled plugins that should have their visualizations shown, defaults to all enabled\n  * `SHOW_FORECAST` (`ar2`) - plugin forecasts that should be shown by default, supports space delimited values such as `\"ar2 openaps\"`\n  * `LANGUAGE` (`en`) - language of Nightscout. If not available english is used\n    * Currently supported language codes are: bg (\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438), cs (\u010ce\u0161tina), de (Deutsch), dk (Dansk), el (\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac), en (English), es (Espa\u00f1ol), fi (Suomi), fr (Fran\u00e7ais), he (\u05e2\u05d1\u05e8\u05d9\u05ea), hr (Hrvatski), it (Italiano), ko (\ud55c\uad6d\uc5b4), nb (Norsk (Bokm\u00e5l)), nl (Nederlands), pl (Polski), pt (Portugu\u00eas (Brasil)), ro (Rom\u00e2n\u0103), ru (\u0420\u0443\u0441\u0441\u043a\u0438\u0439), sk (Sloven\u010dina), sv (Svenska), tr (Turkish), zh_cn (\u4e2d\u6587\uff08\u7b80\u4f53)), zh_tw (\u4e2d\u6587\uff08\u7e41\u9ad4))\n  * `SCALE_Y` (`log`) - The type of scaling used for the Y axis of the charts system wide.\n    * The default `log` (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range.\n    * The `linear` option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn't wasted.\n    * The `log-dynamic` is similar to the default `log` options, but uses the same dynamic range and the `linear` scale.\n  * `EDIT_MODE` (`on`) - possible values `on` or `off`. Enables the icon allowing for editing of treatments in the main view.\n\n### Predefined values for your server settings (optional)\n  * `INSECURE_USE_HTTP` (`false`) - Redirect unsafe http traffic to https. Possible values `false`, or `true`. Your site redirects to `https` by default. If you don't want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set `INSECURE_USE_HTTP` to `true`. Note: This will allow (unsafe) http traffic to your Nightscout instance and is not recommended.\n  * `SECURE_HSTS_HEADER` (`true`) - Add HTTP Strict Transport Security (HSTS) header. Possible values `false`, or `true`.\n  * `SECURE_HSTS_HEADER_INCLUDESUBDOMAINS` (`false`) - includeSubdomains options for HSTS. Possible values `false`, or `true`.\n  * `SECURE_HSTS_HEADER_PRELOAD` (`false`) - ask for preload in browsers for HSTS. Possible values `false`, or `true`.\n  * `SECURE_CSP` (`false`) - Add Content Security Policy headers. Possible values `false`, or `true`.\n  * `SECURE_CSP_REPORT_ONLY` (`false`) - If set to `true` allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values `false`, or `true`.\n\n### Views\n\n  There are a few alternate web views available from the main menu that display a simplified BG stream. (If you launch one of these in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view.)\n  * `Clock` - Shows current BG, trend arrow, and time of day. Grey text on a black background.\n  * `Color` - Shows current BG and trend arrow. White text on a background that changes color to indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above). Set `SHOW_CLOCK_DELTA` to `true` to show BG change in the last 5 minutes, set `SHOW_CLOCK_LAST_TIME` to `true` to always show BG age.\n  * `Simple` - Shows current BG. Grey text on a black background.\n\n### Plugins\n\n  Plugins are used extend the way information is displayed, how notifications are sent, alarms are triggered, and more.\n\n  The built-in/example plugins that are available by default are listed below.  The plugins may still need to be enabled by adding to the `ENABLE` environment variable.\n\n#### Default Plugins\n\n  These can be disabled by adding them to the `DISABLE` variable, for example `DISABLE=\"direction upbat\"`\n\n##### `delta` (BG Delta)\n  Calculates and displays the change between the last 2 BG values.\n\n##### `direction` (BG Direction)\n  Displays the trend direction.\n\n##### `upbat` (Uploader Battery)\n  Displays the most recent battery status from the uploader phone. . Use these [extended setting](#extended-settings) to adjust behavior:\n  * `UPBAT_ENABLE_ALERTS` (`false`) - Set to `true` to enable uploader battery alarms via Pushover and IFTTT.\n  * `UPBAT_WARN` (`30`) - Minimum battery percent to trigger warning.\n  * `UPBAT_URGENT` (`20`) - Minimum battery percent to trigger urgent alarm.\n\n##### `timeago` (Time Ago)\n  Displays the time since last CGM entry. Use these [extended setting](#extended-settings) to adjust behavior:\n  * `TIMEAGO_ENABLE_ALERTS` (`false`) - Set to `true` to enable stale data alarms via Pushover and IFTTT.\n  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning\n  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm\n\n##### `devicestatus` (Device Status)\n  Used by `upbat` and other plugins to display device status info.  Supports the `DEVICESTATUS_ADVANCED=\"true\"` [extended setting](#extended-settings) to send all device statuses to the client for retrospective use and to support other plugins.\n\n##### `errorcodes` (CGM Error Codes)\n  Generates alarms for CGM codes `9` (hourglass) and `10` (???).\n  * Use [extended settings](#extended-settings) to adjust what errorcodes trigger notifications and alarms:\n    * `ERRORCODES_INFO` (`1 2 3 4 5 6 7 8`) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or `off` to disable\n    * `ERRORCODES_WARN` (`off`) - By default there are no warning configured, set to a space separate list of numbers or `off` to disable\n    * `ERRORCODES_URGENT` (`9 10`) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or `off` to disable\n\n##### `ar2` (AR2 Forecasting)\n  Generates alarms based on forecasted values. See [Forecasting using AR2 algorithm](https://github.com/nightscout/nightscout.github.io/wiki/Forecasting)\n  * Enabled by default if no thresholds are set **OR** `ALARM_TYPES` includes `predict`.\n  * Use [extended settings](#extended-settings) to adjust AR2 behavior:\n    * `AR2_CONE_FACTOR` (`2`) - to adjust size of cone, use `0` for a single line.\n\n##### `simplealarms` (Simple BG Alarms)\n  Uses `BG_HIGH`, `BG_TARGET_TOP`, `BG_TARGET_BOTTOM`, `BG_LOW` thresholds to generate alarms.\n  * Enabled by default if 1 of these thresholds is set **OR** `ALARM_TYPES` includes `simple`.\n\n##### `profile` (Treatment Profile)\n  Add link to Profile Editor and allow to enter treatment profile settings. Also uses the extended setting:\n  * `PROFILE_HISTORY` (`off`) - possible values `on` or `off`. Enable/disable NS ability to keep history of your profiles (still experimental)\n  * `PROFILE_MULTIPLE` (`off`) - possible values `on` or `off`. Enable/disable NS ability to handle and switch between multiple treatment profiles\n\n#### Advanced Plugins:\n\n##### `careportal` (Careportal)\n  An optional form to enter treatments.\n\n##### `boluscalc` (Bolus Wizard)\n\n##### `food` (Custom Foods)\n  An option plugin to enable adding foods from database in Bolus Wizard and enable .\n\n##### `rawbg` (Raw BG)\n  Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with [extended setting](#extended-settings)\n  * `DISPLAY` (`unsmoothed`) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record.\n    * `unfiltered` - Raw BG is calculated by applying the calibration to the glucose record's unfiltered value.\n    * `filtered` - Raw BG is calculated by applying the calibration to the glucose record's filtered value. The glucose record's filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high.\n    * `unsmoothed` - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the `filtered` setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the `unfiltered` setting) by the ratio.  The effect is to exagerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm.\n\n##### `iob` (Insulin-on-Board)\n  Adds the IOB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with insulin doses and the `dia` and `sens` fields from the [treatment profile](#treatment-profile).\n\n##### `cob` (Carbs-on-Board)\n  Adds the COB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with carb doses and the `carbs_hr`, `carbratio`, and `sens` fields from the [treatment profile](#treatment-profile).\n\n##### `bwp` (Bolus Wizard Preview)\n  This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. ***The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation.*** The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the `iob` plugin and `sens`, `target_high`, and `target_low` fields from the [treatment profile](#treatment-profile). Defaults that can be adjusted with [extended setting](#extended-settings)\n  * `BWP_WARN` (`0.50`) - If `BWP` is > `BWP_WARN` a warning alarm will be triggered.\n  * `BWP_URGENT` (`1.00`) - If `BWP` is > `BWP_URGENT` an urgent alarm will be triggered.\n  * `BWP_SNOOZE_MINS` (`10`) - minutes to snooze when there is enough IOB to cover a high BG.\n  * `BWP_SNOOZE` - (`0.10`) If BG is higher then the `target_high` and `BWP` < `BWP_SNOOZE` alarms will be snoozed for `BWP_SNOOZE_MINS`.\n\n##### `cage` (Cannula Age)\n  Calculates the number of hours since the last `Site Change` treatment that was recorded.\n  * `CAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming cannula change.\n  * `CAGE_INFO` (`44`) - If time since last `Site Change` matches `CAGE_INFO`, user will be warned of upcoming cannula change\n  * `CAGE_WARN` (`48`) - If time since last `Site Change` matches `CAGE_WARN`, user will be alarmed to to change the cannula\n  * `CAGE_URGENT` (`72`) - If time since last `Site Change` matches `CAGE_URGENT`, user will be issued a persistent warning of overdue change.\n  * `CAGE_DISPLAY` (`hours`) - Possible values are 'hours' or 'days'. If 'days' is selected and age of canula is greater than 24h number is displayed in days and hours\n\n#####  `sage` (Sensor Age)\n  Calculates the number of days and hours since the last `Sensor Start` and `Sensor Change` treatment that was recorded.\n  * `SAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming sensor change.\n  * `SAGE_INFO` (`144`) - If time since last sensor event matches `SAGE_INFO`, user will be warned of upcoming sensor change\n  * `SAGE_WARN` (`164`) - If time since last sensor event matches `SAGE_WARN`, user will be alarmed to to change/restart the sensor\n  * `SAGE_URGENT` (`166`) - If time since last sensor event matches `SAGE_URGENT`, user will be issued a persistent warning of overdue change.\n\n##### `iage` (Insulin Age)\n  Calculates the number of days and hours since the last `Insulin Change` treatment that was recorded.\n  * `IAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming insulin reservoir change.\n  * `IAGE_INFO` (`44`) - If time since last `Insulin Change` matches `IAGE_INFO`, user will be warned of upcoming insulin reservoir change\n  * `IAGE_WARN` (`48`) - If time since last `Insulin Change` matches `IAGE_WARN`, user will be alarmed to to change the insulin reservoir\n  * `IAGE_URGENT` (`72`) - If time since last `Insulin Change` matches `IAGE_URGENT`, user will be issued a persistent warning of overdue change.\n\n##### `bage` (Battery Age)\n  Calculates the number of days and hours since the last `Pump Battery Change` treatment that was recorded.\n  * `BAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming pump battery change.\n  * `BAGE_DISPLAY` (`days`) - Set to `hours` to display time since last `Pump Battery Change` in hours only.\n  * `BAGE_INFO` (`312`) - If time since last `Pump Battery Change` matches `BAGE_INFO` hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days).\n  * `BAGE_WARN` (`336`) - If time since last `Pump Battery Change` matches `BAGE_WARN` hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days).\n  * `BAGE_URGENT` (`360`) - If time since last `Pump Battery Change` matches `BAGE_URGENT` hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).\n\n##### `treatmentnotify` (Treatment Notifications)\n  Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment.  Default snooze is 10 minutes, and can be set using the `TREATMENTNOTIFY_SNOOZE_MINS` [extended setting](#extended-settings).\n\n##### `basal` (Basal Profile)\n  Adds the Basal pill visualization to display the basal rate for the current time.  Also enables the `bwp` plugin to calculate correction temp basal suggestions.  Uses the `basal` field from the [treatment profile](#treatment-profile). Also uses the extended setting:\n  * `BASAL_RENDER` (`none`) - Possible values are `none`, `default`, or `icicle` (inverted)\n\n##### `bridge` (Share2Nightscout bridge)\n  Glucose reading directly from the Share service, uses these extended settings:\n  * `BRIDGE_USER_NAME` - Your user name for the Share service.\n  * `BRIDGE_PASSWORD` - Your password for the Share service.\n  * `BRIDGE_INTERVAL` (`150000` *2.5 minutes*) - The time to wait between each update.\n  * `BRIDGE_MAX_COUNT` (`1`) - The number of records to attempt to fetch per update.\n  * `BRIDGE_FIRST_FETCH_COUNT` (`3`) - Changes max count during the very first update only.\n  * `BRIDGE_MAX_FAILURES` (`3`) - How many failures before giving up.\n  * `BRIDGE_MINUTES` (`1400`) - The time window to search for new data per update (default is one day in minutes).\n\n##### `mmconnect` (MiniMed Connect bridge)\n  Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout ([read more](https://github.com/mddub/minimed-connect-to-nightscout))\n  * `MMCONNECT_USER_NAME` - Your user name for CareLink Connect.\n  * `MMCONNECT_PASSWORD` - Your password for CareLink Connect.\n  * `MMCONNECT_INTERVAL` (`60000` *1 minute*) - Number of milliseconds to wait between requests to the CareLink server.\n  * `MMCONNECT_MAX_RETRY_DURATION` (`32`) - Maximum number of total seconds to spend retrying failed requests before giving up.\n  * `MMCONNECT_SGV_LIMIT` (`24`) - Maximum number of recent sensor glucose values to send to Nightscout on each request.\n  * `MMCONNECT_VERBOSE` - Set this to \"true\" to log CareLink request information to the console.\n  * `MMCONNECT_STORE_RAW_DATA` - Set this to \"true\" to store raw data returned from CareLink as `type: \"carelink_raw\"` database entries (useful for development).\n  * `MMCONNECT_SERVER` - Set this to `EU` if you're using the European Medtronic services\n\n##### `pump` (Pump Monitoring)\n  Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, with more on the way\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `PUMP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications for Pump battery and reservoir.\n  * `PUMP_WARN_ON_SUSPEND` (`false`) - Set to `true` to get an alarm when the pump is suspended.\n  * `PUMP_FIELDS` (`reservoir battery`) - The fields to display by default.  Any of the following fields: `reservoir`, `battery`, `clock`, `status`, and `device`\n  * `PUMP_RETRO_FIELDS` (`reservoir battery clock`) - The fields to display in retro mode. Any of the above fields.\n  * `PUMP_WARN_CLOCK` (`30`) - The number of minutes ago that needs to be exceed before an alert is triggered.\n  * `PUMP_URGENT_CLOCK` (`60`) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered.\n  * `PUMP_WARN_RES` (`10`) - The number of units remaining, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_RES` (`5`) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold.\n  * `PUMP_WARN_BATT_P` (`30`) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_BATT_P` (`20`) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold.\n  * `PUMP_WARN_BATT_V` (`1.35`) - The voltage (if percent isn't available) of the pump battery, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_BATT_V` (`1.30`) - The  voltage (if percent isn't available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold.\n\n##### `openaps` (OpenAPS)\n  Integrated OpenAPS loop monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `OPENAPS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when OpenAPS isn't looping.  If OpenAPS is going to offline for a period of time, you can add an `OpenAPS Offline` event for the expected duration from Careportal to avoid getting alerts.\n  * `OPENAPS_WARN` (`30`) - The number of minutes since the last loop that needs to be exceed before an alert is triggered\n  * `OPENAPS_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggered\n  * `OPENAPS_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display by default.  Any of the following fields: `status-symbol`, `status-label`, `iob`, `meal-assist`, `freq`, and `rssi`\n  * `OPENAPS_RETRO_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display in retro mode. Any of the above fields.\n  * `OPENAPS_PRED_IOB_COLOR` (`#1e88e5`) - The color to use for IOB prediction lines. Colors can be in `#RRGGBB` format, but [other CSS color units](https://www.w3.org/TR/css-color-3/#colorunits) may be used as well.\n  * `OPENAPS_PRED_COB_COLOR` (`#FB8C00`) - The color to use for COB prediction lines. Same format as above.\n  * `OPENAPS_PRED_ACOB_COLOR` (`#FB8C00`) - The color to use for ACOB prediction lines. Same format as above.\n  * `OPENAPS_PRED_ZT_COLOR` (`#00d2d2`) - The color to use for ZT prediction lines. Same format as above.\n  * `OPENAPS_PRED_UAM_COLOR` (`#c9bd60`) - The color to use for UAM prediction lines. Same format as above.\n  * `OPENAPS_COLOR_PREDICTION_LINES` (`true`) - Enables / disables the colored lines vs the classic purple color.\n\n Also see [Pushover](#pushover) and [IFTTT Maker](#ifttt-maker).\n\n##### `loop` (Loop)\n  iOS Loop app monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `LOOP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when Loop isn't looping.\n  * `LOOP_WARN` (`30`) - The number of minutes since the last loop that needs to be exceeded before an alert is triggered\n  * `LOOP_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggered\n  * Add `loop` to `SHOW_FORECAST` to show forecasted BG.\n\nFor remote overrides, the following extended settings must be configured:\n  * `LOOP_APNS_KEY` - Apple Push Notifications service (APNs) Key, created in the Apple Developer website.\n  * `LOOP_APNS_KEY_ID` - The Key ID for the above key.\n  * `LOOP_DEVELOPER_TEAM_ID` - Your Apple developer team ID.\n  * `LOOP_PUSH_SERVER_ENVIRONMENT` - (optional) Set this to `production` if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight.\n\n##### `override` (Override Mode)\n  Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n\n##### `xdripjs` (xDrip-js)\n  Integrated xDrip-js monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `XDRIPJS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when CGM state is not OK or battery voltages fall below threshold.\n  * `XDRIPJS_STATE_NOTIFY_INTRVL` (`0.5`) - Set to number of hours between CGM state notifications\n  * `XDRIPJS_WARN_BAT_V` (`300`) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold.\n\n##### `alexa` (Amazon Alexa)\n  Integration with Amazon Alexa, [detailed setup instructions](docs/plugins/alexa-plugin.md)\n\n##### `googlehome` (Google Home/DialogFLow)\n  Integration with Google Home (via DialogFlow), [detailed setup instructions](docs/plugins/googlehome-plugin.md)\n\n##### `speech` (Speech)\n  Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms.\n\n##### `cors` (CORS)\n  Enabled [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) so other websites can make request to your Nightscout site, uses these extended settings:\n  * `CORS_ALLOW_ORIGIN` (`*`) - The list of sites that are allow to make requests\n\n#### Extended Settings\n  Some plugins support additional configuration using extra environment variables.  These are prefixed with the name of the plugin and a `_`.  For example setting `MYPLUGIN_EXAMPLE_VALUE=1234` would make `extendedSettings.exampleValue` available to the `MYPLUGIN` plugin.\n\n  Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser.\n\n  * `DEVICESTATUS_ADVANCED` (`true`) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site.\n\n#### Pushover\n  In addition to the normal web based alarms, there is also support for [Pushover](https://pushover.net/) based alarms and notifications.\n\n  To get started install the Pushover application on your iOS or Android device and create an account.\n\n  Using that account login to [Pushover](https://pushover.net/), in the top left you\u2019ll see your User Key, you\u2019ll need this plus an application API Token/Key to complete this setup.\n\n  You\u2019ll need to [Create a Pushover Application](https://pushover.net/apps/build).  You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch.  Maybe you'd like to use [this one](https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/static/images/large.png)?\n\n  Pushover is configured using the following Environment Variables:\n\n    * `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=\"pushover\"`.\n    * `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below.\n    * `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user.  This also supports a space delimited list of keys.  To disable `INFO` level pushes set this to `off`.\n    * `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level > `WARN`).  If not defined this will fallback to `PUSHOVER_USER_KEY`.  A possible use for this is sending important messages and alarms to a CWD that you don't want to send all notification too.  This also support a space delimited list of keys.  To disable Alarm pushes set this to `off`.\n    * `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements.  If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`.  This also support a space delimited list of keys. To disable Announcement pushes set this to `off`.\n    * `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible.\n    * `API_SECRET` - Used for signing the pushover callback request for acknowledgments.\n\n    If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=\"off\"`\n    If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=\"off\"`\n    If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=\"off\"`\n\n    If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcements\n\n    For testing/development try [localtunnel](http://localtunnel.me/).\n\n#### IFTTT Maker\n In addition to the normal web based alarms, and pushover, there is also integration for [IFTTT Webhooks](https://ifttt.com/maker_webhooks).\n\n With Maker you are able to integrate with all the other [IFTTT Services](https://ifttt.com/services).  For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more.\n\n 1. Setup IFTTT account: [login](https://ifttt.com/login) or [create an account](https://ifttt.com/join)\n 2. Follow the  [Detailed IFTTT setup Instructions](docs/plugins/maker-setup.md)\n 3. Configure Nightscout by setting these webpage environment variables:\n  * `ENABLE` - `maker` should be added to the list of plugins, for example: `ENABLE=\"maker\"`.\n  * `MAKER_KEY` - Set this to your secret key (see  [[Detailed Instructions](docs/plugins/maker-setup.md) ) `MAKER_KEY=\"abcMyExampleabc123defjt1DeNSiftttmak-XQb69p\"` This also supports a space delimited list of keys.\n  * `MAKER_ANNOUNCEMENT_KEY` - An optional Maker key, will be used for system wide user generated announcements.  If not defined this will fallback to `MAKER_KEY`.  A possible use for this is sending important messages and alarms to another device that you don't want to send all notification too.  This also support a space delimited list of keys.\n\n Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with `ns-`.  The core events are:\n  * `ns-event` - This event is sent to the maker service for all alarms and notifications.  This is good catch all event for general logging.\n  * `ns-allclear` - This event is sent to the maker service when an alarm has been ack'd or when the server starts up without triggering any alarms.  For example, you could use this event to turn a light to green.\n  * `ns-info` - Plugins that generate notifications at the info level will cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * `ns-warning` - Alarms at the warning level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * `ns-urgent` - Alarms at the urgent level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * see the [full list of events](lib/plugins/maker-setup.md#events)\n\n\n### Treatment Profile\n  Some of the [plugins](#plugins) make use of a treatment profile that can be edited using the Profile Editor, see the link in the Settings drawer on your site.\n\n  Treatment Profile Fields:\n\n  * `timezone` (Time Zone) - time zone local to the patient. *Should be set.*\n  * `units` (Profile Units) - blood glucose units used in the profile, either \"mgdl\" or \"mmol\"\n  * `dia` (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours.\n  * `carbs_hr` (Carbs per Hour) - The number of carbs that are processed per hour, for more information see [#DIYPS](http://diyps.org/2014/05/29/determining-your-carbohydrate-absorption-rate-diyps-lessons-learned/).\n  * `carbratio` (Carb Ratio) - grams per unit of insulin.\n  * `sens` (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose.\n  * `basal` The basal rate set on the pump.\n  * `target_high` - Upper target for correction boluses.\n  * `target_low` - Lower target for correction boluses.\n\n  Some example profiles are [here](example-profiles.md).\n\n## Setting environment variables\nEasy to emulate on the commandline:\n\n```bash\n    echo 'MONGO_CONNECTION=mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout' >> my.env\n    echo 'MONGO_COLLECTION=entries' >> my.env\n```\n\nFrom now on you can run using\n```bash\n    $ (eval $(cat my.env | sed 's/^/export /') && PORT=1337 node server.js)\n```\n\nYour hosting provider probably has a way to set these through their GUI.\n\n### Vagrant install\n\nOptionally, use [Vagrant](https://www.vagrantup.com/) with the\nincluded `Vagrantfile` and `setup.sh` to install OS and node packages to\na virtual machine.\n\n```bash\nhost$ vagrant up\nhost$ vagrant ssh\nvm$ setup.sh\n```\n\nThe setup script will install OS packages then run `npm install`.\n\nThe Vagrant VM serves to your host machine only on 192.168.33.10, you can access\nthe web interface on [http://192.168.33.10:1337](http://192.168.33.10:1337)\n\nMore questions?\n---------------\n\nFeel free to [post an issue][issues], but read the [wiki][wiki] first.\n\n[issues]: https://github.com/nightscout/cgm-remote-monitor/issues\n[wiki]: https://github.com/nightscout/cgm-remote-monitor/wiki\n\n### Browser testing suite provided by\n[![BrowserStack][browserstack-img]][browserstack-url]\n\n[browserstack-img]: /static/images/browserstack-logo.png\n[browserstack-url]: https://www.browserstack.com/\n\nLicense\n---------------\n\n[agpl-3]: http://www.gnu.org/licenses/agpl-3.0.txt\n\n    cgm-remote-monitor - web app to broadcast cgm readings\n    Copyright (C) 2017 Nightscout contributors.  See the COPYRIGHT file\n    at the root directory of this distribution and at\n    https://github.com/nightscout/cgm-remote-monitor/blob/master/COPYRIGHT\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
 },
 {
  "repo": "jtleek/datasharing",
  "language": null,
  "readme_contents": "How to share data with a statistician\n===========\n\nThis is a guide for anyone who needs to share data with a statistician or data scientist. The target audiences I have in mind are:\n\n* Collaborators who need statisticians or data scientists to analyze data for them\n* Students or postdocs in various disciplines looking for consulting advice\n* Junior statistics students whose job it is to collate/clean/wrangle data sets\n\nThe goals of this guide are to provide some instruction on the best way to share data to avoid the most common pitfalls\nand sources of delay in the transition from data collection to data analysis. The [Leek group](http://biostat.jhsph.edu/~jleek/) works with a large\nnumber of collaborators and the number one source of variation in the speed to results is the status of the data\nwhen they arrive at the Leek group. Based on my conversations with other statisticians this is true nearly universally.\n\nMy strong feeling is that statisticians should be able to handle the data in whatever state they arrive. It is important\nto see the raw data, understand the steps in the processing pipeline, and be able to incorporate hidden sources of\nvariability in one's data analysis. On the other hand, for many data types, the processing steps are well documented\nand standardized. So the work of converting the data from raw form to directly analyzable form can be performed \nbefore calling on a statistician. This can dramatically speed the turnaround time, since the statistician doesn't\nhave to work through all the pre-processing steps first. \n\n\nWhat you should deliver to the statistician\n====================\n\nTo facilitate the most efficient and timely analysis this is the information you should pass to a statistician:\n\n1. The raw data.\n2. A [tidy data set](http://vita.had.co.nz/papers/tidy-data.pdf) \n3. A code book describing each variable and its values in the tidy data set.  \n4. An explicit and exact recipe you used to go from 1 -> 2,3 \n\nLet's look at each part of the data package you will transfer. \n\n\n### The raw data\n\nIt is critical that you include the rawest form of the data that you have access to. This ensures\nthat data provenance can be maintained throughout the workflow.  Here are some examples of the\nraw form of data:\n\n* The strange [binary file](http://en.wikipedia.org/wiki/Binary_file) your measurement machine spits out\n* The unformatted Excel file with 10 worksheets the company you contracted with sent you\n* The complicated [JSON](http://en.wikipedia.org/wiki/JSON) data you got from scraping the [Twitter API](https://twitter.com/twitterapi)\n* The hand-entered numbers you collected looking through a microscope\n\nYou know the raw data are in the right format if you: \n\n1. Ran no software on the data\n1. Did not modify any of the data values\n1. You did not remove any data from the data set\n1. You did not summarize the data in any way\n\nIf you made any modifications of the raw data it is not the raw form of the data. Reporting modified data\nas raw data is a very common way to slow down the analysis process, since the analyst will often have to do a\nforensic study of your data to figure out why the raw data looks weird. (Also imagine what would happen if new data arrived?)\n\n### The tidy data set\n\nThe general principles of tidy data are laid out by [Hadley Wickham](http://had.co.nz/) in [this paper](http://vita.had.co.nz/papers/tidy-data.pdf)\nand [this video](http://vimeo.com/33727555). While both the paper and the video describe tidy data using [R](http://www.r-project.org/), the principles\nare more generally applicable:\n\n1. Each variable you measure should be in one column\n1. Each different observation of that variable should be in a different row\n1. There should be one table for each \"kind\" of variable\n1. If you have multiple tables, they should include a column in the table that allows them to be joined or merged\n\nWhile these are the hard and fast rules, there are a number of other things that will make your data set much easier\nto handle. First is to include a row at the top of each data table/spreadsheet that contains full row names. \nSo if you measured age at diagnosis for patients, you would head that column with the name `AgeAtDiagnosis` instead\nof something like `ADx` or another abbreviation that may be hard for another person to understand. \n\n\nHere is an example of how this would work from genomics. Suppose that for 20 people you have collected gene expression measurements with \n[RNA-sequencing](http://en.wikipedia.org/wiki/RNA-Seq). You have also collected demographic and clinical information\nabout the patients including their age, treatment, and diagnosis. You would have one table/spreadsheet that contains the clinical/demographic\ninformation. It would have four columns (patient id, age, treatment, diagnosis) and 21 rows (a row with variable names, then one row\nfor every patient). You would also have one spreadsheet for the summarized genomic data. Usually this type of data\nis summarized at the level of the number of counts per exon. Suppose you have 100,000 exons, then you would have a\ntable/spreadsheet that had 21 rows (a row for gene names, and one row for each patient) and 100,001 columns (one row for patient\nids and one row for each data type). \n\nIf you are sharing your data with the collaborator in Excel, the tidy data should be in one Excel file per table. They\nshould not have multiple worksheets, no macros should be applied to the data, and no columns/cells should be highlighted. \nAlternatively share the data in a [CSV](http://en.wikipedia.org/wiki/Comma-separated_values) or [TAB-delimited](http://en.wikipedia.org/wiki/Tab-separated_values) text file. (Beware however that reading CSV files into Excel can sometimes lead to non-reproducible handling of date and time variables.)\n\n\n### The code book\n\nFor almost any data set, the measurements you calculate will need to be described in more detail than you can or should sneak\ninto the spreadsheet. The code book contains this information. At minimum it should contain:\n\n1. Information about the variables (including units!) in the data set not contained in the tidy data \n1. Information about the summary choices you made\n1. Information about the experimental study design you used\n\nIn our genomics example, the analyst would want to know what the unit of measurement for each\nclinical/demographic variable is (age in years, treatment by name/dose, level of diagnosis and how heterogeneous). They \nwould also want to know how you picked the exons you used for summarizing the genomic data (UCSC/Ensembl, etc.). They\nwould also want to know any other information about how you did the data collection/study design. For example,\nare these the first 20 patients that walked into the clinic? Are they 20 highly selected patients by some characteristic\nlike age? Are they randomized to treatments? \n\nA common format for this document is a Word file. There should be a section called \"Study design\" that has a thorough\ndescription of how you collected the data. There is a section called \"Code book\" that describes each variable and its\nunits. \n\n### How to code variables\n\nWhen you put variables into a spreadsheet there are several main categories you will run into depending on their [data type](http://en.wikipedia.org/wiki/Statistical_data_type):\n\n1. Continuous\n1. Ordinal\n1. Categorical\n1. Missing \n1. Censored\n\nContinuous variables are anything measured on a quantitative scale that could be any fractional number. An example\nwould be something like weight measured in kg. [Ordinal data](http://en.wikipedia.org/wiki/Ordinal_data) are data that have a fixed, small (< 100) number of levels but are ordered. \nThis could be for example survey responses where the choices are: poor, fair, good. [Categorical data](http://en.wikipedia.org/wiki/Categorical_variable) are data where there\nare multiple categories, but they aren't ordered. One example would be sex: male or female. This coding is attractive because it is self-documenting.  [Missing data](http://en.wikipedia.org/wiki/Missing_data) are data\nthat are unobserved and you don't know the mechanism. You should code missing values as `NA`. [Censored data](http://en.wikipedia.org/wiki/Censoring_\\(statistics\\)) are data\nwhere you know the missingness mechanism on some level. Common examples are a measurement being below a detection limit\nor a patient being lost to follow-up. They should also be coded as `NA` when you don't have the data. But you should\nalso add a new column to your tidy data called, \"VariableNameCensored\" which should have values of `TRUE` if censored \nand `FALSE` if not. In the code book you should explain why those values are missing. It is absolutely critical to report\nto the analyst if there is a reason you know about that some of the data are missing. You should also not [impute](http://en.wikipedia.org/wiki/Imputation_\\(statistics\\))/make up/\nthrow away missing observations.\n\nIn general, try to avoid coding categorical or ordinal variables as numbers. When you enter the value for sex in the tidy\ndata, it should be \"male\" or \"female\". The ordinal values in the data set should be \"poor\", \"fair\", and \"good\" not 1, 2 ,3.\nThis will avoid potential mixups about which direction effects go and will help identify coding errors. \n\nAlways encode every piece of information about your observations using text. For example, if you are storing data in Excel and use a form of colored text or cell background formatting to indicate information about an observation (\"red variable entries were observed in experiment 1.\") then this information will not be exported (and will be lost!) when the data is exported as raw text.  Every piece of data should be encoded as actual text that can be exported.  \n\n### The instruction list/script\n\nYou may have heard this before, but [reproducibility is a big deal in computational science](http://www.sciencemag.org/content/334/6060/1226).\nThat means, when you submit your paper, the reviewers and the rest of the world should be able to exactly replicate\nthe analyses from raw data all the way to final results. If you are trying to be efficient, you will likely perform\nsome summarization/data analysis steps before the data can be considered tidy. \n\nThe ideal thing for you to do when performing summarization is to create a computer script (in `R`, `Python`, or something else) \nthat takes the raw data as input and produces the tidy data you are sharing as output. You can try running your script\na couple of times and see if the code produces the same output. \n\nIn many cases, the person who collected the data has incentive to make it tidy for a statistician to speed the process\nof collaboration. They may not know how to code in a scripting language. In that case, what you should provide the statistician\nis something called [pseudocode](http://en.wikipedia.org/wiki/Pseudocode). It should look something like:\n\n1. Step 1 - take the raw file, run version 3.1.2 of summarize software with parameters a=1, b=2, c=3\n1. Step 2 - run the software separately for each sample\n1. Step 3 - take column three of outputfile.out for each sample and that is the corresponding row in the output data set\n\nYou should also include information about which system (Mac/Windows/Linux) you used the software on and whether you \ntried it more than once to confirm it gave the same results. Ideally, you will run this by a fellow student/labmate\nto confirm that they can obtain the same output file you did. \n\n\n\n\nWhat you should expect from the analyst\n====================\n\nWhen you turn over a properly tidied data set it dramatically decreases the workload on the statistician. So hopefully\nthey will get back to you much sooner. But most careful statisticians will check your recipe, ask questions about\nsteps you performed, and try to confirm that they can obtain the same tidy data that you did with, at minimum, spot\nchecks.\n\nYou should then expect from the statistician:\n\n1. An analysis script that performs each of the analyses (not just instructions)\n1. The exact computer code they used to run the analysis\n1. All output files/figures they generated. \n\nThis is the information you will use in the supplement to establish reproducibility and precision of your results. Each\nof the steps in the analysis should be clearly explained and you should ask questions when you don't understand\nwhat the analyst did. It is the responsibility of both the statistician and the scientist to understand the statistical\nanalysis. You may not be able to perform the exact analyses without the statistician's code, but you should be able\nto explain why the statistician performed each step to a labmate/your principal investigator. \n\n\nContributors\n====================\n\n* [Jeff Leek](http://biostat.jhsph.edu/~jleek/) - Wrote the initial version.\n* [L. Collado-Torres](http://bit.ly/LColladoTorres) - Fixed typos, added links.\n* [Nick Reich](http://people.umass.edu/nick/) - Added tips on storing data as text.\n* [Nick Horton](https://www.amherst.edu/people/facstaff/nhorton) - Minor wording suggestions.\n\n\n"
 },
 {
  "repo": "rdpeng/ProgrammingAssignment2",
  "language": "R",
  "readme_contents": "### Introduction\n\nThis second programming assignment will require you to write an R\nfunction that is able to cache potentially time-consuming computations.\nFor example, taking the mean of a numeric vector is typically a fast\noperation. However, for a very long vector, it may take too long to\ncompute the mean, especially if it has to be computed repeatedly (e.g.\nin a loop). If the contents of a vector are not changing, it may make\nsense to cache the value of the mean so that when we need it again, it\ncan be looked up in the cache rather than recomputed. In this\nProgramming Assignment you will take advantage of the scoping rules of\nthe R language and how they can be manipulated to preserve state inside\nof an R object.\n\n### Example: Caching the Mean of a Vector\n\nIn this example we introduce the `<<-` operator which can be used to\nassign a value to an object in an environment that is different from the\ncurrent environment. Below are two functions that are used to create a\nspecial object that stores a numeric vector and caches its mean.\n\nThe first function, `makeVector` creates a special \"vector\", which is\nreally a list containing a function to\n\n1.  set the value of the vector\n2.  get the value of the vector\n3.  set the value of the mean\n4.  get the value of the mean\n\n<!-- -->\n\n    makeVector <- function(x = numeric()) {\n            m <- NULL\n            set <- function(y) {\n                    x <<- y\n                    m <<- NULL\n            }\n            get <- function() x\n            setmean <- function(mean) m <<- mean\n            getmean <- function() m\n            list(set = set, get = get,\n                 setmean = setmean,\n                 getmean = getmean)\n    }\n\nThe following function calculates the mean of the special \"vector\"\ncreated with the above function. However, it first checks to see if the\nmean has already been calculated. If so, it `get`s the mean from the\ncache and skips the computation. Otherwise, it calculates the mean of\nthe data and sets the value of the mean in the cache via the `setmean`\nfunction.\n\n    cachemean <- function(x, ...) {\n            m <- x$getmean()\n            if(!is.null(m)) {\n                    message(\"getting cached data\")\n                    return(m)\n            }\n            data <- x$get()\n            m <- mean(data, ...)\n            x$setmean(m)\n            m\n    }\n\n### Assignment: Caching the Inverse of a Matrix\n\nMatrix inversion is usually a costly computation and there may be some\nbenefit to caching the inverse of a matrix rather than computing it\nrepeatedly (there are also alternatives to matrix inversion that we will\nnot discuss here). Your assignment is to write a pair of functions that\ncache the inverse of a matrix.\n\nWrite the following functions:\n\n1.  `makeCacheMatrix`: This function creates a special \"matrix\" object\n    that can cache its inverse.\n2.  `cacheSolve`: This function computes the inverse of the special\n    \"matrix\" returned by `makeCacheMatrix` above. If the inverse has\n    already been calculated (and the matrix has not changed), then\n    `cacheSolve` should retrieve the inverse from the cache.\n\nComputing the inverse of a square matrix can be done with the `solve`\nfunction in R. For example, if `X` is a square invertible matrix, then\n`solve(X)` returns its inverse.\n\nFor this assignment, assume that the matrix supplied is always\ninvertible.\n\nIn order to complete this assignment, you must do the following:\n\n1.  Fork the GitHub repository containing the stub R files at\n    [https://github.com/rdpeng/ProgrammingAssignment2](https://github.com/rdpeng/ProgrammingAssignment2)\n    to create a copy under your own account.\n2.  Clone your forked GitHub repository to your computer so that you can\n    edit the files locally on your own machine.\n3.  Edit the R file contained in the git repository and place your\n    solution in that file (please do not rename the file).\n4.  Commit your completed R file into YOUR git repository and push your\n    git branch to the GitHub repository under your account.\n5.  Submit to Coursera the URL to your GitHub repository that contains\n    the completed R code for the assignment.\n\n### Grading\n\nThis assignment will be graded via peer assessment.\n"
 },
 {
  "repo": "octocat/Spoon-Knife",
  "language": "HTML",
  "readme_contents": "### Well hello there!\n\nThis repository is meant to provide an example for *forking* a repository on GitHub.\n\nCreating a *fork* is producing a personal copy of someone else's project. Forks act as a sort of bridge between the original repository and your personal copy. You can submit *Pull Requests* to help make other people's projects better by offering your changes up to the original project. Forking is at the core of social coding at GitHub.\n\nAfter forking this repository, you can make some changes to the project, and submit [a Pull Request](https://github.com/octocat/Spoon-Knife/pulls) as practice.\n\nFor some more information on how to fork a repository, [check out our guide, \"Forking Projects\"\"](http://guides.github.com/overviews/forking/). Thanks! :sparkling_heart:\n"
 },
 {
  "repo": "tensorflow/tensorflow",
  "language": "C++",
  "readme_contents": "<div align=\"center\">\n  <img src=\"https://www.tensorflow.org/images/tf_logo_social.png\">\n</div>\n\n[![Python](https://img.shields.io/pypi/pyversions/tensorflow.svg?style=plastic)](https://badge.fury.io/py/tensorflow)\n[![PyPI](https://badge.fury.io/py/tensorflow.svg)](https://badge.fury.io/py/tensorflow)\n\n\n**`Documentation`** |\n------------------- |\n[![Documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://www.tensorflow.org/api_docs/) |\n\n[TensorFlow](https://www.tensorflow.org/) is an end-to-end open source platform\nfor machine learning. It has a comprehensive, flexible ecosystem of\n[tools](https://www.tensorflow.org/resources/tools),\n[libraries](https://www.tensorflow.org/resources/libraries-extensions), and\n[community](https://www.tensorflow.org/community) resources that lets\nresearchers push the state-of-the-art in ML and developers easily build and\ndeploy ML-powered applications.\n\nTensorFlow was originally developed by researchers and engineers working on the\nGoogle Brain team within Google's Machine Intelligence Research organization to\nconduct machine learning and deep neural networks research. The system is\ngeneral enough to be applicable in a wide variety of other domains, as well.\n\nTensorFlow provides stable [Python](https://www.tensorflow.org/api_docs/python)\nand [C++](https://www.tensorflow.org/api_docs/cc) APIs, as well as\nnon-guaranteed backward compatible API for\n[other languages](https://www.tensorflow.org/api_docs).\n\nKeep up-to-date with release announcements and security updates by subscribing\nto\n[announce@tensorflow.org](https://groups.google.com/a/tensorflow.org/forum/#!forum/announce).\nSee all the [mailing lists](https://www.tensorflow.org/community/forums).\n\n## Install\n\nSee the [TensorFlow install guide](https://www.tensorflow.org/install) for the\n[pip package](https://www.tensorflow.org/install/pip), to\n[enable GPU support](https://www.tensorflow.org/install/gpu), use a\n[Docker container](https://www.tensorflow.org/install/docker), and\n[build from source](https://www.tensorflow.org/install/source).\n\nTo install the current release, which includes support for\n[CUDA-enabled GPU cards](https://www.tensorflow.org/install/gpu) *(Ubuntu and\nWindows)*:\n\n```\n$ pip install tensorflow\n```\n\nA smaller CPU-only package is also available:\n\n```\n$ pip install tensorflow-cpu\n```\n\nTo update TensorFlow to the latest version, add `--upgrade` flag to the above\ncommands.\n\n*Nightly binaries are available for testing using the\n[tf-nightly](https://pypi.python.org/pypi/tf-nightly) and\n[tf-nightly-cpu](https://pypi.python.org/pypi/tf-nightly-cpu) packages on PyPi.*\n\n#### *Try your first TensorFlow program*\n\n```shell\n$ python\n```\n\n```python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\nb'Hello, TensorFlow!'\n```\n\nFor more examples, see the\n[TensorFlow tutorials](https://www.tensorflow.org/tutorials/).\n\n## Contribution guidelines\n\n**If you want to contribute to TensorFlow, be sure to review the\n[contribution guidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.**\n\n**We use [GitHub issues](https://github.com/tensorflow/tensorflow/issues) for\ntracking requests and bugs, please see\n[TensorFlow Discuss](https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss)\nfor general questions and discussion, and please direct specific questions to\n[Stack Overflow](https://stackoverflow.com/questions/tagged/tensorflow).**\n\nThe TensorFlow project strives to abide by generally accepted best practices in\nopen-source software development:\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1486/badge)](https://bestpractices.coreinfrastructure.org/projects/1486)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n\n## Continuous build status\n\n### Official Builds\n\nBuild Type               | Status                                                                                                                                                                           | Artifacts\n------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux CPU**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html)           | [PyPI](https://pypi.org/project/tf-nightly/)\n**Linux GPU**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html) | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Linux XLA**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html)         | TBA\n**macOS**                | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html)     | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows CPU**          | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html)       | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows GPU**          | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html)       | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Android**              | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html)               | [![Download](https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg)](https://bintray.com/google/tensorflow/tensorflow/_latestVersion)\n**Raspberry Pi 0 and 1** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html)           | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl)\n**Raspberry Pi 2 and 3** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html)           | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl)\n\n### Community Supported Builds\n\nBuild Type                                                        | Status                                                                                                                                                                                        | Artifacts\n----------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux AMD ROCm GPU** Nightly                                    | [![Build Status](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/badge/icon)](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly)                                                  | [Nightly](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/lastSuccessfulBuild/)\n**Linux AMD ROCm GPU** Stable Release                             | [![Build Status](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/badge/icon)](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/)                                                 | Release [1.15](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/lastSuccessfulBuild/) / [2.x](http://ml-ci.amd.com:21096/job/tensorflow-rocm-v2-release/lastSuccessfulBuild/)\n**Linux s390x** Nightly                                           | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon)](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)                                                             | [Nightly](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)\n**Linux s390x CPU** Stable Release                                | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/badge/icon)](https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/)                                      | [Release](https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/)\n**Linux ppc64le CPU** Nightly                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/)\n**Linux ppc64le CPU** Stable Release                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/)                       | Release [1.15](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/) / [2.x](https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_CPU_Release_Build/)\n**Linux ppc64le GPU** Nightly                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/)\n**Linux ppc64le GPU** Stable Release                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/)                       | Release [1.15](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/) / [2.x](https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_GPU_Release_Build/)\n**Linux CPU with Intel\u00ae MKL-DNN** Nightly                         | [![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/badge/icon)](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)                     | [Nightly](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)\n**Linux CPU with Intel\u00ae MKL-DNN** Stable Release                  | ![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon)                                                                                              | Release [1.15](https://pypi.org/project/intel-tensorflow/1.15.0/) / [2.x](https://pypi.org/project/intel-tensorflow/)\n**Red Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU** <br> Python 2.7, 3.6 | [![Build Status](https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&build=2)](https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/) | [1.13.1 PyPI](https://tensorflow.pypi.thoth-station.ninja/index/)\n\n## Resources\n\n*   [TensorFlow.org](https://www.tensorflow.org)\n*   [TensorFlow Tutorials](https://www.tensorflow.org/tutorials/)\n*   [TensorFlow Official Models](https://github.com/tensorflow/models/tree/master/official)\n*   [TensorFlow Examples](https://github.com/tensorflow/examples)\n*   [TensorFlow in Practice from Coursera](https://www.coursera.org/specializations/tensorflow-in-practice)\n*   [TensorFlow: Data and Deployment from Coursera](https://www.coursera.org/specializations/tensorflow-data-and-deployment)\n*   [Getting Started with TensorFlow 2 from Coursera](https://www.coursera.org/learn/getting-started-with-tensor-flow2)\n*   [Intro to TensorFlow for Deep Learning from Udacity](https://www.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187)\n*   [Introduction to TensorFlow Lite from Udacity](https://www.udacity.com/course/intro-to-tensorflow-lite--ud190)\n*   [Machine Learning with TensorFlow on GCP](https://www.coursera.org/specializations/machine-learning-tensorflow-gcp)\n*   [TensorFlow Blog](https://blog.tensorflow.org)\n*   [Learn ML with TensorFlow](https://www.tensorflow.org/resources/learn-ml)\n*   [TensorFlow Twitter](https://twitter.com/tensorflow)\n*   [TensorFlow YouTube](https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ)\n*   [TensorFlow Roadmap](https://www.tensorflow.org/community/roadmap)\n*   [TensorFlow White Papers](https://www.tensorflow.org/about/bib)\n*   [TensorBoard Visualization Toolkit](https://github.com/tensorflow/tensorboard)\n\nLearn more about the\n[TensorFlow community](https://www.tensorflow.org/community) and how to\n[contribute](https://www.tensorflow.org/community/contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
 },
 {
  "repo": "SmartThingsCommunity/SmartThingsPublic",
  "language": "Groovy",
  "readme_contents": "# SmartThings Public GitHub Repo\n\nAn official list of SmartApps and Device Types from SmartThings.\n\nHere are some links to help you get started coding right away:\n\n* [GitHub-specific Documentation](http://docs.smartthings.com/en/latest/tools-and-ide/github-integration.html)\n* [Full Documentation](http://docs.smartthings.com)\n* [IDE & Simulator](http://ide.smartthings.com)\n* [Community Forums](http://community.smartthings.com)\n\nFollow us on the web:\n\n* Twitter: http://twitter.com/smartthingsdev\n* Facebook: http://facebook.com/smartthingsdevelopers\n"
 },
 {
  "repo": "twbs/bootstrap",
  "language": "JavaScript",
  "readme_contents": "<p align=\"center\">\n  <a href=\"https://getbootstrap.com/\">\n    <img src=\"https://getbootstrap.com/docs/4.5/assets/brand/bootstrap-solid.svg\" alt=\"Bootstrap logo\" width=\"72\" height=\"72\">\n  </a>\n</p>\n\n<h3 align=\"center\">Bootstrap</h3>\n\n<p align=\"center\">\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  <br>\n  <a href=\"https://getbootstrap.com/docs/4.5/\"><strong>Explore Bootstrap docs \u00bb</strong></a>\n  <br>\n  <br>\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=bug.md\">Report bug</a>\n  \u00b7\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=feature.md&labels=feature\">Request feature</a>\n  \u00b7\n  <a href=\"https://themes.getbootstrap.com/\">Themes</a>\n  \u00b7\n  <a href=\"https://blog.getbootstrap.com/\">Blog</a>\n</p>\n\n\n## Table of contents\n\n- [Quick start](#quick-start)\n- [Status](#status)\n- [What's included](#whats-included)\n- [Bugs and feature requests](#bugs-and-feature-requests)\n- [Documentation](#documentation)\n- [Contributing](#contributing)\n- [Community](#community)\n- [Versioning](#versioning)\n- [Creators](#creators)\n- [Thanks](#thanks)\n- [Copyright and license](#copyright-and-license)\n\n\n## Quick start\n\nSeveral quick start options are available:\n\n- [Download the latest release.](https://github.com/twbs/bootstrap/archive/v4.5.0.zip)\n- Clone the repo: `git clone https://github.com/twbs/bootstrap.git`\n- Install with [npm](https://www.npmjs.com/): `npm install bootstrap`\n- Install with [yarn](https://yarnpkg.com/): `yarn add bootstrap@4.5.0`\n- Install with [Composer](https://getcomposer.org/): `composer require twbs/bootstrap:4.5.0`\n- Install with [NuGet](https://www.nuget.org/): CSS: `Install-Package bootstrap` Sass: `Install-Package bootstrap.sass`\n\nRead the [Getting started page](https://getbootstrap.com/docs/4.5/getting-started/introduction/) for information on the framework contents, templates and examples, and more.\n\n\n## Status\n\n[![Slack](https://bootstrap-slack.herokuapp.com/badge.svg)](https://bootstrap-slack.herokuapp.com/)\n[![Build Status](https://github.com/twbs/bootstrap/workflows/Tests/badge.svg?branch=master)](https://github.com/twbs/bootstrap/actions?query=workflow%3ATests+branch%3Amaster)\n[![npm version](https://img.shields.io/npm/v/bootstrap.svg)](https://www.npmjs.com/package/bootstrap)\n[![Gem version](https://img.shields.io/gem/v/bootstrap.svg)](https://rubygems.org/gems/bootstrap)\n[![Meteor Atmosphere](https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue.svg)](https://atmospherejs.com/twbs/bootstrap)\n[![Packagist Prerelease](https://img.shields.io/packagist/vpre/twbs/bootstrap.svg)](https://packagist.org/packages/twbs/bootstrap)\n[![NuGet](https://img.shields.io/nuget/vpre/bootstrap.svg)](https://www.nuget.org/packages/bootstrap/absoluteLatest)\n[![peerDependencies Status](https://img.shields.io/david/peer/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=peer)\n[![devDependency Status](https://img.shields.io/david/dev/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=dev)\n[![Coverage Status](https://img.shields.io/coveralls/github/twbs/bootstrap/master.svg)](https://coveralls.io/github/twbs/bootstrap?branch=master)\n[![CSS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/css/bootstrap.min.css?compression=gzip&label=CSS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/css/bootstrap.min.css)\n[![JS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/js/bootstrap.min.js?compression=gzip&label=JS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/js/bootstrap.min.js)\n[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)](https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)\n[![Backers on Open Collective](https://img.shields.io/opencollective/backers/bootstrap.svg)](#backers)\n[![Sponsors on Open Collective](https://img.shields.io/opencollective/sponsors/bootstrap.svg)](#sponsors)\n\n\n## What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\n\n```text\nbootstrap/\n\u2514\u2500\u2500 dist/\n    \u251c\u2500\u2500 css/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n```\n\nWe provide compiled CSS and JS (`bootstrap.*`), as well as compiled and minified CSS and JS (`bootstrap.min.*`). [source maps](https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps) (`bootstrap.*.map`) are available for use with certain browsers' developer tools. Bundled JS files (`bootstrap.bundle.js` and minified `bootstrap.bundle.min.js`) include [Popper](https://popper.js.org/).\n\n\n## Bugs and feature requests\n\nHave a bug or a feature request? Please first read the [issue guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md#using-the-issue-tracker) and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/twbs/bootstrap/issues/new).\n\n\n## Documentation\n\nBootstrap's documentation, included in this repo in the root directory, is built with [Hugo](https://gohugo.io/) and publicly hosted on GitHub Pages at <https://getbootstrap.com/>. The docs may also be run locally.\n\nDocumentation search is powered by [Algolia's DocSearch](https://community.algolia.com/docsearch/). Working on our search? Be sure to set `debug: true` in `site/assets/js/src/search.js` file.\n\n### Running documentation locally\n\n1. Run `npm install` to install the Node.js dependencies, including Hugo (the site builder).\n2. Run `npm run test` (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\n3. From the root `/bootstrap` directory, run `npm run docs-serve` in the command line.\n4. Open `http://localhost:9001/` in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its [documentation](https://gohugo.io/documentation/).\n\n### Documentation for previous releases\n\nYou can find all our previous releases docs on <https://getbootstrap.com/docs/versions/>.\n\n[Previous releases](https://github.com/twbs/bootstrap/releases) and their documentation are also available for download.\n\n\n## Contributing\n\nPlease read through our [contributing guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.\n\nMoreover, if your pull request contains JavaScript patches or features, you must include [relevant unit tests](https://github.com/twbs/bootstrap/tree/master/js/tests). All HTML and CSS should conform to the [Code Guide](https://github.com/mdo/code-guide), maintained by [Mark Otto](https://github.com/mdo).\n\nEditor preferences are available in the [editor config](https://github.com/twbs/bootstrap/blob/master/.editorconfig) for easy use in common text editors. Read more and download plugins at <https://editorconfig.org/>.\n\n\n## Community\n\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\n- Follow [@getbootstrap on Twitter](https://twitter.com/getbootstrap).\n- Read and subscribe to [The Official Bootstrap Blog](https://blog.getbootstrap.com/).\n- Join [the official Slack room](https://bootstrap-slack.herokuapp.com/).\n- Chat with fellow Bootstrappers in IRC. On the `irc.freenode.net` server, in the `##bootstrap` channel.\n- Implementation help may be found at Stack Overflow (tagged [`bootstrap-4`](https://stackoverflow.com/questions/tagged/bootstrap-4)).\n- Developers should use the keyword `bootstrap` on packages which modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/browse/keyword/bootstrap) or similar delivery mechanisms for maximum discoverability.\n\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under [the Semantic Versioning guidelines](https://semver.org/). Sometimes we screw up, but we adhere to those rules whenever possible.\n\nSee [the Releases section of our GitHub project](https://github.com/twbs/bootstrap/releases) for changelogs for each release version of Bootstrap. Release announcement posts on [the official Bootstrap blog](https://blog.getbootstrap.com/) contain summaries of the most noteworthy changes made in each release.\n\n\n## Creators\n\n**Mark Otto**\n\n- <https://twitter.com/mdo>\n- <https://github.com/mdo>\n\n**Jacob Thornton**\n\n- <https://twitter.com/fat>\n- <https://github.com/fat>\n\n\n## Thanks\n\n<a href=\"https://www.browserstack.com/\">\n  <img src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\" width=\"192\" height=\"42\">\n</a>\n\nThanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/bootstrap#sponsor)]\n\n[![OC sponsor 0](https://opencollective.com/bootstrap/sponsor/0/avatar.svg)](https://opencollective.com/bootstrap/sponsor/0/website)\n[![OC sponsor 1](https://opencollective.com/bootstrap/sponsor/1/avatar.svg)](https://opencollective.com/bootstrap/sponsor/1/website)\n[![OC sponsor 2](https://opencollective.com/bootstrap/sponsor/2/avatar.svg)](https://opencollective.com/bootstrap/sponsor/2/website)\n[![OC sponsor 3](https://opencollective.com/bootstrap/sponsor/3/avatar.svg)](https://opencollective.com/bootstrap/sponsor/3/website)\n[![OC sponsor 4](https://opencollective.com/bootstrap/sponsor/4/avatar.svg)](https://opencollective.com/bootstrap/sponsor/4/website)\n[![OC sponsor 5](https://opencollective.com/bootstrap/sponsor/5/avatar.svg)](https://opencollective.com/bootstrap/sponsor/5/website)\n[![OC sponsor 6](https://opencollective.com/bootstrap/sponsor/6/avatar.svg)](https://opencollective.com/bootstrap/sponsor/6/website)\n[![OC sponsor 7](https://opencollective.com/bootstrap/sponsor/7/avatar.svg)](https://opencollective.com/bootstrap/sponsor/7/website)\n[![OC sponsor 8](https://opencollective.com/bootstrap/sponsor/8/avatar.svg)](https://opencollective.com/bootstrap/sponsor/8/website)\n[![OC sponsor 9](https://opencollective.com/bootstrap/sponsor/9/avatar.svg)](https://opencollective.com/bootstrap/sponsor/9/website)\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/bootstrap#backer)]\n\n[![Backers](https://opencollective.com/bootstrap/backers.svg?width=890)](https://opencollective.com/bootstrap#backers)\n\n\n## Copyright and license\n\nCode and documentation copyright 2011\u20132020 the [Bootstrap Authors](https://github.com/twbs/bootstrap/graphs/contributors) and [Twitter, Inc.](https://twitter.com) Code released under the [MIT License](https://github.com/twbs/bootstrap/blob/master/LICENSE). Docs released under [Creative Commons](https://creativecommons.org/licenses/by/3.0/).\n"
 },
 {
  "repo": "github/gitignore",
  "language": null,
  "readme_contents": "# A collection of `.gitignore` templates\n\nThis is GitHub\u2019s collection of [`.gitignore`][man] file templates.\nWe use this list to populate the `.gitignore` template choosers available\nin the GitHub.com interface when creating new repositories and files.\n\nFor more information about how `.gitignore` files work, and how to use them,\nthe following resources are a great place to start:\n\n- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.\n- The [Ignoring Files article][help] on the GitHub Help site.\n- The [gitignore(5)][man] manual page.\n\n[man]: http://git-scm.com/docs/gitignore\n[help]: https://help.github.com/articles/ignoring-files\n[chapter]: https://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository#_ignoring\n[progit]: http://git-scm.com/book\n\n## Folder structure\n\nWe support a collection of templates, organized in this way:\n\n- the root folder contains templates in common use, to help people get started\n  with popular programming languages and technologies. These define a meaningful\n  set of rules to help get started, and ensure you are not committing\n  unimportant files into your repository\n- [`Global`](./Global) contains templates for various editors, tools and\n  operating systems that can be used in different situations. It is recommended\n  that you either [add these to your global template](https://help.github.com/articles/ignoring-files/#create-a-global-gitignore)\n  or merge these rules into your project-specific templates if you want to use\n  them permanently.\n- [`community`](./community) contains specialized templates for other popular\n  languages, tools and project, which don't currently belong in the mainstream\n  templates. These should be added to your project-specific templates when you\n  decide to adopt the framework or tool.\n\n## What makes a good template?\n\nA template should contain a set of rules to help Git repositories work with a\nspecific programming language, framework, tool or environment.\n\nIf it's not possible to curate a small set of useful rules for this situation,\nthen the template is not a good fit for this collection.\n\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework), it could live under the `community`\ndirectory. See [versioned templates](#versioned-templates) for more details.\n\nIf you have a small set of rules, or want to support a technology that is not\nwidely in use, and still believe this will be helpful to others, please read the\nsection about [specialized templates](#specialized-templates) for more details.\n\nInclude details when opening pull request if the template is important and visible. We\nmay not accept it immediately, but we can promote it to the root at a later date\nbased on interest.\n\nPlease also understand that we can\u2019t list every tool that ever existed.\nOur aim is to curate a collection of the _most common and helpful_ templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, it\u2019s not because it\u2019s not awesome.\n\n## Contributing guidelines\n\nWe\u2019d love for you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n- **Provide a link to the application or project\u2019s homepage**. Unless it\u2019s\n  extremely popular, there\u2019s a chance the maintainers don\u2019t know about or use\n  the language, framework, editor, app, or project your change applies to.\n\n- **Provide links to documentation** supporting the change you\u2019re making.\n  Current, canonical documentation mentioning the files being ignored is best.\n  If documentation isn\u2019t available to support your change, do the best you can\n  to explain what the files being ignored are for.\n\n- **Explain why you\u2019re making a change**. Even if it seems self-evident, please\n  take a sentence or two to tell us why your change or addition should happen.\n  It\u2019s especially helpful to articulate why this change applies to _everyone_\n  who works with the applicable technology, rather than just you or your team.\n\n- **Please consider the scope of your change**. If your change is specific to a\n  certain language or framework, then make sure the change is made to the\n  template for that language or framework, rather than to the template for an\n  editor, tool, or operating system.\n\n- **Please only modify _one template_ per pull request**. This helps keep pull\n  requests and feedback focused on a specific project or technology.\n\nIn general, the more you can do to help us understand the change you\u2019re making,\nthe more likely we\u2019ll be to accept your contribution quickly.\n\n## Versioned templates\n\nSome templates can change greatly between versions, and if you wish to contribute\nto this repository we need to follow this specific flow:\n\n- the template at the root should be the current supported version\n- the template at the root should not have a version in the filename (i.e.\n  \"evergreen\")\n- previous versions of templates should live under `community/`\n- previous versions of the template should embed the version in the filename,\n  for readability\n\nThis helps ensure users get the latest version (because they'll use whatever is\nat the root) but helps maintainers support older versions still in the wild.\n\n## Specialized templates\n\nIf you have a template that you would like to contribute, but it isn't quite\nmainstream, please consider adding this to the `community` directory under a\nfolder that best suits where it belongs.\n\nThe rules in your specialized template should be specific to the framework or\ntool, and any additional templates should be mentioned in a comment in the\nheader of the template.\n\nFor example, this template might live at `community/DotNet/InforCRM.gitignore`:\n\n```\n# gitignore template for InforCRM (formerly SalesLogix)\n# website: https://www.infor.com/product-summary/cx/infor-crm/\n#\n# Recommended: VisualStudio.gitignore\n\n# Ignore model files that are auto-generated\nModelIndex.xml\nExportedFiles.xml\n\n# Ignore deployment files\n[Mm]odel/[Dd]eployment\n\n# Force include portal SupportFiles\n!Model/Portal/*/SupportFiles/[Bb]in/\n!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in\n```\n\n## Contributing workflow\n\nHere\u2019s how we suggest you go about proposing a change to this project:\n\n1. [Fork this project][fork] to your account.\n2. [Create a branch][branch] for the change you intend to make.\n3. Make your changes to your fork.\n4. [Send a pull request][pr] from your fork\u2019s branch to our `master` branch.\n\nUsing the web-based interface to make changes is fine too, and will help you\nby automatically forking the project and prompting to send a pull request too.\n\n[fork]: https://help.github.com/articles/fork-a-repo/\n[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository\n[pr]: https://help.github.com/articles/using-pull-requests/\n\n## License\n\n[CC0-1.0](./LICENSE).\n"
 },
 {
  "repo": "rdpeng/ExData_Plotting1",
  "language": null,
  "readme_contents": "## Introduction\n\nThis assignment uses data from\nthe <a href=\"http://archive.ics.uci.edu/ml/\">UC Irvine Machine\nLearning Repository</a>, a popular repository for machine learning\ndatasets. In particular, we will be using the \"Individual household\nelectric power consumption Data Set\" which I have made available on\nthe course web site:\n\n\n* <b>Dataset</b>: <a href=\"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip\">Electric power consumption</a> [20Mb]\n\n* <b>Description</b>: Measurements of electric power consumption in\none household with a one-minute sampling rate over a period of almost\n4 years. Different electrical quantities and some sub-metering values\nare available.\n\n\nThe following descriptions of the 9 variables in the dataset are taken\nfrom\nthe <a href=\"https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption\">UCI\nweb site</a>:\n\n<ol>\n<li><b>Date</b>: Date in format dd/mm/yyyy </li>\n<li><b>Time</b>: time in format hh:mm:ss </li>\n<li><b>Global_active_power</b>: household global minute-averaged active power (in kilowatt) </li>\n<li><b>Global_reactive_power</b>: household global minute-averaged reactive power (in kilowatt) </li>\n<li><b>Voltage</b>: minute-averaged voltage (in volt) </li>\n<li><b>Global_intensity</b>: household global minute-averaged current intensity (in ampere) </li>\n<li><b>Sub_metering_1</b>: energy sub-metering No. 1 (in watt-hour of active energy). It corresponds to the kitchen, containing mainly a dishwasher, an oven and a microwave (hot plates are not electric but gas powered). </li>\n<li><b>Sub_metering_2</b>: energy sub-metering No. 2 (in watt-hour of active energy). It corresponds to the laundry room, containing a washing-machine, a tumble-drier, a refrigerator and a light. </li>\n<li><b>Sub_metering_3</b>: energy sub-metering No. 3 (in watt-hour of active energy). It corresponds to an electric water-heater and an air-conditioner.</li>\n</ol>\n\n## Loading the data\n\n\n\n\n\nWhen loading the dataset into R, please consider the following:\n\n* The dataset has 2,075,259 rows and 9 columns. First\ncalculate a rough estimate of how much memory the dataset will require\nin memory before reading into R. Make sure your computer has enough\nmemory (most modern computers should be fine).\n\n* We will only be using data from the dates 2007-02-01 and\n2007-02-02. One alternative is to read the data from just those dates\nrather than reading in the entire dataset and subsetting to those\ndates.\n\n* You may find it useful to convert the Date and Time variables to\nDate/Time classes in R using the `strptime()` and `as.Date()`\nfunctions.\n\n* Note that in this dataset missing values are coded as `?`.\n\n\n## Making Plots\n\nOur overall goal here is simply to examine how household energy usage\nvaries over a 2-day period in February, 2007. Your task is to\nreconstruct the following plots below, all of which were constructed\nusing the base plotting system.\n\nFirst you will need to fork and clone the following GitHub repository:\n[https://github.com/rdpeng/ExData_Plotting1](https://github.com/rdpeng/ExData_Plotting1)\n\n\nFor each plot you should\n\n* Construct the plot and save it to a PNG file with a width of 480\npixels and a height of 480 pixels.\n\n* Name each of the plot files as `plot1.png`, `plot2.png`, etc.\n\n* Create a separate R code file (`plot1.R`, `plot2.R`, etc.) that\nconstructs the corresponding plot, i.e. code in `plot1.R` constructs\nthe `plot1.png` plot. Your code file **should include code for reading\nthe data** so that the plot can be fully reproduced. You should also\ninclude the code that creates the PNG file.\n\n* Add the PNG file and R code file to your git repository\n\nWhen you are finished with the assignment, push your git repository to\nGitHub so that the GitHub version of your repository is up to\ndate. There should be four PNG files and four R code files.\n\n\nThe four plots that you will need to construct are shown below. \n\n\n### Plot 1\n\n\n![plot of chunk unnamed-chunk-2](figure/unnamed-chunk-2.png) \n\n\n### Plot 2\n\n![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-3.png) \n\n\n### Plot 3\n\n![plot of chunk unnamed-chunk-4](figure/unnamed-chunk-4.png) \n\n\n### Plot 4\n\n![plot of chunk unnamed-chunk-5](figure/unnamed-chunk-5.png) \n\n"
 },
 {
  "repo": "tensorflow/models",
  "language": "Python",
  "readme_contents": "![Logo](https://storage.googleapis.com/model_garden_artifacts/TF_Model_Garden.png)\n\n# Welcome to the Model Garden for TensorFlow\n\nThe TensorFlow Model Garden is a repository with a number of different implementations of state-of-the-art (SOTA) models and modeling solutions for TensorFlow users. We aim to demonstrate the best practices for modeling so that TensorFlow users can take full advantage of TensorFlow for their research and product development.\n\n| Directory | Description |\n|-----------|-------------|\n| [official](official) | \u2022 A collection of example implementations for SOTA models using the latest TensorFlow 2's high-level APIs<br />\u2022 Officially maintained, supported, and kept up to date with the latest TensorFlow 2 APIs by TensorFlow<br />\u2022 Reasonably optimized for fast performance while still being easy to read |\n| [research](research) | \u2022 A collection of research model implementations in TensorFlow 1 or 2 by researchers<br />\u2022 Maintained and supported by researchers |\n| [community](community) | \u2022 A curated list of the GitHub repositories with machine learning models and implementations powered by TensorFlow 2 |\n\n## [Announcements](../../wiki/Announcements)\n\n| Date | News |\n|------|------|\n| May 21, 2020 | [Unifying Deep Local and Global Features for Image Search (DELG)](https://github.com/tensorflow/models/tree/master/research/delf#delg) code released\n| May 7, 2020 | [MnasFPN with MobileNet-V2 backbone](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md#mobile-models) released for object detection\n| May 1, 2020 | [DELF: DEep Local Features](https://github.com/tensorflow/models/tree/master/research/delf) updated to support TensorFlow 2.1\n| March 31, 2020 | [Introducing the Model Garden for TensorFlow 2](https://blog.tensorflow.org/2020/03/introducing-model-garden-for-tensorflow-2.html) ([Tweet](https://twitter.com/TensorFlow/status/1245029834633297921)) |\n\n## Contributions\n\n[![help wanted:paper implementation](https://img.shields.io/github/issues/tensorflow/models/help%20wanted%3Apaper%20implementation)](https://github.com/tensorflow/models/labels/help%20wanted%3Apaper%20implementation)\n\nIf you want to contribute, please review the [contribution guidelines](../../wiki/How-to-contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
 },
 {
  "repo": "nightscout/cgm-remote-monitor",
  "language": "JavaScript",
  "readme_contents": "Nightscout Web Monitor (a.k.a. cgm-remote-monitor)\n======================================\n\n![nightscout horizontal](https://cloud.githubusercontent.com/assets/751143/8425633/93c94dc0-1ebc-11e5-99e7-71a8f464caac.png)\n\n[![Build Status][build-img]][build-url]\n[![Dependency Status][dependency-img]][dependency-url]\n[![Coverage Status][coverage-img]][coverage-url]\n[![Codacy Badge][codacy-img]][codacy-url]\n[![Discord chat][discord-img]][discord-url]\n\n[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://azuredeploy.net/) [![Deploy to Heroku][heroku-img]][heroku-url] [![Update your site][update-img]][update-fork]\n\nThis acts as a web-based CGM (Continuous Glucose Monitor) to allow\nmultiple caregivers to remotely view a patient's glucose data in\nreal time.  The server reads a MongoDB which is intended to be data\nfrom a physical CGM, where it sends new SGV (sensor glucose values) as\nthe data becomes available.  The data is then displayed graphically\nand blood glucose values are predicted 0.5 hours ahead using an\nautoregressive second order model.  Alarms are generated for high and\nlow values, which can be cleared by any watcher of the data.\n\n# [#WeAreNotWaiting](https://twitter.com/hashtag/wearenotwaiting?src=hash&vertical=default&f=images) and [this](https://vimeo.com/109767890) is why.\n\nCommunity maintained fork of the\n[original cgm-remote-monitor][original].\n\n[![Coverage Status](https://coveralls.io/repos/github/nightscout/cgm-remote-monitor/badge.svg?branch=master)](https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master)\n\n[build-img]: https://img.shields.io/travis/nightscout/cgm-remote-monitor.svg\n[build-url]: https://travis-ci.org/nightscout/cgm-remote-monitor\n[dependency-img]: https://img.shields.io/david/nightscout/cgm-remote-monitor.svg\n[dependency-url]: https://david-dm.org/nightscout/cgm-remote-monitor\n[coverage-img]: https://img.shields.io/coveralls/nightscout/cgm-remote-monitor/dev.svg\n[coverage-url]: https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master\n[codacy-img]: https://www.codacy.com/project/badge/f79327216860472dad9afda07de39d3b\n[codacy-url]: https://www.codacy.com/app/Nightscout/cgm-remote-monitor\n[discord-img]: https://img.shields.io/discord/629952586895851530?label=discord%20chat\n[discord-url]: https://discord.gg/rTKhrqz\n[heroku-img]: https://www.herokucdn.com/deploy/button.png\n[heroku-url]: https://heroku.com/deploy\n[update-img]: update.png\n[update-fork]: http://nightscout.github.io/pages/update-fork/\n[original]: https://github.com/rnpenguin/cgm-remote-monitor\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**\n\n- [Install](#install)\n  - [Supported configurations:](#supported-configurations)\n  - [Minimum browser requirements for viewing the site:](#minimum-browser-requirements-for-viewing-the-site)\n  - [Windows installation software requirements:](#windows-installation-software-requirements)\n  - [Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:](#installation-notes-for-users-with-nginx-or-apache-reverse-proxy-for-ssltls-offloading)\n  - [Installation notes for Microsoft Azure, Windows:](#installation-notes-for-microsoft-azure-windows)\n- [Usage](#usage)\n  - [Updating my version?](#updating-my-version)\n  - [What is my mongo string?](#what-is-my-mongo-string)\n  - [Configure my uploader to match](#configure-my-uploader-to-match)\n  - [Nightscout API](#nightscout-api)\n      - [Example Queries](#example-queries)\n  - [Environment](#environment)\n    - [Required](#required)\n    - [Features/Labs](#featureslabs)\n    - [Alarms](#alarms)\n    - [Core](#core)\n    - [Predefined values for your browser settings (optional)](#predefined-values-for-your-browser-settings-optional)\n    - [Predefined values for your server settings (optional)](#predefined-values-for-your-server-settings-optional)\n    - [Plugins](#plugins)\n      - [Default Plugins](#default-plugins)\n        - [`delta` (BG Delta)](#delta-bg-delta)\n        - [`direction` (BG Direction)](#direction-bg-direction)\n        - [`upbat` (Uploader Battery)](#upbat-uploader-battery)\n        - [`timeago` (Time Ago)](#timeago-time-ago)\n        - [`devicestatus` (Device Status)](#devicestatus-device-status)\n        - [`errorcodes` (CGM Error Codes)](#errorcodes-cgm-error-codes)\n        - [`ar2` (AR2 Forecasting)](#ar2-ar2-forecasting)\n        - [`simplealarms` (Simple BG Alarms)](#simplealarms-simple-bg-alarms)\n        - [`profile` (Treatment Profile)](#profile-treatment-profile)\n      - [Advanced Plugins:](#advanced-plugins)\n        - [`careportal` (Careportal)](#careportal-careportal)\n        - [`boluscalc` (Bolus Wizard)](#boluscalc-bolus-wizard)\n        - [`food` (Custom Foods)](#food-custom-foods)\n        - [`rawbg` (Raw BG)](#rawbg-raw-bg)\n        - [`iob` (Insulin-on-Board)](#iob-insulin-on-board)\n        - [`cob` (Carbs-on-Board)](#cob-carbs-on-board)\n        - [`bwp` (Bolus Wizard Preview)](#bwp-bolus-wizard-preview)\n        - [`cage` (Cannula Age)](#cage-cannula-age)\n        - [`sage` (Sensor Age)](#sage-sensor-age)\n        - [`iage` (Insulin Age)](#iage-insulin-age)\n        - [`bage` (Battery Age)](#bage-battery-age)\n        - [`treatmentnotify` (Treatment Notifications)](#treatmentnotify-treatment-notifications)\n        - [`basal` (Basal Profile)](#basal-basal-profile)\n        - [`bridge` (Share2Nightscout bridge)](#bridge-share2nightscout-bridge)\n        - [`mmconnect` (MiniMed Connect bridge)](#mmconnect-minimed-connect-bridge)\n        - [`pump` (Pump Monitoring)](#pump-pump-monitoring)\n        - [`openaps` (OpenAPS)](#openaps-openaps)\n        - [`loop` (Loop)](#loop-loop)\n        - [`override` (Override Mode)](#override-override-mode)\n        - [`xdripjs` (xDrip-js)](#xdripjs-xdripjs)\n        - [`alexa` (Amazon Alexa)](#alexa-amazon-alexa)\n        - [`googlehome` (Google Home/DialogFLow)](#googlehome-google-homedialogflow)\n        - [`speech` (Speech)](#speech-speech)\n        - [`cors` (CORS)](#cors-cors)\n      - [Extended Settings](#extended-settings)\n      - [Pushover](#pushover)\n      - [IFTTT Maker](#ifttt-maker)\n    - [Treatment Profile](#treatment-profile)\n  - [Setting environment variables](#setting-environment-variables)\n    - [Vagrant install](#vagrant-install)\n  - [More questions?](#more-questions)\n  - [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# Install\n\n## Supported configurations:\n\nIf you plan to use Nightscout, we recommend using [Heroku](http://www.nightscout.info/wiki/welcome/set-up-nightscout-using-heroku), as Nightscout can reach the usage limits of the free Azure plan and cause it to shut down for hours or days. If you end up needing a paid tier, the $7/mo Heroku plan is also much cheaper than the first paid tier of Azure. Currently, the only added benefit to choosing the $7/mo Heroku plan vs the free Heroku plan is a section showing site use metrics for performance (such as response time). This has limited benefit to the average Nightscout user. In short, Heroku is the free and best option for Nightscout hosting.\n\n- [Nightscout Setup with Heroku](http://www.nightscout.info/wiki/welcome/set-up-nightscout-using-heroku) (recommended)\n- [Nightscout Setup with Microsoft Azure](http://www.nightscout.info/wiki/faqs-2/azure-2) (not recommended, please\n[switch from Azure to Heroku](http://openaps.readthedocs.io/en/latest/docs/While%20You%20Wait%20For%20Gear/nightscout-setup.html#switching-from-azure-to-heroku) )\n- Linux based install (Debian, Ubuntu, Raspbian) install with own Node.JS and MongoDB install (see software requirements below)\n- Windows based install with own Node.JS and MongoDB install (see software requirements below)\n\n## Recommended minimum browser versions for using Nightscout:\n\nOlder versions of the browsers might work, but are untested.\n\n- Android 4\n- iOS 6\n- Chrome 35\n- Edge 17\n- Firefox 61\n- Opera 12.1\n- Safari 6 (macOS 10.7)\n- Internet Explorer: not supported\n\nSome features may not work with devices/browsers on the older end of these requirements.\n\n## Windows installation software requirements:\n\n- [Node.js](http://nodejs.org/) Latest Node 8 LTS (Node 8.15.1 or later) or Node 10 LTS (Node 10.16.0 or later; Node 10.15.2 works for Azure). Node versions that do not have the latest security patches will not work. Use [Install instructions for Node](https://nodejs.org/en/download/package-manager/) or use `setup.sh`)\n- [MongoDB](https://www.mongodb.com/download-center?jmp=nav#community) 3.x or later. MongoDB 2.4 is only supported for Raspberry Pi.\n\nAs a non-root user clone this repo then install dependencies into the root of the project:\n\n```bash\n$ npm install\n```\n\n## Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:\n\n- Your site redirects insecure connections to `https` by default. If you use a reverse proxy like nginx or Apache to handle the connection security for you, make sure it sets the `X-Forwarded-Proto` header. Otherwise nightscout will be unable to know if it was called through a secure connection and will try to redirect you to the https version. If you're unable to set this Header, you can change the `INSECURE_USE_HTTP` setting in nightscout to true in order to allow insecure connections without being redirected.\n- In case you use a proxy. Do not use an external network interfaces for hosting Nightscout. Make sure the unsecure port is not available from a remote network connection\n- HTTP Strict Transport Security (HSTS) headers are enabled by default, use settings `SECURE_HSTS_HEADER` and `SECURE_HSTS_HEADER_*`\n- See [Predefined values for your server settings](#predefined-values-for-your-server-settings-optional) for more details\n\n## Installation notes for Microsoft Azure, Windows:\n\n- If deploying the software to Microsoft Azure, you must set ** in the app settings for *WEBSITE_NODE_DEFAULT_VERSION* and *SCM_COMMAND_IDLE_TIMEOUT* **before** you deploy the latest Nightscout or the site deployment will likely fail. Other hosting environments do not require this setting. Additionally, if using the Azure free hosting tier, the installation might fail due to resource constraints imposed by Azure on the free hosting. Please set the following settings to the environment in Azure:\n```\nWEBSITE_NODE_DEFAULT_VERSION=10.15.2\nSCM_COMMAND_IDLE_TIMEOUT=300\n```\n- See [install MongoDB, Node.js, and Nightscouton a single Windows system](https://github.com/jaylagorio/Nightscout-on-Windows-Server). if you want to host your Nightscout outside of the cloud. Although the instructions are intended for Windows Server the procedure is compatible with client versions of Windows such as Windows 7 and Windows 10.\n- If you deploy to Windows and want to develop or test you need to install [Cygwin](https://www.cygwin.com/) (use [setup-x86_64.exe](https://www.cygwin.com/setup-x86_64.exe) and make sure to install `build-essential` package. Test your configuration by executing `make` and check if all tests are ok.\n\n# Development\n\nWant to help with development, or just see how Nightscout works? Great! See [CONTRIBUTING.md](CONTRIBUTING.md) for development-related documentation.\n\n# Usage\n\nThe data being uploaded from the server to the client is from a\nMongoDB server such as [mLab][mLab].\n\n[mLab]: https://mlab.com/\n[autoconfigure]: https://nightscout.github.io/pages/configure/\n[mongostring]: https://nightscout.github.io/pages/mongostring/\n\n## Updating my version?\n\nThe easiest way to update your version of cgm-remote-monitor to the latest version is to use the [update tool][update-fork]. A step-by-step guide is available [here][http://www.nightscout.info/wiki/welcome/how-to-update-to-latest-cgm-remote-monitor-aka-cookie].\nTo downgrade to an older version, follow [this guide][http://www.nightscout.info/wiki/welcome/how-to-deploy-an-older-version-of-nightscout].\n\n## Configure my uploader to match\n\nUse the [autoconfigure tool][autoconfigure] to sync an uploader to your config.\n\n## Nightscout API\n\nThe Nightscout API enables direct access to your data without the need for Mongo access.\nYou can find CGM data in `/api/v1/entries`, Care Portal Treatments in `/api/v1/treatments`, and Treatment Profiles in `/api/v1/profile`.\nThe server status and settings are available from `/api/v1/status.json`.\n\nBy default the `/entries` and `/treatments` APIs limit results to the the most recent 10 values from the last 2 days.\nYou can get many more results, by using the `count`, `date`, `dateString`, and `created_at` parameters, depending on the type of data you're looking for.\n\nOnce you've installed Nightscout, you can access API documentation by loading `/api-docs/` URL in your instance.\n\n#### Example Queries\n\n(replace `http://localhost:1337` with your own URL)\n\n  * 100's: `http://localhost:1337/api/v1/entries.json?find[sgv]=100`\n  * Count of 100's in a month: `http://localhost:1337/api/v1/count/entries/where?find[dateString][$gte]=2016-09&find[dateString][$lte]=2016-10&find[sgv]=100`\n  * BGs between 2 days: `http://localhost:1337/api/v1/entries/sgv.json?find[dateString][$gte]=2015-08-28&find[dateString][$lte]=2015-08-30`\n  * Juice Box corrections in a year: `http://localhost:1337/api/v1/treatments.json?count=1000&find[carbs]=15&find[eventType]=Carb+Correction&find[created_at][$gte]=2015`\n  * Boluses over 2U: `http://localhost:1337/api/v1/treatments.json?find[insulin][$gte]=2`\n\nThe API is Swagger enabled, so you can generate client code to make working with the API easy.\nTo learn more about the Nightscout API, visit https://YOUR-SITE.com/api-docs/ or review [swagger.yaml](swagger.yaml).\n\n## Environment\n\n`VARIABLE` (default) - description\n\n### Required\n\n  * `MONGODB_URI` - The connection string for your Mongo database. Something like `mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout`.\n  * `API_SECRET` - A secret passphrase that must be at least 12 characters long.\n  * `MONGODB_COLLECTION` (`entries`) - The Mongo collection where CGM entries are stored.\n  * `DISPLAY_UNITS` (`mg/dl`) - Options are `mg/dl` or `mmol/L` (or just `mmol`).  Setting to `mmol/L` puts the entire server into `mmol/L` mode by default, no further settings needed.\n\n### Features\n\n  * `ENABLE` - Used to enable optional features, expects a space delimited list, such as: `careportal rawbg iob`, see [plugins](#plugins) below\n  * `DISABLE` - Used to disable default features, expects a space delimited list, such as: `direction upbat`, see [plugins](#plugins) below\n  * `BASE_URL` - Used for building links to your site's API, i.e. Pushover callbacks, usually the URL of your Nightscout site.\n  * `AUTH_DEFAULT_ROLES` (`readable`) - possible values `readable`, `denied`, or any valid role\n    name.  When `readable`, anyone can view Nightscout without a token.\n    Setting it to `denied` will require a token from every visit, using `status-only` will enable api-secret based login.\n  * `IMPORT_CONFIG` - Used to import settings and extended settings from a url such as a gist.  Structure of file should be something like: `{\"settings\": {\"theme\": \"colors\"}, \"extendedSettings\": {\"upbat\": {\"enableAlerts\": true}}}`\n  * `TREATMENTS_AUTH` (`on`) - possible values `on` or `off`. Deprecated, if set to `off` the `careportal` role will be added to `AUTH_DEFAULT_ROLES`\n\n### Alarms\n\n  These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.\n\n  * `ALARM_TYPES` (`simple` if any `BG_`* ENV's are set, otherwise `predict`) - currently 2 alarm types are supported, and can be used independently or combined.  The `simple` alarm type only compares the current BG to `BG_` thresholds above, the `predict` alarm type uses highly tuned formula that forecasts where the BG is going based on it's trend.  `predict` **DOES NOT** currently use any of the `BG_`* ENV's\n  * `BG_HIGH` (`260`) - the high BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)\n  * `BG_TARGET_TOP` (`180`) - the top of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)\n  * `BG_TARGET_BOTTOM` (`80`) - the bottom of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)\n  * `BG_LOW` (`55`) - the low BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)\n  * `ALARM_URGENT_HIGH` (`on`) - possible values `on` or `off`\n  * `ALARM_URGENT_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent high alarms, space separated for options in browser, first used for pushover\n  * `ALARM_HIGH` (`on`) - possible values `on` or `off`\n  * `ALARM_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze high alarms, space separated for options in browser, first used for pushover\n  * `ALARM_LOW` (`on`) - possible values `on` or `off`\n  * `ALARM_LOW_MINS` (`15 30 45 60`) - Number of minutes to snooze low alarms, space separated for options in browser, first used for pushover\n  * `ALARM_URGENT_LOW` (`on`) - possible values `on` or `off`\n  * `ALARM_URGENT_LOW_MINS` (`15 30 45`) - Number of minutes to snooze urgent low alarms, space separated for options in browser, first used for pushover\n  * `ALARM_URGENT_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover\n  * `ALARM_WARN_MINS` (`30 60 90 120`) - Number of minutes to snooze warning alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover\n\n### Core\n\n  * `MONGO_TREATMENTS_COLLECTION` (`treatments`) -The collection used to store treatments entered in the Care Portal, see the `ENABLE` env var above\n  * `MONGO_DEVICESTATUS_COLLECTION`(`devicestatus`) - The collection used to store device status information such as uploader battery\n  * `MONGO_PROFILE_COLLECTION`(`profile`) - The collection used to store your profiles\n  * `MONGO_FOOD_COLLECTION`(`food`) - The collection used to store your food database\n  * `MONGO_ACTIVITY_COLLECTION`(`activity`) - The collection used to store activity data\n  * `PORT` (`1337`) - The port that the node.js application will listen on.\n  * `HOSTNAME` - The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use `::`.\n  * `SSL_KEY` - Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to your privkey.pem file (private key).\n  * `SSL_CERT` - Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to fullchain.pem file (cert + ca).\n  * `SSL_CA` - Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to chain.pem file (chain).\n  * `HEARTBEAT` (`60`)  - Number of seconds to wait in between database checks\n  * `DEBUG_MINIFY` (`true`)  - Debug option, setting to `false` will disable bundle minification to help tracking down error and speed up development\n  * `DE_NORMALIZE_DATES`(`true`) - The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to `true` causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST.\n\n### Predefined values for your browser settings (optional)\n\n  * `TIME_FORMAT` (`12`)- possible values `12` or `24`\n  * `NIGHT_MODE` (`off`) - possible values `on` or `off`\n  * `SHOW_RAWBG` (`never`) - possible values `always`, `never` or `noise`\n  * `CUSTOM_TITLE` (`Nightscout`) - Title for the main view\n  * `THEME` (`colors`) - possible values `default`, `colors`, or `colorblindfriendly`\n  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning\n  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm\n  * `SHOW_PLUGINS` - enabled plugins that should have their visualizations shown, defaults to all enabled\n  * `SHOW_FORECAST` (`ar2`) - plugin forecasts that should be shown by default, supports space delimited values such as `\"ar2 openaps\"`\n  * `LANGUAGE` (`en`) - language of Nightscout. If not available english is used\n    * Currently supported language codes are: bg (\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438), cs (\u010ce\u0161tina), de (Deutsch), dk (Dansk), el (\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac), en (English), es (Espa\u00f1ol), fi (Suomi), fr (Fran\u00e7ais), he (\u05e2\u05d1\u05e8\u05d9\u05ea), hr (Hrvatski), it (Italiano), ko (\ud55c\uad6d\uc5b4), nb (Norsk (Bokm\u00e5l)), nl (Nederlands), pl (Polski), pt (Portugu\u00eas (Brasil)), ro (Rom\u00e2n\u0103), ru (\u0420\u0443\u0441\u0441\u043a\u0438\u0439), sk (Sloven\u010dina), sv (Svenska), tr (Turkish), zh_cn (\u4e2d\u6587\uff08\u7b80\u4f53)), zh_tw (\u4e2d\u6587\uff08\u7e41\u9ad4))\n  * `SCALE_Y` (`log`) - The type of scaling used for the Y axis of the charts system wide.\n    * The default `log` (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range.\n    * The `linear` option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn't wasted.\n    * The `log-dynamic` is similar to the default `log` options, but uses the same dynamic range and the `linear` scale.\n  * `EDIT_MODE` (`on`) - possible values `on` or `off`. Enables the icon allowing for editing of treatments in the main view.\n\n### Predefined values for your server settings (optional)\n  * `INSECURE_USE_HTTP` (`false`) - Redirect unsafe http traffic to https. Possible values `false`, or `true`. Your site redirects to `https` by default. If you don't want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set `INSECURE_USE_HTTP` to `true`. Note: This will allow (unsafe) http traffic to your Nightscout instance and is not recommended.\n  * `SECURE_HSTS_HEADER` (`true`) - Add HTTP Strict Transport Security (HSTS) header. Possible values `false`, or `true`.\n  * `SECURE_HSTS_HEADER_INCLUDESUBDOMAINS` (`false`) - includeSubdomains options for HSTS. Possible values `false`, or `true`.\n  * `SECURE_HSTS_HEADER_PRELOAD` (`false`) - ask for preload in browsers for HSTS. Possible values `false`, or `true`.\n  * `SECURE_CSP` (`false`) - Add Content Security Policy headers. Possible values `false`, or `true`.\n  * `SECURE_CSP_REPORT_ONLY` (`false`) - If set to `true` allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values `false`, or `true`.\n\n### Views\n\n  There are a few alternate web views available from the main menu that display a simplified BG stream. (If you launch one of these in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view.)\n  * `Clock` - Shows current BG, trend arrow, and time of day. Grey text on a black background.\n  * `Color` - Shows current BG and trend arrow. White text on a background that changes color to indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above). Set `SHOW_CLOCK_DELTA` to `true` to show BG change in the last 5 minutes, set `SHOW_CLOCK_LAST_TIME` to `true` to always show BG age.\n  * `Simple` - Shows current BG. Grey text on a black background.\n\n### Plugins\n\n  Plugins are used extend the way information is displayed, how notifications are sent, alarms are triggered, and more.\n\n  The built-in/example plugins that are available by default are listed below.  The plugins may still need to be enabled by adding to the `ENABLE` environment variable.\n\n#### Default Plugins\n\n  These can be disabled by adding them to the `DISABLE` variable, for example `DISABLE=\"direction upbat\"`\n\n##### `delta` (BG Delta)\n  Calculates and displays the change between the last 2 BG values.\n\n##### `direction` (BG Direction)\n  Displays the trend direction.\n\n##### `upbat` (Uploader Battery)\n  Displays the most recent battery status from the uploader phone. . Use these [extended setting](#extended-settings) to adjust behavior:\n  * `UPBAT_ENABLE_ALERTS` (`false`) - Set to `true` to enable uploader battery alarms via Pushover and IFTTT.\n  * `UPBAT_WARN` (`30`) - Minimum battery percent to trigger warning.\n  * `UPBAT_URGENT` (`20`) - Minimum battery percent to trigger urgent alarm.\n\n##### `timeago` (Time Ago)\n  Displays the time since last CGM entry. Use these [extended setting](#extended-settings) to adjust behavior:\n  * `TIMEAGO_ENABLE_ALERTS` (`false`) - Set to `true` to enable stale data alarms via Pushover and IFTTT.\n  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning\n  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm\n\n##### `devicestatus` (Device Status)\n  Used by `upbat` and other plugins to display device status info.  Supports the `DEVICESTATUS_ADVANCED=\"true\"` [extended setting](#extended-settings) to send all device statuses to the client for retrospective use and to support other plugins.\n\n##### `errorcodes` (CGM Error Codes)\n  Generates alarms for CGM codes `9` (hourglass) and `10` (???).\n  * Use [extended settings](#extended-settings) to adjust what errorcodes trigger notifications and alarms:\n    * `ERRORCODES_INFO` (`1 2 3 4 5 6 7 8`) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or `off` to disable\n    * `ERRORCODES_WARN` (`off`) - By default there are no warning configured, set to a space separate list of numbers or `off` to disable\n    * `ERRORCODES_URGENT` (`9 10`) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or `off` to disable\n\n##### `ar2` (AR2 Forecasting)\n  Generates alarms based on forecasted values. See [Forecasting using AR2 algorithm](https://github.com/nightscout/nightscout.github.io/wiki/Forecasting)\n  * Enabled by default if no thresholds are set **OR** `ALARM_TYPES` includes `predict`.\n  * Use [extended settings](#extended-settings) to adjust AR2 behavior:\n    * `AR2_CONE_FACTOR` (`2`) - to adjust size of cone, use `0` for a single line.\n\n##### `simplealarms` (Simple BG Alarms)\n  Uses `BG_HIGH`, `BG_TARGET_TOP`, `BG_TARGET_BOTTOM`, `BG_LOW` thresholds to generate alarms.\n  * Enabled by default if 1 of these thresholds is set **OR** `ALARM_TYPES` includes `simple`.\n\n##### `profile` (Treatment Profile)\n  Add link to Profile Editor and allow to enter treatment profile settings. Also uses the extended setting:\n  * `PROFILE_HISTORY` (`off`) - possible values `on` or `off`. Enable/disable NS ability to keep history of your profiles (still experimental)\n  * `PROFILE_MULTIPLE` (`off`) - possible values `on` or `off`. Enable/disable NS ability to handle and switch between multiple treatment profiles\n\n#### Advanced Plugins:\n\n##### `careportal` (Careportal)\n  An optional form to enter treatments.\n\n##### `boluscalc` (Bolus Wizard)\n\n##### `food` (Custom Foods)\n  An option plugin to enable adding foods from database in Bolus Wizard and enable .\n\n##### `rawbg` (Raw BG)\n  Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with [extended setting](#extended-settings)\n  * `DISPLAY` (`unsmoothed`) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record.\n    * `unfiltered` - Raw BG is calculated by applying the calibration to the glucose record's unfiltered value.\n    * `filtered` - Raw BG is calculated by applying the calibration to the glucose record's filtered value. The glucose record's filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high.\n    * `unsmoothed` - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the `filtered` setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the `unfiltered` setting) by the ratio.  The effect is to exagerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm.\n\n##### `iob` (Insulin-on-Board)\n  Adds the IOB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with insulin doses and the `dia` and `sens` fields from the [treatment profile](#treatment-profile).\n\n##### `cob` (Carbs-on-Board)\n  Adds the COB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with carb doses and the `carbs_hr`, `carbratio`, and `sens` fields from the [treatment profile](#treatment-profile).\n\n##### `bwp` (Bolus Wizard Preview)\n  This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. ***The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation.*** The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the `iob` plugin and `sens`, `target_high`, and `target_low` fields from the [treatment profile](#treatment-profile). Defaults that can be adjusted with [extended setting](#extended-settings)\n  * `BWP_WARN` (`0.50`) - If `BWP` is > `BWP_WARN` a warning alarm will be triggered.\n  * `BWP_URGENT` (`1.00`) - If `BWP` is > `BWP_URGENT` an urgent alarm will be triggered.\n  * `BWP_SNOOZE_MINS` (`10`) - minutes to snooze when there is enough IOB to cover a high BG.\n  * `BWP_SNOOZE` - (`0.10`) If BG is higher then the `target_high` and `BWP` < `BWP_SNOOZE` alarms will be snoozed for `BWP_SNOOZE_MINS`.\n\n##### `cage` (Cannula Age)\n  Calculates the number of hours since the last `Site Change` treatment that was recorded.\n  * `CAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming cannula change.\n  * `CAGE_INFO` (`44`) - If time since last `Site Change` matches `CAGE_INFO`, user will be warned of upcoming cannula change\n  * `CAGE_WARN` (`48`) - If time since last `Site Change` matches `CAGE_WARN`, user will be alarmed to to change the cannula\n  * `CAGE_URGENT` (`72`) - If time since last `Site Change` matches `CAGE_URGENT`, user will be issued a persistent warning of overdue change.\n  * `CAGE_DISPLAY` (`hours`) - Possible values are 'hours' or 'days'. If 'days' is selected and age of canula is greater than 24h number is displayed in days and hours\n\n#####  `sage` (Sensor Age)\n  Calculates the number of days and hours since the last `Sensor Start` and `Sensor Change` treatment that was recorded.\n  * `SAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming sensor change.\n  * `SAGE_INFO` (`144`) - If time since last sensor event matches `SAGE_INFO`, user will be warned of upcoming sensor change\n  * `SAGE_WARN` (`164`) - If time since last sensor event matches `SAGE_WARN`, user will be alarmed to to change/restart the sensor\n  * `SAGE_URGENT` (`166`) - If time since last sensor event matches `SAGE_URGENT`, user will be issued a persistent warning of overdue change.\n\n##### `iage` (Insulin Age)\n  Calculates the number of days and hours since the last `Insulin Change` treatment that was recorded.\n  * `IAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming insulin reservoir change.\n  * `IAGE_INFO` (`44`) - If time since last `Insulin Change` matches `IAGE_INFO`, user will be warned of upcoming insulin reservoir change\n  * `IAGE_WARN` (`48`) - If time since last `Insulin Change` matches `IAGE_WARN`, user will be alarmed to to change the insulin reservoir\n  * `IAGE_URGENT` (`72`) - If time since last `Insulin Change` matches `IAGE_URGENT`, user will be issued a persistent warning of overdue change.\n\n##### `bage` (Battery Age)\n  Calculates the number of days and hours since the last `Pump Battery Change` treatment that was recorded.\n  * `BAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming pump battery change.\n  * `BAGE_DISPLAY` (`days`) - Set to `hours` to display time since last `Pump Battery Change` in hours only.\n  * `BAGE_INFO` (`312`) - If time since last `Pump Battery Change` matches `BAGE_INFO` hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days).\n  * `BAGE_WARN` (`336`) - If time since last `Pump Battery Change` matches `BAGE_WARN` hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days).\n  * `BAGE_URGENT` (`360`) - If time since last `Pump Battery Change` matches `BAGE_URGENT` hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).\n\n##### `treatmentnotify` (Treatment Notifications)\n  Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment.  Default snooze is 10 minutes, and can be set using the `TREATMENTNOTIFY_SNOOZE_MINS` [extended setting](#extended-settings).\n\n##### `basal` (Basal Profile)\n  Adds the Basal pill visualization to display the basal rate for the current time.  Also enables the `bwp` plugin to calculate correction temp basal suggestions.  Uses the `basal` field from the [treatment profile](#treatment-profile). Also uses the extended setting:\n  * `BASAL_RENDER` (`none`) - Possible values are `none`, `default`, or `icicle` (inverted)\n\n##### `bridge` (Share2Nightscout bridge)\n  Glucose reading directly from the Share service, uses these extended settings:\n  * `BRIDGE_USER_NAME` - Your user name for the Share service.\n  * `BRIDGE_PASSWORD` - Your password for the Share service.\n  * `BRIDGE_INTERVAL` (`150000` *2.5 minutes*) - The time to wait between each update.\n  * `BRIDGE_MAX_COUNT` (`1`) - The number of records to attempt to fetch per update.\n  * `BRIDGE_FIRST_FETCH_COUNT` (`3`) - Changes max count during the very first update only.\n  * `BRIDGE_MAX_FAILURES` (`3`) - How many failures before giving up.\n  * `BRIDGE_MINUTES` (`1400`) - The time window to search for new data per update (default is one day in minutes).\n\n##### `mmconnect` (MiniMed Connect bridge)\n  Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout ([read more](https://github.com/mddub/minimed-connect-to-nightscout))\n  * `MMCONNECT_USER_NAME` - Your user name for CareLink Connect.\n  * `MMCONNECT_PASSWORD` - Your password for CareLink Connect.\n  * `MMCONNECT_INTERVAL` (`60000` *1 minute*) - Number of milliseconds to wait between requests to the CareLink server.\n  * `MMCONNECT_MAX_RETRY_DURATION` (`32`) - Maximum number of total seconds to spend retrying failed requests before giving up.\n  * `MMCONNECT_SGV_LIMIT` (`24`) - Maximum number of recent sensor glucose values to send to Nightscout on each request.\n  * `MMCONNECT_VERBOSE` - Set this to \"true\" to log CareLink request information to the console.\n  * `MMCONNECT_STORE_RAW_DATA` - Set this to \"true\" to store raw data returned from CareLink as `type: \"carelink_raw\"` database entries (useful for development).\n  * `MMCONNECT_SERVER` - Set this to `EU` if you're using the European Medtronic services\n\n##### `pump` (Pump Monitoring)\n  Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, with more on the way\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `PUMP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications for Pump battery and reservoir.\n  * `PUMP_WARN_ON_SUSPEND` (`false`) - Set to `true` to get an alarm when the pump is suspended.\n  * `PUMP_FIELDS` (`reservoir battery`) - The fields to display by default.  Any of the following fields: `reservoir`, `battery`, `clock`, `status`, and `device`\n  * `PUMP_RETRO_FIELDS` (`reservoir battery clock`) - The fields to display in retro mode. Any of the above fields.\n  * `PUMP_WARN_CLOCK` (`30`) - The number of minutes ago that needs to be exceed before an alert is triggered.\n  * `PUMP_URGENT_CLOCK` (`60`) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered.\n  * `PUMP_WARN_RES` (`10`) - The number of units remaining, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_RES` (`5`) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold.\n  * `PUMP_WARN_BATT_P` (`30`) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_BATT_P` (`20`) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold.\n  * `PUMP_WARN_BATT_V` (`1.35`) - The voltage (if percent isn't available) of the pump battery, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_BATT_V` (`1.30`) - The  voltage (if percent isn't available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold.\n\n##### `openaps` (OpenAPS)\n  Integrated OpenAPS loop monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `OPENAPS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when OpenAPS isn't looping.  If OpenAPS is going to offline for a period of time, you can add an `OpenAPS Offline` event for the expected duration from Careportal to avoid getting alerts.\n  * `OPENAPS_WARN` (`30`) - The number of minutes since the last loop that needs to be exceed before an alert is triggered\n  * `OPENAPS_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggered\n  * `OPENAPS_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display by default.  Any of the following fields: `status-symbol`, `status-label`, `iob`, `meal-assist`, `freq`, and `rssi`\n  * `OPENAPS_RETRO_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display in retro mode. Any of the above fields.\n  * `OPENAPS_PRED_IOB_COLOR` (`#1e88e5`) - The color to use for IOB prediction lines. Colors can be in `#RRGGBB` format, but [other CSS color units](https://www.w3.org/TR/css-color-3/#colorunits) may be used as well.\n  * `OPENAPS_PRED_COB_COLOR` (`#FB8C00`) - The color to use for COB prediction lines. Same format as above.\n  * `OPENAPS_PRED_ACOB_COLOR` (`#FB8C00`) - The color to use for ACOB prediction lines. Same format as above.\n  * `OPENAPS_PRED_ZT_COLOR` (`#00d2d2`) - The color to use for ZT prediction lines. Same format as above.\n  * `OPENAPS_PRED_UAM_COLOR` (`#c9bd60`) - The color to use for UAM prediction lines. Same format as above.\n  * `OPENAPS_COLOR_PREDICTION_LINES` (`true`) - Enables / disables the colored lines vs the classic purple color.\n\n Also see [Pushover](#pushover) and [IFTTT Maker](#ifttt-maker).\n\n##### `loop` (Loop)\n  iOS Loop app monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `LOOP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when Loop isn't looping.\n  * `LOOP_WARN` (`30`) - The number of minutes since the last loop that needs to be exceeded before an alert is triggered\n  * `LOOP_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggered\n  * Add `loop` to `SHOW_FORECAST` to show forecasted BG.\n\nFor remote overrides, the following extended settings must be configured:\n  * `LOOP_APNS_KEY` - Apple Push Notifications service (APNs) Key, created in the Apple Developer website.\n  * `LOOP_APNS_KEY_ID` - The Key ID for the above key.\n  * `LOOP_DEVELOPER_TEAM_ID` - Your Apple developer team ID.\n  * `LOOP_PUSH_SERVER_ENVIRONMENT` - (optional) Set this to `production` if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight.\n\n##### `override` (Override Mode)\n  Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n\n##### `xdripjs` (xDrip-js)\n  Integrated xDrip-js monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `XDRIPJS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when CGM state is not OK or battery voltages fall below threshold.\n  * `XDRIPJS_STATE_NOTIFY_INTRVL` (`0.5`) - Set to number of hours between CGM state notifications\n  * `XDRIPJS_WARN_BAT_V` (`300`) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold.\n\n##### `alexa` (Amazon Alexa)\n  Integration with Amazon Alexa, [detailed setup instructions](docs/plugins/alexa-plugin.md)\n\n##### `googlehome` (Google Home/DialogFLow)\n  Integration with Google Home (via DialogFlow), [detailed setup instructions](docs/plugins/googlehome-plugin.md)\n\n##### `speech` (Speech)\n  Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms.\n\n##### `cors` (CORS)\n  Enabled [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) so other websites can make request to your Nightscout site, uses these extended settings:\n  * `CORS_ALLOW_ORIGIN` (`*`) - The list of sites that are allow to make requests\n\n#### Extended Settings\n  Some plugins support additional configuration using extra environment variables.  These are prefixed with the name of the plugin and a `_`.  For example setting `MYPLUGIN_EXAMPLE_VALUE=1234` would make `extendedSettings.exampleValue` available to the `MYPLUGIN` plugin.\n\n  Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser.\n\n  * `DEVICESTATUS_ADVANCED` (`true`) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site.\n\n#### Pushover\n  In addition to the normal web based alarms, there is also support for [Pushover](https://pushover.net/) based alarms and notifications.\n\n  To get started install the Pushover application on your iOS or Android device and create an account.\n\n  Using that account login to [Pushover](https://pushover.net/), in the top left you\u2019ll see your User Key, you\u2019ll need this plus an application API Token/Key to complete this setup.\n\n  You\u2019ll need to [Create a Pushover Application](https://pushover.net/apps/build).  You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch.  Maybe you'd like to use [this one](https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/static/images/large.png)?\n\n  Pushover is configured using the following Environment Variables:\n\n    * `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=\"pushover\"`.\n    * `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below.\n    * `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user.  This also supports a space delimited list of keys.  To disable `INFO` level pushes set this to `off`.\n    * `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level > `WARN`).  If not defined this will fallback to `PUSHOVER_USER_KEY`.  A possible use for this is sending important messages and alarms to a CWD that you don't want to send all notification too.  This also support a space delimited list of keys.  To disable Alarm pushes set this to `off`.\n    * `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements.  If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`.  This also support a space delimited list of keys. To disable Announcement pushes set this to `off`.\n    * `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible.\n    * `API_SECRET` - Used for signing the pushover callback request for acknowledgments.\n\n    If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=\"off\"`\n    If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=\"off\"`\n    If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=\"off\"`\n\n    If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcements\n\n    For testing/development try [localtunnel](http://localtunnel.me/).\n\n#### IFTTT Maker\n In addition to the normal web based alarms, and pushover, there is also integration for [IFTTT Webhooks](https://ifttt.com/maker_webhooks).\n\n With Maker you are able to integrate with all the other [IFTTT Services](https://ifttt.com/services).  For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more.\n\n 1. Setup IFTTT account: [login](https://ifttt.com/login) or [create an account](https://ifttt.com/join)\n 2. Follow the  [Detailed IFTTT setup Instructions](docs/plugins/maker-setup.md)\n 3. Configure Nightscout by setting these webpage environment variables:\n  * `ENABLE` - `maker` should be added to the list of plugins, for example: `ENABLE=\"maker\"`.\n  * `MAKER_KEY` - Set this to your secret key (see  [[Detailed Instructions](docs/plugins/maker-setup.md) ) `MAKER_KEY=\"abcMyExampleabc123defjt1DeNSiftttmak-XQb69p\"` This also supports a space delimited list of keys.\n  * `MAKER_ANNOUNCEMENT_KEY` - An optional Maker key, will be used for system wide user generated announcements.  If not defined this will fallback to `MAKER_KEY`.  A possible use for this is sending important messages and alarms to another device that you don't want to send all notification too.  This also support a space delimited list of keys.\n\n Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with `ns-`.  The core events are:\n  * `ns-event` - This event is sent to the maker service for all alarms and notifications.  This is good catch all event for general logging.\n  * `ns-allclear` - This event is sent to the maker service when an alarm has been ack'd or when the server starts up without triggering any alarms.  For example, you could use this event to turn a light to green.\n  * `ns-info` - Plugins that generate notifications at the info level will cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * `ns-warning` - Alarms at the warning level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * `ns-urgent` - Alarms at the urgent level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * see the [full list of events](lib/plugins/maker-setup.md#events)\n\n\n### Treatment Profile\n  Some of the [plugins](#plugins) make use of a treatment profile that can be edited using the Profile Editor, see the link in the Settings drawer on your site.\n\n  Treatment Profile Fields:\n\n  * `timezone` (Time Zone) - time zone local to the patient. *Should be set.*\n  * `units` (Profile Units) - blood glucose units used in the profile, either \"mgdl\" or \"mmol\"\n  * `dia` (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours.\n  * `carbs_hr` (Carbs per Hour) - The number of carbs that are processed per hour, for more information see [#DIYPS](http://diyps.org/2014/05/29/determining-your-carbohydrate-absorption-rate-diyps-lessons-learned/).\n  * `carbratio` (Carb Ratio) - grams per unit of insulin.\n  * `sens` (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose.\n  * `basal` The basal rate set on the pump.\n  * `target_high` - Upper target for correction boluses.\n  * `target_low` - Lower target for correction boluses.\n\n  Some example profiles are [here](example-profiles.md).\n\n## Setting environment variables\nEasy to emulate on the commandline:\n\n```bash\n    echo 'MONGO_CONNECTION=mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout' >> my.env\n    echo 'MONGO_COLLECTION=entries' >> my.env\n```\n\nFrom now on you can run using\n```bash\n    $ (eval $(cat my.env | sed 's/^/export /') && PORT=1337 node server.js)\n```\n\nYour hosting provider probably has a way to set these through their GUI.\n\n### Vagrant install\n\nOptionally, use [Vagrant](https://www.vagrantup.com/) with the\nincluded `Vagrantfile` and `setup.sh` to install OS and node packages to\na virtual machine.\n\n```bash\nhost$ vagrant up\nhost$ vagrant ssh\nvm$ setup.sh\n```\n\nThe setup script will install OS packages then run `npm install`.\n\nThe Vagrant VM serves to your host machine only on 192.168.33.10, you can access\nthe web interface on [http://192.168.33.10:1337](http://192.168.33.10:1337)\n\nMore questions?\n---------------\n\nFeel free to [post an issue][issues], but read the [wiki][wiki] first.\n\n[issues]: https://github.com/nightscout/cgm-remote-monitor/issues\n[wiki]: https://github.com/nightscout/cgm-remote-monitor/wiki\n\n### Browser testing suite provided by\n[![BrowserStack][browserstack-img]][browserstack-url]\n\n[browserstack-img]: /static/images/browserstack-logo.png\n[browserstack-url]: https://www.browserstack.com/\n\nLicense\n---------------\n\n[agpl-3]: http://www.gnu.org/licenses/agpl-3.0.txt\n\n    cgm-remote-monitor - web app to broadcast cgm readings\n    Copyright (C) 2017 Nightscout contributors.  See the COPYRIGHT file\n    at the root directory of this distribution and at\n    https://github.com/nightscout/cgm-remote-monitor/blob/master/COPYRIGHT\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
 },
 {
  "repo": "Pierian-Data/Complete-Python-3-Bootcamp",
  "language": "Jupyter Notebook",
  "readme_contents": "# Complete-Python-3-Bootcamp\nCourse Files for Complete Python 3 Bootcamp Course on Udemy\n\n\nGet it now for 95% off with the link:\nhttps://www.udemy.com/complete-python-bootcamp/?couponCode=COMPLETE_GITHUB\n\nThanks!\n"
 },
 {
  "repo": "opencv/opencv",
  "language": "C++",
  "readme_contents": "## OpenCV: Open Source Computer Vision Library\n\n### Resources\n\n* Homepage: <https://opencv.org>\n  * Courses: <https://opencv.org/courses>\n* Docs: <https://docs.opencv.org/master/>\n* Q&A forum: <http://answers.opencv.org>\n* Issue tracking: <https://github.com/opencv/opencv/issues>\n\n\n### Contributing\n\nPlease read the [contribution guidelines](https://github.com/opencv/opencv/wiki/How_to_contribute) before starting work on a pull request.\n\n#### Summary of the guidelines:\n\n* One pull request per issue;\n* Choose the right base branch;\n* Include tests and documentation;\n* Clean up \"oops\" commits before submitting;\n* Follow the [coding style guide](https://github.com/opencv/opencv/wiki/Coding_Style_Guide).\n"
 },
 {
  "repo": "EbookFoundation/free-programming-books",
  "language": null,
  "readme_contents": "This page is available as an easy-to-read website at [https://ebookfoundation.github.io/](https://ebookfoundation.github.io/free-programming-books/).\n\n# List of Free Learning Resources [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\n[View the English list](/free-programming-books.md)\n\n## Intro\nThis list was originally a clone of [stackoverflow - List of Freely Available Programming Books](http://web.archive.org/web/20130824154208/http://stackoverflow.com/a/392926) with contributions from Karan Bhangui and George Stocker.\n\nThe list was moved to GitHub by Victor Felder for collaborative updating and maintenance. It has grown to become one of the [most popular repositories on Github](https://octoverse.github.com/), with over 100,000 stars, over 4500 commits, over 950 contributors, and over 25,000 forks.\n\nThe repo is now administered by the [Free Ebook Foundation](https://ebookfoundation.org), a not-for-profit organization devoted to promoting the creation, distribution, archiving and sustainability of free ebooks. [Donations](https://ebookfoundation.org/contributions.html) to the Free Ebook Foundation are tax-deductible in the US.\n\n### How To Contribute\n\nPlease read [CONTRIBUTING](/CONTRIBUTING.md). If you're new to Github, [welcome](/HOWTO.md)!\n\n### How to Share\n+ [Share on Twitter](http://twitter.com/home?status=https://github.com/EbookFoundation/free-programming-books%0AFree%20Programming%20Books)\n+ [Share on Facebook](http://www.facebook.com/sharer/sharer.php?s=100&p[url]=https://github.com/EbookFoundation/free-programming-books&p[images][0]=&p[title]=Free%20Programming%20Books&p[summary]=)\n+ [Share on Google Plus](https://plus.google.com/share?url=https://github.com/EbookFoundation/free-programming-books)\n+ [Share on LinkedIn](http://www.linkedin.com/shareArticle?mini=true&url=https://github.com/EbookFoundation/free-programming-books&title=Free%20Programming%20Books&summary=&source=)\n+ [Share on Telegram](https://t.me/share/url?url=https://github.com/EbookFoundation/free-programming-books)\n\n\n### In Other Written Languages\n+ [Arabic](/free-programming-books-ar.md)\n+ [Azerbaijani](/free-programming-books-az.md)\n+ [Bengali](/free-programming-books-bl.md)\n+ [Bulgarian](/free-programming-books-bg.md)\n+ [Burmese](/free-programming-books-mm.md)\n+ [Chinese](/free-programming-books-zh.md)\n+ [Czech](/free-programming-books-cs.md)\n+ [Danish](/free-programming-books-dk.md)\n+ [Dutch](/free-programming-books-nl.md)\n+ [English](/free-programming-books.md)\n+ [Estonian](/free-programming-books-et.md)\n+ [Finnish](/free-programming-books-fi.md)\n+ [French](/free-programming-books-fr.md)\n+ [German](/free-programming-books-de.md)\n+ [Greek](/free-programming-books-gr.md)\n+ [Hungarian](/free-programming-books-hu.md)\n+ [Indonesian](/free-programming-books-id.md)\n+ [Italian](/free-programming-books-it.md)\n+ [Japanese](/free-programming-books-ja.md)\n+ [Korean](/free-programming-books-ko.md)\n+ [Persian/Farsi (Iran)](/free-programming-books-fa_IR.md)\n+ [Polish](/free-programming-books-pl.md)\n+ [Portuguese (Brazil)](/free-programming-books-pt_BR.md)\n+ [Portuguese (Portugal)](/free-programming-books-pt_PT.md)\n+ [Romanian (Romania)](/free-programming-books-ro.md)\n+ [Russian](/free-programming-books-ru.md)\n+ [Slovak](/free-programming-books-sk.md)\n+ [Spanish](/free-programming-books-es.md)\n+ [Swedish](/free-programming-books-se.md)\n+ [Tamil](/free-programming-books-ta.md)\n+ [Turkish](/free-programming-books-tr.md)\n+ [Ukrainian](/free-programming-books-ua.md)\n\n\n### Free Online Courses\n+ [Bulgarian](/free-courses-bg.md)\n+ [English](/free-courses-en.md)\n+ [Finnish](/free-courses-fi.md)\n+ [German](/free-courses-de.md)\n+ [Italian](/free-courses-it.md)\n+ [Korean](/free-courses-ko.md)\n+ [Polish](/free-courses-pl.md)\n+ [Portuguese (Brazil)](/free-courses-pt_BR.md)\n+ [Russian](/free-courses-ru.md)\n+ [Spanish](/free-courses-es.md)\n+ [Vietnamese](/free-courses-vi.md)\n\n\n### Interactive Programming Resources\n+ [English](/free-programming-interactive-tutorials-en.md)\n+ [Russian](/free-programming-interactive-tutorials-ru.md)\n\n\n### Problem Sets and Competitive Programming\n+ [Problem Sets](/problem-sets-competitive-programming.md)\n\n\n### Podcast - Screencast\nFree Podcasts and Screencasts:\n\n+ [Czech](/free-podcasts-screencasts-cs.md)\n+ [English](/free-podcasts-screencasts-en.md)\n+ [Portuguese (Brazil)](/free-podcasts-screencasts-pt_BR.md)\n+ [Russian](/free-podcasts-screencasts-ru.md)\n+ [Swedish](/free-podcasts-screencasts-se.md)\n\n\n### Programming Playgrounds\n+ [Free Programming Playgrounds](/free-programming-playgrounds.md)\n\n## License\nEach file included in this repository is licensed under the [CC BY License](/LICENSE).\n"
 },
 {
  "repo": "jackfrued/Python-100-Days",
  "language": "Jupyter Notebook",
  "readme_contents": "## Python - 100\u5929\u4ece\u65b0\u624b\u5230\u5927\u5e08\n\n> **\u4f5c\u8005**\uff1a\u9a86\u660a\n>\n> **\u8bf4\u660e**\uff1a\u4ece\u9879\u76ee\u4e0a\u7ebf\u5230\u83b7\u5f978w+\u661f\u6807\u4ee5\u6765\uff0c\u4e00\u76f4\u6536\u5230\u53cd\u9988\u8bf4\u57fa\u7840\u90e8\u5206\uff08\u524d15\u5929\u7684\u5185\u5bb9\uff09\u5bf9\u65b0\u624b\u6765\u8bf4\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u5efa\u8bae\u6709\u914d\u5957\u89c6\u9891\u8fdb\u884c\u8bb2\u89e3\u3002\u6700\u8fd1\u628a\u57fa\u7840\u90e8\u5206\u7684\u5185\u5bb9\u91cd\u65b0\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a[\u201cPython-Core-50-Courses\u201d](<https://github.com/jackfrued/Python-Core-50-Courses>)\u7684\u9879\u76ee\uff0c**\u7528\u66f4\u4e3a\u7b80\u5355\u901a\u4fd7\u7684\u65b9\u5f0f\u91cd\u5199\u4e86\u8fd9\u90e8\u5206\u5185\u5bb9\u5e76\u9644\u5e26\u4e86\u89c6\u9891\u8bb2\u89e3**\uff0c\u521d\u5b66\u8005\u53ef\u4ee5\u5173\u6ce8\u4e0b\u8fd9\u4e2a\u65b0\u9879\u76ee\u3002\u56fd\u5185\u7528\u6237\u5982\u679c\u8bbf\u95eeGitHub\u6bd4\u8f83\u6162\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5173\u6ce8\u6211\u7684\u77e5\u4e4e\u53f7[Python-Jack](https://www.zhihu.com/people/jackfrued)\u4e0a\u7684[\u201c\u4ece\u96f6\u5f00\u59cb\u5b66Python\u201d](<https://zhuanlan.zhihu.com/c_1216656665569013760>)\u4e13\u680f\uff0c\u4e13\u680f\u4f1a\u6301\u7eed\u66f4\u65b0\uff0c\u8fd8\u6709\u5927\u5bb6\u6bd4\u8f83\u671f\u5f85\u7684\u201c\u6570\u636e\u5206\u6790\u201d\u7684\u5185\u5bb9\u4e5f\u5373\u5c06\u4e0a\u7ebf\uff0c**\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8\u6211\u5728\u77e5\u4e4e\u7684\u4e13\u680f\u3001\u6587\u7ae0\u548c\u56de\u7b54**\u3002\n>\n> \u521b\u4f5c\u4e0d\u6613\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u6253\u8d4f\u652f\u6301\uff0c\u8fd9\u4e9b\u94b1\u57fa\u672c\u4e0d\u4f1a\u7528\u4e8e\u8d2d\u4e70\u5496\u5561\uff0c\u800c\u662f\u901a\u8fc7\u817e\u8baf\u516c\u76ca\u3001\u7f8e\u56e2\u516c\u76ca\u3001\u6c34\u6ef4\u7b79\u7b49\u5e73\u53f0\u6350\u8d60\u7ed9\u9700\u8981\u5e2e\u52a9\u7684\u4eba\uff08[\u70b9\u51fb](./\u66f4\u65b0\u65e5\u5fd7.md)\u4e86\u89e3\u6350\u8d60\u60c5\u51b5\uff09\u3002\u9700\u8981\u52a0\u5165QQ\u4ea4\u6d41\u7fa4\u7684\u53ef\u4ee5\u626b\u63cf\u4e0b\u9762\u7684\u4e8c\u7ef4\u7801\uff0c\u4ea4\u6d41\u7fa4\u4f1a\u4e3a\u5927\u5bb6\u63d0\u4f9b**\u5b66\u4e60\u8d44\u6e90**\u548c**\u95ee\u9898\u89e3\u7b54**\uff0c\u8fd8\u4f1a\u6301\u7eed\u4e3a\u5927\u5bb6\u5e26\u6765**\u514d\u8d39\u7684\u7ebf\u4e0aPython\u4f53\u9a8c\u8bfe\u548c\u884c\u4e1a\u516c\u5f00\u8bfe**\uff0c\u656c\u8bf7\u5173\u6ce8\u3002\n\n![](./res/python-qq-group.png)\n\n### Python\u5e94\u7528\u9886\u57df\u548c\u5c31\u4e1a\u5f62\u52bf\u5206\u6790\n\n\u7b80\u5355\u7684\u8bf4\uff0cPython\u662f\u4e00\u4e2a\u201c\u4f18\u96c5\u201d\u3001\u201c\u660e\u786e\u201d\u3001\u201c\u7b80\u5355\u201d\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n\n - \u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u975e\u4e13\u4e1a\u4eba\u58eb\u4e5f\u80fd\u4e0a\u624b\n - \u5f00\u6e90\u7cfb\u7edf\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u751f\u6001\u5708\n - \u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5b8c\u7f8e\u7684\u5e73\u53f0\u53ef\u79fb\u690d\u6027\n - \u652f\u6301\u9762\u5411\u5bf9\u8c61\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\n - \u80fd\u591f\u901a\u8fc7\u8c03\u7528C/C++\u4ee3\u7801\u6269\u5c55\u529f\u80fd\n - \u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\n\n\u76ee\u524d\u51e0\u4e2a\u6bd4\u8f83\u6d41\u884c\u7684\u9886\u57df\uff0cPython\u90fd\u6709\u7528\u6b66\u4e4b\u5730\u3002\n\n - \u4e91\u57fa\u7840\u8bbe\u65bd - Python / Java / Go\n - DevOps - Python / Shell / Ruby / Go\n - \u7f51\u7edc\u722c\u866b - Python / PHP / C++\n - \u6570\u636e\u5206\u6790\u6316\u6398 - Python / R / Scala / Matlab\n - \u673a\u5668\u5b66\u4e60 - Python / R / Java / Lisp\n\n\u4f5c\u4e3a\u4e00\u540dPython\u5f00\u53d1\u8005\uff0c\u4e3b\u8981\u7684\u5c31\u4e1a\u9886\u57df\u5305\u62ec\uff1a\n\n- Python\u670d\u52a1\u5668\u540e\u53f0\u5f00\u53d1 / \u6e38\u620f\u670d\u52a1\u5668\u5f00\u53d1 / \u6570\u636e\u63a5\u53e3\u5f00\u53d1\u5de5\u7a0b\u5e08\n- Python\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u7a0b\u5e08\n- Python\u6570\u636e\u5206\u6790 / \u6570\u636e\u53ef\u89c6\u5316 / \u5927\u6570\u636e\u5de5\u7a0b\u5e08\n- Python\u722c\u866b\u5de5\u7a0b\u5e08\n- Python\u804a\u5929\u673a\u5668\u4eba\u5f00\u53d1 / \u56fe\u50cf\u8bc6\u522b\u548c\u89c6\u89c9\u7b97\u6cd5 / \u6df1\u5ea6\u5b66\u4e60\u5de5\u7a0b\u5e08\n\n\u4e0b\u56fe\u663e\u793a\u4e86\u4e3b\u8981\u57ce\u5e02Python\u62db\u8058\u9700\u6c42\u91cf\u53ca\u85aa\u8d44\u5f85\u9047\u6392\u884c\u699c\uff08\u622a\u6b62\u52302018\u5e745\u6708\uff09\u3002\n\n![Python\u62db\u8058\u9700\u6c42\u53ca\u85aa\u8d44\u5f85\u9047Top 10](./res/python-top-10.png)\n\n![](./res/python-bj-salary.png)\n\n![](./res/python-salary-chengdu.png)\n\n\u7ed9\u521d\u5b66\u8005\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a\n\n- Make English as your working language. \uff08\u8ba9\u82f1\u8bed\u6210\u4e3a\u4f60\u7684\u5de5\u4f5c\u8bed\u8a00\uff09\n- Practice makes perfect. \uff08\u719f\u80fd\u751f\u5de7\uff09\n- All experience comes from mistakes. \uff08\u6240\u6709\u7684\u7ecf\u9a8c\u90fd\u6e90\u4e8e\u4f60\u72af\u8fc7\u7684\u9519\u8bef\uff09\n- Don't be one of the leeches. \uff08\u4e0d\u8981\u5f53\u4f38\u624b\u515a\uff09\n- Either outstanding or out. \uff08\u8981\u4e48\u51fa\u4f17\uff0c\u8981\u4e48\u51fa\u5c40\uff09\n\n### Day01~15 - [Python\u8bed\u8a00\u57fa\u7840](./Day01-15)\n\n#### Day01 - [\u521d\u8bc6Python](./Day01-15/01.\u521d\u8bc6Python.md)\n\n- Python\u7b80\u4ecb - Python\u7684\u5386\u53f2 / Python\u7684\u4f18\u7f3a\u70b9 / Python\u7684\u5e94\u7528\u9886\u57df\n- \u642d\u5efa\u7f16\u7a0b\u73af\u5883 - Windows\u73af\u5883 / Linux\u73af\u5883 / MacOS\u73af\u5883\n- \u4ece\u7ec8\u7aef\u8fd0\u884cPython\u7a0b\u5e8f - Hello, world / print\u51fd\u6570 / \u8fd0\u884c\u7a0b\u5e8f\n- \u4f7f\u7528IDLE - \u4ea4\u4e92\u5f0f\u73af\u5883(REPL) / \u7f16\u5199\u591a\u884c\u4ee3\u7801 / \u8fd0\u884c\u7a0b\u5e8f / \u9000\u51faIDLE\n- \u6ce8\u91ca - \u6ce8\u91ca\u7684\u4f5c\u7528 / \u5355\u884c\u6ce8\u91ca / \u591a\u884c\u6ce8\u91ca\n\n#### Day02 - [\u8bed\u8a00\u5143\u7d20](./Day01-15/02.\u8bed\u8a00\u5143\u7d20.md)\n\n- \u7a0b\u5e8f\u548c\u8fdb\u5236 - \u6307\u4ee4\u548c\u7a0b\u5e8f / \u51af\u8bfa\u4f9d\u66fc\u673a / \u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236 / \u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\n- \u53d8\u91cf\u548c\u7c7b\u578b - \u53d8\u91cf\u7684\u547d\u540d / \u53d8\u91cf\u7684\u4f7f\u7528 / input\u51fd\u6570 / \u68c0\u67e5\u53d8\u91cf\u7c7b\u578b / \u7c7b\u578b\u8f6c\u6362\n- \u6570\u5b57\u548c\u5b57\u7b26\u4e32 - \u6574\u6570 / \u6d6e\u70b9\u6570 / \u590d\u6570 / \u5b57\u7b26\u4e32 / \u5b57\u7b26\u4e32\u57fa\u672c\u64cd\u4f5c / \u5b57\u7b26\u7f16\u7801\n- \u8fd0\u7b97\u7b26 - \u6570\u5b66\u8fd0\u7b97\u7b26 / \u8d4b\u503c\u8fd0\u7b97\u7b26 / \u6bd4\u8f83\u8fd0\u7b97\u7b26 / \u903b\u8f91\u8fd0\u7b97\u7b26 / \u8eab\u4efd\u8fd0\u7b97\u7b26 / \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\n- \u5e94\u7528\u6848\u4f8b - \u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u6210\u6444\u6c0f\u6e29\u5ea6 / \u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef / \u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u5426\u662f\u95f0\u5e74\n\n#### Day03 - [\u5206\u652f\u7ed3\u6784](./Day01-15/03.\u5206\u652f\u7ed3\u6784.md)\n\n- \u5206\u652f\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\n- if\u8bed\u53e5 - \u7b80\u5355\u7684if / if-else\u7ed3\u6784 / if-elif-else\u7ed3\u6784 / \u5d4c\u5957\u7684if\n- \u5e94\u7528\u6848\u4f8b - \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 / \u82f1\u5236\u5355\u4f4d\u4e0e\u516c\u5236\u5355\u4f4d\u4e92\u6362 / \u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48 / \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236 / \u5206\u6bb5\u51fd\u6570\u6c42\u503c / \u8f93\u5165\u4e09\u6761\u8fb9\u7684\u957f\u5ea6\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\n\n#### Day04 - [\u5faa\u73af\u7ed3\u6784](./Day01-15/04.\u5faa\u73af\u7ed3\u6784.md)\n\n- \u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\n- while\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / break\u8bed\u53e5 / continue\u8bed\u53e5\n- for\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / range\u7c7b\u578b / \u5faa\u73af\u4e2d\u7684\u5206\u652f\u7ed3\u6784 / \u5d4c\u5957\u7684\u5faa\u73af / \u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f \n- \u5e94\u7528\u6848\u4f8b - 1~100\u6c42\u548c / \u5224\u65ad\u7d20\u6570 / \u731c\u6570\u5b57\u6e38\u620f / \u6253\u5370\u4e5d\u4e5d\u8868 / \u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848 / \u7334\u5b50\u5403\u6843 / \u767e\u94b1\u767e\u9e21\n\n#### Day05 - [\u6784\u9020\u7a0b\u5e8f\u903b\u8f91](./Day01-15/05.\u6784\u9020\u7a0b\u5e8f\u903b\u8f91.md)\n\n- \u7ecf\u5178\u6848\u4f8b\uff1a\u6c34\u4ed9\u82b1\u6570 / \u767e\u94b1\u767e\u9e21 / Craps\u8d4c\u535a\u6e38\u620f\n- \u7ec3\u4e60\u9898\u76ee\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217 / \u5b8c\u7f8e\u6570 / \u7d20\u6570\n\n#### Day06 - [\u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528](./Day01-15/06.\u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528.md)\n\n- \u51fd\u6570\u7684\u4f5c\u7528 - \u4ee3\u7801\u7684\u574f\u5473\u9053 / \u7528\u51fd\u6570\u5c01\u88c5\u529f\u80fd\u6a21\u5757\n- \u5b9a\u4e49\u51fd\u6570 - def\u8bed\u53e5 / \u51fd\u6570\u540d / \u53c2\u6570\u5217\u8868 / return\u8bed\u53e5 / \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\n- \u8c03\u7528\u51fd\u6570 - Python\u5185\u7f6e\u51fd\u6570 /  \u5bfc\u5165\u6a21\u5757\u548c\u51fd\u6570\n- \u51fd\u6570\u7684\u53c2\u6570 - \u9ed8\u8ba4\u53c2\u6570 / \u53ef\u53d8\u53c2\u6570 / \u5173\u952e\u5b57\u53c2\u6570 / \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\n- \u51fd\u6570\u7684\u8fd4\u56de\u503c - \u6ca1\u6709\u8fd4\u56de\u503c  / \u8fd4\u56de\u5355\u4e2a\u503c / \u8fd4\u56de\u591a\u4e2a\u503c\n- \u4f5c\u7528\u57df\u95ee\u9898 - \u5c40\u90e8\u4f5c\u7528\u57df / \u5d4c\u5957\u4f5c\u7528\u57df / \u5168\u5c40\u4f5c\u7528\u57df / \u5185\u7f6e\u4f5c\u7528\u57df / \u548c\u4f5c\u7528\u57df\u76f8\u5173\u7684\u5173\u952e\u5b57\n- \u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570 - \u6a21\u5757\u7684\u6982\u5ff5 / \u7528\u81ea\u5b9a\u4e49\u6a21\u5757\u7ba1\u7406\u51fd\u6570 / \u547d\u540d\u51b2\u7a81\u7684\u65f6\u5019\u4f1a\u600e\u6837\uff08\u540c\u4e00\u4e2a\u6a21\u5757\u548c\u4e0d\u540c\u7684\u6a21\u5757\uff09\n\n#### Day07 - [\u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784](./Day01-15/07.\u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784.md)\n\n- \u5b57\u7b26\u4e32\u7684\u4f7f\u7528 - \u8ba1\u7b97\u957f\u5ea6 / \u4e0b\u6807\u8fd0\u7b97 / \u5207\u7247 / \u5e38\u7528\u65b9\u6cd5\n- \u5217\u8868\u57fa\u672c\u7528\u6cd5 - \u5b9a\u4e49\u5217\u8868 / \u7528\u4e0b\u8868\u8bbf\u95ee\u5143\u7d20 / \u4e0b\u6807\u8d8a\u754c / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u4fee\u6539\u5143\u7d20 / \u5207\u7247 / \u5faa\u73af\u904d\u5386\n- \u5217\u8868\u5e38\u7528\u64cd\u4f5c - \u8fde\u63a5 / \u590d\u5236(\u590d\u5236\u5143\u7d20\u548c\u590d\u5236\u6570\u7ec4) / \u957f\u5ea6 / \u6392\u5e8f / \u5012\u8f6c / \u67e5\u627e\n- \u751f\u6210\u5217\u8868 - \u4f7f\u7528range\u521b\u5efa\u6570\u5b57\u5217\u8868 / \u751f\u6210\u8868\u8fbe\u5f0f / \u751f\u6210\u5668\n- \u5143\u7ec4\u7684\u4f7f\u7528 - \u5b9a\u4e49\u5143\u7ec4 / \u4f7f\u7528\u5143\u7ec4\u4e2d\u7684\u503c / \u4fee\u6539\u5143\u7ec4\u53d8\u91cf / \u5143\u7ec4\u548c\u5217\u8868\u8f6c\u6362\n- \u96c6\u5408\u57fa\u672c\u7528\u6cd5 - \u96c6\u5408\u548c\u5217\u8868\u7684\u533a\u522b /  \u521b\u5efa\u96c6\u5408 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 /  \u6e05\u7a7a\n- \u96c6\u5408\u5e38\u7528\u64cd\u4f5c - \u4ea4\u96c6 / \u5e76\u96c6 / \u5dee\u96c6 / \u5bf9\u79f0\u5dee / \u5b50\u96c6 / \u8d85\u96c6\n- \u5b57\u5178\u7684\u57fa\u672c\u7528\u6cd5 - \u5b57\u5178\u7684\u7279\u70b9 / \u521b\u5efa\u5b57\u5178 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u53d6\u503c / \u6e05\u7a7a\n- \u5b57\u5178\u5e38\u7528\u64cd\u4f5c - keys()\u65b9\u6cd5 / values()\u65b9\u6cd5 / items()\u65b9\u6cd5 / setdefault()\u65b9\u6cd5\n- \u57fa\u7840\u7ec3\u4e60 - \u8dd1\u9a6c\u706f\u6548\u679c / \u5217\u8868\u627e\u6700\u5927\u5143\u7d20 / \u7edf\u8ba1\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206 / Fibonacci\u6570\u5217 / \u6768\u8f89\u4e09\u89d2\n- \u7efc\u5408\u6848\u4f8b - \u53cc\u8272\u7403\u9009\u53f7 / \u4e95\u5b57\u68cb\n\n#### Day08 - [\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840](./Day01-15/08.\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840.md)\n\n- \u7c7b\u548c\u5bf9\u8c61 - \u4ec0\u4e48\u662f\u7c7b / \u4ec0\u4e48\u662f\u5bf9\u8c61 / \u9762\u5411\u5bf9\u8c61\u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n- \u5b9a\u4e49\u7c7b - \u57fa\u672c\u7ed3\u6784 / \u5c5e\u6027\u548c\u65b9\u6cd5 / \u6784\u9020\u5668 / \u6790\u6784\u5668 / \\_\\_str\\_\\_\u65b9\u6cd5\n- \u4f7f\u7528\u5bf9\u8c61 - \u521b\u5efa\u5bf9\u8c61 / \u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\n- \u9762\u5411\u5bf9\u8c61\u7684\u56db\u5927\u652f\u67f1 - \u62bd\u8c61 / \u5c01\u88c5 / \u7ee7\u627f / \u591a\u6001\n- \u57fa\u7840\u7ec3\u4e60 - \u5b9a\u4e49\u5b66\u751f\u7c7b / \u5b9a\u4e49\u65f6\u949f\u7c7b / \u5b9a\u4e49\u56fe\u5f62\u7c7b / \u5b9a\u4e49\u6c7d\u8f66\u7c7b\n\n#### Day09 - [\u9762\u5411\u5bf9\u8c61\u8fdb\u9636](./Day01-15/09.\u9762\u5411\u5bf9\u8c61\u8fdb\u9636.md)\n\n- \u5c5e\u6027 - \u7c7b\u5c5e\u6027 / \u5b9e\u4f8b\u5c5e\u6027 / \u5c5e\u6027\u8bbf\u95ee\u5668 / \u5c5e\u6027\u4fee\u6539\u5668 / \u5c5e\u6027\u5220\u9664\u5668 / \u4f7f\u7528\\_\\_slots\\_\\_\n- \u7c7b\u4e2d\u7684\u65b9\u6cd5 - \u5b9e\u4f8b\u65b9\u6cd5 / \u7c7b\u65b9\u6cd5 / \u9759\u6001\u65b9\u6cd5\n- \u8fd0\u7b97\u7b26\u91cd\u8f7d - \\_\\_add\\_\\_ / \\_\\_sub\\_\\_ / \\_\\_or\\_\\_ /\\_\\_getitem\\_\\_ / \\_\\_setitem\\_\\_ / \\_\\_len\\_\\_ / \\_\\_repr\\_\\_ / \\_\\_gt\\_\\_ / \\_\\_lt\\_\\_ / \\_\\_le\\_\\_ / \\_\\_ge\\_\\_ / \\_\\_eq\\_\\_ / \\_\\_ne\\_\\_ / \\_\\_contains\\_\\_ \n- \u7c7b(\u7684\u5bf9\u8c61)\u4e4b\u95f4\u7684\u5173\u7cfb - \u5173\u8054 / \u7ee7\u627f / \u4f9d\u8d56\n- \u7ee7\u627f\u548c\u591a\u6001 - \u4ec0\u4e48\u662f\u7ee7\u627f / \u7ee7\u627f\u7684\u8bed\u6cd5 / \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 / \u65b9\u6cd5\u91cd\u5199 / \u7c7b\u578b\u5224\u5b9a / \u591a\u91cd\u7ee7\u627f / \u83f1\u5f62\u7ee7\u627f(\u94bb\u77f3\u7ee7\u627f)\u548cC3\u7b97\u6cd5\n- \u7efc\u5408\u6848\u4f8b - \u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf / \u56fe\u4e66\u81ea\u52a8\u6298\u6263\u7cfb\u7edf / \u81ea\u5b9a\u4e49\u5206\u6570\u7c7b\n\n#### Day10 - [\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1](./Day01-15/10.\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1.md)\n\n- \u4f7f\u7528tkinter\u5f00\u53d1GUI\u7a0b\u5e8f\n- \u4f7f\u7528pygame\u4e09\u65b9\u5e93\u5f00\u53d1\u6e38\u620f\u5e94\u7528\n- \u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u6e38\u620f\n\n#### Day11 - [\u6587\u4ef6\u548c\u5f02\u5e38](./Day01-15/11.\u6587\u4ef6\u548c\u5f02\u5e38.md)\n\n- \u8bfb\u6587\u4ef6 - \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6 / \u9010\u884c\u8bfb\u53d6 / \u6587\u4ef6\u8def\u5f84\n- \u5199\u6587\u4ef6 - \u8986\u76d6\u5199\u5165 / \u8ffd\u52a0\u5199\u5165 / \u6587\u672c\u6587\u4ef6 / \u4e8c\u8fdb\u5236\u6587\u4ef6\n- \u5f02\u5e38\u5904\u7406 - \u5f02\u5e38\u673a\u5236\u7684\u91cd\u8981\u6027 / try-except\u4ee3\u7801\u5757 / else\u4ee3\u7801\u5757 / finally\u4ee3\u7801\u5757 / \u5185\u7f6e\u5f02\u5e38\u7c7b\u578b / \u5f02\u5e38\u6808 / raise\u8bed\u53e5\n- \u6570\u636e\u6301\u4e45\u5316 - CSV\u6587\u4ef6\u6982\u8ff0 / csv\u6a21\u5757\u7684\u5e94\u7528 / JSON\u6570\u636e\u683c\u5f0f / json\u6a21\u5757\u7684\u5e94\u7528\n\n#### Day12 - [\u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f](./Day01-15/12.\u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f.md)\n\n- \u5b57\u7b26\u4e32\u9ad8\u7ea7\u64cd\u4f5c - \u8f6c\u4e49\u5b57\u7b26 / \u539f\u59cb\u5b57\u7b26\u4e32 / \u591a\u884c\u5b57\u7b26\u4e32 / in\u548c not in\u8fd0\u7b97\u7b26 / is\u5f00\u5934\u7684\u65b9\u6cd5 / join\u548csplit\u65b9\u6cd5 / strip\u76f8\u5173\u65b9\u6cd5 / pyperclip\u6a21\u5757 / \u4e0d\u53d8\u5b57\u7b26\u4e32\u548c\u53ef\u53d8\u5b57\u7b26\u4e32 / StringIO\u7684\u4f7f\u7528\n- \u6b63\u5219\u8868\u8fbe\u5f0f\u5165\u95e8 - \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528 / \u5143\u5b57\u7b26 / \u8f6c\u4e49 / \u91cf\u8bcd / \u5206\u7ec4 / \u96f6\u5bbd\u65ad\u8a00 /\u8d2a\u5a6a\u5339\u914d\u4e0e\u60f0\u6027\u5339\u914d\u61d2\u60f0 / \u4f7f\u7528re\u6a21\u5757\u5b9e\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\uff08\u5339\u914d\u3001\u641c\u7d22\u3001\u66ff\u6362\u3001\u6355\u83b7\uff09\n- \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f - re\u6a21\u5757 / compile\u51fd\u6570 / group\u548cgroups\u65b9\u6cd5 / match\u65b9\u6cd5 / search\u65b9\u6cd5 / findall\u548cfinditer\u65b9\u6cd5 / sub\u548csubn\u65b9\u6cd5 / split\u65b9\u6cd5\n- \u5e94\u7528\u6848\u4f8b - \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9a8c\u8bc1\u8f93\u5165\u7684\u5b57\u7b26\u4e32\n\n#### Day13 - [\u8fdb\u7a0b\u548c\u7ebf\u7a0b](./Day01-15/13.\u8fdb\u7a0b\u548c\u7ebf\u7a0b.md)\n\n- \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u6982\u5ff5 - \u4ec0\u4e48\u662f\u8fdb\u7a0b / \u4ec0\u4e48\u662f\u7ebf\u7a0b / \u591a\u7ebf\u7a0b\u7684\u5e94\u7528\u573a\u666f\n- \u4f7f\u7528\u8fdb\u7a0b - fork\u51fd\u6570 / multiprocessing\u6a21\u5757 / \u8fdb\u7a0b\u6c60 / \u8fdb\u7a0b\u95f4\u901a\u4fe1\n- \u4f7f\u7528\u7ebf\u7a0b - thread\u6a21\u5757 / threading\u6a21\u5757 / Thread\u7c7b / Lock\u7c7b / Condition\u7c7b / \u7ebf\u7a0b\u6c60\n\n#### Day14 - [\u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\u548c\u7f51\u7edc\u5e94\u7528\u5f00\u53d1](./Day01-15/14.\u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\u548c\u7f51\u7edc\u5e94\u7528\u5f00\u53d1.md)\n\n- \u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840 - \u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2 / \u201cTCP-IP\u201d\u6a21\u578b / IP\u5730\u5740 / \u7aef\u53e3 / \u534f\u8bae / \u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n- \u7f51\u7edc\u5e94\u7528\u6a21\u5f0f - \u201c\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u201d\u6a21\u5f0f / \u201c\u6d4f\u89c8\u5668-\u670d\u52a1\u5668\u201d\u6a21\u5f0f\n- \u57fa\u4e8eHTTP\u534f\u8bae\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90 - \u7f51\u7edcAPI\u6982\u8ff0 / \u8bbf\u95eeURL / requests\u6a21\u5757 / \u89e3\u6790JSON\u683c\u5f0f\u6570\u636e\n- Python\u7f51\u7edc\u7f16\u7a0b - \u5957\u63a5\u5b57\u7684\u6982\u5ff5 / socket\u6a21\u5757 /  socket\u51fd\u6570 / \u521b\u5efaTCP\u670d\u52a1\u5668 / \u521b\u5efaTCP\u5ba2\u6237\u7aef / \u521b\u5efaUDP\u670d\u52a1\u5668 / \u521b\u5efaUDP\u5ba2\u6237\u7aef / SocketServer\u6a21\u5757\n- \u7535\u5b50\u90ae\u4ef6 - SMTP\u534f\u8bae / POP3\u534f\u8bae / IMAP\u534f\u8bae / smtplib\u6a21\u5757 / poplib\u6a21\u5757 / imaplib\u6a21\u5757\n- \u77ed\u4fe1\u670d\u52a1 - \u8c03\u7528\u77ed\u4fe1\u670d\u52a1\u7f51\u5173\n\n#### Day15 - [\u56fe\u50cf\u548c\u6587\u6863\u5904\u7406](./Day01-15/15.\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u5904\u7406.md)\n\n- \u7528Pillow\u5904\u7406\u56fe\u7247 - \u56fe\u7247\u8bfb\u5199 / \u56fe\u7247\u5408\u6210 / \u51e0\u4f55\u53d8\u6362 / \u8272\u5f69\u8f6c\u6362 / \u6ee4\u955c\u6548\u679c\n- \u8bfb\u5199Word\u6587\u6863 - \u6587\u672c\u5185\u5bb9\u7684\u5904\u7406 / \u6bb5\u843d / \u9875\u7709\u548c\u9875\u811a / \u6837\u5f0f\u7684\u5904\u7406\n- \u8bfb\u5199Excel\u6587\u4ef6 - xlrd\u6a21\u5757 / xlwt\u6a21\u5757\n- \u751f\u6210PDF\u6587\u4ef6 - pypdf2\u6a21\u5757 / reportlab\u6a21\u5757\n\n### Day16~Day20 - [Python\u8bed\u8a00\u8fdb\u9636 ](./Day16-20/16-20.Python\u8bed\u8a00\u8fdb\u9636.md)\n\n- \u5e38\u7528\u6570\u636e\u7ed3\u6784\n- \u51fd\u6570\u7684\u9ad8\u7ea7\u7528\u6cd5 - \u201c\u4e00\u7b49\u516c\u6c11\u201d / \u9ad8\u9636\u51fd\u6570 / Lambda\u51fd\u6570 / \u4f5c\u7528\u57df\u548c\u95ed\u5305 / \u88c5\u9970\u5668\n- \u9762\u5411\u5bf9\u8c61\u9ad8\u7ea7\u77e5\u8bc6 - \u201c\u4e09\u5927\u652f\u67f1\u201d / \u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb / \u5783\u573e\u56de\u6536 / \u9b54\u672f\u5c5e\u6027\u548c\u65b9\u6cd5 / \u6df7\u5165 / \u5143\u7c7b / \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219 / GoF\u8bbe\u8ba1\u6a21\u5f0f\n- \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 - \u76f8\u5173\u9b54\u672f\u65b9\u6cd5 / \u521b\u5efa\u751f\u6210\u5668\u7684\u4e24\u79cd\u65b9\u5f0f / \n- \u5e76\u53d1\u548c\u5f02\u6b65\u7f16\u7a0b - \u591a\u7ebf\u7a0b / \u591a\u8fdb\u7a0b / \u5f02\u6b65IO / async\u548cawait\n\n### Day21~30 - [Web\u524d\u7aef\u5165\u95e8](./Day21-30/21-30.Web\u524d\u7aef\u6982\u8ff0.md)\n\n- \u7528HTML\u6807\u7b7e\u627f\u8f7d\u9875\u9762\u5185\u5bb9\n- \u7528CSS\u6e32\u67d3\u9875\u9762\n- \u7528JavaScript\u5904\u7406\u4ea4\u4e92\u5f0f\u884c\u4e3a\n- jQuery\u5165\u95e8\u548c\u63d0\u9ad8\n- Vue.js\u5165\u95e8\n- Element\u7684\u4f7f\u7528\n- Bootstrap\u7684\u4f7f\u7528\n\n### Day31~35 - [\u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf](./Day31-35/31-35.\u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf.md)\n\n- \u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u53f2\u548cLinux\u6982\u8ff0\n- Linux\u57fa\u7840\u547d\u4ee4\n- Linux\u4e2d\u7684\u5b9e\u7528\u7a0b\u5e8f\n- Linux\u7684\u6587\u4ef6\u7cfb\u7edf\n- Vim\u7f16\u8f91\u5668\u7684\u5e94\u7528\n- \u73af\u5883\u53d8\u91cf\u548cShell\u7f16\u7a0b\n- \u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u670d\u52a1\u7684\u914d\u7f6e\n- \u7f51\u7edc\u8bbf\u95ee\u548c\u7ba1\u7406\n- \u5176\u4ed6\u76f8\u5173\u5185\u5bb9\n\n### Day36~40 - [\u6570\u636e\u5e93\u57fa\u7840\u548c\u8fdb\u9636](./Day36-40)\n\n- [\u5173\u7cfb\u578b\u6570\u636e\u5e93MySQL](./Day36-40/36-38.\u5173\u7cfb\u578b\u6570\u636e\u5e93MySQL.md)\n  - \u5173\u7cfb\u578b\u6570\u636e\u5e93\u6982\u8ff0\n  - MySQL\u7684\u5b89\u88c5\u548c\u4f7f\u7528\n  - SQL\u7684\u4f7f\u7528\n    - DDL - \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 - create / drop / alter\n    - DML - \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 - insert / delete / update / select\n    - DCL - \u6570\u636e\u63a7\u5236\u8bed\u8a00 - grant / revoke\n  - \u76f8\u5173\u77e5\u8bc6\n    - \u8303\u5f0f\u7406\u8bba - \u8bbe\u8ba1\u4e8c\u7ef4\u8868\u7684\u6307\u5bfc\u601d\u60f3\n    - \u6570\u636e\u5b8c\u6574\u6027\n    - \u6570\u636e\u4e00\u81f4\u6027\n  - \u5728Python\u4e2d\u64cd\u4f5cMySQL\n- [NoSQL\u5165\u95e8](./Day36-40/39-40.NoSQL\u5165\u95e8.md)\n  - NoSQL\u6982\u8ff0\n  - Redis\u6982\u8ff0\n  - Mongo\u6982\u8ff0\n\n### Day41~55 - [\u5b9e\u6218Django](./Day41-55)\n\n#### Day41 - [\u5feb\u901f\u4e0a\u624b](./Day41-55/41.\u5feb\u901f\u4e0a\u624b.md)\n\n- Web\u5e94\u7528\u5de5\u4f5c\u539f\u7406\u548cHTTP\u534f\u8bae\n- Django\u6846\u67b6\u6982\u8ff0\n- 5\u5206\u949f\u5feb\u901f\u4e0a\u624b\n- \u4f7f\u7528\u89c6\u56fe\u6a21\u677f\n\n#### Day42 - [\u6df1\u5165\u6a21\u578b](./Day41-55/42.\u6df1\u5165\u6a21\u578b.md)\n\n- \u5173\u7cfb\u578b\u6570\u636e\u5e93\u914d\u7f6e\n- \u7ba1\u7406\u540e\u53f0\u7684\u4f7f\u7528\n- \u4f7f\u7528ORM\u5b8c\u6210\u5bf9\u6a21\u578b\u7684CRUD\u64cd\u4f5c\n- Django\u6a21\u578b\u6700\u4f73\u5b9e\u8df5\n- \u6a21\u578b\u5b9a\u4e49\u53c2\u8003\n\n#### Day43 - [\u9759\u6001\u8d44\u6e90\u548cAjax\u8bf7\u6c42](./Day41-55/43.\u9759\u6001\u8d44\u6e90\u548cAjax\u8bf7\u6c42.md)\n\n- \u52a0\u8f7d\u9759\u6001\u8d44\u6e90\n- \u7528Ajax\u8bf7\u6c42\u83b7\u53d6\u6570\u636e\n\n#### Day44 - [\u8868\u5355\u7684\u5e94\u7528](./Day41-55/44.\u8868\u5355\u7684\u5e94\u7528.md)\n\n- \u8868\u5355\u548c\u8868\u5355\u63a7\u4ef6\n- \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u548cCSRF\u4ee4\u724c\n- Form\u548cModelForm\n- \u8868\u5355\u9a8c\u8bc1\n\n#### Day45 - [Cookie\u548cSession](./Day41-55/45.Cookie\u548cSession.md)\n\n- \u5b9e\u73b0\u7528\u6237\u8ddf\u8e2a\n- cookie\u548csession\u7684\u5173\u7cfb\n- Django\u6846\u67b6\u5bf9session\u7684\u652f\u6301\n- \u89c6\u56fe\u51fd\u6570\u4e2d\u7684cookie\u8bfb\u5199\u64cd\u4f5c\n\n#### Day46 - [\u62a5\u8868\u548c\u65e5\u5fd7](./Day41-55/46.\u62a5\u8868\u548c\u65e5\u5fd7.md)\n\n- \u901a\u8fc7HttpResponse\u4fee\u6539\u54cd\u5e94\u5934\n- \u4f7f\u7528StreamingHttpResponse\u5904\u7406\u5927\u6587\u4ef6\n- \u4f7f\u7528xlwt\u751f\u6210Excel\u62a5\u8868\n- \u4f7f\u7528reportlab\u751f\u6210PDF\u62a5\u8868\n- \u4f7f\u7528ECharts\u751f\u6210\u524d\u7aef\u56fe\u8868\n- \u914d\u7f6e\u65e5\u5fd7\u548cDjango-Debug-Toolbar\n\n#### Day47 - [\u4e2d\u95f4\u4ef6\u7684\u5e94\u7528](./Day41-55/47.\u4e2d\u95f4\u4ef6\u7684\u5e94\u7528.md)\n\n- \u4ec0\u4e48\u662f\u4e2d\u95f4\u4ef6\n- Django\u6846\u67b6\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6\n- \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u53ca\u5176\u5e94\u7528\u573a\u666f\n\n#### Day48 - [\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u5165\u95e8](./Day41-55/48.\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u5165\u95e8.md)\n\n- \u8fd4\u56deJSON\u683c\u5f0f\u7684\u6570\u636e\n- \u7528Vue.js\u6e32\u67d3\u9875\u9762\n\n#### Day49 - [RESTful\u67b6\u6784\u548cDRF\u5165\u95e8](./Day41-55/49.RESTful\u67b6\u6784\u548cDRF\u5165\u95e8.md)\n\n#### Day50 - [RESTful\u67b6\u6784\u548cDRF\u8fdb\u9636](./Day41-55/50.RESTful\u67b6\u6784\u548cDRF\u8fdb\u9636.md)\n\n#### Day51 - [\u4f7f\u7528\u7f13\u5b58](./Day41-55/51.\u4f7f\u7528\u7f13\u5b58.md)\n\n- \u7f51\u7ad9\u4f18\u5316\u7b2c\u4e00\u5b9a\u5f8b\n\n- \u5728Django\u9879\u76ee\u4e2d\u4f7f\u7528Redis\u63d0\u4f9b\u7f13\u5b58\u670d\u52a1\n- \u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u8bfb\u5199\u7f13\u5b58\n- \u4f7f\u7528\u88c5\u9970\u5668\u5b9e\u73b0\u9875\u9762\u7f13\u5b58\n- \u4e3a\u6570\u636e\u63a5\u53e3\u63d0\u4f9b\u7f13\u5b58\u670d\u52a1\n\n#### Day52 - [\u6587\u4ef6\u4e0a\u4f20\u548c\u5bcc\u6587\u672c\u7f16\u8f91](./Day41-55/52.\u6587\u4ef6\u4e0a\u4f20\u548c\u5bcc\u6587\u672c\u7f16\u8f91\u5668.md)\n\n- \u6587\u4ef6\u4e0a\u4f20\u8868\u5355\u63a7\u4ef6\u548c\u56fe\u7247\u6587\u4ef6\u9884\u89c8\n- \u670d\u52a1\u5668\u7aef\u5982\u4f55\u5904\u7406\u4e0a\u4f20\u7684\u6587\u4ef6\n- \u5bcc\u6587\u672c\u7f16\u8f91\u5668\u6982\u8ff0\n- wangEditor\u7684\u4f7f\u7528\n\n#### Day53 - [\u77ed\u4fe1\u548c\u90ae\u4ef6](./Day41-55/53.\u77ed\u4fe1\u548c\u90ae\u4ef6.md)\n\n- \u5e38\u7528\u77ed\u4fe1\u7f51\u5173\u5e73\u53f0\u4ecb\u7ecd\n- \u4f7f\u7528\u87ba\u4e1d\u5e3d\u53d1\u9001\u77ed\u4fe1\n- Django\u6846\u67b6\u5bf9\u90ae\u4ef6\u670d\u52a1\u7684\u652f\u6301\n\n#### Day54 - [\u5f02\u6b65\u4efb\u52a1\u548c\u5b9a\u65f6\u4efb\u52a1](./Day41-55/54.\u5f02\u6b65\u4efb\u52a1\u548c\u5b9a\u65f6\u4efb\u52a1.md)\n\n- \u7f51\u7ad9\u4f18\u5316\u7b2c\u4e8c\u5b9a\u5f8b\n- \u914d\u7f6e\u6d88\u606f\u961f\u5217\u670d\u52a1\n- \u5728\u9879\u76ee\u4e2d\u4f7f\u7528celery\u5b9e\u73b0\u4efb\u52a1\u5f02\u6b65\u5316\n- \u5728\u9879\u76ee\u4e2d\u4f7f\u7528celery\u5b9e\u73b0\u5b9a\u65f6\u4efb\u52a1\n\n#### Day55 - [\u5355\u5143\u6d4b\u8bd5\u548c\u9879\u76ee\u4e0a\u7ebf](./Day41-55/55.\u5355\u5143\u6d4b\u8bd5\u548c\u9879\u76ee\u4e0a\u7ebf.md)\n\n- Python\u4e2d\u7684\u5355\u5143\u6d4b\u8bd5\n- Django\u6846\u67b6\u5bf9\u5355\u5143\u6d4b\u8bd5\u7684\u652f\u6301\n- \u4f7f\u7528\u7248\u672c\u63a7\u5236\u7cfb\u7edf\n- \u914d\u7f6e\u548c\u4f7f\u7528uWSGI\n- \u52a8\u9759\u5206\u79bb\u548cNginx\u914d\u7f6e\n- \u914d\u7f6eHTTPS\n- \u914d\u7f6e\u57df\u540d\u89e3\u6790\n\n\n### Day56~60 - [\u5b9e\u6218Flask](./Day56-65)\n\n#### Day56 - [Flask\u5165\u95e8](./Day56-60/56.Flask\u5165\u95e8.md) \n\n#### Day57 - [\u6a21\u677f\u7684\u4f7f\u7528](./Day56-60/57.\u6a21\u677f\u7684\u4f7f\u7528.md) \n\n#### Day58 - [\u8868\u5355\u7684\u5904\u7406](./Day56-60/58.\u8868\u5355\u7684\u5904\u7406.md) \n\n#### Day59 - [\u6570\u636e\u5e93\u64cd\u4f5c](./Day56-60/59.\u6570\u636e\u5e93\u64cd\u4f5c.md)\n\n#### Day60 - [\u9879\u76ee\u5b9e\u6218](./Day56-60/60.\u9879\u76ee\u5b9e\u6218.md)\n\n### Day61~65 - [\u5b9e\u6218Tornado](./Day61-65)\n\n#### Day61 - [\u9884\u5907\u77e5\u8bc6](./Day61-65/61.\u9884\u5907\u77e5\u8bc6.md)\n\n- \u5e76\u53d1\u7f16\u7a0b\n- I/O\u6a21\u5f0f\u548c\u4e8b\u4ef6\u9a71\u52a8\n\n#### Day62 - [Tornado\u5165\u95e8](./Day61-65/62.Tornado\u5165\u95e8.md)\n\n- Tornado\u6982\u8ff0\n- 5\u5206\u949f\u4e0a\u624bTornado\n- \u8def\u7531\u89e3\u6790\n- \u8bf7\u6c42\u5904\u7406\u5668\n\n#### Day63 - [\u5f02\u6b65\u5316](./Day61-65/63.\u5f02\u6b65\u5316.md)\n\n- aiomysql\u548caioredis\u7684\u4f7f\u7528\n\n#### Day64 - [WebSocket\u7684\u5e94\u7528](./Day61-65/64.WebSocket\u7684\u5e94\u7528.md)\n\n- WebSocket\u7b80\u4ecb\n- WebSocket\u670d\u52a1\u5668\u7aef\u7f16\u7a0b\n- WebSocket\u5ba2\u6237\u7aef\u7f16\u7a0b\n- \u9879\u76ee\uff1aWeb\u804a\u5929\u5ba4\n\n#### Day65 - [\u9879\u76ee\u5b9e\u6218](./Day61-65/65.\u9879\u76ee\u5b9e\u6218.md)\n\n- \u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u548c\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n- \u4f7f\u7528Vue.js\u5b9e\u73b0\u524d\u7aef\u6e32\u67d3\n- \u4f7f\u7528ECharts\u5b9e\u73b0\u62a5\u8868\u529f\u80fd\n- \u4f7f\u7528WebSocket\u5b9e\u73b0\u63a8\u9001\u670d\u52a1\n\n### Day66~75 - [\u722c\u866b\u5f00\u53d1](./Day66-75)\n\n#### Day66 - [\u7f51\u7edc\u722c\u866b\u548c\u76f8\u5173\u5de5\u5177](./Day66-75/66.\u7f51\u7edc\u722c\u866b\u548c\u76f8\u5173\u5de5\u5177.md)\n\n- \u7f51\u7edc\u722c\u866b\u7684\u6982\u5ff5\u53ca\u5176\u5e94\u7528\u9886\u57df\n- \u7f51\u7edc\u722c\u866b\u7684\u5408\u6cd5\u6027\u63a2\u8ba8\n- \u5f00\u53d1\u7f51\u7edc\u722c\u866b\u7684\u76f8\u5173\u5de5\u5177\n- \u4e00\u4e2a\u722c\u866b\u7a0b\u5e8f\u7684\u6784\u6210\n\n#### Day67 - [\u6570\u636e\u91c7\u96c6\u548c\u89e3\u6790](./Day66-75/67.\u6570\u636e\u91c7\u96c6\u548c\u89e3\u6790.md)\n\n- \u6570\u636e\u91c7\u96c6\u7684\u6807\u51c6\u548c\u4e09\u65b9\u5e93\n- \u9875\u9762\u89e3\u6790\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790 / XPath\u89e3\u6790 / CSS\u9009\u62e9\u5668\u89e3\u6790\n\n#### Day68 - [\u5b58\u50a8\u6570\u636e](./Day66-75/68.\u5b58\u50a8\u6570\u636e.md)\n\n- \u5982\u4f55\u5b58\u50a8\u6d77\u91cf\u6570\u636e\n- \u5b9e\u73b0\u6570\u636e\u7684\u7f13\u5b58\n\n#### Day69 - [\u5e76\u53d1\u4e0b\u8f7d](./Day66-75/69.\u5e76\u53d1\u4e0b\u8f7d.md)\n\n- \u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\n- \u5f02\u6b65I/O\u548c\u534f\u7a0b\n- async\u548cawait\u5173\u952e\u5b57\u7684\u4f7f\u7528\n- \u4e09\u65b9\u5e93aiohttp\u7684\u5e94\u7528\n\n#### Day70 - [\u89e3\u6790\u52a8\u6001\u5185\u5bb9](./Day66-75/70.\u89e3\u6790\u52a8\u6001\u5185\u5bb9.md)\n\n- JavaScript\u9006\u5411\u5de5\u7a0b\n- \u4f7f\u7528Selenium\u83b7\u53d6\u52a8\u6001\u5185\u5bb9\n\n#### Day71 - [\u8868\u5355\u4ea4\u4e92\u548c\u9a8c\u8bc1\u7801\u5904\u7406](./Day66-75/71.\u8868\u5355\u4ea4\u4e92\u548c\u9a8c\u8bc1\u7801\u5904\u7406.md)\n\n- \u81ea\u52a8\u63d0\u4ea4\u8868\u5355\n- Cookie\u6c60\u7684\u5e94\u7528\n- \u9a8c\u8bc1\u7801\u5904\u7406\n\n#### Day72 - [Scrapy\u5165\u95e8](./Day66-75/72.Scrapy\u5165\u95e8.md)\n\n- Scrapy\u722c\u866b\u6846\u67b6\u6982\u8ff0\n- \u5b89\u88c5\u548c\u4f7f\u7528Scrapy\n\n#### Day73 - [Scrapy\u9ad8\u7ea7\u5e94\u7528](./Day66-75/73.Scrapy\u9ad8\u7ea7\u5e94\u7528.md)\n\n- Spider\u7684\u7528\u6cd5\n- \u4e2d\u95f4\u4ef6\u7684\u5e94\u7528\uff1a\u4e0b\u8f7d\u4e2d\u95f4\u4ef6 / \u8718\u86db\u4e2d\u95f4\u4ef6\n- Scrapy\u5bf9\u63a5Selenium\u6293\u53d6\u52a8\u6001\u5185\u5bb9\n- Scrapy\u90e8\u7f72\u5230Docker\n\n#### Day74 - [Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0](./Day66-75/74.Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0.md)\n\n- \u5206\u5e03\u5f0f\u722c\u866b\u7684\u539f\u7406\n- Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0\n- \u4f7f\u7528Scrapyd\u5b9e\u73b0\u5206\u5e03\u5f0f\u90e8\u7f72\n\n#### Day75 - [\u722c\u866b\u9879\u76ee\u5b9e\u6218](./Day66-75/75.\u722c\u866b\u9879\u76ee\u5b9e\u6218.md)\n\n- \u722c\u53d6\u62db\u8058\u7f51\u7ad9\u6570\u636e\n- \u722c\u53d6\u623f\u5730\u4ea7\u884c\u4e1a\u6570\u636e\n- \u722c\u53d6\u4e8c\u624b\u8f66\u4ea4\u6613\u5e73\u53f0\u6570\u636e\n\n### Day76~90 - [\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60](./Day76-90)\n\n> **\u6e29\u99a8\u63d0\u793a**\uff1a\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u7684\u5185\u5bb9\u5728code\u6587\u4ef6\u5939\u4e2d\uff0c\u662f\u7528jupyter notebook\u4e66\u5199\u7684\u4ee3\u7801\u548c\u7b14\u8bb0\uff0c\u9700\u8981\u5148\u542f\u52a8jupyter notebook\u518d\u6253\u5f00\u5bf9\u5e94\u7684\u6587\u4ef6\u8fdb\u884c\u5b66\u4e60\u30022020\u5e74\u4f1a\u6301\u7eed\u8865\u5145\u76f8\u5173\u6587\u6863\uff0c\u5e0c\u671b\u5927\u5bb6\u6301\u7eed\u5173\u6ce8\u3002\n\n#### Day76 - [\u673a\u5668\u5b66\u4e60\u57fa\u7840](./Day76-90/76.\u673a\u5668\u5b66\u4e60\u57fa\u7840.md)\n\n#### Day77 - [Pandas\u7684\u5e94\u7528](./Day76-90/77.Pandas\u7684\u5e94\u7528.md)\n\n#### Day78 - [NumPy\u548cSciPy\u7684\u5e94\u7528](./Day76-90/78.NumPy\u548cSciPy\u7684\u5e94\u7528)\n\n#### Day79 - [Matplotlib\u548c\u6570\u636e\u53ef\u89c6\u5316](./Day76-90/79.Matplotlib\u548c\u6570\u636e\u53ef\u89c6\u5316)\n\n#### Day80 - [k\u6700\u8fd1\u90bb(KNN)\u5206\u7c7b](./Day76-90/80.k\u6700\u8fd1\u90bb\u5206\u7c7b.md)\n\n#### Day81 - [\u51b3\u7b56\u6811](./Day76-90/81.\u51b3\u7b56\u6811.md)\n\n#### Day82 - [\u8d1d\u53f6\u65af\u5206\u7c7b](./Day76-90/82.\u8d1d\u53f6\u65af\u5206\u7c7b.md)\n\n#### Day83 - [\u652f\u6301\u5411\u91cf\u673a(SVM)](./Day76-90/83.\u652f\u6301\u5411\u91cf\u673a.md)\n\n#### Day84 - [K-\u5747\u503c\u805a\u7c7b](./Day76-90/84.K-\u5747\u503c\u805a\u7c7b.md)\n\n#### Day85 - [\u56de\u5f52\u5206\u6790](./Day76-90/85.\u56de\u5f52\u5206\u6790.md)\n\n#### Day86 - [\u5927\u6570\u636e\u5206\u6790\u5165\u95e8](./Day76-90/86.\u5927\u6570\u636e\u5206\u6790\u5165\u95e8.md)\n\n#### Day87 - [\u5927\u6570\u636e\u5206\u6790\u8fdb\u9636](./Day76-90/87.\u5927\u6570\u636e\u5206\u6790\u8fdb\u9636.md)\n\n#### Day88 - [Tensorflow\u5165\u95e8](./Day76-90/88.Tensorflow\u5165\u95e8.md)\n\n#### Day89 - [Tensorflow\u5b9e\u6218](./Day76-90/89.Tensorflow\u5b9e\u6218.md)\n\n#### Day90 - [\u63a8\u8350\u7cfb\u7edf\u5b9e\u6218](./Day76-90/90.\u63a8\u8350\u7cfb\u7edf\u5b9e\u6218.md)\n\n### Day91~100 - [\u56e2\u961f\u9879\u76ee\u5f00\u53d1](./Day91-100)\n\n#### \u7b2c91\u5929\uff1a[\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848](./Day91-100/91.\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848.md)\n\n1. \u8f6f\u4ef6\u8fc7\u7a0b\u6a21\u578b\n   - \u7ecf\u5178\u8fc7\u7a0b\u6a21\u578b\uff08\u7011\u5e03\u6a21\u578b\uff09\n     - \u53ef\u884c\u6027\u5206\u6790\uff08\u7814\u7a76\u505a\u8fd8\u662f\u4e0d\u505a\uff09\uff0c\u8f93\u51fa\u300a\u53ef\u884c\u6027\u5206\u6790\u62a5\u544a\u300b\u3002\n     - \u9700\u6c42\u5206\u6790\uff08\u7814\u7a76\u505a\u4ec0\u4e48\uff09\uff0c\u8f93\u51fa\u300a\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u300b\u548c\u4ea7\u54c1\u754c\u9762\u539f\u578b\u56fe\u3002\n     - \u6982\u8981\u8bbe\u8ba1\u548c\u8be6\u7ec6\u8bbe\u8ba1\uff0c\u8f93\u51fa\u6982\u5ff5\u6a21\u578b\u56fe\uff08ER\u56fe\uff09\u3001\u7269\u7406\u6a21\u578b\u56fe\u3001\u7c7b\u56fe\u3001\u65f6\u5e8f\u56fe\u7b49\u3002\n     - \u7f16\u7801 / \u6d4b\u8bd5\u3002\n     - \u4e0a\u7ebf / \u7ef4\u62a4\u3002\n\n     \u7011\u5e03\u6a21\u578b\u6700\u5927\u7684\u7f3a\u70b9\u662f\u65e0\u6cd5\u62e5\u62b1\u9700\u6c42\u53d8\u5316\uff0c\u6574\u5957\u6d41\u7a0b\u7ed3\u675f\u540e\u624d\u80fd\u770b\u5230\u4ea7\u54c1\uff0c\u56e2\u961f\u58eb\u6c14\u4f4e\u843d\u3002\n   - \u654f\u6377\u5f00\u53d1\uff08Scrum\uff09- \u4ea7\u54c1\u6240\u6709\u8005\u3001Scrum Master\u3001\u7814\u53d1\u4eba\u5458 - Sprint\n     - \u4ea7\u54c1\u7684Backlog\uff08\u7528\u6237\u6545\u4e8b\u3001\u4ea7\u54c1\u539f\u578b\uff09\u3002\n     - \u8ba1\u5212\u4f1a\u8bae\uff08\u8bc4\u4f30\u548c\u9884\u7b97\uff09\u3002\n     - \u65e5\u5e38\u5f00\u53d1\uff08\u7ad9\u7acb\u4f1a\u8bae\u3001\u756a\u8304\u5de5\u4f5c\u6cd5\u3001\u7ed3\u5bf9\u7f16\u7a0b\u3001\u6d4b\u8bd5\u5148\u884c\u3001\u4ee3\u7801\u91cd\u6784\u2026\u2026\uff09\u3002\n     - \u4fee\u590dbug\uff08\u95ee\u9898\u63cf\u8ff0\u3001\u91cd\u73b0\u6b65\u9aa4\u3001\u6d4b\u8bd5\u4eba\u5458\u3001\u88ab\u6307\u6d3e\u4eba\uff09\u3002\n     - \u53d1\u5e03\u7248\u672c\u3002\n     - \u8bc4\u5ba1\u4f1a\u8bae\uff08Showcase\uff0c\u7528\u6237\u9700\u8981\u53c2\u4e0e\uff09\u3002\n     - \u56de\u987e\u4f1a\u8bae\uff08\u5bf9\u5f53\u524d\u8fed\u4ee3\u5468\u671f\u505a\u4e00\u4e2a\u603b\u7ed3\uff09\u3002\n\n     > \u8865\u5145\uff1a\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u5ba3\u8a00\n     >\n     > - **\u4e2a\u4f53\u548c\u4e92\u52a8** \u9ad8\u4e8e \u6d41\u7a0b\u548c\u5de5\u5177\n     > - **\u5de5\u4f5c\u7684\u8f6f\u4ef6** \u9ad8\u4e8e \u8be6\u5c3d\u7684\u6587\u6863\n     > - **\u5ba2\u6237\u5408\u4f5c** \u9ad8\u4e8e \u5408\u540c\u8c08\u5224\n     > - **\u54cd\u5e94\u53d8\u5316** \u9ad8\u4e8e \u9075\u5faa\u8ba1\u5212\n\n     ![](./res/agile-scrum-sprint-cycle.png)\n\n     > \u89d2\u8272\uff1a\u4ea7\u54c1\u6240\u6709\u8005\uff08\u51b3\u5b9a\u505a\u4ec0\u4e48\uff0c\u80fd\u5bf9\u9700\u6c42\u62cd\u677f\u7684\u4eba\uff09\u3001\u56e2\u961f\u8d1f\u8d23\u4eba\uff08\u89e3\u51b3\u5404\u79cd\u95ee\u9898\uff0c\u4e13\u6ce8\u5982\u4f55\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u5c4f\u853d\u5916\u90e8\u5bf9\u5f00\u53d1\u56e2\u961f\u7684\u5f71\u54cd\uff09\u3001\u5f00\u53d1\u56e2\u961f\uff08\u9879\u76ee\u6267\u884c\u4eba\u5458\uff0c\u5177\u4f53\u6307\u5f00\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\uff09\u3002\n\n     > \u51c6\u5907\u5de5\u4f5c\uff1a\u5546\u4e1a\u6848\u4f8b\u548c\u8d44\u91d1\u3001\u5408\u540c\u3001\u61a7\u61ac\u3001\u521d\u59cb\u4ea7\u54c1\u9700\u6c42\u3001\u521d\u59cb\u53d1\u5e03\u8ba1\u5212\u3001\u5165\u80a1\u3001\u7ec4\u5efa\u56e2\u961f\u3002\n\n     >  \u654f\u6377\u56e2\u961f\u901a\u5e38\u4eba\u6570\u4e3a8-10\u4eba\u3002\n\n     >  \u5de5\u4f5c\u91cf\u4f30\u7b97\uff1a\u5c06\u5f00\u53d1\u4efb\u52a1\u91cf\u5316\uff0c\u5305\u62ec\u539f\u578b\u3001Logo\u8bbe\u8ba1\u3001UI\u8bbe\u8ba1\u3001\u524d\u7aef\u5f00\u53d1\u7b49\uff0c\u5c3d\u91cf\u628a\u6bcf\u4e2a\u5de5\u4f5c\u5206\u89e3\u5230\u6700\u5c0f\u4efb\u52a1\u91cf\uff0c\u6700\u5c0f\u4efb\u52a1\u91cf\u6807\u51c6\u4e3a\u5de5\u4f5c\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7\u4e24\u5929\uff0c\u7136\u540e\u4f30\u7b97\u603b\u4f53\u9879\u76ee\u65f6\u95f4\u3002\u628a\u6bcf\u4e2a\u4efb\u52a1\u90fd\u8d34\u5728\u770b\u677f\u4e0a\u9762\uff0c\u770b\u677f\u4e0a\u5206\u4e09\u90e8\u5206\uff1ato do\uff08\u5f85\u5b8c\u6210\uff09\u3001in progress\uff08\u8fdb\u884c\u4e2d\uff09\u548cdone\uff08\u5df2\u5b8c\u6210\uff09\u3002\n\n2. \u9879\u76ee\u56e2\u961f\u7ec4\u5efa\n\n   - \u56e2\u961f\u7684\u6784\u6210\u548c\u89d2\u8272\n\n     > \u8bf4\u660e\uff1a\u8c22\u8c22**\u4ed8\u7965\u82f1**\u5973\u58eb\u5e2e\u52a9\u6211\u7ed8\u5236\u4e86\u4e0b\u9762\u8fd9\u5f20\u7cbe\u7f8e\u7684\u516c\u53f8\u7ec4\u7ec7\u67b6\u6784\u56fe\u3002\n\n     ![company_architecture](./res/company_architecture.png)\n\n   - \u7f16\u7a0b\u89c4\u8303\u548c\u4ee3\u7801\u5ba1\u67e5\uff08flake8\u3001pylint\uff09\n\n     ![](./res/pylint.png)\n\n   - Python\u4e2d\u7684\u4e00\u4e9b\u201c\u60ef\u4f8b\u201d\uff08\u8bf7\u53c2\u8003[\u300aPython\u60ef\u4f8b-\u5982\u4f55\u7f16\u5199Pythonic\u7684\u4ee3\u7801\u300b](Python\u60ef\u4f8b.md)\uff09\n\n   - \u5f71\u54cd\u4ee3\u7801\u53ef\u8bfb\u6027\u7684\u539f\u56e0\uff1a\n\n     - \u4ee3\u7801\u6ce8\u91ca\u592a\u5c11\u6216\u8005\u6ca1\u6709\u6ce8\u91ca\n     - \u4ee3\u7801\u7834\u574f\u4e86\u8bed\u8a00\u7684\u6700\u4f73\u5b9e\u8df5\n     - \u53cd\u6a21\u5f0f\u7f16\u7a0b\uff08\u610f\u5927\u5229\u9762\u4ee3\u7801\u3001\u590d\u5236-\u9ecf\u8d34\u7f16\u7a0b\u3001\u81ea\u8d1f\u7f16\u7a0b\u3001\u2026\u2026\uff09\n\n3. \u56e2\u961f\u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd\n   - \u7248\u672c\u63a7\u5236\uff1aGit\u3001Mercury\n   - \u7f3a\u9677\u7ba1\u7406\uff1a[Gitlab](https://about.gitlab.com/)\u3001[Redmine](http://www.redmine.org.cn/)\n   - \u654f\u6377\u95ed\u73af\u5de5\u5177\uff1a[\u7985\u9053](https://www.zentao.net/)\u3001[JIRA](https://www.atlassian.com/software/jira/features)\n   - \u6301\u7eed\u96c6\u6210\uff1a[Jenkins](https://jenkins.io/)\u3001[Travis-CI](https://travis-ci.org/)\n\n   \u8bf7\u53c2\u8003[\u300a\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u300b](Day91-100/91.\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848.md)\u3002\n\n##### \u9879\u76ee\u9009\u9898\u548c\u7406\u89e3\u4e1a\u52a1\n\n1. \u9009\u9898\u8303\u56f4\u8bbe\u5b9a\n\n   - CMS\uff08\u7528\u6237\u7aef\uff09\uff1a\u65b0\u95fb\u805a\u5408\u7f51\u7ad9\u3001\u95ee\u7b54/\u5206\u4eab\u793e\u533a\u3001\u5f71\u8bc4/\u4e66\u8bc4\u7f51\u7ad9\u7b49\u3002\n   - MIS\uff08\u7528\u6237\u7aef+\u7ba1\u7406\u7aef\uff09\uff1aKMS\u3001KPI\u8003\u6838\u7cfb\u7edf\u3001HRS\u3001CRM\u7cfb\u7edf\u3001\u4f9b\u5e94\u94fe\u7cfb\u7edf\u3001\u4ed3\u50a8\u7ba1\u7406\u7cfb\u7edf\u7b49\u3002\n\n   - App\u540e\u53f0\uff08\u7ba1\u7406\u7aef+\u6570\u636e\u63a5\u53e3\uff09\uff1a\u4e8c\u624b\u4ea4\u6613\u7c7b\u3001\u62a5\u520a\u6742\u5fd7\u7c7b\u3001\u5c0f\u4f17\u7535\u5546\u7c7b\u3001\u65b0\u95fb\u8d44\u8baf\u7c7b\u3001\u65c5\u6e38\u7c7b\u3001\u793e\u4ea4\u7c7b\u3001\u9605\u8bfb\u7c7b\u7b49\u3002\n   - \u5176\u4ed6\u7c7b\u578b\uff1a\u81ea\u8eab\u884c\u4e1a\u80cc\u666f\u548c\u5de5\u4f5c\u7ecf\u9a8c\u3001\u4e1a\u52a1\u5bb9\u6613\u7406\u89e3\u548c\u628a\u63a7\u3002\n\n2. \u9700\u6c42\u7406\u89e3\u3001\u6a21\u5757\u5212\u5206\u548c\u4efb\u52a1\u5206\u914d\n\n   - \u9700\u6c42\u7406\u89e3\uff1a\u5934\u8111\u98ce\u66b4\u548c\u7ade\u54c1\u5206\u6790\u3002\n   - \u6a21\u5757\u5212\u5206\uff1a\u753b\u601d\u7ef4\u5bfc\u56fe\uff08XMind\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u662f\u4e00\u4e2a\u679d\u8282\u70b9\uff0c\u6bcf\u4e2a\u5177\u4f53\u7684\u529f\u80fd\u662f\u4e00\u4e2a\u53f6\u8282\u70b9\uff08\u7528\u52a8\u8bcd\u8868\u8ff0\uff09\uff0c\u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u53f6\u8282\u70b9\u65e0\u6cd5\u518d\u751f\u51fa\u65b0\u8282\u70b9\uff0c\u786e\u5b9a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u91cd\u8981\u6027\u3001\u4f18\u5148\u7ea7\u548c\u5de5\u4f5c\u91cf\u3002\n   - \u4efb\u52a1\u5206\u914d\uff1a\u7531\u9879\u76ee\u8d1f\u8d23\u4eba\u6839\u636e\u4e0a\u9762\u7684\u6307\u6807\u4e3a\u6bcf\u4e2a\u56e2\u961f\u6210\u5458\u5206\u914d\u4efb\u52a1\u3002\n\n   ![](./res/requirements_by_xmind.png)\n\n3. \u5236\u5b9a\u9879\u76ee\u8fdb\u5ea6\u8868\uff08\u6bcf\u65e5\u66f4\u65b0\uff09\n\n   | \u6a21\u5757 | \u529f\u80fd     | \u4eba\u5458   | \u72b6\u6001     | \u5b8c\u6210 | \u5de5\u65f6 | \u8ba1\u5212\u5f00\u59cb | \u5b9e\u9645\u5f00\u59cb | \u8ba1\u5212\u7ed3\u675f | \u5b9e\u9645\u7ed3\u675f | \u5907\u6ce8             |\n   | ---- | -------- | ------ | -------- | ---- | ---- | -------- | -------- | -------- | -------- | ---------------- |\n   | \u8bc4\u8bba | \u6dfb\u52a0\u8bc4\u8bba | \u738b\u5927\u9524 | \u6b63\u5728\u8fdb\u884c | 50%  | 4    | 2018/8/7 |          | 2018/8/7 |          |                  |\n   |      | \u5220\u9664\u8bc4\u8bba | \u738b\u5927\u9524 | \u7b49\u5f85     | 0%   | 2    | 2018/8/7 |          | 2018/8/7 |          |                  |\n   |      | \u67e5\u770b\u8bc4\u8bba | \u767d\u5143\u82b3 | \u6b63\u5728\u8fdb\u884c | 20%  | 4    | 2018/8/7 |          | 2018/8/7 |          | \u9700\u8981\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5 |\n   |      | \u8bc4\u8bba\u6295\u7968 | \u767d\u5143\u82b3 | \u7b49\u5f85     | 0%   | 4    | 2018/8/8 |          | 2018/8/8 |          |                  |\n\n4. OOAD\u548c\u6570\u636e\u5e93\u8bbe\u8ba1\n\n  - UML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u7c7b\u56fe\n\n    ![uml](./res/uml-class-diagram.png)\n\n  - \u901a\u8fc7\u6a21\u578b\u521b\u5efa\u8868\uff08\u6b63\u5411\u5de5\u7a0b\uff09\n\n    ```Shell\n    python manage.py makemigrations app\n    python manage.py migrate\n    ```\n\n  - \u4f7f\u7528PowerDesigner\u7ed8\u5236\u7269\u7406\u6a21\u578b\u56fe\u3002\n\n    ![](./res/power-designer-pdm.png)\n\n  - \u901a\u8fc7\u6570\u636e\u8868\u521b\u5efa\u6a21\u578b\uff08\u53cd\u5411\u5de5\u7a0b\uff09\n\n    ```Shell\n    python manage.py inspectdb > app/models.py\n    ```\n\n#### \u7b2c92\u5929\uff1a[Docker\u5bb9\u5668\u8be6\u89e3](./Day91-100/92.Docker\u5bb9\u5668\u8be6\u89e3.md)\n\n1. Docker\u7b80\u4ecb\n2. \u5b89\u88c5Docker\n3. \u4f7f\u7528Docker\u521b\u5efa\u5bb9\u5668\uff08Nginx\u3001MySQL\u3001Redis\u3001Gitlab\u3001Jenkins\uff09\n4. \u6784\u5efaDocker\u955c\u50cf\uff08Dockerfile\u7684\u7f16\u5199\u548c\u76f8\u5173\u6307\u4ee4\uff09\n5. \u5bb9\u5668\u7f16\u6392\uff08Docker-compose\uff09\n6. \u96c6\u7fa4\u7ba1\u7406\uff08Kubernetes\uff09\n\n#### \u7b2c93\u5929\uff1a[MySQL\u6027\u80fd\u4f18\u5316](./Day91-100/93.MySQL\u6027\u80fd\u4f18\u5316.md)\n\n#### \u7b2c94\u5929\uff1a[\u7f51\u7edcAPI\u63a5\u53e3\u8bbe\u8ba1](./Day91-100/94.\u7f51\u7edcAPI\u63a5\u53e3\u8bbe\u8ba1.md)\n\n#### \u7b2c95\u5929\uff1a[\u4f7f\u7528Django\u5f00\u53d1\u5546\u4e1a\u9879\u76ee](./Day91-100/95.\u4f7f\u7528Django\u5f00\u53d1\u5546\u4e1a\u9879\t\u76ee.md)\n\n##### \u9879\u76ee\u5f00\u53d1\u4e2d\u7684\u516c\u5171\u95ee\u9898\n\n1. \u6570\u636e\u5e93\u7684\u914d\u7f6e\uff08\u591a\u6570\u636e\u5e93\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6570\u636e\u5e93\u8def\u7531\uff09\n2. \u7f13\u5b58\u7684\u914d\u7f6e\uff08\u5206\u533a\u7f13\u5b58\u3001\u952e\u8bbe\u7f6e\u3001\u8d85\u65f6\u8bbe\u7f6e\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6545\u969c\u6062\u590d\uff08\u54e8\u5175\uff09\uff09\n3. \u65e5\u5fd7\u7684\u914d\u7f6e\n4. \u5206\u6790\u548c\u8c03\u8bd5\uff08Django-Debug-ToolBar\uff09\n5. \u597d\u7528\u7684Python\u6a21\u5757\uff08\u65e5\u671f\u8ba1\u7b97\u3001\u56fe\u50cf\u5904\u7406\u3001\u6570\u636e\u52a0\u5bc6\u3001\u4e09\u65b9API\uff09\n\n##### REST API\u8bbe\u8ba1\n\n1. RESTful\u67b6\u6784\n   - [\u7406\u89e3RESTful\u67b6\u6784](http://www.ruanyifeng.com/blog/2011/09/restful.html)\n   - [RESTful API\u8bbe\u8ba1\u6307\u5357](http://www.ruanyifeng.com/blog/2014/05/restful_api.html)\n   - [RESTful API\u6700\u4f73\u5b9e\u8df5](http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html)\n2. API\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n   - [RAP2](http://rap2.taobao.org/)\n   - [YAPI](http://yapi.demo.qunar.com/)\n3. [django-REST-framework](https://www.django-rest-framework.org/)\u7684\u5e94\u7528\n\n##### \u9879\u76ee\u4e2d\u7684\u91cd\u70b9\u96be\u70b9\u5256\u6790\n\n1. \u4f7f\u7528\u7f13\u5b58\u7f13\u89e3\u6570\u636e\u5e93\u538b\u529b - Redis\n2. \u4f7f\u7528\u6d88\u606f\u961f\u5217\u505a\u89e3\u8026\u5408\u548c\u524a\u5cf0 - Celery + RabbitMQ\n\n#### \u7b2c96\u5929\uff1a[\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u81ea\u52a8\u5316\u6d4b\u8bd5](Day91-100/96.\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u81ea\u52a8\u5316\u6d4b\u8bd5.md)\n\n##### \u5355\u5143\u6d4b\u8bd5\n\n1. \u6d4b\u8bd5\u7684\u79cd\u7c7b\n2. \u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff08unittest\u3001pytest\u3001nose2\u3001tox\u3001ddt\u3001\u2026\u2026\uff09\n3. \u6d4b\u8bd5\u8986\u76d6\u7387\uff08coverage\uff09\n\n##### \u9879\u76ee\u90e8\u7f72\n\n1. \u90e8\u7f72\u524d\u7684\u51c6\u5907\u5de5\u4f5c\n   - \u5173\u952e\u8bbe\u7f6e\uff08SECRET_KEY / DEBUG / ALLOWED_HOSTS / \u7f13\u5b58 / \u6570\u636e\u5e93\uff09\n   - HTTPS / CSRF_COOKIE_SECUR  / SESSION_COOKIE_SECURE  \n   - \u65e5\u5fd7\u76f8\u5173\u914d\u7f6e\n2. Linux\u5e38\u7528\u547d\u4ee4\u56de\u987e\n3. Linux\u5e38\u7528\u670d\u52a1\u7684\u5b89\u88c5\u548c\u914d\u7f6e\n4. uWSGI/Gunicorn\u548cNginx\u7684\u4f7f\u7528\n   - Gunicorn\u548cuWSGI\u7684\u6bd4\u8f83\n     - \u5bf9\u4e8e\u4e0d\u9700\u8981\u5927\u91cf\u5b9a\u5236\u5316\u7684\u7b80\u5355\u5e94\u7528\u7a0b\u5e8f\uff0cGunicorn\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0cuWSGI\u7684\u5b66\u4e60\u66f2\u7ebf\u6bd4Gunicorn\u8981\u9661\u5ced\u5f97\u591a\uff0cGunicorn\u7684\u9ed8\u8ba4\u53c2\u6570\u5c31\u5df2\u7ecf\u80fd\u591f\u9002\u5e94\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002\n     - uWSGI\u652f\u6301\u5f02\u6784\u90e8\u7f72\u3002\n     - \u7531\u4e8eNginx\u672c\u8eab\u652f\u6301uWSGI\uff0c\u5728\u7ebf\u4e0a\u4e00\u822c\u90fd\u5c06Nginx\u548cuWSGI\u6346\u7ed1\u5728\u4e00\u8d77\u90e8\u7f72\uff0c\u800c\u4e14uWSGI\u5c5e\u4e8e\u529f\u80fd\u9f50\u5168\u4e14\u9ad8\u5ea6\u5b9a\u5236\u7684WSGI\u4e2d\u95f4\u4ef6\u3002\n     - \u5728\u6027\u80fd\u4e0a\uff0cGunicorn\u548cuWSGI\u5176\u5b9e\u8868\u73b0\u76f8\u5f53\u3002\n5. \u4f7f\u7528\u865a\u62df\u5316\u6280\u672f\uff08Docker\uff09\u90e8\u7f72\u6d4b\u8bd5\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883\n\n##### \u6027\u80fd\u6d4b\u8bd5\n\n1. AB\u7684\u4f7f\u7528\n2. SQLslap\u7684\u4f7f\u7528\n3. sysbench\u7684\u4f7f\u7528\n\n##### \u81ea\u52a8\u5316\u6d4b\u8bd5\n\n1. \u4f7f\u7528Shell\u548cPython\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\n2. \u4f7f\u7528Selenium\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\n   - Selenium IDE\n   - Selenium WebDriver\n   - Selenium Remote Control\n3. \u6d4b\u8bd5\u5de5\u5177Robot Framework\u4ecb\u7ecd\n\n#### \u7b2c97\u5929\uff1a[\u7535\u5546\u7f51\u7ad9\u6280\u672f\u8981\u70b9\u5256\u6790](./Day91-100/97.\u7535\u5546\u7f51\u7ad9\u6280\u672f\u8981\u70b9\u5256\u6790.md)\n\n#### \u7b2c98\u5929\uff1a[\u9879\u76ee\u90e8\u7f72\u4e0a\u7ebf\u548c\u6027\u80fd\u8c03\u4f18](./Day91-100/98.\u9879\u76ee\u90e8\u7f72\u4e0a\u7ebf\u548c\u6027\u80fd\u8c03\u4f18.md)\n\n1. MySQL\u6570\u636e\u5e93\u8c03\u4f18\n2. Web\u670d\u52a1\u5668\u6027\u80fd\u4f18\u5316\n   - Nginx\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\n   - Keepalived\u5b9e\u73b0\u9ad8\u53ef\u7528\n3. \u4ee3\u7801\u6027\u80fd\u8c03\u4f18\n   - \u591a\u7ebf\u7a0b\n   - \u5f02\u6b65\u5316\n4. \u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u4f18\u5316\n   - \u4e91\u5b58\u50a8\n   - CDN\n\n#### \u7b2c99\u5929\uff1a[\u9762\u8bd5\u4e2d\u7684\u516c\u5171\u95ee\u9898](./Day91-100/99.\u9762\u8bd5\u4e2d\u7684\u516c\u5171\u95ee\u9898.md)\n\n#### \u7b2c100\u5929\uff1a[Python\u9762\u8bd5\u9898\u96c6](./Day91-100/100.Python\u9762\u8bd5\u9898\u96c6.md)\n\n"
 },
 {
  "repo": "jwasham/coding-interview-university",
  "language": null,
  "readme_contents": "# Coding Interview University\n\n> I originally created this as a short to-do list of study topics for becoming a software engineer,\n> but it grew to the large list you see today. After going through this study plan, [I got hired\n> as a Software Development Engineer at Amazon](https://startupnextdoor.com/ive-been-acquired-by-amazon/?src=ciu)!\n> You probably won't have to study as much as I did. Anyway, everything you need is here.\n>\n> I studied about 8-12 hours a day, for several months. This is my story: [Why I studied full-time for 8 months for a Google interview](https://medium.freecodecamp.org/why-i-studied-full-time-for-8-months-for-a-google-interview-cc662ce9bb13)\n>\n> The items listed here will prepare you well for a technical interview at just about any software company,\n> including the giants: Amazon, Facebook, Google, and Microsoft.\n>\n> *Best of luck to you!*\n\n<details>\n<summary>Translations:</summary>\n\n- [\u4e2d\u6587\u7248\u672c](translations/README-cn.md)\n- [Ti\u1ebfng Vi\u1ec7t - Vietnamese](translations/README-vi.md)\n- [Espa\u00f1ol](translations/README-es.md)\n- [Portugu\u00eas Brasileiro](translations/README-ptbr.md)\n- [Polish](translations/README-pl.md)\n\n</details>\n\n<details>\n<summary>Translations in progress:</summary>\n\n- [\u0939\u093f\u0928\u094d\u0926\u0940](https://github.com/jwasham/coding-interview-university/issues/81)\n- [\u05e2\u05d1\u05e8\u05d9\u05ea](https://github.com/jwasham/coding-interview-university/issues/82)\n- [Bahasa Indonesia](https://github.com/jwasham/coding-interview-university/issues/101)\n- [Arabic](https://github.com/jwasham/coding-interview-university/issues/98)\n- [Turkish](https://github.com/jwasham/coding-interview-university/issues/90)\n- [French](https://github.com/jwasham/coding-interview-university/issues/89)\n- [Russian](https://github.com/jwasham/coding-interview-university/issues/87)\n- [Ukrainian](https://github.com/jwasham/coding-interview-university/issues/106)\n- [Korean(\ud55c\uad6d\uc5b4)](https://github.com/jwasham/coding-interview-university/issues/118)\n- [Telugu](https://github.com/jwasham/coding-interview-university/issues/117)\n- [Urdu](https://github.com/jwasham/coding-interview-university/issues/140)\n- [Thai](https://github.com/jwasham/coding-interview-university/issues/156)\n- [Greek](https://github.com/jwasham/coding-interview-university/issues/166)\n- [Italian](https://github.com/jwasham/coding-interview-university/issues/170)\n- [Malayalam](https://github.com/jwasham/coding-interview-university/issues/239)\n- [Japanese (\u65e5\u672c\u8a9e)](https://github.com/jwasham/coding-interview-university/issues/257)\n\n</details>\n\n## What is it?\n\nThis is my multi-month study plan for going from web developer (self-taught, no CS degree) to software engineer for a large company.\n\n![Coding at the whiteboard - from HBO's Silicon Valley](https://d3j2pkmjtin6ou.cloudfront.net/coding-at-the-whiteboard-silicon-valley.png)\n\nThis is meant for **new software engineers** or those switching from\nsoftware/web development to software engineering (where computer science knowledge is required). If you have\nmany years of experience and are claiming many years of software engineering experience, expect a harder interview.\n\nIf you have many years of software/web development experience, note that large software companies like Google, Amazon,\nFacebook and Microsoft view software engineering as different from software/web development, and they require computer science knowledge.\n\nIf you want to be a reliability engineer or operations engineer, study more from the optional list (networking, security).\n\n---\n\n## Table of Contents\n\n- [What is it?](#what-is-it)\n- [Why use it?](#why-use-it)\n- [How to use it](#how-to-use-it)\n- [Don't feel you aren't smart enough](#dont-feel-you-arent-smart-enough)\n- [About Video Resources](#about-video-resources)\n- [Interview Process & General Interview Prep](#interview-process--general-interview-prep)\n- [Pick One Language for the Interview](#pick-one-language-for-the-interview)\n- [Book List](#book-list)\n- [Before you Get Started](#before-you-get-started)\n- [What you Won't See Covered](#what-you-wont-see-covered)\n- [Prerequisite Knowledge](#prerequisite-knowledge)\n- [The Daily Plan](#the-daily-plan)\n- [Algorithmic complexity / Big-O / Asymptotic analysis](#algorithmic-complexity--big-o--asymptotic-analysis)\n- [Data Structures](#data-structures)\n    - [Arrays](#arrays)\n    - [Linked Lists](#linked-lists)\n    - [Stack](#stack)\n    - [Queue](#queue)\n    - [Hash table](#hash-table)\n- [More Knowledge](#more-knowledge)\n    - [Binary search](#binary-search)\n    - [Bitwise operations](#bitwise-operations)\n- [Trees](#trees)\n    - [Trees - Notes & Background](#trees---notes--background)\n    - [Binary search trees: BSTs](#binary-search-trees-bsts)\n    - [Heap / Priority Queue / Binary Heap](#heap--priority-queue--binary-heap)\n    - balanced search trees (general concept, not details)\n    - traversals: preorder, inorder, postorder, BFS, DFS\n- [Sorting](#sorting)\n    - selection\n    - insertion\n    - heapsort\n    - quicksort\n    - merge sort\n- [Graphs](#graphs)\n    - directed\n    - undirected\n    - adjacency matrix\n    - adjacency list\n    - traversals: BFS, DFS\n- [Even More Knowledge](#even-more-knowledge)\n    - [Recursion](#recursion)\n    - [Dynamic Programming](#dynamic-programming)\n    - [Object-Oriented Programming](#object-oriented-programming)\n    - [Design Patterns](#design-patterns)\n    - [Combinatorics (n choose k) & Probability](#combinatorics-n-choose-k--probability)\n    - [NP, NP-Complete and Approximation Algorithms](#np-np-complete-and-approximation-algorithms)\n    - [Caches](#caches)\n    - [Processes and Threads](#processes-and-threads)\n    - [Testing](#testing)\n    - [Scheduling](#scheduling)\n    - [String searching & manipulations](#string-searching--manipulations)\n    - [Tries](#tries)\n    - [Floating Point Numbers](#floating-point-numbers)\n    - [Unicode](#unicode)\n    - [Endianness](#endianness)\n    - [Networking](#networking)\n- [System Design, Scalability, Data Handling](#system-design-scalability-data-handling) (if you have 4+ years experience)\n- [Final Review](#final-review)\n- [Coding Question Practice](#coding-question-practice)\n- [Coding exercises/challenges](#coding-exerciseschallenges)\n- [Once you're closer to the interview](#once-youre-closer-to-the-interview)\n- [Your Resume](#your-resume)\n- [Be thinking of for when the interview comes](#be-thinking-of-for-when-the-interview-comes)\n- [Have questions for the interviewer](#have-questions-for-the-interviewer)\n- [Once You've Got The Job](#once-youve-got-the-job)\n\n---------------- Everything below this point is optional ----------------\n\n## Additional Resources\n\n- [Additional Books](#additional-books)\n- [Additional Learning](#additional-learning)\n    - [Compilers](#compilers)\n    - [Emacs and vi(m)](#emacs-and-vim)\n    - [Unix command line tools](#unix-command-line-tools)\n    - [Information theory](#information-theory-videos)\n    - [Parity & Hamming Code](#parity--hamming-code-videos)\n    - [Entropy](#entropy)\n    - [Cryptography](#cryptography)\n    - [Compression](#compression)\n    - [Computer Security](#computer-security)\n    - [Garbage collection](#garbage-collection)\n    - [Parallel Programming](#parallel-programming)\n    - [Messaging, Serialization, and Queueing Systems](#messaging-serialization-and-queueing-systems)\n    - [A*](#a)\n    - [Fast Fourier Transform](#fast-fourier-transform)\n    - [Bloom Filter](#bloom-filter)\n    - [HyperLogLog](#hyperloglog)\n    - [Locality-Sensitive Hashing](#locality-sensitive-hashing)\n    - [van Emde Boas Trees](#van-emde-boas-trees)\n    - [Augmented Data Structures](#augmented-data-structures)\n    - [Balanced search trees](#balanced-search-trees)\n        - AVL trees\n        - Splay trees\n        - Red/black trees\n        - 2-3 search trees\n        - 2-3-4 Trees (aka 2-4 trees)\n        - N-ary (K-ary, M-ary) trees\n        - B-Trees\n    - [k-D Trees](#k-d-trees)\n    - [Skip lists](#skip-lists)\n    - [Network Flows](#network-flows)\n    - [Disjoint Sets & Union Find](#disjoint-sets--union-find)\n    - [Math for Fast Processing](#math-for-fast-processing)\n    - [Treap](#treap)\n    - [Linear Programming](#linear-programming-videos)\n    - [Geometry, Convex hull](#geometry-convex-hull-videos)\n    - [Discrete math](#discrete-math)\n    - [Machine Learning](#machine-learning)\n- [Additional Detail on Some Subjects](#additional-detail-on-some-subjects)\n- [Video Series](#video-series)\n- [Computer Science Courses](#computer-science-courses)\n- [Papers](#papers)\n\n---\n\n## Why use it?\n\nWhen I started this project, I didn't know a stack from a heap, didn't know Big-O anything, anything about trees, or how to\ntraverse a graph. If I had to code a sorting algorithm, I can tell ya it wouldn't have been very good.\nEvery data structure I've ever used was built into the language, and I didn't know how they worked\nunder the hood at all. I've never had to manage memory unless a process I was running would give an \"out of\nmemory\" error, and then I'd have to find a workaround. I've used a few multidimensional arrays in my life and\nthousands of associative arrays, but I've never created data structures from scratch.\n\nIt's a long plan. It may take you months. If you are familiar with a lot of this already it will take you a lot less time.\n\n## How to use it\n\nEverything below is an outline, and you should tackle the items in order from top to bottom.\n\nI'm using Github's special markdown flavor, including tasks lists to check progress.\n\n**Create a new branch so you can check items like this, just put an x in the brackets: [x]**\n\n\n    Fork a branch and follow the commands below\n\n`git checkout -b progress`\n\n`git remote add jwasham https://github.com/jwasham/coding-interview-university`\n\n`git fetch --all`\n\n    Mark all boxes with X after you completed your changes\n\n`git add .`\n\n`git commit -m \"Marked x\"`\n\n`git rebase jwasham/master`\n\n`git push --force`\n\n[More about Github-flavored markdown](https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown)\n\n\n## Don't feel you aren't smart enough\n\n- Successful software engineers are smart, but many have an insecurity that they aren't smart enough.\n- [The myth of the Genius Programmer](https://www.youtube.com/watch?v=0SARbwvhupQ)\n- [It's Dangerous to Go Alone: Battling the Invisible Monsters in Tech](https://www.youtube.com/watch?v=1i8ylq4j_EY)\n\n## About Video Resources\n\nSome videos are available only by enrolling in a Coursera or EdX class. These are called MOOCs.\nSometimes the classes are not in session so you have to wait a couple of months, so you have no access.\n\n    I'd appreciate your help to add free and always-available public sources, such as YouTube videos to accompany the online course videos.\n    I like using university lectures.\n\n\n## Interview Process & General Interview Prep\n\n- [ ] [ABC: Always Be Coding](https://medium.com/always-be-coding/abc-always-be-coding-d5f8051afce2#.4heg8zvm4)\n- [ ] [Whiteboarding](https://medium.com/@dpup/whiteboarding-4df873dbba2e#.hf6jn45g1)\n- [ ] [Demystifying Tech Recruiting](https://www.youtube.com/watch?v=N233T0epWTs)\n- [ ] How to Get a Job at the Big 4:\n    - [ ] [How to Get a Job at the Big 4 - Amazon, Facebook, Google & Microsoft (video)](https://www.youtube.com/watch?v=YJZCUhxNCv8)\n- [ ] Cracking The Coding Interview Set 1:\n    - [ ] [Gayle L McDowell - Cracking The Coding Interview (video)](https://www.youtube.com/watch?v=rEJzOhC5ZtQ)\n    - [ ] [Cracking the Coding Interview with Author Gayle Laakmann McDowell (video)](https://www.youtube.com/watch?v=aClxtDcdpsQ)\n- [ ] Cracking the Facebook Coding Interview\n    - [ ] [The Approach](https://www.youtube.com/watch?v=wCl9kvQGHPI)\n    - [ ] [Problem Walkthrough](https://www.youtube.com/watch?v=4UWDyJq8jZg)\n- [ ] Prep Course:\n    - [ ] [Software Engineer Interview Unleashed (paid course)](https://www.udemy.com/software-engineer-interview-unleashed):\n        - Learn how to make yourself ready for software engineer interviews from a former Google interviewer.\n    - [ ] [Python for Data Structures, Algorithms, and Interviews (paid course)](https://www.udemy.com/python-for-data-structures-algorithms-and-interviews/):\n        - A Python centric interview prep course which covers data structures, algorithms, mock interviews and much more.\n    - [ ] [Intro to Data Structures and Algorithms using Python (Udacity free course)](https://www.udacity.com/course/data-structures-and-algorithms-in-python--ud513):\n        - A free Python centric data structures and algorithms course.\n    - [ ] [Data Structures and Algorithms Nanodegree! (Udacity paid Nanodegree)](https://www.udacity.com/course/data-structures-and-algorithms-nanodegree--nd256):\n        - Get hands-on practice with over 100 data structures and algorithm exercises and guidance from a dedicated mentor to help prepare you for interviews and on-the-job scenarios.\n\n## Pick One Language for the Interview\n\nYou can use a language you are comfortable in to do the coding part of the interview, but for large companies, these are solid choices:\n\n- C++\n- Java\n- Python\n\nYou could also use these, but read around first. There may be caveats:\n\n- JavaScript\n- Ruby\n\nHere is an article I wrote about choosing a language for the interview: [Pick One Language for the Coding Interview](https://startupnextdoor.com/important-pick-one-language-for-the-coding-interview/)\n\nYou need to be very comfortable in the language and be knowledgeable.\n\nRead more about choices:\n- http://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/\n- http://blog.codingforinterviews.com/best-programming-language-jobs/\n\n[See language resources here](programming-language-resources.md)\n\nYou'll see some C, C++, and Python learning included below, because I'm learning. There are a few books involved, see the bottom.\n\n## Book List\n\nThis is a shorter list than what I used. This is abbreviated to save you time.\n\n### Interview Prep\n\n- [ ] [Programming Interviews Exposed: Coding Your Way Through the Interview, 4th Edition](https://www.amazon.com/Programming-Interviews-Exposed-Through-Interview/dp/111941847X/)\n    - answers in C++ and Java\n    - this is a good warm-up for Cracking the Coding Interview\n    - not too difficult, most problems may be easier than what you'll see in an interview (from what I've read)\n- [ ] [Cracking the Coding Interview, 6th Edition](http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/)\n    - answers in Java\n\n### If you have tons of extra time:\n\nChoose one:\n\n- [ ] [Elements of Programming Interviews (C++ version)](https://www.amazon.com/Elements-Programming-Interviews-Insiders-Guide/dp/1479274836)\n- [ ] [Elements of Programming Interviews in Python](https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949/)\n- [ ] Elements of Programming Interviews (Java version)\n    - [book](https://www.amazon.com/Elements-Programming-Interviews-Java-Insiders/dp/1517435803/)\n    - [Companion Project - Method Stub and Test Cases for Every Problem in the Book](https://github.com/gardncl/elements-of-programming-interviews)\n\n### Language Specific\n\n**You need to choose a language for the interview (see above).**\n\nHere are my recommendations by language. I don't have resources for all languages. I welcome additions.\n\nIf you read through one of these, you should have all the data structures and algorithms knowledge you'll need to start doing coding problems.\n**You can skip all the video lectures in this project**, unless you'd like a review.\n\n[Additional language-specific resources here.](programming-language-resources.md)\n\n### C++\n\nI haven't read these two, but they are highly rated and written by Sedgewick. He's awesome.\n\n- [ ] [Algorithms in C++, Parts 1-4: Fundamentals, Data Structure, Sorting, Searching](https://www.amazon.com/Algorithms-Parts-1-4-Fundamentals-Structure/dp/0201350882/)\n- [ ] [Algorithms in C++ Part 5: Graph Algorithms](https://www.amazon.com/Algorithms-Part-Graph-3rd-Pt-5/dp/0201361183/)\n\nIf you have a better recommendation for C++, please let me know. Looking for a comprehensive resource.\n\n### Java\n\n- [ ] [Algorithms (Sedgewick and Wayne)](https://www.amazon.com/Algorithms-4th-Robert-Sedgewick/dp/032157351X/)\n    - videos with book content (and Sedgewick!) on coursera:\n        - [Algorithms I](https://www.coursera.org/learn/algorithms-part1)\n        - [Algorithms II](https://www.coursera.org/learn/algorithms-part2)\n\nOR:\n\n- [ ] [Data Structures and Algorithms in Java](https://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/1118771338/)\n    - by Goodrich, Tamassia, Goldwasser\n    - used as optional text for CS intro course at UC Berkeley\n    - see my book report on the Python version below. This book covers the same topics.\n\n### Python\n\n- [ ] [Data Structures and Algorithms in Python](https://www.amazon.com/Structures-Algorithms-Python-Michael-Goodrich/dp/1118290275/)\n    - by Goodrich, Tamassia, Goldwasser\n    - I loved this book. It covered everything and more.\n    - Pythonic code\n    - my glowing book report: https://startupnextdoor.com/book-report-data-structures-and-algorithms-in-python/\n\n\n## Before you Get Started\n\nThis list grew over many months, and yes, it kind of got out of hand.\n\nHere are some mistakes I made so you'll have a better experience.\n\n### 1. You Won't Remember it All\n\nI watched hours of videos and took copious notes, and months later there was much I didn't remember. I spent 3 days going\nthrough my notes and making flashcards so I could review.\n\nRead please so you won't make my mistakes:\n\n[Retaining Computer Science Knowledge](https://startupnextdoor.com/retaining-computer-science-knowledge/).\n\nA course recommended to me (haven't taken it): [Learning how to Learn](https://www.coursera.org/learn/learning-how-to-learn)\n\n### 2. Use Flashcards\n\nTo solve the problem, I made a little flashcards site where I could add flashcards of 2 types: general and code.\nEach card has different formatting.\n\nI made a mobile-first website so I could review on my phone and tablet, wherever I am.\n\nMake your own for free:\n\n- [Flashcards site repo](https://github.com/jwasham/computer-science-flash-cards)\n- [My flash cards database (old - 1200 cards)](https://github.com/jwasham/computer-science-flash-cards/blob/master/cards-jwasham.db):\n- [My flash cards database (new - 1800 cards)](https://github.com/jwasham/computer-science-flash-cards/blob/master/cards-jwasham-extreme.db):\n\nKeep in mind I went overboard and have cards covering everything from assembly language and Python trivia to machine learning and statistics. It's way too much for what's required.\n\n**Note on flashcards:** The first time you recognize you know the answer, don't mark it as known. You have to see the\nsame card and answer it several times correctly before you really know it. Repetition will put that knowledge deeper in\nyour brain.\n\nAn alternative to using my flashcard site is [Anki](http://ankisrs.net/), which has been recommended to me numerous times. It uses a repetition system to help you remember.\nIt's user-friendly, available on all platforms and has a cloud sync system. It costs $25 on iOS but is free on other platforms.\n\nMy flashcard database in Anki format: https://ankiweb.net/shared/info/25173560 (thanks [@xiewenya](https://github.com/xiewenya))\n\n### 3. Start doing coding interview questions while you're learning data structures and algorithms, \n\nYou need to apply what you're learning to solving problems, or you'll forget. I made this mistake. Once you've learned a topic, \nand feel comfortable with it, like linked lists, open one of the coding interview books and do a couple of questions regarding \nlinked lists. Then move on to the next learning topic. Then later, go back and do another linked list problem, \nor recursion problem, or whatever. But keep doing problems while you're learning. You're not being hired for knowledge, \nbut how you apply the knowledge. There are several books and sites I recommend. \nSee here for more: [Coding Question Practice](#coding-question-practice)\n\n### 4. Review, review, review\n\nI keep a set of cheat sheets on ASCII, OSI stack, Big-O notations, and more. I study them when I have some spare time.\n\nTake a break from programming problems for a half hour and go through your flashcards.\n\n### 5. Focus\n\nThere are a lot of distractions that can take up valuable time. Focus and concentration are hard. Turn on some music \nwithout lyrics and you'll be able to focus pretty well.\n\n## What you won't see covered\n\nThese are prevalent technologies but not part of this study plan:\n\n- SQL\n- Javascript\n- HTML, CSS, and other front-end technologies\n\n## The Daily Plan\n\nSome subjects take one day, and some will take multiple days. Some are just learning with nothing to implement.\n\nEach day I take one subject from the list below, watch videos about that subject, and write an implementation in:\n- C - using structs and functions that take a struct * and something else as args.\n- C++ - without using built-in types\n- C++ - using built-in types, like STL's std::list for a linked list\n- Python - using built-in types (to keep practicing Python)\n- and write tests to ensure I'm doing it right, sometimes just using simple assert() statements\n- You may do Java or something else, this is just my thing.\n\nYou don't need all these. You need only [one language for the interview](#pick-one-language-for-the-interview).\n\nWhy code in all of these?\n- Practice, practice, practice, until I'm sick of it, and can do it with no problem (some have many edge cases and bookkeeping details to remember)\n- Work within the raw constraints (allocating/freeing memory without help of garbage collection (except Python or Java))\n- Make use of built-in types so I have experience using the built-in tools for real-world use (not going to write my own linked list implementation in production)\n\nI may not have time to do all of these for every subject, but I'll try.\n\nYou can see my code here:\n - [C](https://github.com/jwasham/practice-c)\n - [C++](https://github.com/jwasham/practice-cpp)\n - [Python](https://github.com/jwasham/practice-python)\n\nYou don't need to memorize the guts of every algorithm.\n\nWrite code on a whiteboard or paper, not a computer. Test with some sample inputs. Then test it out on a computer.\n\n## Prerequisite Knowledge\n\n- [ ] **Learn C**\n    - C is everywhere. You'll see examples in books, lectures, videos, *everywhere* while you're studying.\n    - [ ] [C Programming Language, Vol 2](https://www.amazon.com/Programming-Language-Brian-W-Kernighan/dp/0131103628)\n        - This is a short book, but it will give you a great handle on the C language and if you practice it a little\n            you'll quickly get proficient. Understanding C helps you understand how programs and memory work.\n        - [answers to questions](https://github.com/lekkas/c-algorithms)\n\n- [ ] **How computers process a program:**\n    - [ ] [How CPU executes a program (video)](https://www.youtube.com/watch?v=XM4lGflQFvA)\n    - [ ] [How computers calculate - ALU (video)](https://youtu.be/1I5ZMmrOfnA)\n    - [ ] [Registers and RAM (video)](https://youtu.be/fpnE6UAfbtU)\n    - [ ] [The Central Processing Unit (CPU) (video)](https://youtu.be/FZGugFqdr60)\n    - [ ] [Instructions and Programs (video)](https://youtu.be/zltgXvg6r3k)\n\n## Algorithmic complexity / Big-O / Asymptotic analysis\n\n- Nothing to implement\n- There are a lot of videos here. Just watch enough until you understand it. You can always come back and review.\n- If some of the lectures are too mathy, you can jump down to the bottom and watch the discrete mathematics videos to get the background knowledge.\n- [ ] [Harvard CS50 - Asymptotic Notation (video)](https://www.youtube.com/watch?v=iOq5kSKqeR4)\n- [ ] [Big O Notations (general quick tutorial) (video)](https://www.youtube.com/watch?v=V6mKVRU1evU)\n- [ ] [Big O Notation (and Omega and Theta) - best mathematical explanation (video)](https://www.youtube.com/watch?v=ei-A_wy5Yxw&index=2&list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN)\n- [ ] Skiena:\n    - [video](https://www.youtube.com/watch?v=gSyDMtdPNpU&index=2&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n    - [slides](http://www3.cs.stonybrook.edu/~algorith/video-lectures/2007/lecture2.pdf)\n- [ ] [A Gentle Introduction to Algorithm Complexity Analysis](http://discrete.gr/complexity/)\n- [ ] [Orders of Growth (video)](https://www.coursera.org/lecture/algorithmic-thinking-1/orders-of-growth-6PKkX)\n- [ ] [Asymptotics (video)](https://www.coursera.org/lecture/algorithmic-thinking-1/asymptotics-bXAtM)\n- [ ] [UC Berkeley Big O (video)](https://archive.org/details/ucberkeley_webcast_VIS4YDpuP98)\n- [ ] [UC Berkeley Big Omega (video)](https://archive.org/details/ucberkeley_webcast_ca3e7UVmeUc)\n- [ ] [Amortized Analysis (video)](https://www.youtube.com/watch?v=B3SpQZaAZP4&index=10&list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN)\n- [ ] [Illustrating \"Big O\" (video)](https://www.coursera.org/lecture/algorithmic-thinking-1/illustrating-big-o-YVqzv)\n- [ ] TopCoder (includes recurrence relations and master theorem):\n    - [Computational Complexity: Section 1](https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-1/)\n    - [Computational Complexity: Section 2](https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-2/)\n- [ ] [Cheat sheet](http://bigocheatsheet.com/)\n\n## Data Structures\n\n- ### Arrays\n    - Implement an automatically resizing vector.\n    - [ ] Description:\n        - [Arrays (video)](https://www.coursera.org/learn/data-structures/lecture/OsBSF/arrays)\n        - [UC Berkeley CS61B - Linear and Multi-Dim Arrays (video)](https://archive.org/details/ucberkeley_webcast_Wp8oiO_CZZE) (Start watching from 15m 32s)\n        - [Basic Arrays (video)](https://archive.org/details/0102WhatYouShouldKnow/02_04-basicArrays.mp4)\n        - [Multi-dim (video)](https://archive.org/details/0102WhatYouShouldKnow/02_05-multidimensionalArrays.mp4)\n        - [Dynamic Arrays (video)](https://www.coursera.org/learn/data-structures/lecture/EwbnV/dynamic-arrays)\n        - [Jagged Arrays (video)](https://www.youtube.com/watch?v=1jtrQqYpt7g)\n        - [Jagged Arrays (video)](https://archive.org/details/0102WhatYouShouldKnow/02_06-jaggedArrays.mp4)\n        - [Resizing arrays (video)](https://archive.org/details/0102WhatYouShouldKnow/03_01-resizableArrays.mp4)\n    - [ ] Implement a vector (mutable array with automatic resizing):\n        - [ ] Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing.\n        - [ ] new raw data array with allocated memory\n            - can allocate int array under the hood, just not use its features\n            - start with 16, or if starting number is greater, use power of 2 - 16, 32, 64, 128\n        - [ ] size() - number of items\n        - [ ] capacity() - number of items it can hold\n        - [ ] is_empty()\n        - [ ] at(index) - returns item at given index, blows up if index out of bounds\n        - [ ] push(item)\n        - [ ] insert(index, item) - inserts item at index, shifts that index's value and trailing elements to the right\n        - [ ] prepend(item) - can use insert above at index 0\n        - [ ] pop() - remove from end, return value\n        - [ ] delete(index) - delete item at index, shifting all trailing elements left\n        - [ ] remove(item) - looks for value and removes index holding it (even if in multiple places)\n        - [ ] find(item) - looks for value and returns first index with that value, -1 if not found\n        - [ ] resize(new_capacity) // private function\n            - when you reach capacity, resize to double the size\n            - when popping an item, if size is 1/4 of capacity, resize to half\n    - [ ] Time\n        - O(1) to add/remove at end (amortized for allocations for more space), index, or update\n        - O(n) to insert/remove elsewhere\n    - [ ] Space\n        - contiguous in memory, so proximity helps performance\n        - space needed = (array capacity, which is >= n) * size of item, but even if 2n, still O(n)\n\n- ### Linked Lists\n    - [ ] Description:\n        - [ ] [Singly Linked Lists (video)](https://www.coursera.org/learn/data-structures/lecture/kHhgK/singly-linked-lists)\n        - [ ] [CS 61B - Linked Lists 1 (video)](https://archive.org/details/ucberkeley_webcast_htzJdKoEmO0)\n        - [ ] [CS 61B - Linked Lists 2 (video)](https://archive.org/details/ucberkeley_webcast_-c4I3gFYe3w)\n    - [ ] [C Code (video)](https://www.youtube.com/watch?v=QN6FPiD0Gzo)\n            - not the whole video, just portions about Node struct and memory allocation.\n    - [ ] Linked List vs Arrays:\n        - [Core Linked Lists Vs Arrays (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/rjBs9/core-linked-lists-vs-arrays)\n        - [In The Real World Linked Lists Vs Arrays (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/QUaUd/in-the-real-world-lists-vs-arrays)\n    - [ ] [why you should avoid linked lists (video)](https://www.youtube.com/watch?v=YQs6IC-vgmo)\n    - [ ] Gotcha: you need pointer to pointer knowledge:\n        (for when you pass a pointer to a function that may change the address where that pointer points)\n        This page is just to get a grasp on ptr to ptr. I don't recommend this list traversal style. Readability and maintainability suffer due to cleverness.\n        - [Pointers to Pointers](https://www.eskimo.com/~scs/cclass/int/sx8.html)\n    - [ ] implement (I did with tail pointer & without):\n        - [ ] size() - returns number of data elements in list\n        - [ ] empty() - bool returns true if empty\n        - [ ] value_at(index) - returns the value of the nth item (starting at 0 for first)\n        - [ ] push_front(value) - adds an item to the front of the list\n        - [ ] pop_front() - remove front item and return its value\n        - [ ] push_back(value) - adds an item at the end\n        - [ ] pop_back() - removes end item and returns its value\n        - [ ] front() - get value of front item\n        - [ ] back() - get value of end item\n        - [ ] insert(index, value) - insert value at index, so current item at that index is pointed to by new item at index\n        - [ ] erase(index) - removes node at given index\n        - [ ] value_n_from_end(n) - returns the value of the node at nth position from the end of the list\n        - [ ] reverse() - reverses the list\n        - [ ] remove_value(value) - removes the first item in the list with this value\n    - [ ] Doubly-linked List\n        - [Description (video)](https://www.coursera.org/learn/data-structures/lecture/jpGKD/doubly-linked-lists)\n        - No need to implement\n\n- ### Stack\n    - [ ] [Stacks (video)](https://www.coursera.org/learn/data-structures/lecture/UdKzQ/stacks)\n    - [ ] [Using Stacks Last-In First-Out (video)](https://archive.org/details/0102WhatYouShouldKnow/05_01-usingStacksForLast-inFirst-out.mp4)\n    - [ ] Will not implement. Implementing with array is trivial.\n\n- ### Queue\n    - [ ] [Using Queues First-In First-Out(video)](https://archive.org/details/0102WhatYouShouldKnow/05_03-usingQueuesForFirst-inFirst-out.mp4)\n    - [ ] [Queue (video)](https://www.coursera.org/lecture/data-structures/queues-EShpq)\n    - [ ] [Circular buffer/FIFO](https://en.wikipedia.org/wiki/Circular_buffer)\n    - [ ] [Priority Queues (video)](https://archive.org/details/0102WhatYouShouldKnow/05_04-priorityQueuesAndDeques.mp4)\n    - [ ] Implement using linked-list, with tail pointer:\n        - enqueue(value) - adds value at position at tail\n        - dequeue() - returns value and removes least recently added element (front)\n        - empty()\n    - [ ] Implement using fixed-sized array:\n        - enqueue(value) - adds item at end of available storage\n        - dequeue() - returns value and removes least recently added element\n        - empty()\n        - full()\n    - [ ] Cost:\n        - a bad implementation using linked list where you enqueue at head and dequeue at tail would be O(n)\n            because you'd need the next to last element, causing a full traversal each dequeue\n        - enqueue: O(1) (amortized, linked list and array [probing])\n        - dequeue: O(1) (linked list and array)\n        - empty: O(1) (linked list and array)\n\n- ### Hash table\n    - [ ] Videos:\n        - [ ] [Hashing with Chaining (video)](https://www.youtube.com/watch?v=0M_kIqhwbFo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=8)\n        - [ ] [Table Doubling, Karp-Rabin (video)](https://www.youtube.com/watch?v=BRO7mVIFt08&index=9&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n        - [ ] [Open Addressing, Cryptographic Hashing (video)](https://www.youtube.com/watch?v=rvdJDijO2Ro&index=10&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n        - [ ] [PyCon 2010: The Mighty Dictionary (video)](https://www.youtube.com/watch?v=C4Kc8xzcA68)\n        - [ ] [(Advanced) Randomization: Universal & Perfect Hashing (video)](https://www.youtube.com/watch?v=z0lJ2k0sl1g&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=11)\n        - [ ] [(Advanced) Perfect hashing (video)](https://www.youtube.com/watch?v=N0COwN14gt0&list=PL2B4EEwhKD-NbwZ4ezj7gyc_3yNrojKM9&index=4)\n\n    - [ ] Online Courses:\n        - [ ] [Understanding Hash Functions (video)](https://archive.org/details/0102WhatYouShouldKnow/06_02-understandingHashFunctions.mp4)\n        - [ ] [Using Hash Tables (video)](https://archive.org/details/0102WhatYouShouldKnow/06_03-usingHashTables.mp4)\n        - [ ] [Supporting Hashing (video)](https://archive.org/details/0102WhatYouShouldKnow/06_04-supportingHashing.mp4)\n        - [ ] [Language Support Hash Tables (video)](https://archive.org/details/0102WhatYouShouldKnow/06_05-languageSupportForHashTables.mp4)\n        - [ ] [Core Hash Tables (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/m7UuP/core-hash-tables)\n        - [ ] [Data Structures (video)](https://www.coursera.org/learn/data-structures/home/week/4)\n        - [ ] [Phone Book Problem (video)](https://www.coursera.org/learn/data-structures/lecture/NYZZP/phone-book-problem)\n        - [ ] distributed hash tables:\n            - [Instant Uploads And Storage Optimization In Dropbox (video)](https://www.coursera.org/learn/data-structures/lecture/DvaIb/instant-uploads-and-storage-optimization-in-dropbox)\n            - [Distributed Hash Tables (video)](https://www.coursera.org/learn/data-structures/lecture/tvH8H/distributed-hash-tables)\n\n    - [ ] implement with array using linear probing\n        - hash(k, m) - m is size of hash table\n        - add(key, value) - if key already exists, update value\n        - exists(key)\n        - get(key)\n        - remove(key)\n\n## More Knowledge\n\n- ### Binary search\n    - [ ] [Binary Search (video)](https://www.youtube.com/watch?v=D5SrAga1pno)\n    - [ ] [Binary Search (video)](https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search)\n    - [ ] [detail](https://www.topcoder.com/community/competitive-programming/tutorials/binary-search/)\n    - [ ] Implement:\n        - binary search (on sorted array of integers)\n        - binary search using recursion\n\n- ### Bitwise operations\n    - [ ] [Bits cheat sheet](https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/bits-cheat-sheet.pdf) - you should know many of the powers of 2 from (2^1 to 2^16 and 2^32)\n    - [ ] Get a really good understanding of manipulating bits with: &, |, ^, ~, >>, <<\n        - [ ] [words](https://en.wikipedia.org/wiki/Word_(computer_architecture))\n        - [ ] Good intro:\n            [Bit Manipulation (video)](https://www.youtube.com/watch?v=7jkIUgLC29I)\n        - [ ] [C Programming Tutorial 2-10: Bitwise Operators (video)](https://www.youtube.com/watch?v=d0AwjSpNXR0)\n        - [ ] [Bit Manipulation](https://en.wikipedia.org/wiki/Bit_manipulation)\n        - [ ] [Bitwise Operation](https://en.wikipedia.org/wiki/Bitwise_operation)\n        - [ ] [Bithacks](https://graphics.stanford.edu/~seander/bithacks.html)\n        - [ ] [The Bit Twiddler](https://bits.stephan-brumme.com/)\n        - [ ] [The Bit Twiddler Interactive](https://bits.stephan-brumme.com/interactive.html)\n        - [ ] [Bit Hacks (video)](https://www.youtube.com/watch?v=ZusiKXcz_ac)\n    - [ ] 2s and 1s complement\n        - [Binary: Plusses & Minuses (Why We Use Two's Complement) (video)](https://www.youtube.com/watch?v=lKTsv6iVxV4)\n        - [1s Complement](https://en.wikipedia.org/wiki/Ones%27_complement)\n        - [2s Complement](https://en.wikipedia.org/wiki/Two%27s_complement)\n    - [ ] count set bits\n        - [4 ways to count bits in a byte (video)](https://youtu.be/Hzuzo9NJrlc)\n        - [Count Bits](https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan)\n        - [How To Count The Number Of Set Bits In a 32 Bit Integer](http://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer)\n    - [ ] swap values:\n        - [Swap](https://bits.stephan-brumme.com/swap.html)\n    - [ ] absolute value:\n        - [Absolute Integer](https://bits.stephan-brumme.com/absInteger.html)\n\n## Trees\n\n- ### Trees - Notes & Background\n    - [ ] [Series: Core Trees (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/ovovP/core-trees)\n    - [ ] [Series: Trees (video)](https://www.coursera.org/learn/data-structures/lecture/95qda/trees)\n    - basic tree construction\n    - traversal\n    - manipulation algorithms\n    - [ ] [BFS(breadth-first search) and DFS(depth-first search) (video)](https://www.youtube.com/watch?v=uWL6FJhq5fM)\n        - BFS notes:\n           - level order (BFS, using queue)\n           - time complexity: O(n)\n           - space complexity: best: O(1), worst: O(n/2)=O(n)\n        - DFS notes:\n            - time complexity: O(n)\n            - space complexity:\n                best: O(log n) - avg. height of tree\n                worst: O(n)\n            - inorder (DFS: left, self, right)\n            - postorder (DFS: left, right, self)\n            - preorder (DFS: self, left, right)\n\n- ### Binary search trees: BSTs\n    - [ ] [Binary Search Tree Review (video)](https://www.youtube.com/watch?v=x6At0nzX92o&index=1&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n    - [ ] [Series (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/p82sw/core-introduction-to-binary-search-trees)\n        - starts with symbol table and goes through BST applications\n    - [ ] [Introduction (video)](https://www.coursera.org/learn/data-structures/lecture/E7cXP/introduction)\n    - [ ] [MIT (video)](https://www.youtube.com/watch?v=9Jry5-82I68)\n    - C/C++:\n        - [ ] [Binary search tree - Implementation in C/C++ (video)](https://www.youtube.com/watch?v=COZK7NATh4k&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=28)\n        - [ ] [BST implementation - memory allocation in stack and heap (video)](https://www.youtube.com/watch?v=hWokyBoo0aI&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=29)\n        - [ ] [Find min and max element in a binary search tree (video)](https://www.youtube.com/watch?v=Ut90klNN264&index=30&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n        - [ ] [Find height of a binary tree (video)](https://www.youtube.com/watch?v=_pnqMz5nrRs&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=31)\n        - [ ] [Binary tree traversal - breadth-first and depth-first strategies (video)](https://www.youtube.com/watch?v=9RHO6jU--GU&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=32)\n        - [ ] [Binary tree: Level Order Traversal (video)](https://www.youtube.com/watch?v=86g8jAQug04&index=33&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n        - [ ] [Binary tree traversal: Preorder, Inorder, Postorder (video)](https://www.youtube.com/watch?v=gm8DUJJhmY4&index=34&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n        - [ ] [Check if a binary tree is binary search tree or not (video)](https://www.youtube.com/watch?v=yEwSGhSsT0U&index=35&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n        - [ ] [Delete a node from Binary Search Tree (video)](https://www.youtube.com/watch?v=gcULXE7ViZw&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=36)\n        - [ ] [Inorder Successor in a binary search tree (video)](https://www.youtube.com/watch?v=5cPbNCrdotA&index=37&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n    - [ ] Implement:\n        - [ ] insert    // insert value into tree\n        - [ ] get_node_count // get count of values stored\n        - [ ] print_values // prints the values in the tree, from min to max\n        - [ ] delete_tree\n        - [ ] is_in_tree // returns true if given value exists in the tree\n        - [ ] get_height // returns the height in nodes (single node's height is 1)\n        - [ ] get_min   // returns the minimum value stored in the tree\n        - [ ] get_max   // returns the maximum value stored in the tree\n        - [ ] is_binary_search_tree\n        - [ ] delete_value\n        - [ ] get_successor // returns next-highest value in tree after given value, -1 if none\n\n- ### Heap / Priority Queue / Binary Heap\n    - visualized as a tree, but is usually linear in storage (array, linked list)\n    - [ ] [Heap](https://en.wikipedia.org/wiki/Heap_(data_structure))\n    - [ ] [Introduction (video)](https://www.coursera.org/learn/data-structures/lecture/2OpTs/introduction)\n    - [ ] [Naive Implementations (video)](https://www.coursera.org/learn/data-structures/lecture/z3l9N/naive-implementations)\n    - [ ] [Binary Trees (video)](https://www.coursera.org/learn/data-structures/lecture/GRV2q/binary-trees)\n    - [ ] [Tree Height Remark (video)](https://www.coursera.org/learn/data-structures/supplement/S5xxz/tree-height-remark)\n    - [ ] [Basic Operations (video)](https://www.coursera.org/learn/data-structures/lecture/0g1dl/basic-operations)\n    - [ ] [Complete Binary Trees (video)](https://www.coursera.org/learn/data-structures/lecture/gl5Ni/complete-binary-trees)\n    - [ ] [Pseudocode (video)](https://www.coursera.org/learn/data-structures/lecture/HxQo9/pseudocode)\n    - [ ] [Heap Sort - jumps to start (video)](https://youtu.be/odNJmw5TOEE?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3291)\n    - [ ] [Heap Sort (video)](https://www.coursera.org/learn/data-structures/lecture/hSzMO/heap-sort)\n    - [ ] [Building a heap (video)](https://www.coursera.org/learn/data-structures/lecture/dwrOS/building-a-heap)\n    - [ ] [MIT: Heaps and Heap Sort (video)](https://www.youtube.com/watch?v=B7hVxCmfPtM&index=4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [ ] [CS 61B Lecture 24: Priority Queues (video)](https://archive.org/details/ucberkeley_webcast_yIUFT6AKBGE)\n    - [ ] [Linear Time BuildHeap (max-heap)](https://www.youtube.com/watch?v=MiyLo8adrWw)\n    - [ ] Implement a max-heap:\n        - [ ] insert\n        - [ ] sift_up - needed for insert\n        - [ ] get_max - returns the max item, without removing it\n        - [ ] get_size() - return number of elements stored\n        - [ ] is_empty() - returns true if heap contains no elements\n        - [ ] extract_max - returns the max item, removing it\n        - [ ] sift_down - needed for extract_max\n        - [ ] remove(i) - removes item at index x\n        - [ ] heapify - create a heap from an array of elements, needed for heap_sort\n        - [ ] heap_sort() - take an unsorted array and turn it into a sorted array in-place using a max heap\n            - note: using a min heap instead would save operations, but double the space needed (cannot do in-place).\n\n## Sorting\n\n- [ ] Notes:\n    - Implement sorts & know best case/worst case, average complexity of each:\n        - no bubble sort - it's terrible - O(n^2), except when n <= 16\n    - [ ] stability in sorting algorithms (\"Is Quicksort stable?\")\n        - [Sorting Algorithm Stability](https://en.wikipedia.org/wiki/Sorting_algorithm#Stability)\n        - [Stability In Sorting Algorithms](http://stackoverflow.com/questions/1517793/stability-in-sorting-algorithms)\n        - [Stability In Sorting Algorithms](http://www.geeksforgeeks.org/stability-in-sorting-algorithms/)\n        - [Sorting Algorithms - Stability](http://homepages.math.uic.edu/~leon/cs-mcs401-s08/handouts/stability.pdf)\n    - [ ] Which algorithms can be used on linked lists? Which on arrays? Which on both?\n        - I wouldn't recommend sorting a linked list, but merge sort is doable.\n        - [Merge Sort For Linked List](http://www.geeksforgeeks.org/merge-sort-for-linked-list/)\n\n- For heapsort, see Heap data structure above. Heap sort is great, but not stable.\n\n- [ ] [Sedgewick - Mergesort (5 videos)](https://www.coursera.org/learn/algorithms-part1/home/week/3)\n    - [ ] [1. Mergesort](https://www.coursera.org/learn/algorithms-part1/lecture/ARWDq/mergesort)\n    - [ ] [2. Bottom up Mergesort](https://www.coursera.org/learn/algorithms-part1/lecture/PWNEl/bottom-up-mergesort)\n    - [ ] [3. Sorting Complexity](https://www.coursera.org/learn/algorithms-part1/lecture/xAltF/sorting-complexity)\n    - [ ] [4. Comparators](https://www.coursera.org/learn/algorithms-part1/lecture/9FYhS/comparators)\n    - [ ] [5. Stability](https://www.coursera.org/learn/algorithms-part1/lecture/pvvLZ/stability)\n\n- [ ] [Sedgewick - Quicksort (4 videos)](https://www.coursera.org/learn/algorithms-part1/home/week/3)\n    - [ ] [1. Quicksort](https://www.coursera.org/learn/algorithms-part1/lecture/vjvnC/quicksort)\n    - [ ] [2. Selection](https://www.coursera.org/learn/algorithms-part1/lecture/UQxFT/selection)\n    - [ ] [3. Duplicate Keys](https://www.coursera.org/learn/algorithms-part1/lecture/XvjPd/duplicate-keys)\n    - [ ] [4. System Sorts](https://www.coursera.org/learn/algorithms-part1/lecture/QBNZ7/system-sorts)\n\n- [ ] UC Berkeley:\n    - [ ] [CS 61B Lecture 29: Sorting I (video)](https://archive.org/details/ucberkeley_webcast_EiUvYS2DT6I)\n    - [ ] [CS 61B Lecture 30: Sorting II (video)](https://archive.org/details/ucberkeley_webcast_2hTY3t80Qsk)\n    - [ ] [CS 61B Lecture 32: Sorting III (video)](https://archive.org/details/ucberkeley_webcast_Y6LOLpxg6Dc)\n    - [ ] [CS 61B Lecture 33: Sorting V (video)](https://archive.org/details/ucberkeley_webcast_qNMQ4ly43p4)\n\n- [ ] [Bubble Sort (video)](https://www.youtube.com/watch?v=P00xJgWzz2c&index=1&list=PL89B61F78B552C1AB)\n- [ ] [Analyzing Bubble Sort (video)](https://www.youtube.com/watch?v=ni_zk257Nqo&index=7&list=PL89B61F78B552C1AB)\n- [ ] [Insertion Sort, Merge Sort (video)](https://www.youtube.com/watch?v=Kg4bqzAqRBM&index=3&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n- [ ] [Insertion Sort (video)](https://www.youtube.com/watch?v=c4BRHC7kTaQ&index=2&list=PL89B61F78B552C1AB)\n- [ ] [Merge Sort (video)](https://www.youtube.com/watch?v=GCae1WNvnZM&index=3&list=PL89B61F78B552C1AB)\n- [ ] [Quicksort (video)](https://www.youtube.com/watch?v=y_G9BkAm6B8&index=4&list=PL89B61F78B552C1AB)\n- [ ] [Selection Sort (video)](https://www.youtube.com/watch?v=6nDMgr0-Yyo&index=8&list=PL89B61F78B552C1AB)\n\n- [ ] Merge sort code:\n    - [ ] [Using output array (C)](http://www.cs.yale.edu/homes/aspnes/classes/223/examples/sorting/mergesort.c)\n    - [ ] [Using output array (Python)](https://github.com/jwasham/practice-python/blob/master/merge_sort/merge_sort.py)\n    - [ ] [In-place (C++)](https://github.com/jwasham/practice-cpp/blob/master/merge_sort/merge_sort.cc)\n- [ ] Quick sort code:\n    - [ ] [Implementation (C)](http://www.cs.yale.edu/homes/aspnes/classes/223/examples/randomization/quick.c)\n    - [ ] [Implementation (C)](https://github.com/jwasham/practice-c/blob/master/quick_sort/quick_sort.c)\n    - [ ] [Implementation (Python)](https://github.com/jwasham/practice-python/blob/master/quick_sort/quick_sort.py)\n\n- [ ] Implement:\n    - [ ] Mergesort: O(n log n) average and worst case\n    - [ ] Quicksort O(n log n) average case\n    - Selection sort and insertion sort are both O(n^2) average and worst case\n    - For heapsort, see Heap data structure above.\n\n- [ ] Not required, but I recommended them:\n    - [ ] [Sedgewick - Radix Sorts (6 videos)](https://www.coursera.org/learn/algorithms-part2/home/week/3)\n        - [ ] [1. Strings in Java](https://www.coursera.org/learn/algorithms-part2/lecture/vGHvb/strings-in-java)\n        - [ ] [2. Key Indexed Counting](https://www.coursera.org/learn/algorithms-part2/lecture/2pi1Z/key-indexed-counting)\n        - [ ] [3. Least Significant Digit First String Radix Sort](https://www.coursera.org/learn/algorithms-part2/lecture/c1U7L/lsd-radix-sort)\n        - [ ] [4. Most Significant Digit First String Radix Sort](https://www.coursera.org/learn/algorithms-part2/lecture/gFxwG/msd-radix-sort)\n        - [ ] [5. 3 Way Radix Quicksort](https://www.coursera.org/learn/algorithms-part2/lecture/crkd5/3-way-radix-quicksort)\n        - [ ] [6. Suffix Arrays](https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays)\n    - [ ] [Radix Sort](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#radixSort)\n    - [ ] [Radix Sort (video)](https://www.youtube.com/watch?v=xhr26ia4k38)\n    - [ ] [Radix Sort, Counting Sort (linear time given constraints) (video)](https://www.youtube.com/watch?v=Nz1KZXbghj8&index=7&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [ ] [Randomization: Matrix Multiply, Quicksort, Freivalds' algorithm (video)](https://www.youtube.com/watch?v=cNB2lADK3_s&index=8&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - [ ] [Sorting in Linear Time (video)](https://www.youtube.com/watch?v=pOKy3RZbSws&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=14)\n\nAs a summary, here is a visual representation of [15 sorting algorithms](https://www.youtube.com/watch?v=kPRA0W1kECg).\nIf you need more detail on this subject, see \"Sorting\" section in [Additional Detail on Some Subjects](#additional-detail-on-some-subjects)\n\n## Graphs\n\nGraphs can be used to represent many problems in computer science, so this section is long, like trees and sorting were.\n\n- Notes:\n    - There are 4 basic ways to represent a graph in memory:\n        - objects and pointers\n        - adjacency matrix\n        - adjacency list\n        - adjacency map\n    - Familiarize yourself with each representation and its pros & cons\n    - BFS and DFS - know their computational complexity, their tradeoffs, and how to implement them in real code\n    - When asked a question, look for a graph-based solution first, then move on if none.\n\n- [ ] MIT(videos):\n    - [ ] [Breadth-First Search](https://www.youtube.com/watch?v=s-CYnVz-uh4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=13)\n    - [ ] [Depth-First Search](https://www.youtube.com/watch?v=AfSk24UTFS8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=14)\n\n- [ ] Skiena Lectures - great intro:\n    - [ ] [CSE373 2012 - Lecture 11 - Graph Data Structures (video)](https://www.youtube.com/watch?v=OiXxhDrFruw&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=11)\n    - [ ] [CSE373 2012 - Lecture 12 - Breadth-First Search (video)](https://www.youtube.com/watch?v=g5vF8jscteo&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=12)\n    - [ ] [CSE373 2012 - Lecture 13 - Graph Algorithms (video)](https://www.youtube.com/watch?v=S23W6eTcqdY&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=13)\n    - [ ] [CSE373 2012 - Lecture 14 - Graph Algorithms (con't) (video)](https://www.youtube.com/watch?v=WitPBKGV0HY&index=14&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n    - [ ] [CSE373 2012 - Lecture 15 - Graph Algorithms (con't 2) (video)](https://www.youtube.com/watch?v=ia1L30l7OIg&index=15&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n    - [ ] [CSE373 2012 - Lecture 16 - Graph Algorithms (con't 3) (video)](https://www.youtube.com/watch?v=jgDOQq6iWy8&index=16&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n\n- [ ] Graphs (review and more):\n\n    - [ ] [6.006 Single-Source Shortest Paths Problem (video)](https://www.youtube.com/watch?v=Aa2sqUhIn-E&index=15&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [ ] [6.006 Dijkstra (video)](https://www.youtube.com/watch?v=2E7MmKv0Y24&index=16&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [ ] [6.006 Bellman-Ford (video)](https://www.youtube.com/watch?v=ozsuci5pIso&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=17)\n    - [ ] [6.006 Speeding Up Dijkstra (video)](https://www.youtube.com/watch?v=CHvQ3q_gJ7E&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=18)\n    - [ ] [Aduni: Graph Algorithms I - Topological Sorting, Minimum Spanning Trees, Prim's Algorithm -  Lecture 6 (video)]( https://www.youtube.com/watch?v=i_AQT_XfvD8&index=6&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n    - [ ] [Aduni: Graph Algorithms II - DFS, BFS, Kruskal's Algorithm, Union Find Data Structure - Lecture 7 (video)]( https://www.youtube.com/watch?v=ufj5_bppBsA&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=7)\n    - [ ] [Aduni: Graph Algorithms III: Shortest Path - Lecture 8 (video)](https://www.youtube.com/watch?v=DiedsPsMKXc&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=8)\n    - [ ] [Aduni: Graph Alg. IV: Intro to geometric algorithms - Lecture 9 (video)](https://www.youtube.com/watch?v=XIAQRlNkJAw&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=9)\n    - [ ] ~~[CS 61B 2014 (starting at 58:09) (video)](https://youtu.be/dgjX4HdMI-Q?list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&t=3489)~~\n    - [ ] [CS 61B 2014: Weighted graphs (video)](https://archive.org/details/ucberkeley_webcast_zFbq8vOZ_0k)\n    - [ ] [Greedy Algorithms: Minimum Spanning Tree (video)](https://www.youtube.com/watch?v=tKwnms5iRBU&index=16&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - [ ] [Strongly Connected Components Kosaraju's Algorithm Graph Algorithm (video)](https://www.youtube.com/watch?v=RpgcYiky7uw)\n\n- Full Coursera Course:\n    - [ ] [Algorithms on Graphs (video)](https://www.coursera.org/learn/algorithms-on-graphs/home/welcome)\n\n- I'll implement:\n    - [ ] DFS with adjacency list (recursive)\n    - [ ] DFS with adjacency list (iterative with stack)\n    - [ ] DFS with adjacency matrix (recursive)\n    - [ ] DFS with adjacency matrix (iterative with stack)\n    - [ ] BFS with adjacency list\n    - [ ] BFS with adjacency matrix\n    - [ ] single-source shortest path (Dijkstra)\n    - [ ] minimum spanning tree\n    - DFS-based algorithms (see Aduni videos above):\n        - [ ] check for cycle (needed for topological sort, since we'll check for cycle before starting)\n        - [ ] topological sort\n        - [ ] count connected components in a graph\n        - [ ] list strongly connected components\n        - [ ] check for bipartite graph\n\n## Even More Knowledge\n\n- ### Recursion\n    - [ ] Stanford lectures on recursion & backtracking:\n        - [ ] [Lecture 8 | Programming Abstractions (video)](https://www.youtube.com/watch?v=gl3emqCuueQ&list=PLFE6E58F856038C69&index=8)\n        - [ ] [Lecture 9 | Programming Abstractions (video)](https://www.youtube.com/watch?v=uFJhEPrbycQ&list=PLFE6E58F856038C69&index=9)\n        - [ ] [Lecture 10 | Programming Abstractions (video)](https://www.youtube.com/watch?v=NdF1QDTRkck&index=10&list=PLFE6E58F856038C69)\n        - [ ] [Lecture 11 | Programming Abstractions (video)](https://www.youtube.com/watch?v=p-gpaIGRCQI&list=PLFE6E58F856038C69&index=11)\n    - when it is appropriate to use it\n    - how is tail recursion better than not?\n        - [ ] [What Is Tail Recursion Why Is It So Bad?](https://www.quora.com/What-is-tail-recursion-Why-is-it-so-bad)\n        - [ ] [Tail Recursion (video)](https://www.youtube.com/watch?v=L1jjXGfxozc)\n\n- ### Dynamic Programming\n    - You probably won't see any dynamic programming problems in your interview, but it's worth being able to recognize a problem as being a candidate for dynamic programming.\n    - This subject can be pretty difficult, as each DP soluble problem must be defined as a recursion relation, and coming up with it can be tricky.\n    - I suggest looking at many examples of DP problems until you have a solid understanding of the pattern involved.\n    - [ ] Videos:\n        - the Skiena videos can be hard to follow since he sometimes uses the whiteboard, which is too small to see\n        - [ ] [Skiena: CSE373 2012 - Lecture 19 - Introduction to Dynamic Programming (video)](https://youtu.be/Qc2ieXRgR0k?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1718)\n        - [ ] [Skiena: CSE373 2012 - Lecture 20 - Edit Distance (video)](https://youtu.be/IsmMhMdyeGY?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=2749)\n        - [ ] [Skiena: CSE373 2012 - Lecture 21 - Dynamic Programming Examples (video)](https://youtu.be/o0V9eYF4UI8?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=406)\n        - [ ] [Skiena: CSE373 2012 - Lecture 22 - Applications of Dynamic Programming (video)](https://www.youtube.com/watch?v=dRbMC1Ltl3A&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=22)\n        - [ ] [Simonson: Dynamic Programming 0 (starts at 59:18) (video)](https://youtu.be/J5aJEcOr6Eo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3558)\n        - [ ] [Simonson: Dynamic Programming I - Lecture 11 (video)](https://www.youtube.com/watch?v=0EzHjQ_SOeU&index=11&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n        - [ ] [Simonson: Dynamic programming II - Lecture 12 (video)](https://www.youtube.com/watch?v=v1qiRwuJU7g&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=12)\n        - [ ] List of individual DP problems (each is short):\n            [Dynamic Programming (video)](https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr)\n    - [ ] Yale Lecture notes:\n        - [ ] [Dynamic Programming](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#dynamicProgramming)\n    - [ ] Coursera:\n        - [ ] [The RNA secondary structure problem (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/80RrW/the-rna-secondary-structure-problem)\n        - [ ] [A dynamic programming algorithm (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/PSonq/a-dynamic-programming-algorithm)\n        - [ ] [Illustrating the DP algorithm (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/oUEK2/illustrating-the-dp-algorithm)\n        - [ ] [Running time of the DP algorithm (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/nfK2r/running-time-of-the-dp-algorithm)\n        - [ ] [DP vs. recursive implementation (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/M999a/dp-vs-recursive-implementation)\n        - [ ] [Global pairwise sequence alignment (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/UZ7o6/global-pairwise-sequence-alignment)\n        - [ ] [Local pairwise sequence alignment (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/WnNau/local-pairwise-sequence-alignment)\n\n- ### Object-Oriented Programming\n    - [ ] [Optional: UML 2.0 Series (video)](https://www.youtube.com/watch?v=OkC7HKtiZC0&list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc)\n    - [ ] SOLID OOP Principles: [SOLID Principles (video)](https://www.youtube.com/playlist?list=PL4CE9F710017EA77A)\n\n- ### Design patterns\n    - [ ] [Quick UML review (video)](https://www.youtube.com/watch?v=3cmzqZzwNDM&list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc&index=3)\n    - [ ] Learn these patterns:\n        - [ ] strategy\n        - [ ] singleton\n        - [ ] adapter\n        - [ ] prototype\n        - [ ] decorator\n        - [ ] visitor\n        - [ ] factory, abstract factory\n        - [ ] facade\n        - [ ] observer\n        - [ ] proxy\n        - [ ] delegate\n        - [ ] command\n        - [ ] state\n        - [ ] memento\n        - [ ] iterator\n        - [ ] composite\n        - [ ] flyweight\n    - [ ] [Chapter 6 (Part 1) - Patterns (video)](https://youtu.be/LAP2A80Ajrg?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO&t=3344)\n    - [ ] [Chapter 6 (Part 2) - Abstraction-Occurrence, General Hierarchy, Player-Role, Singleton, Observer, Delegation (video)](https://www.youtube.com/watch?v=U8-PGsjvZc4&index=12&list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO)\n    - [ ] [Chapter 6 (Part 3) - Adapter, Facade, Immutable, Read-Only Interface, Proxy (video)](https://www.youtube.com/watch?v=7sduBHuex4c&index=13&list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO)\n    - [ ] [Series of videos (27 videos)](https://www.youtube.com/playlist?list=PLF206E906175C7E07)\n    - [ ] [Head First Design Patterns](https://www.amazon.com/Head-First-Design-Patterns-Freeman/dp/0596007124)\n        - I know the canonical book is \"Design Patterns: Elements of Reusable Object-Oriented Software\", but Head First is great for beginners to OO.\n    - [ ] [Handy reference: 101 Design Patterns & Tips for Developers](https://sourcemaking.com/design-patterns-and-tips)\n    - [ ] [Design patterns for humans](https://github.com/kamranahmedse/design-patterns-for-humans#structural-design-patterns)\n\n\n- ### Combinatorics (n choose k) & Probability\n    - [ ] [Math Skills: How to find Factorial, Permutation and Combination (Choose) (video)](https://www.youtube.com/watch?v=8RRo6Ti9d0U)\n    - [ ] [Make School: Probability (video)](https://www.youtube.com/watch?v=sZkAAk9Wwa4)\n    - [ ] [Make School: More Probability and Markov Chains (video)](https://www.youtube.com/watch?v=dNaJg-mLobQ)\n    - [ ] Khan Academy:\n        - Course layout:\n            - [ ] [Basic Theoretical Probability](https://www.khanacademy.org/math/probability/probability-and-combinatorics-topic)\n        - Just the videos - 41 (each are simple and each are short):\n            - [ ] [Probability Explained (video)](https://www.youtube.com/watch?v=uzkc-qNVoOk&list=PLC58778F28211FA19)\n\n- ### NP, NP-Complete and Approximation Algorithms\n    - Know about the most famous classes of NP-complete problems, such as traveling salesman and the knapsack problem,\n        and be able to recognize them when an interviewer asks you them in disguise.\n    - Know what NP-complete means.\n    - [ ] [Computational Complexity (video)](https://www.youtube.com/watch?v=moPtwq_cVH8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=23)\n    - [ ] Simonson:\n        - [ ] [Greedy Algs. II & Intro to NP Completeness (video)](https://youtu.be/qcGnJ47Smlo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=2939)\n        - [ ] [NP Completeness II & Reductions (video)](https://www.youtube.com/watch?v=e0tGC6ZQdQE&index=16&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n        - [ ] [NP Completeness III (Video)](https://www.youtube.com/watch?v=fCX1BGT3wjE&index=17&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n        - [ ] [NP Completeness IV (video)](https://www.youtube.com/watch?v=NKLDp3Rch3M&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=18)\n    - [ ] Skiena:\n        - [ ] [CSE373 2012 - Lecture 23 - Introduction to NP-Completeness (video)](https://youtu.be/KiK5TVgXbFg?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1508)\n        - [ ] [CSE373 2012 - Lecture 24 - NP-Completeness Proofs (video)](https://www.youtube.com/watch?v=27Al52X3hd4&index=24&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n        - [ ] [CSE373 2012 - Lecture 25 - NP-Completeness Challenge (video)](https://www.youtube.com/watch?v=xCPH4gwIIXM&index=25&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n    - [ ] [Complexity: P, NP, NP-completeness, Reductions (video)](https://www.youtube.com/watch?v=eHZifpgyH_4&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=22)\n    - [ ] [Complexity: Approximation Algorithms (video)](https://www.youtube.com/watch?v=MEz1J9wY2iM&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=24)\n    - [ ] [Complexity: Fixed-Parameter Algorithms (video)](https://www.youtube.com/watch?v=4q-jmGrmxKs&index=25&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - Peter Norvig discusses near-optimal solutions to traveling salesman problem:\n        - [Jupyter Notebook](http://nbviewer.jupyter.org/url/norvig.com/ipython/TSP.ipynb)\n    - Pages 1048 - 1140 in CLRS if you have it.\n\n- ### Caches\n    - [ ] LRU cache:\n        - [ ] [The Magic of LRU Cache (100 Days of Google Dev) (video)](https://www.youtube.com/watch?v=R5ON3iwx78M)\n        - [ ] [Implementing LRU (video)](https://www.youtube.com/watch?v=bq6N7Ym81iI)\n        - [ ] [LeetCode - 146 LRU Cache (C++) (video)](https://www.youtube.com/watch?v=8-FZRAjR7qU)\n    - [ ] CPU cache:\n        - [ ] [MIT 6.004 L15: The Memory Hierarchy (video)](https://www.youtube.com/watch?v=vjYF_fAZI5E&list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-&index=24)\n        - [ ] [MIT 6.004 L16: Cache Issues (video)](https://www.youtube.com/watch?v=ajgC3-pyGlk&index=25&list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-)\n\n- ### Processes and Threads\n    - [ ] Computer Science 162 - Operating Systems (25 videos):\n        - for processes and threads see videos 1-11\n        - [Operating Systems and System Programming (video)](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c)\n    - [What Is The Difference Between A Process And A Thread?](https://www.quora.com/What-is-the-difference-between-a-process-and-a-thread)\n    - Covers:\n        - Processes, Threads, Concurrency issues\n            - difference between processes and threads\n            - processes\n            - threads\n            - locks\n            - mutexes\n            - semaphores\n            - monitors\n            - how they work\n            - deadlock\n            - livelock\n        - CPU activity, interrupts, context switching\n        - Modern concurrency constructs with multicore processors\n        - [Paging, segmentation and virtual memory (video)](https://www.youtube.com/watch?v=LKe7xK0bF7o&list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&index=2)\n        - [Interrupts (video)](https://www.youtube.com/watch?v=uFKi2-J-6II&list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&index=3)\n        - Process resource needs (memory: code, static storage, stack, heap, and also file descriptors, i/o)\n        - Thread resource needs (shares above (minus stack) with other threads in the same process but each has its own pc, stack counter, registers, and stack)\n        - Forking is really copy on write (read-only) until the new process writes to memory, then it does a full copy.\n        - Context switching\n            - How context switching is initiated by the operating system and underlying hardware\n    - [ ] [threads in C++ (series - 10 videos)](https://www.youtube.com/playlist?list=PL5jc9xFGsL8E12so1wlMS0r0hTQoJL74M)\n    - [ ] concurrency in Python (videos):\n        - [ ] [Short series on threads](https://www.youtube.com/playlist?list=PL1H1sBF1VAKVMONJWJkmUh6_p8g4F2oy1)\n        - [ ] [Python Threads](https://www.youtube.com/watch?v=Bs7vPNbB9JM)\n        - [ ] [Understanding the Python GIL (2010)](https://www.youtube.com/watch?v=Obt-vMVdM8s)\n            - [reference](http://www.dabeaz.com/GIL)\n        - [ ] [David Beazley - Python Concurrency From the Ground Up: LIVE! - PyCon 2015](https://www.youtube.com/watch?v=MCs5OvhV9S4)\n        - [ ] [Keynote David Beazley - Topics of Interest (Python Asyncio)](https://www.youtube.com/watch?v=ZzfHjytDceU)\n        - [ ] [Mutex in Python](https://www.youtube.com/watch?v=0zaPs8OtyKY)\n\n- ### Testing\n    - To cover:\n        - how unit testing works\n        - what are mock objects\n        - what is integration testing\n        - what is dependency injection\n    - [ ] [Agile Software Testing with James Bach (video)](https://www.youtube.com/watch?v=SAhJf36_u5U)\n    - [ ] [Open Lecture by James Bach on Software Testing (video)](https://www.youtube.com/watch?v=ILkT_HV9DVU)\n    - [ ] [Steve Freeman - Test-Driven Development (that\u2019s not what we meant) (video)](https://vimeo.com/83960706)\n        - [slides](http://gotocon.com/dl/goto-berlin-2013/slides/SteveFreeman_TestDrivenDevelopmentThatsNotWhatWeMeant.pdf)\n    - [ ] Dependency injection:\n        - [ ] [video](https://www.youtube.com/watch?v=IKD2-MAkXyQ)\n        - [ ] [Tao Of Testing](http://jasonpolites.github.io/tao-of-testing/ch3-1.1.html)\n    - [ ] [How to write tests](http://jasonpolites.github.io/tao-of-testing/ch4-1.1.html)\n\n- ### Scheduling\n    - in an OS, how it works\n    - can be gleaned from Operating System videos\n\n- ### String searching & manipulations\n    - [ ] [Sedgewick - Suffix Arrays (video)](https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays)\n    - [ ] [Sedgewick - Substring Search (videos)](https://www.coursera.org/learn/algorithms-part2/home/week/4)\n        - [ ] [1. Introduction to Substring Search](https://www.coursera.org/learn/algorithms-part2/lecture/n3ZpG/introduction-to-substring-search)\n        - [ ] [2. Brute-Force Substring Search](https://www.coursera.org/learn/algorithms-part2/lecture/2Kn5i/brute-force-substring-search)\n        - [ ] [3. Knuth-Morris Pratt](https://www.coursera.org/learn/algorithms-part2/lecture/TAtDr/knuth-morris-pratt)\n        - [ ] [4. Boyer-Moore](https://www.coursera.org/learn/algorithms-part2/lecture/CYxOT/boyer-moore)\n        - [ ] [5. Rabin-Karp](https://www.coursera.org/learn/algorithms-part2/lecture/3KiqT/rabin-karp)\n    - [ ] [Search pattern in text (video)](https://www.coursera.org/learn/data-structures/lecture/tAfHI/search-pattern-in-text)\n\n    If you need more detail on this subject, see \"String Matching\" section in [Additional Detail on Some Subjects](#additional-detail-on-some-subjects)\n\n- ### Tries\n    - Note there are different kinds of tries. Some have prefixes, some don't, and some use string instead of bits\n        to track the path.\n    - I read through code, but will not implement.\n    - [ ] [Sedgewick - Tries (3 videos)](https://www.coursera.org/learn/algorithms-part2/home/week/4)\n        - [ ] [1. R Way Tries](https://www.coursera.org/learn/algorithms-part2/lecture/CPVdr/r-way-tries)\n        - [ ] [2. Ternary Search Tries](https://www.coursera.org/learn/algorithms-part2/lecture/yQM8K/ternary-search-tries)\n        - [ ] [3. Character Based Operations](https://www.coursera.org/learn/algorithms-part2/lecture/jwNmV/character-based-operations)\n    - [ ] [Notes on Data Structures and Programming Techniques](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Tries)\n    - [ ] Short course videos:\n        - [ ] [Introduction To Tries (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/08Xyf/core-introduction-to-tries)\n        - [ ] [Performance Of Tries (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/PvlZW/core-performance-of-tries)\n        - [ ] [Implementing A Trie (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/DFvd3/core-implementing-a-trie)\n    - [ ] [The Trie: A Neglected Data Structure](https://www.toptal.com/java/the-trie-a-neglected-data-structure)\n    - [ ] [TopCoder - Using Tries](https://www.topcoder.com/community/competitive-programming/tutorials/using-tries/)\n    - [ ] [Stanford Lecture (real world use case) (video)](https://www.youtube.com/watch?v=TJ8SkcUSdbU)\n    - [ ] [MIT, Advanced Data Structures, Strings (can get pretty obscure about halfway through) (video)](https://www.youtube.com/watch?v=NinWEPPrkDQ&index=16&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf)\n\n- ### Floating Point Numbers\n    - [ ] simple 8-bit: [Representation of Floating Point Numbers - 1 (video - there is an error in calculations - see video description)](https://www.youtube.com/watch?v=ji3SfClm8TU)\n    - [ ] 32 bit: [IEEE754 32-bit floating point binary (video)](https://www.youtube.com/watch?v=50ZYcZebIec)\n\n- ### Unicode\n    - [ ] [The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets]( http://www.joelonsoftware.com/articles/Unicode.html)\n    - [ ] [What Every Programmer Absolutely, Positively Needs To Know About Encodings And Character Sets To Work With Text](http://kunststube.net/encoding/)\n\n- ### Endianness\n    - [ ] [Big And Little Endian](https://web.archive.org/web/20180107141940/http://www.cs.umd.edu:80/class/sum2003/cmsc311/Notes/Data/endian.html)\n    - [ ] [Big Endian Vs Little Endian (video)](https://www.youtube.com/watch?v=JrNF0KRAlyo)\n    - [ ] [Big And Little Endian Inside/Out (video)](https://www.youtube.com/watch?v=oBSuXP-1Tc0)\n        - Very technical talk for kernel devs. Don't worry if most is over your head.\n        - The first half is enough.\n\n- ### Networking\n    - **if you have networking experience or want to be a reliability engineer or operations engineer, expect questions**\n    - otherwise, this is just good to know\n    - [ ] [Khan Academy](https://www.khanacademy.org/computing/computer-science/computers-and-internet-code-org)\n    - [ ] [UDP and TCP: Comparison of Transport Protocols (video)](https://www.youtube.com/watch?v=Vdc8TCESIg8)\n    - [ ] [TCP/IP and the OSI Model Explained! (video)](https://www.youtube.com/watch?v=e5DEVa9eSN0)\n    - [ ] [Packet Transmission across the Internet. Networking & TCP/IP tutorial. (video)](https://www.youtube.com/watch?v=nomyRJehhnM)\n    - [ ] [HTTP (video)](https://www.youtube.com/watch?v=WGJrLqtX7As)\n    - [ ] [SSL and HTTPS (video)](https://www.youtube.com/watch?v=S2iBR2ZlZf0)\n    - [ ] [SSL/TLS (video)](https://www.youtube.com/watch?v=Rp3iZUvXWlM)\n    - [ ] [HTTP 2.0 (video)](https://www.youtube.com/watch?v=E9FxNzv1Tr8)\n    - [ ] [Video Series (21 videos) (video)](https://www.youtube.com/playlist?list=PLEbnTDJUr_IegfoqO4iPnPYQui46QqT0j)\n    - [ ] [Subnetting Demystified - Part 5 CIDR Notation (video)](https://www.youtube.com/watch?v=t5xYI0jzOf4)\n    - [ ] Sockets:\n        - [ ] [Java - Sockets - Introduction (video)](https://www.youtube.com/watch?v=6G_W54zuadg&t=6s)\n        - [ ] [Socket Programming (video)](https://www.youtube.com/watch?v=G75vN2mnJeQ)\n\n## System Design, Scalability, Data Handling\n\n**You can expect system design questions if you have 4+ years of experience.**\n\n- Scalability and System Design are very large topics with many topics and resources, since\n      there is a lot to consider when designing a software/hardware system that can scale.\n      Expect to spend quite a bit of time on this.\n- Considerations:\n    - scalability\n        - Distill large data sets to single values\n        - Transform one data set to another\n        - Handling obscenely large amounts of data\n    - system design\n        - features sets\n        - interfaces\n        - class hierarchies\n        - designing a system under certain constraints\n        - simplicity and robustness\n        - tradeoffs\n        - performance analysis and optimization\n- [ ] **START HERE**: [The System Design Primer](https://github.com/donnemartin/system-design-primer)\n- [ ] [System Design from HiredInTech](http://www.hiredintech.com/system-design/)\n- [ ] [How Do I Prepare To Answer Design Questions In A Technical Inverview?](https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview?redirected_qid=1500023)\n- [ ] [8 Things You Need to Know Before a System Design Interview](http://blog.gainlo.co/index.php/2015/10/22/8-things-you-need-to-know-before-system-design-interviews/)\n- [ ] [Algorithm design](http://www.hiredintech.com/algorithm-design/)\n- [ ] [Database Normalization - 1NF, 2NF, 3NF and 4NF (video)](https://www.youtube.com/watch?v=UrYLYV7WSHM)\n- [ ] [System Design Interview](https://github.com/checkcheckzz/system-design-interview) - There are a lot of resources in this one. Look through the articles and examples. I put some of them below.\n- [ ] [How to ace a systems design interview](http://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n- [ ] [Numbers Everyone Should Know](http://everythingisdata.wordpress.com/2009/10/17/numbers-everyone-should-know/)\n- [ ] [How long does it take to make a context switch?](http://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html)\n- [ ] [Transactions Across Datacenters (video)](https://www.youtube.com/watch?v=srOgpXECblk)\n- [ ] [A plain English introduction to CAP Theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem/)\n- [ ] Consensus Algorithms:\n    - [ ] Paxos - [Paxos Agreement - Computerphile (video)](https://www.youtube.com/watch?v=s8JqcZtvnsM)\n    - [ ] Raft - [An Introduction to the Raft Distributed Consensus Algorithm (video)](https://www.youtube.com/watch?v=P9Ydif5_qvE)\n        - [ ] [Easy-to-read paper](https://raft.github.io/)\n        - [ ] [Infographic](http://thesecretlivesofdata.com/raft/)\n- [ ] [Consistent Hashing](http://www.tom-e-white.com/2007/11/consistent-hashing.html)\n- [ ] [NoSQL Patterns](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n- [ ] Scalability:\n    - You don't need all of these. Just pick a few that interest you.\n    - [ ] [Great overview (video)](https://www.youtube.com/watch?v=-W9F__D3oY4)\n    - [ ] Short series:\n        - [Clones](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n        - [Database](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n        - [Cache](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n        - [Asynchronism](http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n    - [ ] [Scalable Web Architecture and Distributed Systems](http://www.aosabook.org/en/distsys.html)\n    - [ ] [Fallacies of Distributed Computing Explained](https://pages.cs.wisc.edu/~zuyu/files/fallacies.pdf)\n    - [ ] [Pragmatic Programming Techniques](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n        - [extra: Google Pregel Graph Processing](http://horicky.blogspot.com/2010/07/google-pregel-graph-processing.html)\n    - [ ] [Jeff Dean - Building Software Systems At Google and Lessons Learned (video)](https://www.youtube.com/watch?v=modXC5IWTJI)\n    - [ ] [Introduction to Architecting Systems for Scale](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n    - [ ] [Scaling mobile games to a global audience using App Engine and Cloud Datastore (video)](https://www.youtube.com/watch?v=9nWyWwY2Onc)\n    - [ ] [How Google Does Planet-Scale Engineering for Planet-Scale Infra (video)](https://www.youtube.com/watch?v=H4vMcD7zKM0)\n    - [ ] [The Importance of Algorithms](https://www.topcoder.com/community/competitive-programming/tutorials/the-importance-of-algorithms/)\n    - [ ] [Sharding](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n    - [ ] [Scale at Facebook (2012), \"Building for a Billion Users\" (video)](https://www.youtube.com/watch?v=oodS71YtkGU)\n    - [ ] [Engineering for the Long Game - Astrid Atkinson Keynote(video)](https://www.youtube.com/watch?v=p0jGmgIrf_M&list=PLRXxvay_m8gqVlExPC5DG3TGWJTaBgqSA&index=4)\n    - [ ] [7 Years Of YouTube Scalability Lessons In 30 Minutes](http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html)\n        - [video](https://www.youtube.com/watch?v=G-lGCC4KKok)\n    - [ ] [How PayPal Scaled To Billions Of Transactions Daily Using Just 8VMs](http://highscalability.com/blog/2016/8/15/how-paypal-scaled-to-billions-of-transactions-daily-using-ju.html)\n    - [ ] [How to Remove Duplicates in Large Datasets](https://blog.clevertap.com/how-to-remove-duplicates-in-large-datasets/)\n    - [ ] [A look inside Etsy's scale and engineering culture with Jon Cowie (video)](https://www.youtube.com/watch?v=3vV4YiqKm1o)\n    - [ ] [What Led Amazon to its Own Microservices Architecture](http://thenewstack.io/led-amazon-microservices-architecture/)\n    - [ ] [To Compress Or Not To Compress, That Was Uber's Question](https://eng.uber.com/trip-data-squeeze/)\n    - [ ] [Asyncio Tarantool Queue, Get In The Queue](http://highscalability.com/blog/2016/3/3/asyncio-tarantool-queue-get-in-the-queue.html)\n    - [ ] [When Should Approximate Query Processing Be Used?](http://highscalability.com/blog/2016/2/25/when-should-approximate-query-processing-be-used.html)\n    - [ ] [Google's Transition From Single Datacenter, To Failover, To A Native Multihomed Architecture]( http://highscalability.com/blog/2016/2/23/googles-transition-from-single-datacenter-to-failover-to-a-n.html)\n    - [ ] [Spanner](http://highscalability.com/blog/2012/9/24/google-spanners-most-surprising-revelation-nosql-is-out-and.html)\n    - [ ] [Machine Learning Driven Programming: A New Programming For A New World](http://highscalability.com/blog/2016/7/6/machine-learning-driven-programming-a-new-programming-for-a.html)\n    - [ ] [The Image Optimization Technology That Serves Millions Of Requests Per Day](http://highscalability.com/blog/2016/6/15/the-image-optimization-technology-that-serves-millions-of-re.html)\n    - [ ] [A Patreon Architecture Short](http://highscalability.com/blog/2016/2/1/a-patreon-architecture-short.html)\n    - [ ] [Tinder: How Does One Of The Largest Recommendation Engines Decide Who You'll See Next?](http://highscalability.com/blog/2016/1/27/tinder-how-does-one-of-the-largest-recommendation-engines-de.html)\n    - [ ] [Design Of A Modern Cache](http://highscalability.com/blog/2016/1/25/design-of-a-modern-cache.html)\n    - [ ] [Live Video Streaming At Facebook Scale](http://highscalability.com/blog/2016/1/13/live-video-streaming-at-facebook-scale.html)\n    - [ ] [A Beginner's Guide To Scaling To 11 Million+ Users On Amazon's AWS](http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html)\n    - [ ] [How Does The Use Of Docker Effect Latency?](http://highscalability.com/blog/2015/12/16/how-does-the-use-of-docker-effect-latency.html)\n    - [ ] [A 360 Degree View Of The Entire Netflix Stack](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)\n    - [ ] [Latency Is Everywhere And It Costs You Sales - How To Crush It](http://highscalability.com/latency-everywhere-and-it-costs-you-sales-how-crush-it)\n    - [ ] [Serverless (very long, just need the gist)](http://martinfowler.com/articles/serverless.html)\n    - [ ] [What Powers Instagram: Hundreds of Instances, Dozens of Technologies](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances)\n    - [ ] [Cinchcast Architecture - Producing 1,500 Hours Of Audio Every Day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html)\n    - [ ] [Justin.Tv's Live Video Broadcasting Architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html)\n    - [ ] [Playfish's Social Gaming Architecture - 50 Million Monthly Users And Growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html)\n    - [ ] [TripAdvisor Architecture - 40M Visitors, 200M Dynamic Page Views, 30TB Data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html)\n    - [ ] [PlentyOfFish Architecture](http://highscalability.com/plentyoffish-architecture)\n    - [ ] [Salesforce Architecture - How They Handle 1.3 Billion Transactions A Day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html)\n    - [ ] [ESPN's Architecture At Scale - Operating At 100,000 Duh Nuh Nuhs Per Second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html)\n    - [ ] See \"Messaging, Serialization, and Queueing Systems\" way below for info on some of the technologies that can glue services together\n    - [ ] Twitter:\n        - [O'Reilly MySQL CE 2011: Jeremy Cole, \"Big and Small Data at @Twitter\" (video)](https://www.youtube.com/watch?v=5cKTP36HVgI)\n        - [Timelines at Scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)\n    - For even more, see \"Mining Massive Datasets\" video series in the [Video Series](#video-series) section.\n- [ ] Practicing the system design process: Here are some ideas to try working through on paper, each with some documentation on how it was handled in the real world:\n    - review: [The System Design Primer](https://github.com/donnemartin/system-design-primer)\n    - [System Design from HiredInTech](http://www.hiredintech.com/system-design/)\n    - [cheat sheet](https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/system-design.pdf)\n    - flow:\n        1. Understand the problem and scope:\n            - define the use cases, with interviewer's help\n            - suggest additional features\n            - remove items that interviewer deems out of scope\n            - assume high availability is required, add as a use case\n        2. Think about constraints:\n            - ask how many requests per month\n            - ask how many requests per second (they may volunteer it or make you do the math)\n            - estimate reads vs. writes percentage\n            - keep 80/20 rule in mind when estimating\n            - how much data written per second\n            - total storage required over 5 years\n            - how much data read per second\n        3. Abstract design:\n            - layers (service, data, caching)\n            - infrastructure: load balancing, messaging\n            - rough overview of any key algorithm that drives the service\n            - consider bottlenecks and determine solutions\n    - Exercises:\n        - [Design a CDN network: old article](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci)\n        - [Design a random unique ID generation system](https://blog.twitter.com/2010/announcing-snowflake)\n        - [Design an online multiplayer card game](http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)\n        - [Design a key-value database](http://www.slideshare.net/dvirsky/introduction-to-redis)\n        - [Design a picture sharing system](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)\n        - [Design a recommendation system](http://ijcai13.org/files/tutorial_slides/td3.pdf)\n        - [Design a URL-shortener system: copied from above](http://www.hiredintech.com/system-design/the-system-design-process/)\n        - [Design a cache system](https://www.adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n---\n\n## Final Review\n\n    This section will have shorter videos that you can watch pretty quickly to review most of the important concepts.\n    It's nice if you want a refresher often.\n\n- [ ] Series of 2-3 minutes short subject videos (23 videos)\n    - [Videos](https://www.youtube.com/watch?v=r4r1DZcx1cM&list=PLmVb1OknmNJuC5POdcDv5oCS7_OUkDgpj&index=22)\n- [ ] Series of 2-5 minutes short subject videos - Michael Sambol (18 videos):\n    - [Videos](https://www.youtube.com/channel/UCzDJwLWoYCUQowF_nG3m5OQ)\n- [ ] [Sedgewick Videos - Algorithms I](https://www.coursera.org/learn/algorithms-part1)\n- [ ] [Sedgewick Videos - Algorithms II](https://www.coursera.org/learn/algorithms-part2)\n\n---\n\n## Coding Question Practice\n\nNow that you know all the computer science topics above, it's time to practice answering coding problems.\n\n**Coding question practice is not about memorizing answers to programming problems.**\n\nWhy you need to practice doing programming problems:\n- problem recognition, and where the right data structures and algorithms fit in\n- gathering requirements for the problem\n- talking your way through the problem like you will in the interview\n- coding on a whiteboard or paper, not a computer\n- coming up with time and space complexity for your solutions\n- testing your solutions\n\nThere is a great intro for methodical, communicative problem solving in an interview. You'll get this from the programming\ninterview books, too, but I found this outstanding:\n[Algorithm design canvas](http://www.hiredintech.com/algorithm-design/)\n\nNo whiteboard at home? That makes sense. I'm a weirdo and have a big whiteboard. Instead of a whiteboard, pick up a\nlarge drawing pad from an art store. You can sit on the couch and practice. This is my \"sofa whiteboard\".\nI added the pen in the photo for scale. If you use a pen, you'll wish you could erase. Gets messy quick. I use a pencil \nand eraser.\n\n![my sofa whiteboard](https://d3j2pkmjtin6ou.cloudfront.net/art_board_sm_2.jpg)\n\nSupplemental:\n\n- [Mathematics for Topcoders](https://www.topcoder.com/community/competitive-programming/tutorials/mathematics-for-topcoders/)\n- [Dynamic Programming \u2013 From Novice to Advanced](https://www.topcoder.com/community/competitive-programming/tutorials/dynamic-programming-from-novice-to-advanced/)\n- [MIT Interview Materials](https://web.archive.org/web/20160906124824/http://courses.csail.mit.edu/iap/interview/materials.php)\n- [Exercises for getting better at a given language](http://exercism.io/languages)\n\n**Read and Do Programming Problems (in this order):**\n\n- [ ] [Programming Interviews Exposed: Secrets to Landing Your Next Job, 2nd Edition](http://www.wiley.com/WileyCDA/WileyTitle/productCd-047012167X.html)\n    - answers in C, C++ and Java\n- [ ] [Cracking the Coding Interview, 6th Edition](http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/)\n    - answers in Java\n\nSee [Book List above](#book-list)\n\n\n## Coding exercises/challenges\n\nOnce you've learned your brains out, put those brains to work.\nTake coding challenges every day, as many as you can.\n\n- [How to Find a Solution](https://www.topcoder.com/community/competitive-programming/tutorials/how-to-find-a-solution/)\n- [How to Dissect a Topcoder Problem Statement](https://www.topcoder.com/community/competitive-programming/tutorials/how-to-dissect-a-topcoder-problem-statement/)\n\nCoding Interview Question Videos:\n- [IDeserve (88 videos)](https://www.youtube.com/watch?v=NBcqBddFbZw&list=PLamzFoFxwoNjPfxzaWqs7cZGsPYy0x_gI)\n- [Tushar Roy (5 playlists)](https://www.youtube.com/user/tusharroy2525/playlists?shelf_id=2&view=50&sort=dd)\n    - Super for walkthroughs of problem solutions.\n- [Nick White - LeetCode Solutions (187 Videos)](https://www.youtube.com/playlist?list=PLU_sdQYzUj2keVENTP0a5rdykRSgg9Wp-)\n    - Good explanations of solution and the code.\n    - You can watch several in a short time.\n- [FisherCoder - LeetCode Solutions](https://youtube.com/FisherCoder)\n\nChallenge sites:\n- [LeetCode](https://leetcode.com/)\n    - My favorite coding problem site. It's worth the subscription money for the 1-2 months you'll likely be preparing.\n    - [LeetCode solutions from FisherCoder](https://github.com/fishercoder1534/Leetcode) \n    - See Nick White Videos above for short code-throughs\n- [HackerRank](https://www.hackerrank.com/)\n- [TopCoder](https://www.topcoder.com/)\n- [InterviewCake](https://www.interviewcake.com/)\n- [Geeks for Geeks](http://www.geeksforgeeks.org/)\n- [InterviewBit](https://www.interviewbit.com/invite/icjf)\n- [Project Euler (math-focused)](https://projecteuler.net/index.php?section=problems)\n\nLanguage-learning sites, with challenges:\n- [Codewars](http://www.codewars.com)\n- [Codility](https://codility.com/programmers/)\n- [HackerEarth](https://www.hackerearth.com/)\n- [Sphere Online Judge (spoj)](http://www.spoj.com/)\n- [Codechef](https://www.codechef.com/)\n\nChallenge repos:\n- [Interactive Coding Interview Challenges in Python](https://github.com/donnemartin/interactive-coding-challenges)\n\nMock Interviews:\n- [Gainlo.co: Mock interviewers from big companies](http://www.gainlo.co/) - I used this and it helped me relax for the phone screen and on-site interview.\n- [Pramp: Mock interviews from/with peers](https://www.pramp.com/) - peer-to-peer model of practice interviews\n- [Refdash: Mock interviews and expedited interviews](https://refdash.com/) - also help candidates fast track by skipping multiple interviews with tech companies.\n\n\n## Once you're closer to the interview\n\n- Cracking The Coding Interview Set 2 (videos):\n    - [Cracking The Code Interview](https://www.youtube.com/watch?v=4NIb9l3imAo)\n    - [Cracking the Coding Interview - Fullstack Speaker Series](https://www.youtube.com/watch?v=Eg5-tdAwclo)\n\n## Your Resume\n\n- See Resume prep items in Cracking The Coding Interview and back of Programming Interviews Exposed\n\n\n## Be thinking of for when the interview comes\n\nThink of about 20 interview questions you'll get, along with the lines of the items below. Have 2-3 answers for each.\nHave a story, not just data, about something you accomplished.\n\n- Why do you want this job?\n- What's a tough problem you've solved?\n- Biggest challenges faced?\n- Best/worst designs seen?\n- Ideas for improving an existing product.\n- How do you work best, as an individual and as part of a team?\n- Which of your skills or experiences would be assets in the role and why?\n- What did you most enjoy at [job x / project y]?\n- What was the biggest challenge you faced at [job x / project y]?\n- What was the hardest bug you faced at [job x / project y]?\n- What did you learn at [job x / project y]?\n- What would you have done better at [job x / project y]?\n\n## Have questions for the interviewer\n\n    Some of mine (I already may know answer to but want their opinion or team perspective):\n\n- How large is your team?\n- What does your dev cycle look like? Do you do waterfall/sprints/agile?\n- Are rushes to deadlines common? Or is there flexibility?\n- How are decisions made in your team?\n- How many meetings do you have per week?\n- Do you feel your work environment helps you concentrate?\n- What are you working on?\n- What do you like about it?\n- What is the work life like?\n- How is work/life balance?\n\n## Once You've Got The Job\n\nCongratulations!\n\nKeep learning.\n\nYou're never really done.\n\n---\n\n    *****************************************************************************************************\n    *****************************************************************************************************\n\n    Everything below this point is optional.\n    By studying these, you'll get greater exposure to more CS concepts, and will be better prepared for\n    any software engineering job. You'll be a much more well-rounded software engineer.\n\n    *****************************************************************************************************\n    *****************************************************************************************************\n\n---\n\n## Additional Books\n\n    These are here so you can dive into a topic you find interesting.\n\n- [The Unix Programming Environment](https://www.amazon.com/dp/013937681X)\n    - an oldie but a goodie\n- [The Linux Command Line: A Complete Introduction](https://www.amazon.com/dp/1593273894/)\n    - a modern option\n- [TCP/IP Illustrated Series](https://en.wikipedia.org/wiki/TCP/IP_Illustrated)\n- [Head First Design Patterns](https://www.amazon.com/gp/product/0596007124/)\n    - a gentle introduction to design patterns\n- [Design Patterns: Elements of Reusable Object-Oriente\u200bd Software](https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612)\n    - aka the \"Gang Of Four\" book, or GOF\n    - the canonical design patterns book\n- [UNIX and Linux System Administration Handbook, 5th Edition](https://www.amazon.com/UNIX-Linux-System-Administration-Handbook/dp/0134277554/)\n- [Algorithm Design Manual](http://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202) (Skiena)\n    - As a review and problem recognition\n    - The algorithm catalog portion is well beyond the scope of difficulty you'll get in an interview.\n    - This book has 2 parts:\n        - class textbook on data structures and algorithms\n            - pros:\n                - is a good review as any algorithms textbook would be\n                - nice stories from his experiences solving problems in industry and academia\n                - code examples in C\n            - cons:\n                - can be as dense or impenetrable as CLRS, and in some cases, CLRS may be a better alternative for some subjects\n                - chapters 7, 8, 9 can be painful to try to follow, as some items are not explained well or require more brain than I have\n                - don't get me wrong: I like Skiena, his teaching style, and mannerisms, but I may not be Stony Brook material.\n        - algorithm catalog:\n            - this is the real reason you buy this book.\n            - about to get to this part. Will update here once I've made my way through it.\n    - Can rent it on kindle\n    - Answers:\n        - [Solutions](http://www.algorithm.cs.sunysb.edu/algowiki/index.php/The_Algorithms_Design_Manual_(Second_Edition))\n        - [Solutions](http://blog.panictank.net/category/algorithmndesignmanualsolutions/page/2/)\n    - [Errata](http://www3.cs.stonybrook.edu/~skiena/algorist/book/errata)\n- [Write Great Code: Volume 1: Understanding the Machine](https://www.amazon.com/Write-Great-Code-Understanding-Machine/dp/1593270038)\n    - The book was published in 2004, and is somewhat outdated, but it's a terrific resource for understanding a computer in brief.\n    - The author invented [HLA](https://en.wikipedia.org/wiki/High_Level_Assembly), so take mentions and examples in HLA with a grain of salt. Not widely used, but decent examples of what assembly looks like.\n    - These chapters are worth the read to give you a nice foundation:\n        - Chapter 2 - Numeric Representation\n        - Chapter 3 - Binary Arithmetic and Bit Operations\n        - Chapter 4 - Floating-Point Representation\n        - Chapter 5 - Character Representation\n        - Chapter 6 - Memory Organization and Access\n        - Chapter 7 - Composite Data Types and Memory Objects\n        - Chapter 9 - CPU Architecture\n        - Chapter 10 - Instruction Set Architecture\n        - Chapter 11 - Memory Architecture and Organization\n- [Introduction to Algorithms](https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844)\n    - **Important:** Reading this book will only have limited value. This book is a great review of algorithms and data structures, but won't teach you how to write good code. You have to be able to code a decent solution efficiently.\n    - aka CLR, sometimes CLRS, because Stein was late to the game\n\n- [Computer Architecture, Sixth Edition: A Quantitative Approach](https://www.amazon.com/dp/0128119055)\n    - For a richer, more up-to-date (2017), but longer treatment\n\n- [Programming Pearls](http://www.amazon.com/Programming-Pearls-2nd-Jon-Bentley/dp/0201657880)\n    - The first couple of chapters present clever solutions to programming problems (some very old using data tape) but\n      that is just an intro. This a guidebook on program design and architecture.\n\n## Additional Learning\n    \n    I added them to help you become a well-rounded software engineer, and to be aware of certain \n    technologies and algorithms, so you'll have a bigger toolbox.\n\n- ### Compilers\n    - [How a Compiler Works in ~1 minute (video)](https://www.youtube.com/watch?v=IhC7sdYe-Jg)\n    - [Harvard CS50 - Compilers (video)](https://www.youtube.com/watch?v=CSZLNYF4Klo)\n    - [C++ (video)](https://www.youtube.com/watch?v=twodd1KFfGk)\n    - [Understanding Compiler Optimization (C++) (video)](https://www.youtube.com/watch?v=FnGCDLhaxKU)\n\n- ### Emacs and vi(m)\n    - Familiarize yourself with a unix-based code editor\n    - vi(m):\n        - [Editing With vim 01 - Installation, Setup, and The Modes (video)](https://www.youtube.com/watch?v=5givLEMcINQ&index=1&list=PL13bz4SHGmRxlZVmWQ9DvXo1fEg4UdGkr)\n        - [VIM Adventures](http://vim-adventures.com/)\n        - set of 4 videos:\n            - [The vi/vim editor - Lesson 1](https://www.youtube.com/watch?v=SI8TeVMX8pk)\n            - [The vi/vim editor - Lesson 2](https://www.youtube.com/watch?v=F3OO7ZIOaJE)\n            - [The vi/vim editor - Lesson 3](https://www.youtube.com/watch?v=ZYEccA_nMaI)\n            - [The vi/vim editor - Lesson 4](https://www.youtube.com/watch?v=1lYD5gwgZIA)\n        - [Using Vi Instead of Emacs](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Using_Vi_instead_of_Emacs)\n    - emacs:\n        - [Basics Emacs Tutorial (video)](https://www.youtube.com/watch?v=hbmV1bnQ-i0)\n        - set of 3 (videos):\n            - [Emacs Tutorial (Beginners) -Part 1- File commands, cut/copy/paste, cursor commands](https://www.youtube.com/watch?v=ujODL7MD04Q)\n            - [Emacs Tutorial (Beginners) -Part 2- Buffer management, search, M-x grep and rgrep modes](https://www.youtube.com/watch?v=XWpsRupJ4II)\n            - [Emacs Tutorial (Beginners) -Part 3- Expressions, Statements, ~/.emacs file and packages](https://www.youtube.com/watch?v=paSgzPso-yc)\n        - [Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs (video)](https://www.youtube.com/watch?v=JWD1Fpdd4Pc)\n        - [Writing C Programs With Emacs](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Writing_C_programs_with_Emacs)\n        - [(maybe) Org Mode In Depth: Managing Structure (video)](https://www.youtube.com/watch?v=nsGYet02bEk)\n\n- ### Unix command line tools\n    - I filled in the list below from good tools.\n    - bash\n    - cat\n    - grep\n    - sed\n    - awk\n    - curl or wget\n    - sort\n    - tr\n    - uniq\n    - [strace](https://en.wikipedia.org/wiki/Strace)\n    - [tcpdump](https://danielmiessler.com/study/tcpdump/)\n\n- ### Information theory (videos)\n    - [Khan Academy](https://www.khanacademy.org/computing/computer-science/informationtheory)\n    - more about Markov processes:\n        - [Core Markov Text Generation](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/waxgx/core-markov-text-generation)\n        - [Core Implementing Markov Text Generation](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/gZhiC/core-implementing-markov-text-generation)\n        - [Project = Markov Text Generation Walk Through](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/EUjrq/project-markov-text-generation-walk-through)\n    - See more in MIT 6.050J Information and Entropy series below.\n\n- ### Parity & Hamming Code (videos)\n    - [Intro](https://www.youtube.com/watch?v=q-3BctoUpHE)\n    - [Parity](https://www.youtube.com/watch?v=DdMcAUlxh1M)\n    - Hamming Code:\n        - [Error detection](https://www.youtube.com/watch?v=1A_NcXxdoCc)\n        - [Error correction](https://www.youtube.com/watch?v=JAMLuxdHH8o)\n    - [Error Checking](https://www.youtube.com/watch?v=wbH2VxzmoZk)\n\n- ### Entropy\n    - also see videos below\n    - make sure to watch information theory videos first\n    - [Information Theory, Claude Shannon, Entropy, Redundancy, Data Compression & Bits (video)](https://youtu.be/JnJq3Py0dyM?t=176)\n\n- ### Cryptography\n    - also see videos below\n    - make sure to watch information theory videos first\n    - [Khan Academy Series](https://www.khanacademy.org/computing/computer-science/cryptography)\n    - [Cryptography: Hash Functions](https://www.youtube.com/watch?v=KqqOXndnvic&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=30)\n    - [Cryptography: Encryption](https://www.youtube.com/watch?v=9TNI2wHmaeI&index=31&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n\n- ### Compression\n    - make sure to watch information theory videos first\n    - Computerphile (videos):\n        - [Compression](https://www.youtube.com/watch?v=Lto-ajuqW3w)\n        - [Entropy in Compression](https://www.youtube.com/watch?v=M5c_RFKVkko)\n        - [Upside Down Trees (Huffman Trees)](https://www.youtube.com/watch?v=umTbivyJoiI)\n        - [EXTRA BITS/TRITS - Huffman Trees](https://www.youtube.com/watch?v=DV8efuB3h2g)\n        - [Elegant Compression in Text (The LZ 77 Method)](https://www.youtube.com/watch?v=goOa3DGezUA)\n        - [Text Compression Meets Probabilities](https://www.youtube.com/watch?v=cCDCfoHTsaU)\n    - [Compressor Head videos](https://www.youtube.com/playlist?list=PLOU2XLYxmsIJGErt5rrCqaSGTMyyqNt2H)\n    - [(optional) Google Developers Live: GZIP is not enough!](https://www.youtube.com/watch?v=whGwm0Lky2s)\n\n- ### Computer Security\n    - [MIT (23 videos)](https://www.youtube.com/playlist?list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Introduction, Threat Models](https://www.youtube.com/watch?v=GqmQg-cszw4&index=1&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Control Hijacking Attacks](https://www.youtube.com/watch?v=6bwzNg5qQ0o&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=2)\n        - [Buffer Overflow Exploits and Defenses](https://www.youtube.com/watch?v=drQyrzRoRiA&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=3)\n        - [Privilege Separation](https://www.youtube.com/watch?v=6SIJmoE9L9g&index=4&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Capabilities](https://www.youtube.com/watch?v=8VqTSY-11F4&index=5&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Sandboxing Native Code](https://www.youtube.com/watch?v=VEV74hwASeU&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=6)\n        - [Web Security Model](https://www.youtube.com/watch?v=chkFBigodIw&index=7&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Securing Web Applications](https://www.youtube.com/watch?v=EBQIGy1ROLY&index=8&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Symbolic Execution](https://www.youtube.com/watch?v=yRVZPvHYHzw&index=9&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Network Security](https://www.youtube.com/watch?v=SIEVvk3NVuk&index=11&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Network Protocols](https://www.youtube.com/watch?v=QOtA76ga_fY&index=12&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Side-Channel Attacks](https://www.youtube.com/watch?v=PuVMkSEcPiI&index=15&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n\n- ### Garbage collection\n    - [GC in Python (video)](https://www.youtube.com/watch?v=iHVs_HkjdmI)\n    - [Deep Dive Java: Garbage Collection is Good!](https://www.infoq.com/presentations/garbage-collection-benefits)\n    - [Deep Dive Python: Garbage Collection in CPython (video)](https://www.youtube.com/watch?v=P-8Z0-MhdQs&list=PLdzf4Clw0VbOEWOS_sLhT_9zaiQDrS5AR&index=3)\n\n- ### Parallel Programming\n    - [Coursera (Scala)](https://www.coursera.org/learn/parprog1/home/week/1)\n    - [Efficient Python for High Performance Parallel Computing (video)](https://www.youtube.com/watch?v=uY85GkaYzBk)\n\n- ### Messaging, Serialization, and Queueing Systems\n    - [Thrift](https://thrift.apache.org/)\n        - [Tutorial](http://thrift-tutorial.readthedocs.io/en/latest/intro.html)\n    - [Protocol Buffers](https://developers.google.com/protocol-buffers/)\n        - [Tutorials](https://developers.google.com/protocol-buffers/docs/tutorials)\n    - [gRPC](http://www.grpc.io/)\n        - [gRPC 101 for Java Developers (video)](https://www.youtube.com/watch?v=5tmPvSe7xXQ&list=PLcTqM9n_dieN0k1nSeN36Z_ppKnvMJoly&index=1)\n    - [Redis](http://redis.io/)\n        - [Tutorial](http://try.redis.io/)\n    - [Amazon SQS (queue)](https://aws.amazon.com/sqs/)\n    - [Amazon SNS (pub-sub)](https://aws.amazon.com/sns/)\n    - [RabbitMQ](https://www.rabbitmq.com/)\n        - [Get Started](https://www.rabbitmq.com/getstarted.html)\n    - [Celery](http://www.celeryproject.org/)\n        - [First Steps With Celery](http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html)\n    - [ZeroMQ](http://zeromq.org/)\n        - [Intro - Read The Manual](http://zeromq.org/intro:read-the-manual)\n    - [ActiveMQ](http://activemq.apache.org/)\n    - [Kafka](http://kafka.apache.org/documentation.html#introduction)\n    - [MessagePack](http://msgpack.org/index.html)\n    - [Avro](https://avro.apache.org/)\n\n- ### A*\n    - [A Search Algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm)\n    - [A* Pathfinding Tutorial (video)](https://www.youtube.com/watch?v=KNXfSOx4eEE)\n    - [A* Pathfinding (E01: algorithm explanation) (video)](https://www.youtube.com/watch?v=-L-WgKMFuhE)\n\n- ### Fast Fourier Transform\n    - [An Interactive Guide To The Fourier Transform](https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/)\n    - [What is a Fourier transform? What is it used for?](http://www.askamathematician.com/2012/09/q-what-is-a-fourier-transform-what-is-it-used-for/)\n    - [What is the Fourier Transform? (video)](https://www.youtube.com/watch?v=Xxut2PN-V8Q)\n    - [Divide & Conquer: FFT (video)](https://www.youtube.com/watch?v=iTMn0Kt18tg&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=4)\n    - [Understanding The FFT](http://jakevdp.github.io/blog/2013/08/28/understanding-the-fft/)\n\n- ### Bloom Filter\n    - Given a Bloom filter with m bits and k hashing functions, both insertion and membership testing are O(k)\n    - [Bloom Filters (video)](https://www.youtube.com/watch?v=-SuTGoFYjZs)\n    - [Bloom Filters | Mining of Massive Datasets | Stanford University (video)](https://www.youtube.com/watch?v=qBTdukbzc78)\n    - [Tutorial](http://billmill.org/bloomfilter-tutorial/)\n    - [How To Write A Bloom Filter App](http://blog.michaelschmatz.com/2016/04/11/how-to-write-a-bloom-filter-cpp/)\n\n- ### HyperLogLog\n    - [How To Count A Billion Distinct Objects Using Only 1.5KB Of Memory](http://highscalability.com/blog/2012/4/5/big-data-counting-how-to-count-a-billion-distinct-objects-us.html)\n\n- ### Locality-Sensitive Hashing\n    - used to determine the similarity of documents\n    - the opposite of MD5 or SHA which are used to determine if 2 documents/strings are exactly the same.\n    - [Simhashing (hopefully) made simple](http://ferd.ca/simhashing-hopefully-made-simple.html)\n\n- ### van Emde Boas Trees\n    - [Divide & Conquer: van Emde Boas Trees (video)](https://www.youtube.com/watch?v=hmReJCupbNU&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=6)\n    - [MIT Lecture Notes](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2012/lecture-notes/MIT6_046JS12_lec15.pdf)\n\n- ### Augmented Data Structures\n    - [CS 61B Lecture 39: Augmenting Data Structures](https://archive.org/details/ucberkeley_webcast_zksIj9O8_jc)\n\n- ### Balanced search trees\n    - Know at least one type of balanced binary tree (and know how it's implemented):\n    - \"Among balanced search trees, AVL and 2/3 trees are now pass\u00e9, and red-black trees seem to be more popular.\n        A particularly interesting self-organizing data structure is the splay tree, which uses rotations\n        to move any accessed key to the root.\" - Skiena\n    - Of these, I chose to implement a splay tree. From what I've read, you won't implement a\n        balanced search tree in your interview. But I wanted exposure to coding one up\n        and let's face it, splay trees are the bee's knees. I did read a lot of red-black tree code.\n        - splay tree: insert, search, delete functions\n        If you end up implementing red/black tree try just these:\n        - search and insertion functions, skipping delete\n    - I want to learn more about B-Tree since it's used so widely with very large data sets.\n    - [Self-balancing binary search tree](https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree)\n\n    - **AVL trees**\n        - In practice:\n            From what I can tell, these aren't used much in practice, but I could see where they would be:\n            The AVL tree is another structure supporting O(log n) search, insertion, and removal. It is more rigidly\n            balanced than red\u2013black trees, leading to slower insertion and removal but faster retrieval. This makes it\n            attractive for data structures that may be built once and loaded without reconstruction, such as language\n            dictionaries (or program dictionaries, such as the opcodes of an assembler or interpreter).\n        - [MIT AVL Trees / AVL Sort (video)](https://www.youtube.com/watch?v=FNeL18KsWPc&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=6)\n        - [AVL Trees (video)](https://www.coursera.org/learn/data-structures/lecture/Qq5E0/avl-trees)\n        - [AVL Tree Implementation (video)](https://www.coursera.org/learn/data-structures/lecture/PKEBC/avl-tree-implementation)\n        - [Split And Merge](https://www.coursera.org/learn/data-structures/lecture/22BgE/split-and-merge)\n\n    - **Splay trees**\n        - In practice:\n            Splay trees are typically used in the implementation of caches, memory allocators, routers, garbage collectors,\n            data compression, ropes (replacement of string used for long text strings), in Windows NT (in the virtual memory,\n            networking and file system code) etc.\n        - [CS 61B: Splay Trees (video)](https://archive.org/details/ucberkeley_webcast_G5QIXywcJlY)\n        - MIT Lecture: Splay Trees:\n            - Gets very mathy, but watch the last 10 minutes for sure.\n            - [Video](https://www.youtube.com/watch?v=QnPl_Y6EqMo)\n\n    - **Red/black trees**\n        - these are a translation of a 2-3 tree (see below)\n        - In practice:\n            Red\u2013black trees offer worst-case guarantees for insertion time, deletion time, and search time.\n            Not only does this make them valuable in time-sensitive applications such as real-time applications,\n            but it makes them valuable building blocks in other data structures which provide worst-case guarantees;\n            for example, many data structures used in computational geometry can be based on red\u2013black trees, and\n            the Completely Fair Scheduler used in current Linux kernels uses red\u2013black trees. In the version 8 of Java,\n            the Collection HashMap has been modified such that instead of using a LinkedList to store identical elements with poor\n            hashcodes, a Red-Black tree is used.\n        - [Aduni - Algorithms - Lecture 4 (link jumps to starting point) (video)](https://youtu.be/1W3x0f_RmUo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3871)\n        - [Aduni - Algorithms - Lecture 5 (video)](https://www.youtube.com/watch?v=hm2GHwyKF1o&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=5)\n        - [Red-Black Tree](https://en.wikipedia.org/wiki/Red%E2%80%93black_tree)\n        - [An Introduction To Binary Search And Red Black Tree](https://www.topcoder.com/community/competitive-programming/tutorials/an-introduction-to-binary-search-and-red-black-trees/)\n\n    - **2-3 search trees**\n        - In practice:\n            2-3 trees have faster inserts at the expense of slower searches (since height is more compared to AVL trees).\n        - You would use 2-3 tree very rarely because its implementation involves different types of nodes. Instead, people use Red Black trees.\n        - [23-Tree Intuition and Definition (video)](https://www.youtube.com/watch?v=C3SsdUqasD4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=2)\n        - [Binary View of 23-Tree](https://www.youtube.com/watch?v=iYvBtGKsqSg&index=3&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n        - [2-3 Trees (student recitation) (video)](https://www.youtube.com/watch?v=TOb1tuEZ2X4&index=5&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n\n    - **2-3-4 Trees (aka 2-4 trees)**\n        - In practice:\n            For every 2-4 tree, there are corresponding red\u2013black trees with data elements in the same order. The insertion and deletion\n            operations on 2-4 trees are also equivalent to color-flipping and rotations in red\u2013black trees. This makes 2-4 trees an\n            important tool for understanding the logic behind red\u2013black trees, and this is why many introductory algorithm texts introduce\n            2-4 trees just before red\u2013black trees, even though **2-4 trees are not often used in practice**.\n        - [CS 61B Lecture 26: Balanced Search Trees (video)](https://archive.org/details/ucberkeley_webcast_zqrqYXkth6Q)\n        - [Bottom Up 234-Trees (video)](https://www.youtube.com/watch?v=DQdMYevEyE4&index=4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n        - [Top Down 234-Trees (video)](https://www.youtube.com/watch?v=2679VQ26Fp4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=5)\n\n    - **N-ary (K-ary, M-ary) trees**\n        - note: the N or K is the branching factor (max branches)\n        - binary trees are a 2-ary tree, with branching factor = 2\n        - 2-3 trees are 3-ary\n        - [K-Ary Tree](https://en.wikipedia.org/wiki/K-ary_tree)\n\n    - **B-Trees**\n        - fun fact: it's a mystery, but the B could stand for Boeing, Balanced, or Bayer (co-inventor)\n        - In Practice:\n            B-Trees are widely used in databases. Most modern filesystems use B-trees (or Variants). In addition to\n            its use in databases, the B-tree is also used in filesystems to allow quick random access to an arbitrary\n            block in a particular file. The basic problem is turning the file block i address into a disk block\n            (or perhaps to a cylinder-head-sector) address.\n        - [B-Tree](https://en.wikipedia.org/wiki/B-tree)\n        - [B-Tree Datastructure](http://btechsmartclass.com/data_structures/b-trees.html)\n        - [Introduction to B-Trees (video)](https://www.youtube.com/watch?v=I22wEC1tTGo&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=6)\n        - [B-Tree Definition and Insertion (video)](https://www.youtube.com/watch?v=s3bCdZGrgpA&index=7&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n        - [B-Tree Deletion (video)](https://www.youtube.com/watch?v=svfnVhJOfMc&index=8&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n        - [MIT 6.851 - Memory Hierarchy Models (video)](https://www.youtube.com/watch?v=V3omVLzI0WE&index=7&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf)\n                - covers cache-oblivious B-Trees, very interesting data structures\n                - the first 37 minutes are very technical, may be skipped (B is block size, cache line size)\n\n\n- ### k-D Trees\n    - great for finding number of points in a rectangle or higher dimension object\n    - a good fit for k-nearest neighbors\n    - [Kd Trees (video)](https://www.youtube.com/watch?v=W94M9D_yXKk)\n    - [kNN K-d tree algorithm (video)](https://www.youtube.com/watch?v=Y4ZgLlDfKDg)\n\n- ### Skip lists\n    - \"These are somewhat of a cult data structure\" - Skiena\n    - [Randomization: Skip Lists (video)](https://www.youtube.com/watch?v=2g9OSRKJuzM&index=10&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - [For animations and a little more detail](https://en.wikipedia.org/wiki/Skip_list)\n\n- ### Network Flows\n    - [Ford-Fulkerson in 5 minutes \u2014 Step by step example (video)](https://www.youtube.com/watch?v=Tl90tNtKvxs)\n    - [Ford-Fulkerson Algorithm (video)](https://www.youtube.com/watch?v=v1VgJmkEJW0)\n    - [Network Flows (video)](https://www.youtube.com/watch?v=2vhN4Ice5jI)\n\n- ### Disjoint Sets & Union Find\n    - [UCB 61B - Disjoint Sets; Sorting & selection (video)](https://archive.org/details/ucberkeley_webcast_MAEGXTwmUsI)\n    - [Sedgewick Algorithms - Union-Find (6 videos)](https://www.coursera.org/learn/algorithms-part1/home/week/1)\n\n- ### Math for Fast Processing\n    - [Integer Arithmetic, Karatsuba Multiplication (video)](https://www.youtube.com/watch?v=eCaXlAaN2uE&index=11&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [The Chinese Remainder Theorem (used in cryptography) (video)](https://www.youtube.com/watch?v=ru7mWZJlRQg)\n\n- ### Treap\n    - Combination of a binary search tree and a heap\n    - [Treap](https://en.wikipedia.org/wiki/Treap)\n    - [Data Structures: Treaps explained (video)](https://www.youtube.com/watch?v=6podLUYinH8)\n    - [Applications in set operations](https://www.cs.cmu.edu/~scandal/papers/treaps-spaa98.pdf)\n\n- ### Linear Programming (videos)\n    - [Linear Programming](https://www.youtube.com/watch?v=M4K6HYLHREQ)\n    - [Finding minimum cost](https://www.youtube.com/watch?v=2ACJ9ewUC6U)\n    - [Finding maximum value](https://www.youtube.com/watch?v=8AA_81xI3ik)\n    - [Solve Linear Equations with Python - Simplex Algorithm](https://www.youtube.com/watch?v=44pAWI7v5Zk)\n\n- ### Geometry, Convex hull (videos)\n    - [Graph Alg. IV: Intro to geometric algorithms - Lecture 9](https://youtu.be/XIAQRlNkJAw?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3164)\n    - [Geometric Algorithms: Graham & Jarvis - Lecture 10](https://www.youtube.com/watch?v=J5aJEcOr6Eo&index=10&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n    - [Divide & Conquer: Convex Hull, Median Finding](https://www.youtube.com/watch?v=EzeYI7p9MjU&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=2)\n\n- ### Discrete math\n    - see videos below\n\n- ### Machine Learning\n    - Why ML?\n        - [How Google Is Remaking Itself As A Machine Learning First Company](https://backchannel.com/how-google-is-remaking-itself-as-a-machine-learning-first-company-ada63defcb70)\n        - [Large-Scale Deep Learning for Intelligent Computer Systems (video)](https://www.youtube.com/watch?v=QSaZGT4-6EY)\n        - [Deep Learning and Understandability versus Software Engineering and Verification by Peter Norvig](https://www.youtube.com/watch?v=X769cyzBNVw)\n    - [Google's Cloud Machine learning tools (video)](https://www.youtube.com/watch?v=Ja2hxBAwG_0)\n    - [Google Developers' Machine Learning Recipes (Scikit Learn & Tensorflow) (video)](https://www.youtube.com/playlist?list=PLOU2XLYxmsIIuiBfYad6rFYQU_jL2ryal)\n    - [Tensorflow (video)](https://www.youtube.com/watch?v=oZikw5k_2FM)\n    - [Tensorflow Tutorials](https://www.tensorflow.org/versions/r0.11/tutorials/index.html)\n    - [Practical Guide to implementing Neural Networks in Python (using Theano)](http://www.analyticsvidhya.com/blog/2016/04/neural-networks-python-theano/)\n    - Courses:\n        - [Great starter course: Machine Learning](https://www.coursera.org/learn/machine-learning)\n              - [videos only](https://www.youtube.com/playlist?list=PLZ9qNFMHZ-A4rycgrgOYma6zxF4BZGGPW)\n              - see videos 12-18 for a review of linear algebra (14 and 15 are duplicates)\n        - [Neural Networks for Machine Learning](https://www.coursera.org/learn/neural-networks)\n        - [Google's Deep Learning Nanodegree](https://www.udacity.com/course/deep-learning--ud730)\n        - [Google/Kaggle Machine Learning Engineer Nanodegree](https://www.udacity.com/course/machine-learning-engineer-nanodegree-by-google--nd009)\n        - [Self-Driving Car Engineer Nanodegree](https://www.udacity.com/drive)\n        - [Metis Online Course ($99 for 2 months)](http://www.thisismetis.com/explore-data-science)\n    - Resources:\n        - Books:\n            - [Python Machine Learning](https://www.amazon.com/Python-Machine-Learning-Sebastian-Raschka/dp/1783555130/)\n            - [Data Science from Scratch: First Principles with Python](https://www.amazon.com/Data-Science-Scratch-Principles-Python/dp/149190142X)\n            - [Introduction to Machine Learning with Python](https://www.amazon.com/Introduction-Machine-Learning-Python-Scientists/dp/1449369413/)\n        - [Machine Learning for Software Engineers](https://github.com/ZuzooVn/machine-learning-for-software-engineers)\n        - Data School: http://www.dataschool.io/\n\n---\n\n## Additional Detail on Some Subjects\n\n    I added these to reinforce some ideas already presented above, but didn't want to include them\n    above because it's just too much. It's easy to overdo it on a subject.\n    You want to get hired in this century, right?\n\n- **SOLID**   \n    - [ ] [Bob Martin SOLID Principles of Object Oriented and Agile Design (video)](https://www.youtube.com/watch?v=TMuno5RZNeE)\n    - [ ] S - [Single Responsibility Principle](http://www.oodesign.com/single-responsibility-principle.html) | [Single responsibility to each Object](http://www.javacodegeeks.com/2011/11/solid-single-responsibility-principle.html)\n        - [more flavor](https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk)\n    - [ ] O - [Open/Closed Principal](http://www.oodesign.com/open-close-principle.html)  | [On production level Objects are ready for extension but not for modification](https://en.wikipedia.org/wiki/Open/closed_principle)\n        - [more flavor](http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&hl=en)\n    - [ ] L - [Liskov Substitution Principal](http://www.oodesign.com/liskov-s-substitution-principle.html) | [Base Class and Derived class follow \u2018IS A\u2019 principal](http://stackoverflow.com/questions/56860/what-is-the-liskov-substitution-principle)\n        - [more flavor](http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&hl=en)\n    - [ ] I - [Interface segregation principle](http://www.oodesign.com/interface-segregation-principle.html) | clients should not be forced to implement interfaces they don't use\n        - [Interface Segregation Principle in 5 minutes (video)](https://www.youtube.com/watch?v=3CtAfl7aXAQ)\n        - [more flavor](http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&hl=en)\n    - [ ] D -[Dependency Inversion principle](http://www.oodesign.com/dependency-inversion-principle.html) | Reduce the dependency In composition of objects.\n        - [Why Is The Dependency Inversion Principle And Why Is It Important](http://stackoverflow.com/questions/62539/what-is-the-dependency-inversion-principle-and-why-is-it-important)\n        - [more flavor](http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&hl=en)\n\n\n- **Union-Find**\n    - [Overview](https://www.coursera.org/learn/data-structures/lecture/JssSY/overview)\n    - [Naive Implementation](https://www.coursera.org/learn/data-structures/lecture/EM5D0/naive-implementations)\n    - [Trees](https://www.coursera.org/learn/data-structures/lecture/Mxu0w/trees)\n    - [Union By Rank](https://www.coursera.org/learn/data-structures/lecture/qb4c2/union-by-rank)\n    - [Path Compression](https://www.coursera.org/learn/data-structures/lecture/Q9CVI/path-compression)\n    - [Analysis Options](https://www.coursera.org/learn/data-structures/lecture/GQQLN/analysis-optional)\n\n- **More Dynamic Programming** (videos)\n    - [6.006: Dynamic Programming I: Fibonacci, Shortest Paths](https://www.youtube.com/watch?v=OQ5jsbhAv_M&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=19)\n    - [6.006: Dynamic Programming II: Text Justification, Blackjack](https://www.youtube.com/watch?v=ENyox7kNKeY&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=20)\n    - [6.006: DP III: Parenthesization, Edit Distance, Knapsack](https://www.youtube.com/watch?v=ocZMDMZwhCY&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=21)\n    - [6.006: DP IV: Guitar Fingering, Tetris, Super Mario Bros.](https://www.youtube.com/watch?v=tp4_UXaVyx8&index=22&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [6.046: Dynamic Programming & Advanced DP](https://www.youtube.com/watch?v=Tw1k46ywN6E&index=14&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - [6.046: Dynamic Programming: All-Pairs Shortest Paths](https://www.youtube.com/watch?v=NzgFUwOaoIw&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=15)\n    - [6.046: Dynamic Programming (student recitation)](https://www.youtube.com/watch?v=krZI60lKPek&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=12)\n\n- **Advanced Graph Processing** (videos)\n    - [Synchronous Distributed Algorithms: Symmetry-Breaking. Shortest-Paths Spanning Trees](https://www.youtube.com/watch?v=mUBmcbbJNf4&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=27)\n    - [Asynchronous Distributed Algorithms: Shortest-Paths Spanning Trees](https://www.youtube.com/watch?v=kQ-UQAzcnzA&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=28)\n\n- MIT **Probability** (mathy, and go slowly, which is good for mathy things) (videos):\n    - [MIT 6.042J - Probability Introduction](https://www.youtube.com/watch?v=SmFwFdESMHI&index=18&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Conditional Probability](https://www.youtube.com/watch?v=E6FbvM-FGZ8&index=19&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Independence](https://www.youtube.com/watch?v=l1BCv3qqW4A&index=20&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Random Variables](https://www.youtube.com/watch?v=MOfhhFaQdjw&list=PLB7540DEDD482705B&index=21)\n    - [MIT 6.042J - Expectation I](https://www.youtube.com/watch?v=gGlMSe7uEkA&index=22&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Expectation II](https://www.youtube.com/watch?v=oI9fMUqgfxY&index=23&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Large Deviations](https://www.youtube.com/watch?v=q4mwO2qS2z4&index=24&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Random Walks](https://www.youtube.com/watch?v=56iFMY8QW2k&list=PLB7540DEDD482705B&index=25)\n\n- [Simonson: Approximation Algorithms (video)](https://www.youtube.com/watch?v=oDniZCmNmNw&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=19)\n\n- **String Matching**\n    - Rabin-Karp (videos):\n        - [Rabin Karps Algorithm](https://www.coursera.org/learn/data-structures/lecture/c0Qkw/rabin-karps-algorithm)\n        - [Precomputing](https://www.coursera.org/learn/data-structures/lecture/nYrc8/optimization-precomputation)\n        - [Optimization: Implementation and Analysis](https://www.coursera.org/learn/data-structures/lecture/h4ZLc/optimization-implementation-and-analysis)\n        - [Table Doubling, Karp-Rabin](https://www.youtube.com/watch?v=BRO7mVIFt08&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=9)\n        - [Rolling Hashes, Amortized Analysis](https://www.youtube.com/watch?v=w6nuXg0BISo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=32)\n    - Knuth-Morris-Pratt (KMP):\n        - [TThe Knuth-Morris-Pratt (KMP) String Matching Algorithm](https://www.youtube.com/watch?v=5i7oKodCRJo)\n    - Boyer\u2013Moore string search algorithm\n        - [Boyer-Moore String Search Algorithm](https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm)\n        - [Advanced String Searching Boyer-Moore-Horspool Algorithms (video)](https://www.youtube.com/watch?v=QDZpzctPf10)\n    - [Coursera: Algorithms on Strings](https://www.coursera.org/learn/algorithms-on-strings/home/week/1)\n        - starts off great, but by the time it gets past KMP it gets more complicated than it needs to be\n        - nice explanation of tries\n        - can be skipped\n\n- **Sorting**\n\n    - Stanford lectures on sorting:\n        - [Lecture 15 | Programming Abstractions (video)](https://www.youtube.com/watch?v=ENp00xylP7c&index=15&list=PLFE6E58F856038C69)\n        - [Lecture 16 | Programming Abstractions (video)](https://www.youtube.com/watch?v=y4M9IVgrVKo&index=16&list=PLFE6E58F856038C69)\n    - Shai Simonson, [Aduni.org](http://www.aduni.org/):\n        - [Algorithms - Sorting - Lecture 2 (video)](https://www.youtube.com/watch?v=odNJmw5TOEE&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=2)\n        - [Algorithms - Sorting II - Lecture 3 (video)](https://www.youtube.com/watch?v=hj8YKFTFKEE&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=3)\n    - Steven Skiena lectures on sorting:\n        - [lecture begins at 26:46 (video)](https://youtu.be/ute-pmMkyuk?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1600)\n        - [lecture begins at 27:40 (video)](https://www.youtube.com/watch?v=yLvp-pB8mak&index=8&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n        - [lecture begins at 35:00 (video)](https://www.youtube.com/watch?v=q7K9otnzlfE&index=9&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n        - [lecture begins at 23:50 (video)](https://www.youtube.com/watch?v=TvqIGu9Iupw&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=10)\n\n## Video Series\n\nSit back and enjoy. \"Netflix and skill\" :P\n\n- [List of individual Dynamic Programming problems (each is short)](https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr)\n\n- [x86 Architecture, Assembly, Applications (11 videos)](https://www.youtube.com/playlist?list=PL038BE01D3BAEFDB0)\n\n- [MIT 18.06 Linear Algebra, Spring 2005 (35 videos)](https://www.youtube.com/playlist?list=PLE7DDD91010BC51F8)\n\n- [Excellent - MIT Calculus Revisited: Single Variable Calculus](https://www.youtube.com/playlist?list=PL3B08AE665AB9002A)\n\n- [Computer Science 70, 001 - Spring 2015 - Discrete Mathematics and Probability Theory](http://www.infocobuild.com/education/audio-video-courses/computer-science/cs70-spring2015-berkeley.html)\n\n- [Discrete Mathematics by Shai Simonson (19 videos)](https://www.youtube.com/playlist?list=PL3o9D4Dl2FJ9q0_gtFXPh_H4POI5dK0yG)\n\n- [Discrete Mathematics Part 1 by Sarada Herke (5 videos)](https://www.youtube.com/playlist?list=PLGxuz-nmYlQPOc4w1Kp2MZrdqOOm4Jxeo)\n\n- CSE373 - Analysis of Algorithms (25 videos)\n    - [Skiena lectures from Algorithm Design Manual](https://www.youtube.com/watch?v=ZFjhkohHdAA&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=1)\n\n- [UC Berkeley 61B (Spring 2014): Data Structures (25 videos)](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd)\n\n- [UC Berkeley 61B (Fall 2006): Data Structures (39 videos)](https://archive.org/details/ucberkeley-webcast-PL4BBB74C7D2A1049C)\n\n- [UC Berkeley 61C: Machine Structures (26 videos)](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iCl2-D-FS5mk0jFF6cYSJs_)\n\n- [OOSE: Software Dev Using UML and Java (21 videos)](https://www.youtube.com/playlist?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO)\n\n- ~~[UC Berkeley CS 152: Computer Architecture and Engineering (20 videos)](https://www.youtube.com/watch?v=UH0QYvtP7Rk&index=20&list=PLkFD6_40KJIwEiwQx1dACXwh-2Fuo32qr)~~\n\n- [MIT 6.004: Computation Structures (49 videos)](https://www.youtube.com/playlist?list=PLDSlqjcPpoL64CJdF0Qee5oWqGS6we_Yu)\n\n- [Carnegie Mellon - Computer Architecture Lectures (39 videos)](https://www.youtube.com/playlist?list=PL5PHm2jkkXmi5CxxI7b3JCL1TWybTDtKq)\n\n- [MIT 6.006: Intro to Algorithms (47 videos)](https://www.youtube.com/watch?v=HtSuA80QTyo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&nohtml5=False)\n\n- [MIT 6.033: Computer System Engineering (22 videos)](https://www.youtube.com/watch?v=zm2VP0kHl1M&list=PL6535748F59DCA484)\n\n- [MIT 6.034 Artificial Intelligence, Fall 2010 (30 videos)](https://www.youtube.com/playlist?list=PLUl4u3cNGP63gFHB6xb-kVBiQHYe_4hSi)\n\n- [MIT 6.042J: Mathematics for Computer Science, Fall 2010 (25 videos)](https://www.youtube.com/watch?v=L3LMbpZIKhQ&list=PLB7540DEDD482705B)\n\n- [MIT 6.046: Design and Analysis of Algorithms (34 videos)](https://www.youtube.com/watch?v=2P-yW7LQr08&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n\n- [MIT 6.050J: Information and Entropy, Spring 2008 (19 videos)](https://www.youtube.com/watch?v=phxsQrZQupo&list=PL_2Bwul6T-A7OldmhGODImZL8KEVE38X7)\n\n- [MIT 6.851: Advanced Data Structures (22 videos)](https://www.youtube.com/watch?v=T0yzrZL1py0&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=1)\n\n- [MIT 6.854: Advanced Algorithms, Spring 2016 (24 videos)](https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c)\n\n- [Harvard COMPSCI 224: Advanced Algorithms (25 videos)](https://www.youtube.com/playlist?list=PL2SOU6wwxB0uP4rJgf5ayhHWgw7akUWSf)\n\n- [MIT 6.858 Computer Systems Security, Fall 2014](https://www.youtube.com/watch?v=GqmQg-cszw4&index=1&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n\n- [Stanford: Programming Paradigms (27 videos)](https://www.youtube.com/view_play_list?p=9D558D49CA734A02)\n\n- [Introduction to Cryptography by Christof Paar](https://www.youtube.com/playlist?list=PL6N5qY2nvvJE8X75VkXglSrVhLv1tVcfy)\n    - [Course Website along with Slides and Problem Sets](http://www.crypto-textbook.com/)\n\n- [Mining Massive Datasets - Stanford University (94 videos)](https://www.youtube.com/playlist?list=PLLssT5z_DsK9JDLcT8T62VtzwyW9LNepV)\n\n- [Graph Theory by Sarada Herke (67 videos)](https://www.youtube.com/user/DrSaradaHerke/playlists?shelf_id=5&view=50&sort=dd)\n\n## Computer Science Courses\n\n- [Directory of Online CS Courses](https://github.com/open-source-society/computer-science)\n- [Directory of CS Courses (many with online lectures)](https://github.com/prakhar1989/awesome-courses)\n\n## Papers\n\n- [Love classic papers?](https://www.cs.cmu.edu/~crary/819-f09/)\n- [1978: Communicating Sequential Processes](http://spinroot.com/courses/summer/Papers/hoare_1978.pdf)\n    - [implemented in Go](https://godoc.org/github.com/thomas11/csp)\n- [2003: The Google File System](http://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf)\n    - replaced by Colossus in 2012\n- [2004: MapReduce: Simplified Data Processing on Large Clusters]( http://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf)\n    - mostly replaced by Cloud Dataflow?\n- [2006: Bigtable: A Distributed Storage System for Structured Data](https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf)\n    - [An Inside Look at Google BigQuery](https://cloud.google.com/files/BigQueryTechnicalWP.pdf)\n- [2006: The Chubby Lock Service for Loosely-Coupled Distributed Systems](https://research.google.com/archive/chubby-osdi06.pdf)\n- [2007: Dynamo: Amazon\u2019s Highly Available Key-value Store](http://s3.amazonaws.com/AllThingsDistributed/sosp/amazon-dynamo-sosp2007.pdf)\n    - The Dynamo paper kicked off the NoSQL revolution\n- [2007: What Every Programmer Should Know About Memory (very long, and the author encourages skipping of some sections)](https://www.akkadia.org/drepper/cpumemory.pdf)\n- [2010: Dapper, a Large-Scale Distributed Systems Tracing Infrastructure](https://research.google.com/pubs/archive/36356.pdf)\n- [2010: Dremel: Interactive Analysis of Web-Scale Datasets](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36632.pdf)\n- [2012: Google's Colossus](https://www.wired.com/2012/07/google-colossus/)\n    - paper not available\n- 2012: AddressSanitizer: A Fast Address Sanity Checker:\n    - [paper](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37752.pdf)\n    - [video](https://www.usenix.org/conference/atc12/technical-sessions/presentation/serebryany)\n- 2013: Spanner: Google\u2019s Globally-Distributed Database:\n    - [paper](http://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf)\n    - [video](https://www.usenix.org/node/170855)\n- [2014: Machine Learning: The High-Interest Credit Card of Technical Debt](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43146.pdf)\n- [2015: Continuous Pipelines at Google](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43790.pdf)\n- [2015: High-Availability at Massive Scale: Building Google\u2019s Data Infrastructure for Ads](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44686.pdf)\n- [2015: TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems](http://download.tensorflow.org/paper/whitepaper2015.pdf )\n- [2015: How Developers Search for Code: A Case Study](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43835.pdf)\n- [2016: Borg, Omega, and Kubernetes](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44843.pdf)\n\n\n## LICENSE\n\n[CC-BY-SA-4.0](./LICENSE.txt)\n"
 },
 {
  "repo": "eugenp/tutorials",
  "language": "Java",
  "readme_contents": "**UPDATE**: The price of \"Learn Spring Security OAuth\" will permanently change on the 11th of December, along with the upcoming OAuth2 material: http://bit.ly/github-lss\n\nThe Courses\n==============================\n\n\nHere's the new \"Learn Spring\" course: <br/>\n**[>> LEARN SPRING - THE MASTER CLASS](https://www.baeldung.com/learn-spring-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=ls#master-class)**\n\nHere's the Master Class of \"REST With Spring\" (along with the new announced Boot 2 material): <br/>\n**[>> THE REST WITH SPRING - MASTER CLASS](https://www.baeldung.com/rest-with-spring-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=rws#master-class)**\n\nAnd here's the Master Class of \"Learn Spring Security\": <br/>\n**[>> LEARN SPRING SECURITY - MASTER CLASS](https://www.baeldung.com/learn-spring-security-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=lss#master-class)**\n\n\n\nJava and Spring Tutorials\n================\n\nThis project is **a collection of small and focused tutorials** - each covering a single and well defined area of development in the Java ecosystem. \nA strong focus of these is, of course, the Spring Framework - Spring, Spring Boot and Spring Security. \nIn additional to Spring, the modules here are covering a number of aspects in Java. \n\nProfile based segregation\n====================\n\nWe are using maven build profiles to segregate the huge list of individual projects we have in our repository.\n\nThe projects are broadly divided into 3 list: first, second and heavy. \n\nNext, they are segregated further on the basis of tests that we want to execute.\n\nTherefore, we have a total of 6 profiles:\n\n| Profile                 | Includes                    | Type of test enabled |\n| ----------------------- | --------------------------- | -------------------- |\n| default-first           | First set of projects       | *UnitTest            |\n| integration-lite-first  | First set of projects       | *IntegrationTest     |\n| default-second          | Second set of projects      | *UnitTest            |\n| integration-lite-second | Second set of projects      | *IntegrationTest     |\n| default-heavy           | Heavy/long running projects | *UnitTest            |\n| integration-heavy       | Heavy/long running projects | *IntegrationTest     |\n\nBuilding the project\n====================\n\nThough it should not be needed often to build the entire repository at once because we are usually concerned with a specific module.\n\nBut if we want to, we can invoke the below command from the root of the repository if we want to build the entire repository with only Unit Tests enabled:\n\n`mvn clean install -Pdefault-first,default-second,default-heavy`\n\nor if we want to build the entire repository with Integration Tests enabled, we can do:\n\n`mvn clean install -Pintegration-lite-first,integration-lite-second,integration-heavy`\n\n\nBuilding a single module\n====================\nTo build a specific module run the command: `mvn clean install` in the module directory\n\n\nRunning a Spring Boot module\n====================\nTo run a Spring Boot module run the command: `mvn spring-boot:run` in the module directory\n\n\nWorking with the IDE\n====================\nThis repo contains a large number of modules. \nWhen you're working with an individual module, there's no need to import all of them (or build all of them) - you can simply import that particular module in either Eclipse or IntelliJ. \n\n\nRunning Tests\n=============\nThe command `mvn clean install` from within a module will run the unit tests in that module.\nFor Spring modules this will also run the `SpringContextTest` if present.\n\nTo run the integration tests, use the command:\n\n`mvn clean install -Pintegration-lite-first` or \n\n`mvn clean install -Pintegration-lite-second` or \n\n`mvn clean install -Pintegration-heavy`\n\ndepending on the list where our module exists\n\n\n\n\n\n"
 },
 {
  "repo": "CyC2018/CS-Notes",
  "language": "Java",
  "readme_contents": "<div align=\"center\">\r\n    <a href=\"https://gitstar-ranking.com/repositories\"> <img src=\"https://badgen.net/badge/Rank/20?icon=github&color=4ab8a1\"></a>\r\n    <a href=\"assets/download.md\"> <img src=\"https://badgen.net/badge/OvO/%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD?icon=telegram&color=4ab8a1\"></a>\r\n    <a href=\"https://cyc2018.github.io/CS-Notes\"> <img src=\"https://badgen.net/badge/CyC/%E5%9C%A8%E7%BA%BF%E9%98%85%E8%AF%BB?icon=sourcegraph&color=4ab8a1\"></a>\r\n    <a href=\"#\u5fae\u4fe1\u516c\u4f17\u53f7\"> <img src=\"https://badgen.net/badge/%e5%85%ac%e4%bc%97%e5%8f%b7/CyC2018?icon=rss&color=4ab8a1\"></a>\r\n</div>\r\n<br>\r\n\r\n| &nbsp;\u7b97\u6cd5&nbsp; | \u64cd\u4f5c\u7cfb\u7edf | &nbsp;\u7f51\u7edc&nbsp;|\u9762\u5411\u5bf9\u8c61| &nbsp;&nbsp;\u6570\u636e\u5e93&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Java&nbsp;&nbsp;&nbsp;|         \u7cfb\u7edf\u8bbe\u8ba1| &nbsp;&nbsp;&nbsp;\u5de5\u5177&nbsp;&nbsp;&nbsp; |\u7f16\u7801\u5b9e\u8df5| &nbsp;&nbsp;&nbsp;\u540e\u8bb0&nbsp;&nbsp;&nbsp; |\r\n| :---: | :----: | :---: | :----: | :----: | :----: | :----: | :----: | :----: | :----: |\r\n| [:pencil2:](#pencil2-\u7b97\u6cd5) | [:computer:](#computer-\u64cd\u4f5c\u7cfb\u7edf) | [:cloud:](#cloud-\u7f51\u7edc) | [:art:](#art-\u9762\u5411\u5bf9\u8c61) | [:floppy_disk:](#floppy_disk-\u6570\u636e\u5e93) |[:coffee:](#coffee-java)| [:bulb:](#bulb-\u7cfb\u7edf\u8bbe\u8ba1) |[:wrench:](#wrench-\u5de5\u5177)| [:watermelon:](#watermelon-\u7f16\u7801\u5b9e\u8df5) |[:memo:](#memo-\u540e\u8bb0)|\r\n\r\n<br>\r\n\r\n<div align=\"center\">\r\n    <img src=\"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png\" width=\"200px\">\r\n</div>\r\n\r\n\r\n\r\n<br>\r\n\r\n## :pencil2: \u7b97\u6cd5\r\n\r\n- [\u5251\u6307 Offer \u9898\u89e3](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u5251\u6307%20Offer%20\u9898\u89e3%20-%20\u76ee\u5f55.md)\r\n- [Leetcode \u9898\u89e3](https://github.com/CyC2018/CS-Notes/blob/master/notes/Leetcode%20\u9898\u89e3%20-%20\u76ee\u5f55.md)\r\n- [\u7b97\u6cd5](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u7b97\u6cd5%20-%20\u76ee\u5f55.md)\r\n- [\u7b14\u8bd5\u9762\u8bd5\u9898\u5e93](https://www.nowcoder.com/contestRoom?from=cyc_github)\r\n\r\n## :computer: \u64cd\u4f5c\u7cfb\u7edf\r\n\r\n- [\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf%20-%20\u76ee\u5f55.md)\r\n- [Linux](https://github.com/CyC2018/CS-Notes/blob/master/notes/Linux.md)\r\n\r\n## :cloud: \u7f51\u7edc \r\n\r\n- [\u8ba1\u7b97\u673a\u7f51\u7edc](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u8ba1\u7b97\u673a\u7f51\u7edc%20-%20\u76ee\u5f55.md)\r\n- [HTTP](https://github.com/CyC2018/CS-Notes/blob/master/notes/HTTP.md)\r\n- [Socket](https://github.com/CyC2018/CS-Notes/blob/master/notes/Socket.md)\r\n\r\n## :art: \u9762\u5411\u5bf9\u8c61\r\n\r\n- [\u9762\u5411\u5bf9\u8c61\u601d\u60f3](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u9762\u5411\u5bf9\u8c61\u601d\u60f3.md)\r\n- [\u8bbe\u8ba1\u6a21\u5f0f](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u8bbe\u8ba1\u6a21\u5f0f%20-%20\u76ee\u5f55.md)\r\n\r\n## :floppy_disk: \u6570\u636e\u5e93\r\n\r\n- [\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406.md)\r\n- [SQL](https://github.com/CyC2018/CS-Notes/blob/master/notes/SQL.md)\r\n- [Leetcode-Database \u9898\u89e3](https://github.com/CyC2018/CS-Notes/blob/master/notes/Leetcode-Database%20\u9898\u89e3.md)\r\n- [MySQL](https://github.com/CyC2018/CS-Notes/blob/master/notes/MySQL.md)\r\n- [Redis](https://github.com/CyC2018/CS-Notes/blob/master/notes/Redis.md)\r\n\r\n## :coffee: Java\r\n\r\n- [Java \u57fa\u7840](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20\u57fa\u7840.md)\r\n- [Java \u5bb9\u5668](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20\u5bb9\u5668.md)\r\n- [Java \u5e76\u53d1](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20\u5e76\u53d1.md)\r\n- [Java \u865a\u62df\u673a](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20\u865a\u62df\u673a.md)\r\n- [Java I/O](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20IO.md)\r\n\r\n## :bulb: \u7cfb\u7edf\u8bbe\u8ba1 \r\n\r\n- [\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840.md)\r\n- [\u5206\u5e03\u5f0f](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u5206\u5e03\u5f0f.md)\r\n- [\u96c6\u7fa4](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u96c6\u7fa4.md)\r\n- [\u653b\u51fb\u6280\u672f](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u653b\u51fb\u6280\u672f.md)\r\n- [\u7f13\u5b58](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u7f13\u5b58.md)\r\n- [\u6d88\u606f\u961f\u5217](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u6d88\u606f\u961f\u5217.md)\r\n\r\n## :wrench: \u5de5\u5177 \r\n\r\n- [Git](https://github.com/CyC2018/CS-Notes/blob/master/notes/Git.md)\r\n- [Docker](https://github.com/CyC2018/CS-Notes/blob/master/notes/Docker.md)\r\n- [\u6784\u5efa\u5de5\u5177](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u6784\u5efa\u5de5\u5177.md)\r\n- [\u6b63\u5219\u8868\u8fbe\u5f0f](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u6b63\u5219\u8868\u8fbe\u5f0f.md)\r\n\r\n## :watermelon: \u7f16\u7801\u5b9e\u8df5 \r\n\r\n- [\u4ee3\u7801\u53ef\u8bfb\u6027](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u4ee3\u7801\u53ef\u8bfb\u6027.md)\r\n- [\u4ee3\u7801\u98ce\u683c\u89c4\u8303](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u4ee3\u7801\u98ce\u683c\u89c4\u8303.md)\r\n\r\n## :memo: \u540e\u8bb0\r\n\r\n<div align=\"center\">\r\n\t<a href=\"https://www.nowcoder.com/discuss/137593?from=cyc_github\"> \u6211\u7684\u9762\u7ecf </a> / <a href=\"https://cyc2018.github.io\"> \u6211\u7684\u7b80\u5386 </a> / <a href=\"https://github.com/CyC2018/Markdown-Resume\"> \u7b80\u5386\u6a21\u7248 </a> / <a href=\"https://github.com/CyC2018/Job-Recommend\"> \u5185\u63a8 </a> / <a href=\"https://xiaozhuanlan.com/CyC2018\"> \u4e13\u680f </a> / <a href=\"assets/QQ2\u7fa4.png\"> QQ \u7fa4</a>\r\n\t<br><br>\r\n    <img width=\"320px\" src=\"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/\u516c\u4f17\u53f7\u4e8c\u7ef4\u7801-2.png\"></img>\r\n</div>\r\n\r\n\r\n\r\n### \u6392\u7248\r\n\r\n\u7b14\u8bb0\u5185\u5bb9\u6309\u7167 [\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317](https://github.com/sparanoid/chinese-copywriting-guidelines/blob/master/README.zh-CN.md) \u8fdb\u884c\u6392\u7248\uff0c\u4ee5\u4fdd\u8bc1\u5185\u5bb9\u7684\u53ef\u8bfb\u6027\u3002\r\n\r\n\u4e0d\u4f7f\u7528 `![]()` \u8fd9\u79cd\u65b9\u5f0f\u6765\u5f15\u7528\u56fe\u7247\uff0c\u800c\u662f\u7528 `<img>` \u6807\u7b7e\u3002\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u80fd\u591f\u63a7\u5236\u56fe\u7247\u4ee5\u5408\u9002\u7684\u5927\u5c0f\u663e\u793a\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a [GFM](https://github.github.com/gfm/) \u4e0d\u652f\u6301 `<center> ![]() </center>` \u8fd9\u79cd\u65b9\u6cd5\u8ba9\u56fe\u7247\u5c45\u4e2d\u663e\u793a\uff0c\u53ea\u80fd\u4f7f\u7528 `<div align=\"center\"> <img src=\"\"/> </div>` \u8fbe\u5230\u5c45\u4e2d\u7684\u6548\u679c\u3002\r\n\r\n\u5728\u7ebf\u6392\u7248\u5de5\u5177\uff1a[Text-Typesetting](https://github.com/CyC2018/Text-Typesetting)\u3002\r\n\r\n### License\r\n\r\n\u672c\u4ed3\u5e93\u7684\u5185\u5bb9\u4e0d\u662f\u5c06\u7f51\u4e0a\u7684\u8d44\u6599\u968f\u610f\u62fc\u51d1\u800c\u6765\uff0c\u9664\u4e86\u5c11\u90e8\u5206\u5f15\u7528\u4e66\u4e0a\u548c\u6280\u672f\u6587\u6863\u7684\u539f\u6587\uff08\u8fd9\u90e8\u5206\u5185\u5bb9\u90fd\u5728\u672b\u5c3e\u7684\u53c2\u8003\u94fe\u63a5\u4e2d\u52a0\u4e86\u51fa\u5904\uff09\uff0c\u5176\u4f59\u90fd\u662f\u6211\u7684\u539f\u521b\u3002\u5728\u60a8\u5f15\u7528\u672c\u4ed3\u5e93\u5185\u5bb9\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u6f14\u7ece\u65f6\uff0c\u8bf7\u7f72\u540d\u5e76\u4ee5\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff0c\u8c22\u8c22\u3002\r\n\r\n\u8f6c\u8f7d\u6587\u7ae0\u8bf7\u5728\u5f00\u5934\u660e\u663e\u5904\u6807\u660e\u8be5\u9875\u9762\u5730\u5740\uff0c\u516c\u4f17\u53f7\u7b49\u5176\u5b83\u8f6c\u8f7d\u8bf7\u8054\u7cfb zhengyc101@163.com\u3002\r\n\r\nLogo\uff1a[logomakr](https://logomakr.com/)\r\n\r\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a>\r\n\r\n### \u81f4\u8c22\r\n\r\n\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u5bf9\u672c\u4ed3\u5e93\u505a\u51fa\u7684\u8d21\u732e\uff0c\u5f53\u7136\u4e0d\u4ec5\u4ec5\u53ea\u6709\u8fd9\u4e9b\u8d21\u732e\u8005\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u679c\u4f60\u5e0c\u671b\u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u540d\u5355\u4e2d\uff0c\u5e76\u4e14\u63d0\u4ea4\u8fc7 Issue \u6216\u8005 PR\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\r\n\r\n<a href=\"https://github.com/linw7\">\r\n    <img src=\"https://avatars3.githubusercontent.com/u/21679154?s=400&v=4\" width=\"50px\">\r\n</a> \r\n<a href=\"https://github.com/g10guang\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/18458140?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/Sctwang\">\r\n    <img src=\"https://avatars3.githubusercontent.com/u/33345444?s=400&v=4\" width=\"50px\">\r\n</a> \r\n<a href=\"https://github.com/ResolveWang\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/8018776?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/crossoverJie\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/15684156?s=400&v=4\" width=\"50px\">\r\n</a> \r\n<a href=\"https://github.com/jy03078584\">\r\n    <img src=\"https://avatars2.githubusercontent.com/u/7719370?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/kwongtailau\">\r\n    <img src=\"https://avatars0.githubusercontent.com/u/22954582?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/xiangflight\">\r\n    <img src=\"https://avatars2.githubusercontent.com/u/10072416?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/mafulong\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/24795000?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/yanglbme\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/21008209?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/OOCZC\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/11623828?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/5renyuebing\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/32872430?s=400&v=4\" width=\"50px\">\r\n</a>\r\n"
 },
 {
  "repo": "rdpeng/RepData_PeerAssessment1",
  "language": null,
  "readme_contents": "## Introduction\n\nIt is now possible to collect a large amount of data about personal\nmovement using activity monitoring devices such as a\n[Fitbit](http://www.fitbit.com), [Nike\nFuelband](http://www.nike.com/us/en_us/c/nikeplus-fuelband), or\n[Jawbone Up](https://jawbone.com/up). These type of devices are part of\nthe \"quantified self\" movement -- a group of enthusiasts who take\nmeasurements about themselves regularly to improve their health, to\nfind patterns in their behavior, or because they are tech geeks. But\nthese data remain under-utilized both because the raw data are hard to\nobtain and there is a lack of statistical methods and software for\nprocessing and interpreting the data.\n\nThis assignment makes use of data from a personal activity monitoring\ndevice. This device collects data at 5 minute intervals through out the\nday. The data consists of two months of data from an anonymous\nindividual collected during the months of October and November, 2012\nand include the number of steps taken in 5 minute intervals each day.\n\n## Data\n\nThe data for this assignment can be downloaded from the course web\nsite:\n\n* Dataset: [Activity monitoring data](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip) [52K]\n\nThe variables included in this dataset are:\n\n* **steps**: Number of steps taking in a 5-minute interval (missing\n    values are coded as `NA`)\n\n* **date**: The date on which the measurement was taken in YYYY-MM-DD\n    format\n\n* **interval**: Identifier for the 5-minute interval in which\n    measurement was taken\n\n\n\n\nThe dataset is stored in a comma-separated-value (CSV) file and there\nare a total of 17,568 observations in this\ndataset.\n\n\n## Assignment\n\nThis assignment will be described in multiple parts. You will need to\nwrite a report that answers the questions detailed below. Ultimately,\nyou will need to complete the entire assignment in a **single R\nmarkdown** document that can be processed by **knitr** and be\ntransformed into an HTML file.\n\nThroughout your report make sure you always include the code that you\nused to generate the output you present. When writing code chunks in\nthe R markdown document, always use `echo = TRUE` so that someone else\nwill be able to read the code. **This assignment will be evaluated via\npeer assessment so it is essential that your peer evaluators be able\nto review the code for your analysis**.\n\nFor the plotting aspects of this assignment, feel free to use any\nplotting system in R (i.e., base, lattice, ggplot2)\n\nFork/clone the [GitHub repository created for this\nassignment](http://github.com/rdpeng/RepData_PeerAssessment1). You\nwill submit this assignment by pushing your completed files into your\nforked repository on GitHub. The assignment submission will consist of\nthe URL to your GitHub repository and the SHA-1 commit ID for your\nrepository state.\n\nNOTE: The GitHub repository also contains the dataset for the\nassignment so you do not have to download the data separately.\n\n\n\n### Loading and preprocessing the data\n\nShow any code that is needed to\n\n1. Load the data (i.e. `read.csv()`)\n\n2. Process/transform the data (if necessary) into a format suitable for your analysis\n\n\n### What is mean total number of steps taken per day?\n\nFor this part of the assignment, you can ignore the missing values in\nthe dataset.\n\n1. Make a histogram of the total number of steps taken each day\n\n2. Calculate and report the **mean** and **median** total number of steps taken per day\n\n\n### What is the average daily activity pattern?\n\n1. Make a time series plot (i.e. `type = \"l\"`) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n\n2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n\n\n### Imputing missing values\n\nNote that there are a number of days/intervals where there are missing\nvalues (coded as `NA`). The presence of missing days may introduce\nbias into some calculations or summaries of the data.\n\n1. Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with `NA`s)\n\n2. Devise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.\n\n3. Create a new dataset that is equal to the original dataset but with the missing data filled in.\n\n4. Make a histogram of the total number of steps taken each day and Calculate and report the **mean** and **median** total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?\n\n\n### Are there differences in activity patterns between weekdays and weekends?\n\nFor this part the `weekdays()` function may be of some help here. Use\nthe dataset with the filled-in missing values for this part.\n\n1. Create a new factor variable in the dataset with two levels -- \"weekday\" and \"weekend\" indicating whether a given date is a weekday or weekend day.\n\n1. Make a panel plot containing a time series plot (i.e. `type = \"l\"`) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). The plot should look something like the following, which was created using **simulated data**:\n\n![Sample panel plot](instructions_fig/sample_panelplot.png) \n\n\n**Your plot will look different from the one above** because you will\nbe using the activity monitor data. Note that the above plot was made\nusing the lattice system but you can make the same version of the plot\nusing any plotting system you choose.\n\n\n## Submitting the Assignment\n\nTo submit the assignment:\n\n1. Commit your completed `PA1_template.Rmd` file to the `master` branch of your git repository (you should already be on the `master` branch unless you created new ones)\n\n2. Commit your `PA1_template.md` and `PA1_template.html` files produced by processing your R markdown file with the `knit2html()` function in R (from the **knitr** package)\n\n3. If your document has figures included (it should) then they should have been placed in the `figure/` directory by default (unless you overrode the default). Add and commit the `figure/` directory to your git repository.\n\n4. Push your `master` branch to GitHub.\n\n5. Submit the URL to your GitHub repository for this assignment on the course web site.\n\nIn addition to submitting the URL for your GitHub repository, you will\nneed to submit the 40 character SHA-1 hash (as string of numbers from\n0-9 and letters from a-f) that identifies the repository commit that\ncontains the version of the files you want to submit. You can do this\nin GitHub by doing the following:\n\n1. Go into your GitHub repository web page for this assignment\n\n2. Click on the \"?? commits\" link where ?? is the number of commits you have in the repository. For example, if you made a total of 10 commits to this repository, the link should say \"10 commits\".\n\n3. You will see a list of commits that you have made to this repository. The most recent commit is at the very top. If this represents the version of the files you want to submit, then just click the \"copy to clipboard\" button on the right hand side that should appear when you hover over the SHA-1 hash. Paste this SHA-1 hash into the course web site when you submit your assignment. If you don't want to use the most recent commit, then go down and find the commit you want and copy the SHA-1 hash.\n\nA valid submission will look something like (this is just an **example**!)\n\n```r\nhttps://github.com/rdpeng/RepData_PeerAssessment1\n\n7c376cc5447f11537f8740af8e07d6facc3d9645\n```\n"
 },
 {
  "repo": "torvalds/linux",
  "language": "C",
  "readme_contents": "Linux kernel\n============\n\nThere are several guides for kernel developers and users. These guides can\nbe rendered in a number of formats, like HTML and PDF. Please read\nDocumentation/admin-guide/README.rst first.\n\nIn order to build the documentation, use ``make htmldocs`` or\n``make pdfdocs``.  The formatted documentation can also be read online at:\n\n    https://www.kernel.org/doc/html/latest/\n\nThere are various text files in the Documentation/ subdirectory,\nseveral of them using the Restructured Text markup notation.\n\nPlease read the Documentation/process/changes.rst file, as it contains the\nrequirements for building and running the kernel, and information about\nthe problems which may result by upgrading your kernel.\n"
 },
 {
  "repo": "spring-projects/spring-boot",
  "language": "Java",
  "readme_contents": "= Spring Boot image:https://ci.spring.io/api/v1/teams/spring-boot/pipelines/spring-boot-2.4.x/jobs/build/badge[\"Build Status\", link=\"https://ci.spring.io/teams/spring-boot/pipelines/spring-boot-2.4.x?groups=Build\"] image:https://badges.gitter.im/Join Chat.svg[\"Chat\",link=\"https://gitter.im/spring-projects/spring-boot?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"]\n:docs: https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference\n:github: https://github.com/spring-projects/spring-boot\n\nSpring Boot makes it easy to create Spring-powered, production-grade applications and\nservices with absolute minimum fuss. It takes an opinionated view of the Spring platform\nso that new and existing users can quickly get to the bits they need.\n\nYou can use Spring Boot to create stand-alone Java applications that can be started using\n`java -jar` or more traditional WAR deployments. We also provide a command line tool\nthat runs spring scripts.\n\nOur primary goals are:\n\n* Provide a radically faster and widely accessible getting started experience for all\nSpring development\n* Be opinionated out of the box, but get out of the way quickly as requirements start to\ndiverge from the defaults\n* Provide a range of non-functional features that are common to large classes of projects\n(e.g. embedded servers, security, metrics, health checks, externalized configuration)\n* Absolutely no code generation and no requirement for XML configuration\n\n\n\n== Installation and Getting Started\nThe {docs}/html/[reference documentation] includes detailed\n{docs}/html/getting-started.html#getting-started-installing-spring-boot[installation\ninstructions] as well as a comprehensive\n{docs}/html/getting-started.html#getting-started-first-application[``getting started``]\nguide.\n\nHere is a quick teaser of a complete Spring Boot application in Java:\n\n[source,java,indent=0]\n----\n\timport org.springframework.boot.*;\n\timport org.springframework.boot.autoconfigure.*;\n\timport org.springframework.web.bind.annotation.*;\n\n\t@RestController\n\t@SpringBootApplication\n\tpublic class Example {\n\n\t\t@RequestMapping(\"/\")\n\t\tString home() {\n\t\t\treturn \"Hello World!\";\n\t\t}\n\n\t\tpublic static void main(String[] args) {\n\t\t\tSpringApplication.run(Example.class, args);\n\t\t}\n\n\t}\n----\n\n\n\n== Getting help\nHaving trouble with Spring Boot? We'd like to help!\n\n* Check the {docs}/html/[reference documentation], especially the\n  {docs}/html/howto.html#howto[How-to's] -- they provide solutions to the most common\n  questions.\n* Learn the Spring basics -- Spring Boot builds on many other Spring projects, check\n  the https://spring.io[spring.io] web-site for a wealth of reference documentation. If\n  you are just starting out with Spring, try one of the https://spring.io/guides[guides].\n* If you are upgrading, read the {github}/wiki[release notes] for upgrade instructions and\n  \"new and noteworthy\" features.\n* Ask a question - we monitor https://stackoverflow.com[stackoverflow.com] for questions\n  tagged with https://stackoverflow.com/tags/spring-boot[`spring-boot`]. You can also chat\n  with the community on https://gitter.im/spring-projects/spring-boot[Gitter].\n* Report bugs with Spring Boot at {github}/issues[github.com/spring-projects/spring-boot/issues].\n\n\n\n== Reporting Issues\nSpring Boot uses GitHub's integrated issue tracking system to record bugs and feature\nrequests. If you want to raise an issue, please follow the recommendations below:\n\n* Before you log a bug, please search the {github}/issues[issue tracker] to see if someone\n  has already reported the problem.\n* If the issue doesn't already exist, {github}/issues/new[create a new issue].\n* Please provide as much information as possible with the issue report, we like to know\n  the version of Spring Boot that you are using, as well as your Operating System and\n  JVM version.\n* If you need to paste code, or include a stack trace use Markdown +++```+++ escapes\n  before and after your text.\n* If possible try to create a test-case or project that replicates the problem and attach\n  it to the issue.\n\n\n\n== Building from Source\nYou don't need to build from source to use Spring Boot (binaries in\nhttps://repo.spring.io[repo.spring.io]), but if you want to try out the latest and\ngreatest, Spring Boot can be built and published to your local Maven cache using the\nhttps://docs.gradle.org/current/userguide/gradle_wrapper.html[Gradle wrapper]. You also\nneed JDK 1.8.\n\n[indent=0]\n----\n\t$ ./gradlew publishToMavenLocal\n----\n\nThis will build all of the jars and documentation and publish them to your local\nMaven cache. It won't run any of the tests. If you want to build everything, use the\n`build` task:\n\n[indent=0]\n----\n\t$ ./gradlew build\n----\n\n_Also see link:CONTRIBUTING.adoc[CONTRIBUTING.adoc] if you wish to submit pull requests,\nand in particular please fill out the\nhttps://support.springsource.com/spring_committer_signup[Contributor's Agreement]\nbefore your first change, however trivial._\n\n\n\n== Modules\nThere are a number of modules in Spring Boot, here is a quick overview:\n\n\n\n=== spring-boot\nThe main library providing features that support the other parts of Spring Boot,\nthese include:\n\n* The `SpringApplication` class, providing static convenience methods that make it easy\nto write a stand-alone Spring Application. Its sole job is to create and refresh an\nappropriate Spring `ApplicationContext`\n* Embedded web applications with a choice of container (Tomcat, Jetty or Undertow)\n* First class externalized configuration support\n* Convenience `ApplicationContext` initializers, including support for sensible logging\ndefaults\n\n\n\n=== spring-boot-autoconfigure\nSpring Boot can configure large parts of common applications based on the content\nof their classpath. A single `@EnableAutoConfiguration` annotation triggers\nauto-configuration of the Spring context.\n\nAuto-configuration attempts to deduce which beans a user might need. For example, if\n`HSQLDB` is on the classpath, and the user has not configured any database connections,\nthen they probably want an in-memory database to be defined. Auto-configuration will\nalways back away as the user starts to define their own beans.\n\n\n\n=== spring-boot-starters\nStarters are a set of convenient dependency descriptors that you can include in\nyour application. You get a one-stop-shop for all the Spring and related technology\nthat you need without having to hunt through sample code and copy paste loads of\ndependency descriptors. For example, if you want to get started using Spring and JPA for\ndatabase access just include the `spring-boot-starter-data-jpa` dependency in your\nproject, and you are good to go.\n\n\n\n=== spring-boot-cli\nThe Spring command line application compiles and runs Groovy source, making it super\neasy to write the absolute minimum of code to get an application running. Spring CLI\ncan also watch files, automatically recompiling and restarting when they change.\n\n\n\n=== spring-boot-actuator\nActuator endpoints let you monitor and interact with your application.\nSpring Boot Actuator provides the infrastructure required for actuator endpoints. It contains\nannotation support for actuator endpoints. Out of the box, this module provides a number of endpoints\nincluding the `HealthEndpoint`, `EnvironmentEndpoint`, `BeansEndpoint` and many more.\n\n\n\n=== spring-boot-actuator-autoconfigure\nThis provides auto-configuration for actuator endpoints based on the content of the classpath and a set of properties.\nFor instance, if Micrometer is on the classpath, it will auto-configure the `MetricsEndpoint`.\nIt contains configuration to expose endpoints over HTTP or JMX.\nJust like Spring Boot AutoConfigure, this will back away as the user starts to define their own beans.\n\n\n\n=== spring-boot-test\nThis module contains core items and annotations that can be helpful when testing your application.\n\n\n\n=== spring-boot-test-autoconfigure\nLike other Spring Boot auto-configuration modules, spring-boot-test-autoconfigure, provides auto-configuration\nfor tests based on the classpath. It includes a number of annotations that can be used to automatically\nconfigure a slice of your application that needs to be tested.\n\n\n\n=== spring-boot-loader\nSpring Boot Loader provides the secret sauce that allows you to build a single jar file\nthat can be launched using `java -jar`. Generally you will not need to use\n`spring-boot-loader` directly, but instead work with the\nlink:spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin[Gradle] or\nlink:spring-boot-project/spring-boot-tools/spring-boot-maven-plugin[Maven] plugin.\n\n\n\n=== spring-boot-devtools\nThe spring-boot-devtools module provides additional development-time features such as automatic restarts,\nfor a smoother application development experience. Developer tools are automatically disabled when\nrunning a fully packaged application.\n\n\n\n== Samples\nGroovy samples for use with the command line application are available in\nlink:spring-boot-project/spring-boot-cli/samples[spring-boot-cli/samples]. To run the CLI samples type\n`spring run <sample>.groovy` from samples directory.\n\n\n\n== Guides\nThe https://spring.io/[spring.io] site contains several guides that show how to use Spring\nBoot step-by-step:\n\n* https://spring.io/guides/gs/spring-boot/[Building an Application with Spring Boot] is a\n  very basic guide that shows you how to create a simple application, run it and add some\n  management services.\n* https://spring.io/guides/gs/actuator-service/[Building a RESTful Web Service with Spring\n  Boot Actuator] is a guide to creating a REST web service and also shows how the server\n  can be configured.\n* https://spring.io/guides/gs/convert-jar-to-war/[Converting a Spring Boot JAR Application\n  to a WAR] shows you how to run applications in a web server as a WAR file.\n\n\n\n== License\nSpring Boot is Open Source software released under the\nhttps://www.apache.org/licenses/LICENSE-2.0.html[Apache 2.0 license].\n"
 }
]