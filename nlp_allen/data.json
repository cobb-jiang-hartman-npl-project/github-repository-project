[
 {
  "repo": "jtleek/datasharing",
  "language": null,
  "readme_contents": "How to share data with a statistician\n===========\n\nThis is a guide for anyone who needs to share data with a statistician or data scientist. The target audiences I have in mind are:\n\n* Collaborators who need statisticians or data scientists to analyze data for them\n* Students or postdocs in various disciplines looking for consulting advice\n* Junior statistics students whose job it is to collate/clean/wrangle data sets\n\nThe goals of this guide are to provide some instruction on the best way to share data to avoid the most common pitfalls\nand sources of delay in the transition from data collection to data analysis. The [Leek group](http://biostat.jhsph.edu/~jleek/) works with a large\nnumber of collaborators and the number one source of variation in the speed to results is the status of the data\nwhen they arrive at the Leek group. Based on my conversations with other statisticians this is true nearly universally.\n\nMy strong feeling is that statisticians should be able to handle the data in whatever state they arrive. It is important\nto see the raw data, understand the steps in the processing pipeline, and be able to incorporate hidden sources of\nvariability in one's data analysis. On the other hand, for many data types, the processing steps are well documented\nand standardized. So the work of converting the data from raw form to directly analyzable form can be performed \nbefore calling on a statistician. This can dramatically speed the turnaround time, since the statistician doesn't\nhave to work through all the pre-processing steps first. \n\n\nWhat you should deliver to the statistician\n====================\n\nTo facilitate the most efficient and timely analysis this is the information you should pass to a statistician:\n\n1. The raw data.\n2. A [tidy data set](http://vita.had.co.nz/papers/tidy-data.pdf) \n3. A code book describing each variable and its values in the tidy data set.  \n4. An explicit and exact recipe you used to go from 1 -> 2,3 \n\nLet's look at each part of the data package you will transfer. \n\n\n### The raw data\n\nIt is critical that you include the rawest form of the data that you have access to. This ensures\nthat data provenance can be maintained throughout the workflow.  Here are some examples of the\nraw form of data:\n\n* The strange [binary file](http://en.wikipedia.org/wiki/Binary_file) your measurement machine spits out\n* The unformatted Excel file with 10 worksheets the company you contracted with sent you\n* The complicated [JSON](http://en.wikipedia.org/wiki/JSON) data you got from scraping the [Twitter API](https://twitter.com/twitterapi)\n* The hand-entered numbers you collected looking through a microscope\n\nYou know the raw data are in the right format if you: \n\n1. Ran no software on the data\n1. Did not modify any of the data values\n1. You did not remove any data from the data set\n1. You did not summarize the data in any way\n\nIf you made any modifications of the raw data it is not the raw form of the data. Reporting modified data\nas raw data is a very common way to slow down the analysis process, since the analyst will often have to do a\nforensic study of your data to figure out why the raw data looks weird. (Also imagine what would happen if new data arrived?)\n\n### The tidy data set\n\nThe general principles of tidy data are laid out by [Hadley Wickham](http://had.co.nz/) in [this paper](http://vita.had.co.nz/papers/tidy-data.pdf)\nand [this video](http://vimeo.com/33727555). While both the paper and the video describe tidy data using [R](http://www.r-project.org/), the principles\nare more generally applicable:\n\n1. Each variable you measure should be in one column\n1. Each different observation of that variable should be in a different row\n1. There should be one table for each \"kind\" of variable\n1. If you have multiple tables, they should include a column in the table that allows them to be joined or merged\n\nWhile these are the hard and fast rules, there are a number of other things that will make your data set much easier\nto handle. First is to include a row at the top of each data table/spreadsheet that contains full row names. \nSo if you measured age at diagnosis for patients, you would head that column with the name `AgeAtDiagnosis` instead\nof something like `ADx` or another abbreviation that may be hard for another person to understand. \n\n\nHere is an example of how this would work from genomics. Suppose that for 20 people you have collected gene expression measurements with \n[RNA-sequencing](http://en.wikipedia.org/wiki/RNA-Seq). You have also collected demographic and clinical information\nabout the patients including their age, treatment, and diagnosis. You would have one table/spreadsheet that contains the clinical/demographic\ninformation. It would have four columns (patient id, age, treatment, diagnosis) and 21 rows (a row with variable names, then one row\nfor every patient). You would also have one spreadsheet for the summarized genomic data. Usually this type of data\nis summarized at the level of the number of counts per exon. Suppose you have 100,000 exons, then you would have a\ntable/spreadsheet that had 21 rows (a row for gene names, and one row for each patient) and 100,001 columns (one row for patient\nids and one row for each data type). \n\nIf you are sharing your data with the collaborator in Excel, the tidy data should be in one Excel file per table. They\nshould not have multiple worksheets, no macros should be applied to the data, and no columns/cells should be highlighted. \nAlternatively share the data in a [CSV](http://en.wikipedia.org/wiki/Comma-separated_values) or [TAB-delimited](http://en.wikipedia.org/wiki/Tab-separated_values) text file. (Beware however that reading CSV files into Excel can sometimes lead to non-reproducible handling of date and time variables.)\n\n\n### The code book\n\nFor almost any data set, the measurements you calculate will need to be described in more detail than you can or should sneak\ninto the spreadsheet. The code book contains this information. At minimum it should contain:\n\n1. Information about the variables (including units!) in the data set not contained in the tidy data \n1. Information about the summary choices you made\n1. Information about the experimental study design you used\n\nIn our genomics example, the analyst would want to know what the unit of measurement for each\nclinical/demographic variable is (age in years, treatment by name/dose, level of diagnosis and how heterogeneous). They \nwould also want to know how you picked the exons you used for summarizing the genomic data (UCSC/Ensembl, etc.). They\nwould also want to know any other information about how you did the data collection/study design. For example,\nare these the first 20 patients that walked into the clinic? Are they 20 highly selected patients by some characteristic\nlike age? Are they randomized to treatments? \n\nA common format for this document is a Word file. There should be a section called \"Study design\" that has a thorough\ndescription of how you collected the data. There is a section called \"Code book\" that describes each variable and its\nunits. \n\n### How to code variables\n\nWhen you put variables into a spreadsheet there are several main categories you will run into depending on their [data type](http://en.wikipedia.org/wiki/Statistical_data_type):\n\n1. Continuous\n1. Ordinal\n1. Categorical\n1. Missing \n1. Censored\n\nContinuous variables are anything measured on a quantitative scale that could be any fractional number. An example\nwould be something like weight measured in kg. [Ordinal data](http://en.wikipedia.org/wiki/Ordinal_data) are data that have a fixed, small (< 100) number of levels but are ordered. \nThis could be for example survey responses where the choices are: poor, fair, good. [Categorical data](http://en.wikipedia.org/wiki/Categorical_variable) are data where there\nare multiple categories, but they aren't ordered. One example would be sex: male or female. This coding is attractive because it is self-documenting.  [Missing data](http://en.wikipedia.org/wiki/Missing_data) are data\nthat are unobserved and you don't know the mechanism. You should code missing values as `NA`. [Censored data](http://en.wikipedia.org/wiki/Censoring_\\(statistics\\)) are data\nwhere you know the missingness mechanism on some level. Common examples are a measurement being below a detection limit\nor a patient being lost to follow-up. They should also be coded as `NA` when you don't have the data. But you should\nalso add a new column to your tidy data called, \"VariableNameCensored\" which should have values of `TRUE` if censored \nand `FALSE` if not. In the code book you should explain why those values are missing. It is absolutely critical to report\nto the analyst if there is a reason you know about that some of the data are missing. You should also not [impute](http://en.wikipedia.org/wiki/Imputation_\\(statistics\\))/make up/\nthrow away missing observations.\n\nIn general, try to avoid coding categorical or ordinal variables as numbers. When you enter the value for sex in the tidy\ndata, it should be \"male\" or \"female\". The ordinal values in the data set should be \"poor\", \"fair\", and \"good\" not 1, 2 ,3.\nThis will avoid potential mixups about which direction effects go and will help identify coding errors. \n\nAlways encode every piece of information about your observations using text. For example, if you are storing data in Excel and use a form of colored text or cell background formatting to indicate information about an observation (\"red variable entries were observed in experiment 1.\") then this information will not be exported (and will be lost!) when the data is exported as raw text.  Every piece of data should be encoded as actual text that can be exported.  \n\n### The instruction list/script\n\nYou may have heard this before, but [reproducibility is a big deal in computational science](http://www.sciencemag.org/content/334/6060/1226).\nThat means, when you submit your paper, the reviewers and the rest of the world should be able to exactly replicate\nthe analyses from raw data all the way to final results. If you are trying to be efficient, you will likely perform\nsome summarization/data analysis steps before the data can be considered tidy. \n\nThe ideal thing for you to do when performing summarization is to create a computer script (in `R`, `Python`, or something else) \nthat takes the raw data as input and produces the tidy data you are sharing as output. You can try running your script\na couple of times and see if the code produces the same output. \n\nIn many cases, the person who collected the data has incentive to make it tidy for a statistician to speed the process\nof collaboration. They may not know how to code in a scripting language. In that case, what you should provide the statistician\nis something called [pseudocode](http://en.wikipedia.org/wiki/Pseudocode). It should look something like:\n\n1. Step 1 - take the raw file, run version 3.1.2 of summarize software with parameters a=1, b=2, c=3\n1. Step 2 - run the software separately for each sample\n1. Step 3 - take column three of outputfile.out for each sample and that is the corresponding row in the output data set\n\nYou should also include information about which system (Mac/Windows/Linux) you used the software on and whether you \ntried it more than once to confirm it gave the same results. Ideally, you will run this by a fellow student/labmate\nto confirm that they can obtain the same output file you did. \n\n\n\n\nWhat you should expect from the analyst\n====================\n\nWhen you turn over a properly tidied data set it dramatically decreases the workload on the statistician. So hopefully\nthey will get back to you much sooner. But most careful statisticians will check your recipe, ask questions about\nsteps you performed, and try to confirm that they can obtain the same tidy data that you did with, at minimum, spot\nchecks.\n\nYou should then expect from the statistician:\n\n1. An analysis script that performs each of the analyses (not just instructions)\n1. The exact computer code they used to run the analysis\n1. All output files/figures they generated. \n\nThis is the information you will use in the supplement to establish reproducibility and precision of your results. Each\nof the steps in the analysis should be clearly explained and you should ask questions when you don't understand\nwhat the analyst did. It is the responsibility of both the statistician and the scientist to understand the statistical\nanalysis. You may not be able to perform the exact analyses without the statistician's code, but you should be able\nto explain why the statistician performed each step to a labmate/your principal investigator. \n\n\nContributors\n====================\n\n* [Jeff Leek](http://biostat.jhsph.edu/~jleek/) - Wrote the initial version.\n* [L. Collado-Torres](http://bit.ly/LColladoTorres) - Fixed typos, added links.\n* [Nick Reich](http://people.umass.edu/nick/) - Added tips on storing data as text.\n* [Nick Horton](https://www.amherst.edu/people/facstaff/nhorton) - Minor wording suggestions.\n\n\n"
 },
 {
  "repo": "rdpeng/ProgrammingAssignment2",
  "language": "R",
  "readme_contents": "### Introduction\n\nThis second programming assignment will require you to write an R\nfunction that is able to cache potentially time-consuming computations.\nFor example, taking the mean of a numeric vector is typically a fast\noperation. However, for a very long vector, it may take too long to\ncompute the mean, especially if it has to be computed repeatedly (e.g.\nin a loop). If the contents of a vector are not changing, it may make\nsense to cache the value of the mean so that when we need it again, it\ncan be looked up in the cache rather than recomputed. In this\nProgramming Assignment you will take advantage of the scoping rules of\nthe R language and how they can be manipulated to preserve state inside\nof an R object.\n\n### Example: Caching the Mean of a Vector\n\nIn this example we introduce the `<<-` operator which can be used to\nassign a value to an object in an environment that is different from the\ncurrent environment. Below are two functions that are used to create a\nspecial object that stores a numeric vector and caches its mean.\n\nThe first function, `makeVector` creates a special \"vector\", which is\nreally a list containing a function to\n\n1.  set the value of the vector\n2.  get the value of the vector\n3.  set the value of the mean\n4.  get the value of the mean\n\n<!-- -->\n\n    makeVector <- function(x = numeric()) {\n            m <- NULL\n            set <- function(y) {\n                    x <<- y\n                    m <<- NULL\n            }\n            get <- function() x\n            setmean <- function(mean) m <<- mean\n            getmean <- function() m\n            list(set = set, get = get,\n                 setmean = setmean,\n                 getmean = getmean)\n    }\n\nThe following function calculates the mean of the special \"vector\"\ncreated with the above function. However, it first checks to see if the\nmean has already been calculated. If so, it `get`s the mean from the\ncache and skips the computation. Otherwise, it calculates the mean of\nthe data and sets the value of the mean in the cache via the `setmean`\nfunction.\n\n    cachemean <- function(x, ...) {\n            m <- x$getmean()\n            if(!is.null(m)) {\n                    message(\"getting cached data\")\n                    return(m)\n            }\n            data <- x$get()\n            m <- mean(data, ...)\n            x$setmean(m)\n            m\n    }\n\n### Assignment: Caching the Inverse of a Matrix\n\nMatrix inversion is usually a costly computation and there may be some\nbenefit to caching the inverse of a matrix rather than computing it\nrepeatedly (there are also alternatives to matrix inversion that we will\nnot discuss here). Your assignment is to write a pair of functions that\ncache the inverse of a matrix.\n\nWrite the following functions:\n\n1.  `makeCacheMatrix`: This function creates a special \"matrix\" object\n    that can cache its inverse.\n2.  `cacheSolve`: This function computes the inverse of the special\n    \"matrix\" returned by `makeCacheMatrix` above. If the inverse has\n    already been calculated (and the matrix has not changed), then\n    `cacheSolve` should retrieve the inverse from the cache.\n\nComputing the inverse of a square matrix can be done with the `solve`\nfunction in R. For example, if `X` is a square invertible matrix, then\n`solve(X)` returns its inverse.\n\nFor this assignment, assume that the matrix supplied is always\ninvertible.\n\nIn order to complete this assignment, you must do the following:\n\n1.  Fork the GitHub repository containing the stub R files at\n    [https://github.com/rdpeng/ProgrammingAssignment2](https://github.com/rdpeng/ProgrammingAssignment2)\n    to create a copy under your own account.\n2.  Clone your forked GitHub repository to your computer so that you can\n    edit the files locally on your own machine.\n3.  Edit the R file contained in the git repository and place your\n    solution in that file (please do not rename the file).\n4.  Commit your completed R file into YOUR git repository and push your\n    git branch to the GitHub repository under your account.\n5.  Submit to Coursera the URL to your GitHub repository that contains\n    the completed R code for the assignment.\n\n### Grading\n\nThis assignment will be graded via peer assessment.\n"
 },
 {
  "repo": "octocat/Spoon-Knife",
  "language": "HTML",
  "readme_contents": "### Well hello there!\n\nThis repository is meant to provide an example for *forking* a repository on GitHub.\n\nCreating a *fork* is producing a personal copy of someone else's project. Forks act as a sort of bridge between the original repository and your personal copy. You can submit *Pull Requests* to help make other people's projects better by offering your changes up to the original project. Forking is at the core of social coding at GitHub.\n\nAfter forking this repository, you can make some changes to the project, and submit [a Pull Request](https://github.com/octocat/Spoon-Knife/pulls) as practice.\n\nFor some more information on how to fork a repository, [check out our guide, \"Forking Projects\"\"](http://guides.github.com/overviews/forking/). Thanks! :sparkling_heart:\n"
 },
 {
  "repo": "tensorflow/tensorflow",
  "language": "C++",
  "readme_contents": "<div align=\"center\">\n  <img src=\"https://www.tensorflow.org/images/tf_logo_social.png\">\n</div>\n\n[![Python](https://img.shields.io/pypi/pyversions/tensorflow.svg?style=plastic)](https://badge.fury.io/py/tensorflow)\n[![PyPI](https://badge.fury.io/py/tensorflow.svg)](https://badge.fury.io/py/tensorflow)\n\n\n**`Documentation`** |\n------------------- |\n[![Documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://www.tensorflow.org/api_docs/) |\n\n[TensorFlow](https://www.tensorflow.org/) is an end-to-end open source platform\nfor machine learning. It has a comprehensive, flexible ecosystem of\n[tools](https://www.tensorflow.org/resources/tools),\n[libraries](https://www.tensorflow.org/resources/libraries-extensions), and\n[community](https://www.tensorflow.org/community) resources that lets\nresearchers push the state-of-the-art in ML and developers easily build and\ndeploy ML-powered applications.\n\nTensorFlow was originally developed by researchers and engineers working on the\nGoogle Brain team within Google's Machine Intelligence Research organization to\nconduct machine learning and deep neural networks research. The system is\ngeneral enough to be applicable in a wide variety of other domains, as well.\n\nTensorFlow provides stable [Python](https://www.tensorflow.org/api_docs/python)\nand [C++](https://www.tensorflow.org/api_docs/cc) APIs, as well as\nnon-guaranteed backward compatible API for\n[other languages](https://www.tensorflow.org/api_docs).\n\nKeep up-to-date with release announcements and security updates by subscribing\nto\n[announce@tensorflow.org](https://groups.google.com/a/tensorflow.org/forum/#!forum/announce).\nSee all the [mailing lists](https://www.tensorflow.org/community/forums).\n\n## Install\n\nSee the [TensorFlow install guide](https://www.tensorflow.org/install) for the\n[pip package](https://www.tensorflow.org/install/pip), to\n[enable GPU support](https://www.tensorflow.org/install/gpu), use a\n[Docker container](https://www.tensorflow.org/install/docker), and\n[build from source](https://www.tensorflow.org/install/source).\n\nTo install the current release, which includes support for\n[CUDA-enabled GPU cards](https://www.tensorflow.org/install/gpu) *(Ubuntu and\nWindows)*:\n\n```\n$ pip install tensorflow\n```\n\nA smaller CPU-only package is also available:\n\n```\n$ pip install tensorflow-cpu\n```\n\nTo update TensorFlow to the latest version, add `--upgrade` flag to the above\ncommands.\n\n*Nightly binaries are available for testing using the\n[tf-nightly](https://pypi.python.org/pypi/tf-nightly) and\n[tf-nightly-cpu](https://pypi.python.org/pypi/tf-nightly-cpu) packages on PyPi.*\n\n#### *Try your first TensorFlow program*\n\n```shell\n$ python\n```\n\n```python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\nb'Hello, TensorFlow!'\n```\n\nFor more examples, see the\n[TensorFlow tutorials](https://www.tensorflow.org/tutorials/).\n\n## Contribution guidelines\n\n**If you want to contribute to TensorFlow, be sure to review the\n[contribution guidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.**\n\n**We use [GitHub issues](https://github.com/tensorflow/tensorflow/issues) for\ntracking requests and bugs, please see\n[TensorFlow Discuss](https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss)\nfor general questions and discussion, and please direct specific questions to\n[Stack Overflow](https://stackoverflow.com/questions/tagged/tensorflow).**\n\nThe TensorFlow project strives to abide by generally accepted best practices in\nopen-source software development:\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1486/badge)](https://bestpractices.coreinfrastructure.org/projects/1486)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n\n## Continuous build status\n\n### Official Builds\n\nBuild Type               | Status                                                                                                                                                                           | Artifacts\n------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux CPU**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html)           | [PyPI](https://pypi.org/project/tf-nightly/)\n**Linux GPU**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html) | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Linux XLA**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html)         | TBA\n**macOS**                | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html)     | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows CPU**          | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html)       | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows GPU**          | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html)       | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Android**              | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html)               | [![Download](https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg)](https://bintray.com/google/tensorflow/tensorflow/_latestVersion)\n**Raspberry Pi 0 and 1** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html)           | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl)\n**Raspberry Pi 2 and 3** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html)           | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl)\n\n### Community Supported Builds\n\nBuild Type                                                        | Status                                                                                                                                                                                        | Artifacts\n----------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux AMD ROCm GPU** Nightly                                    | [![Build Status](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/badge/icon)](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly)                                                  | [Nightly](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/lastSuccessfulBuild/)\n**Linux AMD ROCm GPU** Stable Release                             | [![Build Status](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/badge/icon)](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/)                                                 | Release [1.15](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/lastSuccessfulBuild/) / [2.x](http://ml-ci.amd.com:21096/job/tensorflow-rocm-v2-release/lastSuccessfulBuild/)\n**Linux s390x** Nightly                                           | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon)](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)                                                             | [Nightly](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)\n**Linux s390x CPU** Stable Release                                | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/badge/icon)](https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/)                                      | [Release](https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/)\n**Linux ppc64le CPU** Nightly                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/)\n**Linux ppc64le CPU** Stable Release                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/)                       | Release [1.15](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/) / [2.x](https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_CPU_Release_Build/)\n**Linux ppc64le GPU** Nightly                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/)\n**Linux ppc64le GPU** Stable Release                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/)                       | Release [1.15](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/) / [2.x](https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_GPU_Release_Build/)\n**Linux CPU with Intel\u00ae MKL-DNN** Nightly                         | [![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/badge/icon)](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)                     | [Nightly](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)\n**Linux CPU with Intel\u00ae MKL-DNN** Stable Release                  | ![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon)                                                                                              | Release [1.15](https://pypi.org/project/intel-tensorflow/1.15.0/) / [2.x](https://pypi.org/project/intel-tensorflow/)\n**Red Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU** <br> Python 2.7, 3.6 | [![Build Status](https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&build=2)](https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/) | [1.13.1 PyPI](https://tensorflow.pypi.thoth-station.ninja/index/)\n\n## Resources\n\n*   [TensorFlow.org](https://www.tensorflow.org)\n*   [TensorFlow Tutorials](https://www.tensorflow.org/tutorials/)\n*   [TensorFlow Official Models](https://github.com/tensorflow/models/tree/master/official)\n*   [TensorFlow Examples](https://github.com/tensorflow/examples)\n*   [TensorFlow in Practice from Coursera](https://www.coursera.org/specializations/tensorflow-in-practice)\n*   [TensorFlow: Data and Deployment from Coursera](https://www.coursera.org/specializations/tensorflow-data-and-deployment)\n*   [Getting Started with TensorFlow 2 from Coursera](https://www.coursera.org/learn/getting-started-with-tensor-flow2)\n*   [Intro to TensorFlow for Deep Learning from Udacity](https://www.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187)\n*   [Introduction to TensorFlow Lite from Udacity](https://www.udacity.com/course/intro-to-tensorflow-lite--ud190)\n*   [Machine Learning with TensorFlow on GCP](https://www.coursera.org/specializations/machine-learning-tensorflow-gcp)\n*   [TensorFlow Blog](https://blog.tensorflow.org)\n*   [Learn ML with TensorFlow](https://www.tensorflow.org/resources/learn-ml)\n*   [TensorFlow Twitter](https://twitter.com/tensorflow)\n*   [TensorFlow YouTube](https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ)\n*   [TensorFlow Roadmap](https://www.tensorflow.org/community/roadmap)\n*   [TensorFlow White Papers](https://www.tensorflow.org/about/bib)\n*   [TensorBoard Visualization Toolkit](https://github.com/tensorflow/tensorboard)\n\nLearn more about the\n[TensorFlow community](https://www.tensorflow.org/community) and how to\n[contribute](https://www.tensorflow.org/community/contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
 },
 {
  "repo": "SmartThingsCommunity/SmartThingsPublic",
  "language": "Groovy",
  "readme_contents": "# SmartThings Public GitHub Repo\n\nAn official list of SmartApps and Device Types from SmartThings.\n\nHere are some links to help you get started coding right away:\n\n* [GitHub-specific Documentation](http://docs.smartthings.com/en/latest/tools-and-ide/github-integration.html)\n* [Full Documentation](http://docs.smartthings.com)\n* [IDE & Simulator](http://ide.smartthings.com)\n* [Community Forums](http://community.smartthings.com)\n\nFollow us on the web:\n\n* Twitter: http://twitter.com/smartthingsdev\n* Facebook: http://facebook.com/smartthingsdevelopers\n"
 },
 {
  "repo": "twbs/bootstrap",
  "language": "JavaScript",
  "readme_contents": "<p align=\"center\">\n  <a href=\"https://getbootstrap.com/\">\n    <img src=\"https://getbootstrap.com/docs/4.5/assets/brand/bootstrap-solid.svg\" alt=\"Bootstrap logo\" width=\"72\" height=\"72\">\n  </a>\n</p>\n\n<h3 align=\"center\">Bootstrap</h3>\n\n<p align=\"center\">\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  <br>\n  <a href=\"https://getbootstrap.com/docs/4.5/\"><strong>Explore Bootstrap docs \u00bb</strong></a>\n  <br>\n  <br>\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=bug.md\">Report bug</a>\n  \u00b7\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=feature.md&labels=feature\">Request feature</a>\n  \u00b7\n  <a href=\"https://themes.getbootstrap.com/\">Themes</a>\n  \u00b7\n  <a href=\"https://blog.getbootstrap.com/\">Blog</a>\n</p>\n\n\n## Table of contents\n\n- [Quick start](#quick-start)\n- [Status](#status)\n- [What's included](#whats-included)\n- [Bugs and feature requests](#bugs-and-feature-requests)\n- [Documentation](#documentation)\n- [Contributing](#contributing)\n- [Community](#community)\n- [Versioning](#versioning)\n- [Creators](#creators)\n- [Thanks](#thanks)\n- [Copyright and license](#copyright-and-license)\n\n\n## Quick start\n\nSeveral quick start options are available:\n\n- [Download the latest release.](https://github.com/twbs/bootstrap/archive/v4.5.0.zip)\n- Clone the repo: `git clone https://github.com/twbs/bootstrap.git`\n- Install with [npm](https://www.npmjs.com/): `npm install bootstrap`\n- Install with [yarn](https://yarnpkg.com/): `yarn add bootstrap@4.5.0`\n- Install with [Composer](https://getcomposer.org/): `composer require twbs/bootstrap:4.5.0`\n- Install with [NuGet](https://www.nuget.org/): CSS: `Install-Package bootstrap` Sass: `Install-Package bootstrap.sass`\n\nRead the [Getting started page](https://getbootstrap.com/docs/4.5/getting-started/introduction/) for information on the framework contents, templates and examples, and more.\n\n\n## Status\n\n[![Slack](https://bootstrap-slack.herokuapp.com/badge.svg)](https://bootstrap-slack.herokuapp.com/)\n[![Build Status](https://github.com/twbs/bootstrap/workflows/Tests/badge.svg?branch=master)](https://github.com/twbs/bootstrap/actions?query=workflow%3ATests+branch%3Amaster)\n[![npm version](https://img.shields.io/npm/v/bootstrap.svg)](https://www.npmjs.com/package/bootstrap)\n[![Gem version](https://img.shields.io/gem/v/bootstrap.svg)](https://rubygems.org/gems/bootstrap)\n[![Meteor Atmosphere](https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue.svg)](https://atmospherejs.com/twbs/bootstrap)\n[![Packagist Prerelease](https://img.shields.io/packagist/vpre/twbs/bootstrap.svg)](https://packagist.org/packages/twbs/bootstrap)\n[![NuGet](https://img.shields.io/nuget/vpre/bootstrap.svg)](https://www.nuget.org/packages/bootstrap/absoluteLatest)\n[![peerDependencies Status](https://img.shields.io/david/peer/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=peer)\n[![devDependency Status](https://img.shields.io/david/dev/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=dev)\n[![Coverage Status](https://img.shields.io/coveralls/github/twbs/bootstrap/master.svg)](https://coveralls.io/github/twbs/bootstrap?branch=master)\n[![CSS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/css/bootstrap.min.css?compression=gzip&label=CSS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/css/bootstrap.min.css)\n[![JS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/js/bootstrap.min.js?compression=gzip&label=JS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/js/bootstrap.min.js)\n[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)](https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)\n[![Backers on Open Collective](https://img.shields.io/opencollective/backers/bootstrap.svg)](#backers)\n[![Sponsors on Open Collective](https://img.shields.io/opencollective/sponsors/bootstrap.svg)](#sponsors)\n\n\n## What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\n\n```text\nbootstrap/\n\u2514\u2500\u2500 dist/\n    \u251c\u2500\u2500 css/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n```\n\nWe provide compiled CSS and JS (`bootstrap.*`), as well as compiled and minified CSS and JS (`bootstrap.min.*`). [source maps](https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps) (`bootstrap.*.map`) are available for use with certain browsers' developer tools. Bundled JS files (`bootstrap.bundle.js` and minified `bootstrap.bundle.min.js`) include [Popper](https://popper.js.org/).\n\n\n## Bugs and feature requests\n\nHave a bug or a feature request? Please first read the [issue guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md#using-the-issue-tracker) and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/twbs/bootstrap/issues/new).\n\n\n## Documentation\n\nBootstrap's documentation, included in this repo in the root directory, is built with [Hugo](https://gohugo.io/) and publicly hosted on GitHub Pages at <https://getbootstrap.com/>. The docs may also be run locally.\n\nDocumentation search is powered by [Algolia's DocSearch](https://community.algolia.com/docsearch/). Working on our search? Be sure to set `debug: true` in `site/assets/js/src/search.js` file.\n\n### Running documentation locally\n\n1. Run `npm install` to install the Node.js dependencies, including Hugo (the site builder).\n2. Run `npm run test` (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\n3. From the root `/bootstrap` directory, run `npm run docs-serve` in the command line.\n4. Open `http://localhost:9001/` in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its [documentation](https://gohugo.io/documentation/).\n\n### Documentation for previous releases\n\nYou can find all our previous releases docs on <https://getbootstrap.com/docs/versions/>.\n\n[Previous releases](https://github.com/twbs/bootstrap/releases) and their documentation are also available for download.\n\n\n## Contributing\n\nPlease read through our [contributing guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.\n\nMoreover, if your pull request contains JavaScript patches or features, you must include [relevant unit tests](https://github.com/twbs/bootstrap/tree/master/js/tests). All HTML and CSS should conform to the [Code Guide](https://github.com/mdo/code-guide), maintained by [Mark Otto](https://github.com/mdo).\n\nEditor preferences are available in the [editor config](https://github.com/twbs/bootstrap/blob/master/.editorconfig) for easy use in common text editors. Read more and download plugins at <https://editorconfig.org/>.\n\n\n## Community\n\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\n- Follow [@getbootstrap on Twitter](https://twitter.com/getbootstrap).\n- Read and subscribe to [The Official Bootstrap Blog](https://blog.getbootstrap.com/).\n- Join [the official Slack room](https://bootstrap-slack.herokuapp.com/).\n- Chat with fellow Bootstrappers in IRC. On the `irc.freenode.net` server, in the `##bootstrap` channel.\n- Implementation help may be found at Stack Overflow (tagged [`bootstrap-4`](https://stackoverflow.com/questions/tagged/bootstrap-4)).\n- Developers should use the keyword `bootstrap` on packages which modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/browse/keyword/bootstrap) or similar delivery mechanisms for maximum discoverability.\n\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under [the Semantic Versioning guidelines](https://semver.org/). Sometimes we screw up, but we adhere to those rules whenever possible.\n\nSee [the Releases section of our GitHub project](https://github.com/twbs/bootstrap/releases) for changelogs for each release version of Bootstrap. Release announcement posts on [the official Bootstrap blog](https://blog.getbootstrap.com/) contain summaries of the most noteworthy changes made in each release.\n\n\n## Creators\n\n**Mark Otto**\n\n- <https://twitter.com/mdo>\n- <https://github.com/mdo>\n\n**Jacob Thornton**\n\n- <https://twitter.com/fat>\n- <https://github.com/fat>\n\n\n## Thanks\n\n<a href=\"https://www.browserstack.com/\">\n  <img src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\" width=\"192\" height=\"42\">\n</a>\n\nThanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/bootstrap#sponsor)]\n\n[![OC sponsor 0](https://opencollective.com/bootstrap/sponsor/0/avatar.svg)](https://opencollective.com/bootstrap/sponsor/0/website)\n[![OC sponsor 1](https://opencollective.com/bootstrap/sponsor/1/avatar.svg)](https://opencollective.com/bootstrap/sponsor/1/website)\n[![OC sponsor 2](https://opencollective.com/bootstrap/sponsor/2/avatar.svg)](https://opencollective.com/bootstrap/sponsor/2/website)\n[![OC sponsor 3](https://opencollective.com/bootstrap/sponsor/3/avatar.svg)](https://opencollective.com/bootstrap/sponsor/3/website)\n[![OC sponsor 4](https://opencollective.com/bootstrap/sponsor/4/avatar.svg)](https://opencollective.com/bootstrap/sponsor/4/website)\n[![OC sponsor 5](https://opencollective.com/bootstrap/sponsor/5/avatar.svg)](https://opencollective.com/bootstrap/sponsor/5/website)\n[![OC sponsor 6](https://opencollective.com/bootstrap/sponsor/6/avatar.svg)](https://opencollective.com/bootstrap/sponsor/6/website)\n[![OC sponsor 7](https://opencollective.com/bootstrap/sponsor/7/avatar.svg)](https://opencollective.com/bootstrap/sponsor/7/website)\n[![OC sponsor 8](https://opencollective.com/bootstrap/sponsor/8/avatar.svg)](https://opencollective.com/bootstrap/sponsor/8/website)\n[![OC sponsor 9](https://opencollective.com/bootstrap/sponsor/9/avatar.svg)](https://opencollective.com/bootstrap/sponsor/9/website)\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/bootstrap#backer)]\n\n[![Backers](https://opencollective.com/bootstrap/backers.svg?width=890)](https://opencollective.com/bootstrap#backers)\n\n\n## Copyright and license\n\nCode and documentation copyright 2011\u20132020 the [Bootstrap Authors](https://github.com/twbs/bootstrap/graphs/contributors) and [Twitter, Inc.](https://twitter.com) Code released under the [MIT License](https://github.com/twbs/bootstrap/blob/master/LICENSE). Docs released under [Creative Commons](https://creativecommons.org/licenses/by/3.0/).\n"
 },
 {
  "repo": "github/gitignore",
  "language": null,
  "readme_contents": "# A collection of `.gitignore` templates\n\nThis is GitHub\u2019s collection of [`.gitignore`][man] file templates.\nWe use this list to populate the `.gitignore` template choosers available\nin the GitHub.com interface when creating new repositories and files.\n\nFor more information about how `.gitignore` files work, and how to use them,\nthe following resources are a great place to start:\n\n- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.\n- The [Ignoring Files article][help] on the GitHub Help site.\n- The [gitignore(5)][man] manual page.\n\n[man]: http://git-scm.com/docs/gitignore\n[help]: https://help.github.com/articles/ignoring-files\n[chapter]: https://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository#_ignoring\n[progit]: http://git-scm.com/book\n\n## Folder structure\n\nWe support a collection of templates, organized in this way:\n\n- the root folder contains templates in common use, to help people get started\n  with popular programming languages and technologies. These define a meaningful\n  set of rules to help get started, and ensure you are not committing\n  unimportant files into your repository\n- [`Global`](./Global) contains templates for various editors, tools and\n  operating systems that can be used in different situations. It is recommended\n  that you either [add these to your global template](https://help.github.com/articles/ignoring-files/#create-a-global-gitignore)\n  or merge these rules into your project-specific templates if you want to use\n  them permanently.\n- [`community`](./community) contains specialized templates for other popular\n  languages, tools and project, which don't currently belong in the mainstream\n  templates. These should be added to your project-specific templates when you\n  decide to adopt the framework or tool.\n\n## What makes a good template?\n\nA template should contain a set of rules to help Git repositories work with a\nspecific programming language, framework, tool or environment.\n\nIf it's not possible to curate a small set of useful rules for this situation,\nthen the template is not a good fit for this collection.\n\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework), it could live under the `community`\ndirectory. See [versioned templates](#versioned-templates) for more details.\n\nIf you have a small set of rules, or want to support a technology that is not\nwidely in use, and still believe this will be helpful to others, please read the\nsection about [specialized templates](#specialized-templates) for more details.\n\nInclude details when opening pull request if the template is important and visible. We\nmay not accept it immediately, but we can promote it to the root at a later date\nbased on interest.\n\nPlease also understand that we can\u2019t list every tool that ever existed.\nOur aim is to curate a collection of the _most common and helpful_ templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, it\u2019s not because it\u2019s not awesome.\n\n## Contributing guidelines\n\nWe\u2019d love for you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n- **Provide a link to the application or project\u2019s homepage**. Unless it\u2019s\n  extremely popular, there\u2019s a chance the maintainers don\u2019t know about or use\n  the language, framework, editor, app, or project your change applies to.\n\n- **Provide links to documentation** supporting the change you\u2019re making.\n  Current, canonical documentation mentioning the files being ignored is best.\n  If documentation isn\u2019t available to support your change, do the best you can\n  to explain what the files being ignored are for.\n\n- **Explain why you\u2019re making a change**. Even if it seems self-evident, please\n  take a sentence or two to tell us why your change or addition should happen.\n  It\u2019s especially helpful to articulate why this change applies to _everyone_\n  who works with the applicable technology, rather than just you or your team.\n\n- **Please consider the scope of your change**. If your change is specific to a\n  certain language or framework, then make sure the change is made to the\n  template for that language or framework, rather than to the template for an\n  editor, tool, or operating system.\n\n- **Please only modify _one template_ per pull request**. This helps keep pull\n  requests and feedback focused on a specific project or technology.\n\nIn general, the more you can do to help us understand the change you\u2019re making,\nthe more likely we\u2019ll be to accept your contribution quickly.\n\n## Versioned templates\n\nSome templates can change greatly between versions, and if you wish to contribute\nto this repository we need to follow this specific flow:\n\n- the template at the root should be the current supported version\n- the template at the root should not have a version in the filename (i.e.\n  \"evergreen\")\n- previous versions of templates should live under `community/`\n- previous versions of the template should embed the version in the filename,\n  for readability\n\nThis helps ensure users get the latest version (because they'll use whatever is\nat the root) but helps maintainers support older versions still in the wild.\n\n## Specialized templates\n\nIf you have a template that you would like to contribute, but it isn't quite\nmainstream, please consider adding this to the `community` directory under a\nfolder that best suits where it belongs.\n\nThe rules in your specialized template should be specific to the framework or\ntool, and any additional templates should be mentioned in a comment in the\nheader of the template.\n\nFor example, this template might live at `community/DotNet/InforCRM.gitignore`:\n\n```\n# gitignore template for InforCRM (formerly SalesLogix)\n# website: https://www.infor.com/product-summary/cx/infor-crm/\n#\n# Recommended: VisualStudio.gitignore\n\n# Ignore model files that are auto-generated\nModelIndex.xml\nExportedFiles.xml\n\n# Ignore deployment files\n[Mm]odel/[Dd]eployment\n\n# Force include portal SupportFiles\n!Model/Portal/*/SupportFiles/[Bb]in/\n!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in\n```\n\n## Contributing workflow\n\nHere\u2019s how we suggest you go about proposing a change to this project:\n\n1. [Fork this project][fork] to your account.\n2. [Create a branch][branch] for the change you intend to make.\n3. Make your changes to your fork.\n4. [Send a pull request][pr] from your fork\u2019s branch to our `master` branch.\n\nUsing the web-based interface to make changes is fine too, and will help you\nby automatically forking the project and prompting to send a pull request too.\n\n[fork]: https://help.github.com/articles/fork-a-repo/\n[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository\n[pr]: https://help.github.com/articles/using-pull-requests/\n\n## License\n\n[CC0-1.0](./LICENSE).\n"
 },
 {
  "repo": "rdpeng/ExData_Plotting1",
  "language": null,
  "readme_contents": "## Introduction\n\nThis assignment uses data from\nthe <a href=\"http://archive.ics.uci.edu/ml/\">UC Irvine Machine\nLearning Repository</a>, a popular repository for machine learning\ndatasets. In particular, we will be using the \"Individual household\nelectric power consumption Data Set\" which I have made available on\nthe course web site:\n\n\n* <b>Dataset</b>: <a href=\"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip\">Electric power consumption</a> [20Mb]\n\n* <b>Description</b>: Measurements of electric power consumption in\none household with a one-minute sampling rate over a period of almost\n4 years. Different electrical quantities and some sub-metering values\nare available.\n\n\nThe following descriptions of the 9 variables in the dataset are taken\nfrom\nthe <a href=\"https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption\">UCI\nweb site</a>:\n\n<ol>\n<li><b>Date</b>: Date in format dd/mm/yyyy </li>\n<li><b>Time</b>: time in format hh:mm:ss </li>\n<li><b>Global_active_power</b>: household global minute-averaged active power (in kilowatt) </li>\n<li><b>Global_reactive_power</b>: household global minute-averaged reactive power (in kilowatt) </li>\n<li><b>Voltage</b>: minute-averaged voltage (in volt) </li>\n<li><b>Global_intensity</b>: household global minute-averaged current intensity (in ampere) </li>\n<li><b>Sub_metering_1</b>: energy sub-metering No. 1 (in watt-hour of active energy). It corresponds to the kitchen, containing mainly a dishwasher, an oven and a microwave (hot plates are not electric but gas powered). </li>\n<li><b>Sub_metering_2</b>: energy sub-metering No. 2 (in watt-hour of active energy). It corresponds to the laundry room, containing a washing-machine, a tumble-drier, a refrigerator and a light. </li>\n<li><b>Sub_metering_3</b>: energy sub-metering No. 3 (in watt-hour of active energy). It corresponds to an electric water-heater and an air-conditioner.</li>\n</ol>\n\n## Loading the data\n\n\n\n\n\nWhen loading the dataset into R, please consider the following:\n\n* The dataset has 2,075,259 rows and 9 columns. First\ncalculate a rough estimate of how much memory the dataset will require\nin memory before reading into R. Make sure your computer has enough\nmemory (most modern computers should be fine).\n\n* We will only be using data from the dates 2007-02-01 and\n2007-02-02. One alternative is to read the data from just those dates\nrather than reading in the entire dataset and subsetting to those\ndates.\n\n* You may find it useful to convert the Date and Time variables to\nDate/Time classes in R using the `strptime()` and `as.Date()`\nfunctions.\n\n* Note that in this dataset missing values are coded as `?`.\n\n\n## Making Plots\n\nOur overall goal here is simply to examine how household energy usage\nvaries over a 2-day period in February, 2007. Your task is to\nreconstruct the following plots below, all of which were constructed\nusing the base plotting system.\n\nFirst you will need to fork and clone the following GitHub repository:\n[https://github.com/rdpeng/ExData_Plotting1](https://github.com/rdpeng/ExData_Plotting1)\n\n\nFor each plot you should\n\n* Construct the plot and save it to a PNG file with a width of 480\npixels and a height of 480 pixels.\n\n* Name each of the plot files as `plot1.png`, `plot2.png`, etc.\n\n* Create a separate R code file (`plot1.R`, `plot2.R`, etc.) that\nconstructs the corresponding plot, i.e. code in `plot1.R` constructs\nthe `plot1.png` plot. Your code file **should include code for reading\nthe data** so that the plot can be fully reproduced. You should also\ninclude the code that creates the PNG file.\n\n* Add the PNG file and R code file to your git repository\n\nWhen you are finished with the assignment, push your git repository to\nGitHub so that the GitHub version of your repository is up to\ndate. There should be four PNG files and four R code files.\n\n\nThe four plots that you will need to construct are shown below. \n\n\n### Plot 1\n\n\n![plot of chunk unnamed-chunk-2](figure/unnamed-chunk-2.png) \n\n\n### Plot 2\n\n![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-3.png) \n\n\n### Plot 3\n\n![plot of chunk unnamed-chunk-4](figure/unnamed-chunk-4.png) \n\n\n### Plot 4\n\n![plot of chunk unnamed-chunk-5](figure/unnamed-chunk-5.png) \n\n"
 },
 {
  "repo": "tensorflow/models",
  "language": "Python",
  "readme_contents": "![Logo](https://storage.googleapis.com/model_garden_artifacts/TF_Model_Garden.png)\n\n# Welcome to the Model Garden for TensorFlow\n\nThe TensorFlow Model Garden is a repository with a number of different implementations of state-of-the-art (SOTA) models and modeling solutions for TensorFlow users. We aim to demonstrate the best practices for modeling so that TensorFlow users can take full advantage of TensorFlow for their research and product development.\n\n| Directory | Description |\n|-----------|-------------|\n| [official](official) | \u2022 A collection of example implementations for SOTA models using the latest TensorFlow 2's high-level APIs<br />\u2022 Officially maintained, supported, and kept up to date with the latest TensorFlow 2 APIs by TensorFlow<br />\u2022 Reasonably optimized for fast performance while still being easy to read |\n| [research](research) | \u2022 A collection of research model implementations in TensorFlow 1 or 2 by researchers<br />\u2022 Maintained and supported by researchers |\n| [community](community) | \u2022 A curated list of the GitHub repositories with machine learning models and implementations powered by TensorFlow 2 |\n\n## [Announcements](../../wiki/Announcements)\n\n| Date | News |\n|------|------|\n| May 21, 2020 | [Unifying Deep Local and Global Features for Image Search (DELG)](https://github.com/tensorflow/models/tree/master/research/delf#delg) code released\n| May 7, 2020 | [MnasFPN with MobileNet-V2 backbone](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md#mobile-models) released for object detection\n| May 1, 2020 | [DELF: DEep Local Features](https://github.com/tensorflow/models/tree/master/research/delf) updated to support TensorFlow 2.1\n| March 31, 2020 | [Introducing the Model Garden for TensorFlow 2](https://blog.tensorflow.org/2020/03/introducing-model-garden-for-tensorflow-2.html) ([Tweet](https://twitter.com/TensorFlow/status/1245029834633297921)) |\n\n## Contributions\n\n[![help wanted:paper implementation](https://img.shields.io/github/issues/tensorflow/models/help%20wanted%3Apaper%20implementation)](https://github.com/tensorflow/models/labels/help%20wanted%3Apaper%20implementation)\n\nIf you want to contribute, please review the [contribution guidelines](../../wiki/How-to-contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
 },
 {
  "repo": "nightscout/cgm-remote-monitor",
  "language": "JavaScript",
  "readme_contents": "Nightscout Web Monitor (a.k.a. cgm-remote-monitor)\n======================================\n\n![nightscout horizontal](https://cloud.githubusercontent.com/assets/751143/8425633/93c94dc0-1ebc-11e5-99e7-71a8f464caac.png)\n\n[![Build Status][build-img]][build-url]\n[![Dependency Status][dependency-img]][dependency-url]\n[![Coverage Status][coverage-img]][coverage-url]\n[![Codacy Badge][codacy-img]][codacy-url]\n[![Discord chat][discord-img]][discord-url]\n\n[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://azuredeploy.net/) [![Deploy to Heroku][heroku-img]][heroku-url] [![Update your site][update-img]][update-fork]\n\nThis acts as a web-based CGM (Continuous Glucose Monitor) to allow\nmultiple caregivers to remotely view a patient's glucose data in\nreal time.  The server reads a MongoDB which is intended to be data\nfrom a physical CGM, where it sends new SGV (sensor glucose values) as\nthe data becomes available.  The data is then displayed graphically\nand blood glucose values are predicted 0.5 hours ahead using an\nautoregressive second order model.  Alarms are generated for high and\nlow values, which can be cleared by any watcher of the data.\n\n# [#WeAreNotWaiting](https://twitter.com/hashtag/wearenotwaiting?src=hash&vertical=default&f=images) and [this](https://vimeo.com/109767890) is why.\n\nCommunity maintained fork of the\n[original cgm-remote-monitor][original].\n\n[![Coverage Status](https://coveralls.io/repos/github/nightscout/cgm-remote-monitor/badge.svg?branch=master)](https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master)\n\n[build-img]: https://img.shields.io/travis/nightscout/cgm-remote-monitor.svg\n[build-url]: https://travis-ci.org/nightscout/cgm-remote-monitor\n[dependency-img]: https://img.shields.io/david/nightscout/cgm-remote-monitor.svg\n[dependency-url]: https://david-dm.org/nightscout/cgm-remote-monitor\n[coverage-img]: https://img.shields.io/coveralls/nightscout/cgm-remote-monitor/dev.svg\n[coverage-url]: https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master\n[codacy-img]: https://www.codacy.com/project/badge/f79327216860472dad9afda07de39d3b\n[codacy-url]: https://www.codacy.com/app/Nightscout/cgm-remote-monitor\n[discord-img]: https://img.shields.io/discord/629952586895851530?label=discord%20chat\n[discord-url]: https://discord.gg/rTKhrqz\n[heroku-img]: https://www.herokucdn.com/deploy/button.png\n[heroku-url]: https://heroku.com/deploy\n[update-img]: update.png\n[update-fork]: http://nightscout.github.io/pages/update-fork/\n[original]: https://github.com/rnpenguin/cgm-remote-monitor\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**\n\n- [Install](#install)\n  - [Supported configurations:](#supported-configurations)\n  - [Minimum browser requirements for viewing the site:](#minimum-browser-requirements-for-viewing-the-site)\n  - [Windows installation software requirements:](#windows-installation-software-requirements)\n  - [Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:](#installation-notes-for-users-with-nginx-or-apache-reverse-proxy-for-ssltls-offloading)\n  - [Installation notes for Microsoft Azure, Windows:](#installation-notes-for-microsoft-azure-windows)\n- [Usage](#usage)\n  - [Updating my version?](#updating-my-version)\n  - [What is my mongo string?](#what-is-my-mongo-string)\n  - [Configure my uploader to match](#configure-my-uploader-to-match)\n  - [Nightscout API](#nightscout-api)\n      - [Example Queries](#example-queries)\n  - [Environment](#environment)\n    - [Required](#required)\n    - [Features/Labs](#featureslabs)\n    - [Alarms](#alarms)\n    - [Core](#core)\n    - [Predefined values for your browser settings (optional)](#predefined-values-for-your-browser-settings-optional)\n    - [Predefined values for your server settings (optional)](#predefined-values-for-your-server-settings-optional)\n    - [Plugins](#plugins)\n      - [Default Plugins](#default-plugins)\n        - [`delta` (BG Delta)](#delta-bg-delta)\n        - [`direction` (BG Direction)](#direction-bg-direction)\n        - [`upbat` (Uploader Battery)](#upbat-uploader-battery)\n        - [`timeago` (Time Ago)](#timeago-time-ago)\n        - [`devicestatus` (Device Status)](#devicestatus-device-status)\n        - [`errorcodes` (CGM Error Codes)](#errorcodes-cgm-error-codes)\n        - [`ar2` (AR2 Forecasting)](#ar2-ar2-forecasting)\n        - [`simplealarms` (Simple BG Alarms)](#simplealarms-simple-bg-alarms)\n        - [`profile` (Treatment Profile)](#profile-treatment-profile)\n      - [Advanced Plugins:](#advanced-plugins)\n        - [`careportal` (Careportal)](#careportal-careportal)\n        - [`boluscalc` (Bolus Wizard)](#boluscalc-bolus-wizard)\n        - [`food` (Custom Foods)](#food-custom-foods)\n        - [`rawbg` (Raw BG)](#rawbg-raw-bg)\n        - [`iob` (Insulin-on-Board)](#iob-insulin-on-board)\n        - [`cob` (Carbs-on-Board)](#cob-carbs-on-board)\n        - [`bwp` (Bolus Wizard Preview)](#bwp-bolus-wizard-preview)\n        - [`cage` (Cannula Age)](#cage-cannula-age)\n        - [`sage` (Sensor Age)](#sage-sensor-age)\n        - [`iage` (Insulin Age)](#iage-insulin-age)\n        - [`bage` (Battery Age)](#bage-battery-age)\n        - [`treatmentnotify` (Treatment Notifications)](#treatmentnotify-treatment-notifications)\n        - [`basal` (Basal Profile)](#basal-basal-profile)\n        - [`bridge` (Share2Nightscout bridge)](#bridge-share2nightscout-bridge)\n        - [`mmconnect` (MiniMed Connect bridge)](#mmconnect-minimed-connect-bridge)\n        - [`pump` (Pump Monitoring)](#pump-pump-monitoring)\n        - [`openaps` (OpenAPS)](#openaps-openaps)\n        - [`loop` (Loop)](#loop-loop)\n        - [`override` (Override Mode)](#override-override-mode)\n        - [`xdripjs` (xDrip-js)](#xdripjs-xdripjs)\n        - [`alexa` (Amazon Alexa)](#alexa-amazon-alexa)\n        - [`googlehome` (Google Home/DialogFLow)](#googlehome-google-homedialogflow)\n        - [`speech` (Speech)](#speech-speech)\n        - [`cors` (CORS)](#cors-cors)\n      - [Extended Settings](#extended-settings)\n      - [Pushover](#pushover)\n      - [IFTTT Maker](#ifttt-maker)\n    - [Treatment Profile](#treatment-profile)\n  - [Setting environment variables](#setting-environment-variables)\n    - [Vagrant install](#vagrant-install)\n  - [More questions?](#more-questions)\n  - [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# Install\n\n## Supported configurations:\n\nIf you plan to use Nightscout, we recommend using [Heroku](http://www.nightscout.info/wiki/welcome/set-up-nightscout-using-heroku), as Nightscout can reach the usage limits of the free Azure plan and cause it to shut down for hours or days. If you end up needing a paid tier, the $7/mo Heroku plan is also much cheaper than the first paid tier of Azure. Currently, the only added benefit to choosing the $7/mo Heroku plan vs the free Heroku plan is a section showing site use metrics for performance (such as response time). This has limited benefit to the average Nightscout user. In short, Heroku is the free and best option for Nightscout hosting.\n\n- [Nightscout Setup with Heroku](http://www.nightscout.info/wiki/welcome/set-up-nightscout-using-heroku) (recommended)\n- [Nightscout Setup with Microsoft Azure](http://www.nightscout.info/wiki/faqs-2/azure-2) (not recommended, please\n[switch from Azure to Heroku](http://openaps.readthedocs.io/en/latest/docs/While%20You%20Wait%20For%20Gear/nightscout-setup.html#switching-from-azure-to-heroku) )\n- Linux based install (Debian, Ubuntu, Raspbian) install with own Node.JS and MongoDB install (see software requirements below)\n- Windows based install with own Node.JS and MongoDB install (see software requirements below)\n\n## Recommended minimum browser versions for using Nightscout:\n\nOlder versions of the browsers might work, but are untested.\n\n- Android 4\n- iOS 6\n- Chrome 35\n- Edge 17\n- Firefox 61\n- Opera 12.1\n- Safari 6 (macOS 10.7)\n- Internet Explorer: not supported\n\nSome features may not work with devices/browsers on the older end of these requirements.\n\n## Windows installation software requirements:\n\n- [Node.js](http://nodejs.org/) Latest Node 8 LTS (Node 8.15.1 or later) or Node 10 LTS (Node 10.16.0 or later; Node 10.15.2 works for Azure). Node versions that do not have the latest security patches will not work. Use [Install instructions for Node](https://nodejs.org/en/download/package-manager/) or use `setup.sh`)\n- [MongoDB](https://www.mongodb.com/download-center?jmp=nav#community) 3.x or later. MongoDB 2.4 is only supported for Raspberry Pi.\n\nAs a non-root user clone this repo then install dependencies into the root of the project:\n\n```bash\n$ npm install\n```\n\n## Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:\n\n- Your site redirects insecure connections to `https` by default. If you use a reverse proxy like nginx or Apache to handle the connection security for you, make sure it sets the `X-Forwarded-Proto` header. Otherwise nightscout will be unable to know if it was called through a secure connection and will try to redirect you to the https version. If you're unable to set this Header, you can change the `INSECURE_USE_HTTP` setting in nightscout to true in order to allow insecure connections without being redirected.\n- In case you use a proxy. Do not use an external network interfaces for hosting Nightscout. Make sure the unsecure port is not available from a remote network connection\n- HTTP Strict Transport Security (HSTS) headers are enabled by default, use settings `SECURE_HSTS_HEADER` and `SECURE_HSTS_HEADER_*`\n- See [Predefined values for your server settings](#predefined-values-for-your-server-settings-optional) for more details\n\n## Installation notes for Microsoft Azure, Windows:\n\n- If deploying the software to Microsoft Azure, you must set ** in the app settings for *WEBSITE_NODE_DEFAULT_VERSION* and *SCM_COMMAND_IDLE_TIMEOUT* **before** you deploy the latest Nightscout or the site deployment will likely fail. Other hosting environments do not require this setting. Additionally, if using the Azure free hosting tier, the installation might fail due to resource constraints imposed by Azure on the free hosting. Please set the following settings to the environment in Azure:\n```\nWEBSITE_NODE_DEFAULT_VERSION=10.15.2\nSCM_COMMAND_IDLE_TIMEOUT=300\n```\n- See [install MongoDB, Node.js, and Nightscouton a single Windows system](https://github.com/jaylagorio/Nightscout-on-Windows-Server). if you want to host your Nightscout outside of the cloud. Although the instructions are intended for Windows Server the procedure is compatible with client versions of Windows such as Windows 7 and Windows 10.\n- If you deploy to Windows and want to develop or test you need to install [Cygwin](https://www.cygwin.com/) (use [setup-x86_64.exe](https://www.cygwin.com/setup-x86_64.exe) and make sure to install `build-essential` package. Test your configuration by executing `make` and check if all tests are ok.\n\n# Development\n\nWant to help with development, or just see how Nightscout works? Great! See [CONTRIBUTING.md](CONTRIBUTING.md) for development-related documentation.\n\n# Usage\n\nThe data being uploaded from the server to the client is from a\nMongoDB server such as [mLab][mLab].\n\n[mLab]: https://mlab.com/\n[autoconfigure]: https://nightscout.github.io/pages/configure/\n[mongostring]: https://nightscout.github.io/pages/mongostring/\n\n## Updating my version?\n\nThe easiest way to update your version of cgm-remote-monitor to the latest version is to use the [update tool][update-fork]. A step-by-step guide is available [here][http://www.nightscout.info/wiki/welcome/how-to-update-to-latest-cgm-remote-monitor-aka-cookie].\nTo downgrade to an older version, follow [this guide][http://www.nightscout.info/wiki/welcome/how-to-deploy-an-older-version-of-nightscout].\n\n## Configure my uploader to match\n\nUse the [autoconfigure tool][autoconfigure] to sync an uploader to your config.\n\n## Nightscout API\n\nThe Nightscout API enables direct access to your data without the need for Mongo access.\nYou can find CGM data in `/api/v1/entries`, Care Portal Treatments in `/api/v1/treatments`, and Treatment Profiles in `/api/v1/profile`.\nThe server status and settings are available from `/api/v1/status.json`.\n\nBy default the `/entries` and `/treatments` APIs limit results to the the most recent 10 values from the last 2 days.\nYou can get many more results, by using the `count`, `date`, `dateString`, and `created_at` parameters, depending on the type of data you're looking for.\n\nOnce you've installed Nightscout, you can access API documentation by loading `/api-docs/` URL in your instance.\n\n#### Example Queries\n\n(replace `http://localhost:1337` with your own URL)\n\n  * 100's: `http://localhost:1337/api/v1/entries.json?find[sgv]=100`\n  * Count of 100's in a month: `http://localhost:1337/api/v1/count/entries/where?find[dateString][$gte]=2016-09&find[dateString][$lte]=2016-10&find[sgv]=100`\n  * BGs between 2 days: `http://localhost:1337/api/v1/entries/sgv.json?find[dateString][$gte]=2015-08-28&find[dateString][$lte]=2015-08-30`\n  * Juice Box corrections in a year: `http://localhost:1337/api/v1/treatments.json?count=1000&find[carbs]=15&find[eventType]=Carb+Correction&find[created_at][$gte]=2015`\n  * Boluses over 2U: `http://localhost:1337/api/v1/treatments.json?find[insulin][$gte]=2`\n\nThe API is Swagger enabled, so you can generate client code to make working with the API easy.\nTo learn more about the Nightscout API, visit https://YOUR-SITE.com/api-docs/ or review [swagger.yaml](swagger.yaml).\n\n## Environment\n\n`VARIABLE` (default) - description\n\n### Required\n\n  * `MONGODB_URI` - The connection string for your Mongo database. Something like `mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout`.\n  * `API_SECRET` - A secret passphrase that must be at least 12 characters long.\n  * `MONGODB_COLLECTION` (`entries`) - The Mongo collection where CGM entries are stored.\n  * `DISPLAY_UNITS` (`mg/dl`) - Options are `mg/dl` or `mmol/L` (or just `mmol`).  Setting to `mmol/L` puts the entire server into `mmol/L` mode by default, no further settings needed.\n\n### Features\n\n  * `ENABLE` - Used to enable optional features, expects a space delimited list, such as: `careportal rawbg iob`, see [plugins](#plugins) below\n  * `DISABLE` - Used to disable default features, expects a space delimited list, such as: `direction upbat`, see [plugins](#plugins) below\n  * `BASE_URL` - Used for building links to your site's API, i.e. Pushover callbacks, usually the URL of your Nightscout site.\n  * `AUTH_DEFAULT_ROLES` (`readable`) - possible values `readable`, `denied`, or any valid role\n    name.  When `readable`, anyone can view Nightscout without a token.\n    Setting it to `denied` will require a token from every visit, using `status-only` will enable api-secret based login.\n  * `IMPORT_CONFIG` - Used to import settings and extended settings from a url such as a gist.  Structure of file should be something like: `{\"settings\": {\"theme\": \"colors\"}, \"extendedSettings\": {\"upbat\": {\"enableAlerts\": true}}}`\n  * `TREATMENTS_AUTH` (`on`) - possible values `on` or `off`. Deprecated, if set to `off` the `careportal` role will be added to `AUTH_DEFAULT_ROLES`\n\n### Alarms\n\n  These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.\n\n  * `ALARM_TYPES` (`simple` if any `BG_`* ENV's are set, otherwise `predict`) - currently 2 alarm types are supported, and can be used independently or combined.  The `simple` alarm type only compares the current BG to `BG_` thresholds above, the `predict` alarm type uses highly tuned formula that forecasts where the BG is going based on it's trend.  `predict` **DOES NOT** currently use any of the `BG_`* ENV's\n  * `BG_HIGH` (`260`) - the high BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)\n  * `BG_TARGET_TOP` (`180`) - the top of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)\n  * `BG_TARGET_BOTTOM` (`80`) - the bottom of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)\n  * `BG_LOW` (`55`) - the low BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)\n  * `ALARM_URGENT_HIGH` (`on`) - possible values `on` or `off`\n  * `ALARM_URGENT_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent high alarms, space separated for options in browser, first used for pushover\n  * `ALARM_HIGH` (`on`) - possible values `on` or `off`\n  * `ALARM_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze high alarms, space separated for options in browser, first used for pushover\n  * `ALARM_LOW` (`on`) - possible values `on` or `off`\n  * `ALARM_LOW_MINS` (`15 30 45 60`) - Number of minutes to snooze low alarms, space separated for options in browser, first used for pushover\n  * `ALARM_URGENT_LOW` (`on`) - possible values `on` or `off`\n  * `ALARM_URGENT_LOW_MINS` (`15 30 45`) - Number of minutes to snooze urgent low alarms, space separated for options in browser, first used for pushover\n  * `ALARM_URGENT_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover\n  * `ALARM_WARN_MINS` (`30 60 90 120`) - Number of minutes to snooze warning alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover\n\n### Core\n\n  * `MONGO_TREATMENTS_COLLECTION` (`treatments`) -The collection used to store treatments entered in the Care Portal, see the `ENABLE` env var above\n  * `MONGO_DEVICESTATUS_COLLECTION`(`devicestatus`) - The collection used to store device status information such as uploader battery\n  * `MONGO_PROFILE_COLLECTION`(`profile`) - The collection used to store your profiles\n  * `MONGO_FOOD_COLLECTION`(`food`) - The collection used to store your food database\n  * `MONGO_ACTIVITY_COLLECTION`(`activity`) - The collection used to store activity data\n  * `PORT` (`1337`) - The port that the node.js application will listen on.\n  * `HOSTNAME` - The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use `::`.\n  * `SSL_KEY` - Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to your privkey.pem file (private key).\n  * `SSL_CERT` - Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to fullchain.pem file (cert + ca).\n  * `SSL_CA` - Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to chain.pem file (chain).\n  * `HEARTBEAT` (`60`)  - Number of seconds to wait in between database checks\n  * `DEBUG_MINIFY` (`true`)  - Debug option, setting to `false` will disable bundle minification to help tracking down error and speed up development\n  * `DE_NORMALIZE_DATES`(`true`) - The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to `true` causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST.\n\n### Predefined values for your browser settings (optional)\n\n  * `TIME_FORMAT` (`12`)- possible values `12` or `24`\n  * `NIGHT_MODE` (`off`) - possible values `on` or `off`\n  * `SHOW_RAWBG` (`never`) - possible values `always`, `never` or `noise`\n  * `CUSTOM_TITLE` (`Nightscout`) - Title for the main view\n  * `THEME` (`colors`) - possible values `default`, `colors`, or `colorblindfriendly`\n  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning\n  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm\n  * `SHOW_PLUGINS` - enabled plugins that should have their visualizations shown, defaults to all enabled\n  * `SHOW_FORECAST` (`ar2`) - plugin forecasts that should be shown by default, supports space delimited values such as `\"ar2 openaps\"`\n  * `LANGUAGE` (`en`) - language of Nightscout. If not available english is used\n    * Currently supported language codes are: bg (\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438), cs (\u010ce\u0161tina), de (Deutsch), dk (Dansk), el (\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac), en (English), es (Espa\u00f1ol), fi (Suomi), fr (Fran\u00e7ais), he (\u05e2\u05d1\u05e8\u05d9\u05ea), hr (Hrvatski), it (Italiano), ko (\ud55c\uad6d\uc5b4), nb (Norsk (Bokm\u00e5l)), nl (Nederlands), pl (Polski), pt (Portugu\u00eas (Brasil)), ro (Rom\u00e2n\u0103), ru (\u0420\u0443\u0441\u0441\u043a\u0438\u0439), sk (Sloven\u010dina), sv (Svenska), tr (Turkish), zh_cn (\u4e2d\u6587\uff08\u7b80\u4f53)), zh_tw (\u4e2d\u6587\uff08\u7e41\u9ad4))\n  * `SCALE_Y` (`log`) - The type of scaling used for the Y axis of the charts system wide.\n    * The default `log` (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range.\n    * The `linear` option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn't wasted.\n    * The `log-dynamic` is similar to the default `log` options, but uses the same dynamic range and the `linear` scale.\n  * `EDIT_MODE` (`on`) - possible values `on` or `off`. Enables the icon allowing for editing of treatments in the main view.\n\n### Predefined values for your server settings (optional)\n  * `INSECURE_USE_HTTP` (`false`) - Redirect unsafe http traffic to https. Possible values `false`, or `true`. Your site redirects to `https` by default. If you don't want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set `INSECURE_USE_HTTP` to `true`. Note: This will allow (unsafe) http traffic to your Nightscout instance and is not recommended.\n  * `SECURE_HSTS_HEADER` (`true`) - Add HTTP Strict Transport Security (HSTS) header. Possible values `false`, or `true`.\n  * `SECURE_HSTS_HEADER_INCLUDESUBDOMAINS` (`false`) - includeSubdomains options for HSTS. Possible values `false`, or `true`.\n  * `SECURE_HSTS_HEADER_PRELOAD` (`false`) - ask for preload in browsers for HSTS. Possible values `false`, or `true`.\n  * `SECURE_CSP` (`false`) - Add Content Security Policy headers. Possible values `false`, or `true`.\n  * `SECURE_CSP_REPORT_ONLY` (`false`) - If set to `true` allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values `false`, or `true`.\n\n### Views\n\n  There are a few alternate web views available from the main menu that display a simplified BG stream. (If you launch one of these in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view.)\n  * `Clock` - Shows current BG, trend arrow, and time of day. Grey text on a black background.\n  * `Color` - Shows current BG and trend arrow. White text on a background that changes color to indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above). Set `SHOW_CLOCK_DELTA` to `true` to show BG change in the last 5 minutes, set `SHOW_CLOCK_LAST_TIME` to `true` to always show BG age.\n  * `Simple` - Shows current BG. Grey text on a black background.\n\n### Plugins\n\n  Plugins are used extend the way information is displayed, how notifications are sent, alarms are triggered, and more.\n\n  The built-in/example plugins that are available by default are listed below.  The plugins may still need to be enabled by adding to the `ENABLE` environment variable.\n\n#### Default Plugins\n\n  These can be disabled by adding them to the `DISABLE` variable, for example `DISABLE=\"direction upbat\"`\n\n##### `delta` (BG Delta)\n  Calculates and displays the change between the last 2 BG values.\n\n##### `direction` (BG Direction)\n  Displays the trend direction.\n\n##### `upbat` (Uploader Battery)\n  Displays the most recent battery status from the uploader phone. . Use these [extended setting](#extended-settings) to adjust behavior:\n  * `UPBAT_ENABLE_ALERTS` (`false`) - Set to `true` to enable uploader battery alarms via Pushover and IFTTT.\n  * `UPBAT_WARN` (`30`) - Minimum battery percent to trigger warning.\n  * `UPBAT_URGENT` (`20`) - Minimum battery percent to trigger urgent alarm.\n\n##### `timeago` (Time Ago)\n  Displays the time since last CGM entry. Use these [extended setting](#extended-settings) to adjust behavior:\n  * `TIMEAGO_ENABLE_ALERTS` (`false`) - Set to `true` to enable stale data alarms via Pushover and IFTTT.\n  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning\n  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm\n\n##### `devicestatus` (Device Status)\n  Used by `upbat` and other plugins to display device status info.  Supports the `DEVICESTATUS_ADVANCED=\"true\"` [extended setting](#extended-settings) to send all device statuses to the client for retrospective use and to support other plugins.\n\n##### `errorcodes` (CGM Error Codes)\n  Generates alarms for CGM codes `9` (hourglass) and `10` (???).\n  * Use [extended settings](#extended-settings) to adjust what errorcodes trigger notifications and alarms:\n    * `ERRORCODES_INFO` (`1 2 3 4 5 6 7 8`) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or `off` to disable\n    * `ERRORCODES_WARN` (`off`) - By default there are no warning configured, set to a space separate list of numbers or `off` to disable\n    * `ERRORCODES_URGENT` (`9 10`) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or `off` to disable\n\n##### `ar2` (AR2 Forecasting)\n  Generates alarms based on forecasted values. See [Forecasting using AR2 algorithm](https://github.com/nightscout/nightscout.github.io/wiki/Forecasting)\n  * Enabled by default if no thresholds are set **OR** `ALARM_TYPES` includes `predict`.\n  * Use [extended settings](#extended-settings) to adjust AR2 behavior:\n    * `AR2_CONE_FACTOR` (`2`) - to adjust size of cone, use `0` for a single line.\n\n##### `simplealarms` (Simple BG Alarms)\n  Uses `BG_HIGH`, `BG_TARGET_TOP`, `BG_TARGET_BOTTOM`, `BG_LOW` thresholds to generate alarms.\n  * Enabled by default if 1 of these thresholds is set **OR** `ALARM_TYPES` includes `simple`.\n\n##### `profile` (Treatment Profile)\n  Add link to Profile Editor and allow to enter treatment profile settings. Also uses the extended setting:\n  * `PROFILE_HISTORY` (`off`) - possible values `on` or `off`. Enable/disable NS ability to keep history of your profiles (still experimental)\n  * `PROFILE_MULTIPLE` (`off`) - possible values `on` or `off`. Enable/disable NS ability to handle and switch between multiple treatment profiles\n\n#### Advanced Plugins:\n\n##### `careportal` (Careportal)\n  An optional form to enter treatments.\n\n##### `boluscalc` (Bolus Wizard)\n\n##### `food` (Custom Foods)\n  An option plugin to enable adding foods from database in Bolus Wizard and enable .\n\n##### `rawbg` (Raw BG)\n  Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with [extended setting](#extended-settings)\n  * `DISPLAY` (`unsmoothed`) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record.\n    * `unfiltered` - Raw BG is calculated by applying the calibration to the glucose record's unfiltered value.\n    * `filtered` - Raw BG is calculated by applying the calibration to the glucose record's filtered value. The glucose record's filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high.\n    * `unsmoothed` - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the `filtered` setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the `unfiltered` setting) by the ratio.  The effect is to exagerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm.\n\n##### `iob` (Insulin-on-Board)\n  Adds the IOB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with insulin doses and the `dia` and `sens` fields from the [treatment profile](#treatment-profile).\n\n##### `cob` (Carbs-on-Board)\n  Adds the COB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with carb doses and the `carbs_hr`, `carbratio`, and `sens` fields from the [treatment profile](#treatment-profile).\n\n##### `bwp` (Bolus Wizard Preview)\n  This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. ***The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation.*** The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the `iob` plugin and `sens`, `target_high`, and `target_low` fields from the [treatment profile](#treatment-profile). Defaults that can be adjusted with [extended setting](#extended-settings)\n  * `BWP_WARN` (`0.50`) - If `BWP` is > `BWP_WARN` a warning alarm will be triggered.\n  * `BWP_URGENT` (`1.00`) - If `BWP` is > `BWP_URGENT` an urgent alarm will be triggered.\n  * `BWP_SNOOZE_MINS` (`10`) - minutes to snooze when there is enough IOB to cover a high BG.\n  * `BWP_SNOOZE` - (`0.10`) If BG is higher then the `target_high` and `BWP` < `BWP_SNOOZE` alarms will be snoozed for `BWP_SNOOZE_MINS`.\n\n##### `cage` (Cannula Age)\n  Calculates the number of hours since the last `Site Change` treatment that was recorded.\n  * `CAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming cannula change.\n  * `CAGE_INFO` (`44`) - If time since last `Site Change` matches `CAGE_INFO`, user will be warned of upcoming cannula change\n  * `CAGE_WARN` (`48`) - If time since last `Site Change` matches `CAGE_WARN`, user will be alarmed to to change the cannula\n  * `CAGE_URGENT` (`72`) - If time since last `Site Change` matches `CAGE_URGENT`, user will be issued a persistent warning of overdue change.\n  * `CAGE_DISPLAY` (`hours`) - Possible values are 'hours' or 'days'. If 'days' is selected and age of canula is greater than 24h number is displayed in days and hours\n\n#####  `sage` (Sensor Age)\n  Calculates the number of days and hours since the last `Sensor Start` and `Sensor Change` treatment that was recorded.\n  * `SAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming sensor change.\n  * `SAGE_INFO` (`144`) - If time since last sensor event matches `SAGE_INFO`, user will be warned of upcoming sensor change\n  * `SAGE_WARN` (`164`) - If time since last sensor event matches `SAGE_WARN`, user will be alarmed to to change/restart the sensor\n  * `SAGE_URGENT` (`166`) - If time since last sensor event matches `SAGE_URGENT`, user will be issued a persistent warning of overdue change.\n\n##### `iage` (Insulin Age)\n  Calculates the number of days and hours since the last `Insulin Change` treatment that was recorded.\n  * `IAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming insulin reservoir change.\n  * `IAGE_INFO` (`44`) - If time since last `Insulin Change` matches `IAGE_INFO`, user will be warned of upcoming insulin reservoir change\n  * `IAGE_WARN` (`48`) - If time since last `Insulin Change` matches `IAGE_WARN`, user will be alarmed to to change the insulin reservoir\n  * `IAGE_URGENT` (`72`) - If time since last `Insulin Change` matches `IAGE_URGENT`, user will be issued a persistent warning of overdue change.\n\n##### `bage` (Battery Age)\n  Calculates the number of days and hours since the last `Pump Battery Change` treatment that was recorded.\n  * `BAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming pump battery change.\n  * `BAGE_DISPLAY` (`days`) - Set to `hours` to display time since last `Pump Battery Change` in hours only.\n  * `BAGE_INFO` (`312`) - If time since last `Pump Battery Change` matches `BAGE_INFO` hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days).\n  * `BAGE_WARN` (`336`) - If time since last `Pump Battery Change` matches `BAGE_WARN` hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days).\n  * `BAGE_URGENT` (`360`) - If time since last `Pump Battery Change` matches `BAGE_URGENT` hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).\n\n##### `treatmentnotify` (Treatment Notifications)\n  Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment.  Default snooze is 10 minutes, and can be set using the `TREATMENTNOTIFY_SNOOZE_MINS` [extended setting](#extended-settings).\n\n##### `basal` (Basal Profile)\n  Adds the Basal pill visualization to display the basal rate for the current time.  Also enables the `bwp` plugin to calculate correction temp basal suggestions.  Uses the `basal` field from the [treatment profile](#treatment-profile). Also uses the extended setting:\n  * `BASAL_RENDER` (`none`) - Possible values are `none`, `default`, or `icicle` (inverted)\n\n##### `bridge` (Share2Nightscout bridge)\n  Glucose reading directly from the Share service, uses these extended settings:\n  * `BRIDGE_USER_NAME` - Your user name for the Share service.\n  * `BRIDGE_PASSWORD` - Your password for the Share service.\n  * `BRIDGE_INTERVAL` (`150000` *2.5 minutes*) - The time to wait between each update.\n  * `BRIDGE_MAX_COUNT` (`1`) - The number of records to attempt to fetch per update.\n  * `BRIDGE_FIRST_FETCH_COUNT` (`3`) - Changes max count during the very first update only.\n  * `BRIDGE_MAX_FAILURES` (`3`) - How many failures before giving up.\n  * `BRIDGE_MINUTES` (`1400`) - The time window to search for new data per update (default is one day in minutes).\n\n##### `mmconnect` (MiniMed Connect bridge)\n  Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout ([read more](https://github.com/mddub/minimed-connect-to-nightscout))\n  * `MMCONNECT_USER_NAME` - Your user name for CareLink Connect.\n  * `MMCONNECT_PASSWORD` - Your password for CareLink Connect.\n  * `MMCONNECT_INTERVAL` (`60000` *1 minute*) - Number of milliseconds to wait between requests to the CareLink server.\n  * `MMCONNECT_MAX_RETRY_DURATION` (`32`) - Maximum number of total seconds to spend retrying failed requests before giving up.\n  * `MMCONNECT_SGV_LIMIT` (`24`) - Maximum number of recent sensor glucose values to send to Nightscout on each request.\n  * `MMCONNECT_VERBOSE` - Set this to \"true\" to log CareLink request information to the console.\n  * `MMCONNECT_STORE_RAW_DATA` - Set this to \"true\" to store raw data returned from CareLink as `type: \"carelink_raw\"` database entries (useful for development).\n  * `MMCONNECT_SERVER` - Set this to `EU` if you're using the European Medtronic services\n\n##### `pump` (Pump Monitoring)\n  Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, with more on the way\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `PUMP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications for Pump battery and reservoir.\n  * `PUMP_WARN_ON_SUSPEND` (`false`) - Set to `true` to get an alarm when the pump is suspended.\n  * `PUMP_FIELDS` (`reservoir battery`) - The fields to display by default.  Any of the following fields: `reservoir`, `battery`, `clock`, `status`, and `device`\n  * `PUMP_RETRO_FIELDS` (`reservoir battery clock`) - The fields to display in retro mode. Any of the above fields.\n  * `PUMP_WARN_CLOCK` (`30`) - The number of minutes ago that needs to be exceed before an alert is triggered.\n  * `PUMP_URGENT_CLOCK` (`60`) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered.\n  * `PUMP_WARN_RES` (`10`) - The number of units remaining, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_RES` (`5`) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold.\n  * `PUMP_WARN_BATT_P` (`30`) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_BATT_P` (`20`) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold.\n  * `PUMP_WARN_BATT_V` (`1.35`) - The voltage (if percent isn't available) of the pump battery, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_BATT_V` (`1.30`) - The  voltage (if percent isn't available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold.\n\n##### `openaps` (OpenAPS)\n  Integrated OpenAPS loop monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `OPENAPS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when OpenAPS isn't looping.  If OpenAPS is going to offline for a period of time, you can add an `OpenAPS Offline` event for the expected duration from Careportal to avoid getting alerts.\n  * `OPENAPS_WARN` (`30`) - The number of minutes since the last loop that needs to be exceed before an alert is triggered\n  * `OPENAPS_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggered\n  * `OPENAPS_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display by default.  Any of the following fields: `status-symbol`, `status-label`, `iob`, `meal-assist`, `freq`, and `rssi`\n  * `OPENAPS_RETRO_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display in retro mode. Any of the above fields.\n  * `OPENAPS_PRED_IOB_COLOR` (`#1e88e5`) - The color to use for IOB prediction lines. Colors can be in `#RRGGBB` format, but [other CSS color units](https://www.w3.org/TR/css-color-3/#colorunits) may be used as well.\n  * `OPENAPS_PRED_COB_COLOR` (`#FB8C00`) - The color to use for COB prediction lines. Same format as above.\n  * `OPENAPS_PRED_ACOB_COLOR` (`#FB8C00`) - The color to use for ACOB prediction lines. Same format as above.\n  * `OPENAPS_PRED_ZT_COLOR` (`#00d2d2`) - The color to use for ZT prediction lines. Same format as above.\n  * `OPENAPS_PRED_UAM_COLOR` (`#c9bd60`) - The color to use for UAM prediction lines. Same format as above.\n  * `OPENAPS_COLOR_PREDICTION_LINES` (`true`) - Enables / disables the colored lines vs the classic purple color.\n\n Also see [Pushover](#pushover) and [IFTTT Maker](#ifttt-maker).\n\n##### `loop` (Loop)\n  iOS Loop app monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `LOOP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when Loop isn't looping.\n  * `LOOP_WARN` (`30`) - The number of minutes since the last loop that needs to be exceeded before an alert is triggered\n  * `LOOP_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggered\n  * Add `loop` to `SHOW_FORECAST` to show forecasted BG.\n\nFor remote overrides, the following extended settings must be configured:\n  * `LOOP_APNS_KEY` - Apple Push Notifications service (APNs) Key, created in the Apple Developer website.\n  * `LOOP_APNS_KEY_ID` - The Key ID for the above key.\n  * `LOOP_DEVELOPER_TEAM_ID` - Your Apple developer team ID.\n  * `LOOP_PUSH_SERVER_ENVIRONMENT` - (optional) Set this to `production` if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight.\n\n##### `override` (Override Mode)\n  Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n\n##### `xdripjs` (xDrip-js)\n  Integrated xDrip-js monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `XDRIPJS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when CGM state is not OK or battery voltages fall below threshold.\n  * `XDRIPJS_STATE_NOTIFY_INTRVL` (`0.5`) - Set to number of hours between CGM state notifications\n  * `XDRIPJS_WARN_BAT_V` (`300`) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold.\n\n##### `alexa` (Amazon Alexa)\n  Integration with Amazon Alexa, [detailed setup instructions](docs/plugins/alexa-plugin.md)\n\n##### `googlehome` (Google Home/DialogFLow)\n  Integration with Google Home (via DialogFlow), [detailed setup instructions](docs/plugins/googlehome-plugin.md)\n\n##### `speech` (Speech)\n  Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms.\n\n##### `cors` (CORS)\n  Enabled [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) so other websites can make request to your Nightscout site, uses these extended settings:\n  * `CORS_ALLOW_ORIGIN` (`*`) - The list of sites that are allow to make requests\n\n#### Extended Settings\n  Some plugins support additional configuration using extra environment variables.  These are prefixed with the name of the plugin and a `_`.  For example setting `MYPLUGIN_EXAMPLE_VALUE=1234` would make `extendedSettings.exampleValue` available to the `MYPLUGIN` plugin.\n\n  Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser.\n\n  * `DEVICESTATUS_ADVANCED` (`true`) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site.\n\n#### Pushover\n  In addition to the normal web based alarms, there is also support for [Pushover](https://pushover.net/) based alarms and notifications.\n\n  To get started install the Pushover application on your iOS or Android device and create an account.\n\n  Using that account login to [Pushover](https://pushover.net/), in the top left you\u2019ll see your User Key, you\u2019ll need this plus an application API Token/Key to complete this setup.\n\n  You\u2019ll need to [Create a Pushover Application](https://pushover.net/apps/build).  You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch.  Maybe you'd like to use [this one](https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/static/images/large.png)?\n\n  Pushover is configured using the following Environment Variables:\n\n    * `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=\"pushover\"`.\n    * `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below.\n    * `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user.  This also supports a space delimited list of keys.  To disable `INFO` level pushes set this to `off`.\n    * `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level > `WARN`).  If not defined this will fallback to `PUSHOVER_USER_KEY`.  A possible use for this is sending important messages and alarms to a CWD that you don't want to send all notification too.  This also support a space delimited list of keys.  To disable Alarm pushes set this to `off`.\n    * `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements.  If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`.  This also support a space delimited list of keys. To disable Announcement pushes set this to `off`.\n    * `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible.\n    * `API_SECRET` - Used for signing the pushover callback request for acknowledgments.\n\n    If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=\"off\"`\n    If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=\"off\"`\n    If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=\"off\"`\n\n    If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcements\n\n    For testing/development try [localtunnel](http://localtunnel.me/).\n\n#### IFTTT Maker\n In addition to the normal web based alarms, and pushover, there is also integration for [IFTTT Webhooks](https://ifttt.com/maker_webhooks).\n\n With Maker you are able to integrate with all the other [IFTTT Services](https://ifttt.com/services).  For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more.\n\n 1. Setup IFTTT account: [login](https://ifttt.com/login) or [create an account](https://ifttt.com/join)\n 2. Follow the  [Detailed IFTTT setup Instructions](docs/plugins/maker-setup.md)\n 3. Configure Nightscout by setting these webpage environment variables:\n  * `ENABLE` - `maker` should be added to the list of plugins, for example: `ENABLE=\"maker\"`.\n  * `MAKER_KEY` - Set this to your secret key (see  [[Detailed Instructions](docs/plugins/maker-setup.md) ) `MAKER_KEY=\"abcMyExampleabc123defjt1DeNSiftttmak-XQb69p\"` This also supports a space delimited list of keys.\n  * `MAKER_ANNOUNCEMENT_KEY` - An optional Maker key, will be used for system wide user generated announcements.  If not defined this will fallback to `MAKER_KEY`.  A possible use for this is sending important messages and alarms to another device that you don't want to send all notification too.  This also support a space delimited list of keys.\n\n Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with `ns-`.  The core events are:\n  * `ns-event` - This event is sent to the maker service for all alarms and notifications.  This is good catch all event for general logging.\n  * `ns-allclear` - This event is sent to the maker service when an alarm has been ack'd or when the server starts up without triggering any alarms.  For example, you could use this event to turn a light to green.\n  * `ns-info` - Plugins that generate notifications at the info level will cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * `ns-warning` - Alarms at the warning level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * `ns-urgent` - Alarms at the urgent level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * see the [full list of events](lib/plugins/maker-setup.md#events)\n\n\n### Treatment Profile\n  Some of the [plugins](#plugins) make use of a treatment profile that can be edited using the Profile Editor, see the link in the Settings drawer on your site.\n\n  Treatment Profile Fields:\n\n  * `timezone` (Time Zone) - time zone local to the patient. *Should be set.*\n  * `units` (Profile Units) - blood glucose units used in the profile, either \"mgdl\" or \"mmol\"\n  * `dia` (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours.\n  * `carbs_hr` (Carbs per Hour) - The number of carbs that are processed per hour, for more information see [#DIYPS](http://diyps.org/2014/05/29/determining-your-carbohydrate-absorption-rate-diyps-lessons-learned/).\n  * `carbratio` (Carb Ratio) - grams per unit of insulin.\n  * `sens` (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose.\n  * `basal` The basal rate set on the pump.\n  * `target_high` - Upper target for correction boluses.\n  * `target_low` - Lower target for correction boluses.\n\n  Some example profiles are [here](example-profiles.md).\n\n## Setting environment variables\nEasy to emulate on the commandline:\n\n```bash\n    echo 'MONGO_CONNECTION=mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout' >> my.env\n    echo 'MONGO_COLLECTION=entries' >> my.env\n```\n\nFrom now on you can run using\n```bash\n    $ (eval $(cat my.env | sed 's/^/export /') && PORT=1337 node server.js)\n```\n\nYour hosting provider probably has a way to set these through their GUI.\n\n### Vagrant install\n\nOptionally, use [Vagrant](https://www.vagrantup.com/) with the\nincluded `Vagrantfile` and `setup.sh` to install OS and node packages to\na virtual machine.\n\n```bash\nhost$ vagrant up\nhost$ vagrant ssh\nvm$ setup.sh\n```\n\nThe setup script will install OS packages then run `npm install`.\n\nThe Vagrant VM serves to your host machine only on 192.168.33.10, you can access\nthe web interface on [http://192.168.33.10:1337](http://192.168.33.10:1337)\n\nMore questions?\n---------------\n\nFeel free to [post an issue][issues], but read the [wiki][wiki] first.\n\n[issues]: https://github.com/nightscout/cgm-remote-monitor/issues\n[wiki]: https://github.com/nightscout/cgm-remote-monitor/wiki\n\n### Browser testing suite provided by\n[![BrowserStack][browserstack-img]][browserstack-url]\n\n[browserstack-img]: /static/images/browserstack-logo.png\n[browserstack-url]: https://www.browserstack.com/\n\nLicense\n---------------\n\n[agpl-3]: http://www.gnu.org/licenses/agpl-3.0.txt\n\n    cgm-remote-monitor - web app to broadcast cgm readings\n    Copyright (C) 2017 Nightscout contributors.  See the COPYRIGHT file\n    at the root directory of this distribution and at\n    https://github.com/nightscout/cgm-remote-monitor/blob/master/COPYRIGHT\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
 },
 {
  "repo": "jtleek/datasharing",
  "language": null,
  "readme_contents": "How to share data with a statistician\n===========\n\nThis is a guide for anyone who needs to share data with a statistician or data scientist. The target audiences I have in mind are:\n\n* Collaborators who need statisticians or data scientists to analyze data for them\n* Students or postdocs in various disciplines looking for consulting advice\n* Junior statistics students whose job it is to collate/clean/wrangle data sets\n\nThe goals of this guide are to provide some instruction on the best way to share data to avoid the most common pitfalls\nand sources of delay in the transition from data collection to data analysis. The [Leek group](http://biostat.jhsph.edu/~jleek/) works with a large\nnumber of collaborators and the number one source of variation in the speed to results is the status of the data\nwhen they arrive at the Leek group. Based on my conversations with other statisticians this is true nearly universally.\n\nMy strong feeling is that statisticians should be able to handle the data in whatever state they arrive. It is important\nto see the raw data, understand the steps in the processing pipeline, and be able to incorporate hidden sources of\nvariability in one's data analysis. On the other hand, for many data types, the processing steps are well documented\nand standardized. So the work of converting the data from raw form to directly analyzable form can be performed \nbefore calling on a statistician. This can dramatically speed the turnaround time, since the statistician doesn't\nhave to work through all the pre-processing steps first. \n\n\nWhat you should deliver to the statistician\n====================\n\nTo facilitate the most efficient and timely analysis this is the information you should pass to a statistician:\n\n1. The raw data.\n2. A [tidy data set](http://vita.had.co.nz/papers/tidy-data.pdf) \n3. A code book describing each variable and its values in the tidy data set.  \n4. An explicit and exact recipe you used to go from 1 -> 2,3 \n\nLet's look at each part of the data package you will transfer. \n\n\n### The raw data\n\nIt is critical that you include the rawest form of the data that you have access to. This ensures\nthat data provenance can be maintained throughout the workflow.  Here are some examples of the\nraw form of data:\n\n* The strange [binary file](http://en.wikipedia.org/wiki/Binary_file) your measurement machine spits out\n* The unformatted Excel file with 10 worksheets the company you contracted with sent you\n* The complicated [JSON](http://en.wikipedia.org/wiki/JSON) data you got from scraping the [Twitter API](https://twitter.com/twitterapi)\n* The hand-entered numbers you collected looking through a microscope\n\nYou know the raw data are in the right format if you: \n\n1. Ran no software on the data\n1. Did not modify any of the data values\n1. You did not remove any data from the data set\n1. You did not summarize the data in any way\n\nIf you made any modifications of the raw data it is not the raw form of the data. Reporting modified data\nas raw data is a very common way to slow down the analysis process, since the analyst will often have to do a\nforensic study of your data to figure out why the raw data looks weird. (Also imagine what would happen if new data arrived?)\n\n### The tidy data set\n\nThe general principles of tidy data are laid out by [Hadley Wickham](http://had.co.nz/) in [this paper](http://vita.had.co.nz/papers/tidy-data.pdf)\nand [this video](http://vimeo.com/33727555). While both the paper and the video describe tidy data using [R](http://www.r-project.org/), the principles\nare more generally applicable:\n\n1. Each variable you measure should be in one column\n1. Each different observation of that variable should be in a different row\n1. There should be one table for each \"kind\" of variable\n1. If you have multiple tables, they should include a column in the table that allows them to be joined or merged\n\nWhile these are the hard and fast rules, there are a number of other things that will make your data set much easier\nto handle. First is to include a row at the top of each data table/spreadsheet that contains full row names. \nSo if you measured age at diagnosis for patients, you would head that column with the name `AgeAtDiagnosis` instead\nof something like `ADx` or another abbreviation that may be hard for another person to understand. \n\n\nHere is an example of how this would work from genomics. Suppose that for 20 people you have collected gene expression measurements with \n[RNA-sequencing](http://en.wikipedia.org/wiki/RNA-Seq). You have also collected demographic and clinical information\nabout the patients including their age, treatment, and diagnosis. You would have one table/spreadsheet that contains the clinical/demographic\ninformation. It would have four columns (patient id, age, treatment, diagnosis) and 21 rows (a row with variable names, then one row\nfor every patient). You would also have one spreadsheet for the summarized genomic data. Usually this type of data\nis summarized at the level of the number of counts per exon. Suppose you have 100,000 exons, then you would have a\ntable/spreadsheet that had 21 rows (a row for gene names, and one row for each patient) and 100,001 columns (one row for patient\nids and one row for each data type). \n\nIf you are sharing your data with the collaborator in Excel, the tidy data should be in one Excel file per table. They\nshould not have multiple worksheets, no macros should be applied to the data, and no columns/cells should be highlighted. \nAlternatively share the data in a [CSV](http://en.wikipedia.org/wiki/Comma-separated_values) or [TAB-delimited](http://en.wikipedia.org/wiki/Tab-separated_values) text file. (Beware however that reading CSV files into Excel can sometimes lead to non-reproducible handling of date and time variables.)\n\n\n### The code book\n\nFor almost any data set, the measurements you calculate will need to be described in more detail than you can or should sneak\ninto the spreadsheet. The code book contains this information. At minimum it should contain:\n\n1. Information about the variables (including units!) in the data set not contained in the tidy data \n1. Information about the summary choices you made\n1. Information about the experimental study design you used\n\nIn our genomics example, the analyst would want to know what the unit of measurement for each\nclinical/demographic variable is (age in years, treatment by name/dose, level of diagnosis and how heterogeneous). They \nwould also want to know how you picked the exons you used for summarizing the genomic data (UCSC/Ensembl, etc.). They\nwould also want to know any other information about how you did the data collection/study design. For example,\nare these the first 20 patients that walked into the clinic? Are they 20 highly selected patients by some characteristic\nlike age? Are they randomized to treatments? \n\nA common format for this document is a Word file. There should be a section called \"Study design\" that has a thorough\ndescription of how you collected the data. There is a section called \"Code book\" that describes each variable and its\nunits. \n\n### How to code variables\n\nWhen you put variables into a spreadsheet there are several main categories you will run into depending on their [data type](http://en.wikipedia.org/wiki/Statistical_data_type):\n\n1. Continuous\n1. Ordinal\n1. Categorical\n1. Missing \n1. Censored\n\nContinuous variables are anything measured on a quantitative scale that could be any fractional number. An example\nwould be something like weight measured in kg. [Ordinal data](http://en.wikipedia.org/wiki/Ordinal_data) are data that have a fixed, small (< 100) number of levels but are ordered. \nThis could be for example survey responses where the choices are: poor, fair, good. [Categorical data](http://en.wikipedia.org/wiki/Categorical_variable) are data where there\nare multiple categories, but they aren't ordered. One example would be sex: male or female. This coding is attractive because it is self-documenting.  [Missing data](http://en.wikipedia.org/wiki/Missing_data) are data\nthat are unobserved and you don't know the mechanism. You should code missing values as `NA`. [Censored data](http://en.wikipedia.org/wiki/Censoring_\\(statistics\\)) are data\nwhere you know the missingness mechanism on some level. Common examples are a measurement being below a detection limit\nor a patient being lost to follow-up. They should also be coded as `NA` when you don't have the data. But you should\nalso add a new column to your tidy data called, \"VariableNameCensored\" which should have values of `TRUE` if censored \nand `FALSE` if not. In the code book you should explain why those values are missing. It is absolutely critical to report\nto the analyst if there is a reason you know about that some of the data are missing. You should also not [impute](http://en.wikipedia.org/wiki/Imputation_\\(statistics\\))/make up/\nthrow away missing observations.\n\nIn general, try to avoid coding categorical or ordinal variables as numbers. When you enter the value for sex in the tidy\ndata, it should be \"male\" or \"female\". The ordinal values in the data set should be \"poor\", \"fair\", and \"good\" not 1, 2 ,3.\nThis will avoid potential mixups about which direction effects go and will help identify coding errors. \n\nAlways encode every piece of information about your observations using text. For example, if you are storing data in Excel and use a form of colored text or cell background formatting to indicate information about an observation (\"red variable entries were observed in experiment 1.\") then this information will not be exported (and will be lost!) when the data is exported as raw text.  Every piece of data should be encoded as actual text that can be exported.  \n\n### The instruction list/script\n\nYou may have heard this before, but [reproducibility is a big deal in computational science](http://www.sciencemag.org/content/334/6060/1226).\nThat means, when you submit your paper, the reviewers and the rest of the world should be able to exactly replicate\nthe analyses from raw data all the way to final results. If you are trying to be efficient, you will likely perform\nsome summarization/data analysis steps before the data can be considered tidy. \n\nThe ideal thing for you to do when performing summarization is to create a computer script (in `R`, `Python`, or something else) \nthat takes the raw data as input and produces the tidy data you are sharing as output. You can try running your script\na couple of times and see if the code produces the same output. \n\nIn many cases, the person who collected the data has incentive to make it tidy for a statistician to speed the process\nof collaboration. They may not know how to code in a scripting language. In that case, what you should provide the statistician\nis something called [pseudocode](http://en.wikipedia.org/wiki/Pseudocode). It should look something like:\n\n1. Step 1 - take the raw file, run version 3.1.2 of summarize software with parameters a=1, b=2, c=3\n1. Step 2 - run the software separately for each sample\n1. Step 3 - take column three of outputfile.out for each sample and that is the corresponding row in the output data set\n\nYou should also include information about which system (Mac/Windows/Linux) you used the software on and whether you \ntried it more than once to confirm it gave the same results. Ideally, you will run this by a fellow student/labmate\nto confirm that they can obtain the same output file you did. \n\n\n\n\nWhat you should expect from the analyst\n====================\n\nWhen you turn over a properly tidied data set it dramatically decreases the workload on the statistician. So hopefully\nthey will get back to you much sooner. But most careful statisticians will check your recipe, ask questions about\nsteps you performed, and try to confirm that they can obtain the same tidy data that you did with, at minimum, spot\nchecks.\n\nYou should then expect from the statistician:\n\n1. An analysis script that performs each of the analyses (not just instructions)\n1. The exact computer code they used to run the analysis\n1. All output files/figures they generated. \n\nThis is the information you will use in the supplement to establish reproducibility and precision of your results. Each\nof the steps in the analysis should be clearly explained and you should ask questions when you don't understand\nwhat the analyst did. It is the responsibility of both the statistician and the scientist to understand the statistical\nanalysis. You may not be able to perform the exact analyses without the statistician's code, but you should be able\nto explain why the statistician performed each step to a labmate/your principal investigator. \n\n\nContributors\n====================\n\n* [Jeff Leek](http://biostat.jhsph.edu/~jleek/) - Wrote the initial version.\n* [L. Collado-Torres](http://bit.ly/LColladoTorres) - Fixed typos, added links.\n* [Nick Reich](http://people.umass.edu/nick/) - Added tips on storing data as text.\n* [Nick Horton](https://www.amherst.edu/people/facstaff/nhorton) - Minor wording suggestions.\n\n\n"
 },
 {
  "repo": "rdpeng/ProgrammingAssignment2",
  "language": "R",
  "readme_contents": "### Introduction\n\nThis second programming assignment will require you to write an R\nfunction that is able to cache potentially time-consuming computations.\nFor example, taking the mean of a numeric vector is typically a fast\noperation. However, for a very long vector, it may take too long to\ncompute the mean, especially if it has to be computed repeatedly (e.g.\nin a loop). If the contents of a vector are not changing, it may make\nsense to cache the value of the mean so that when we need it again, it\ncan be looked up in the cache rather than recomputed. In this\nProgramming Assignment you will take advantage of the scoping rules of\nthe R language and how they can be manipulated to preserve state inside\nof an R object.\n\n### Example: Caching the Mean of a Vector\n\nIn this example we introduce the `<<-` operator which can be used to\nassign a value to an object in an environment that is different from the\ncurrent environment. Below are two functions that are used to create a\nspecial object that stores a numeric vector and caches its mean.\n\nThe first function, `makeVector` creates a special \"vector\", which is\nreally a list containing a function to\n\n1.  set the value of the vector\n2.  get the value of the vector\n3.  set the value of the mean\n4.  get the value of the mean\n\n<!-- -->\n\n    makeVector <- function(x = numeric()) {\n            m <- NULL\n            set <- function(y) {\n                    x <<- y\n                    m <<- NULL\n            }\n            get <- function() x\n            setmean <- function(mean) m <<- mean\n            getmean <- function() m\n            list(set = set, get = get,\n                 setmean = setmean,\n                 getmean = getmean)\n    }\n\nThe following function calculates the mean of the special \"vector\"\ncreated with the above function. However, it first checks to see if the\nmean has already been calculated. If so, it `get`s the mean from the\ncache and skips the computation. Otherwise, it calculates the mean of\nthe data and sets the value of the mean in the cache via the `setmean`\nfunction.\n\n    cachemean <- function(x, ...) {\n            m <- x$getmean()\n            if(!is.null(m)) {\n                    message(\"getting cached data\")\n                    return(m)\n            }\n            data <- x$get()\n            m <- mean(data, ...)\n            x$setmean(m)\n            m\n    }\n\n### Assignment: Caching the Inverse of a Matrix\n\nMatrix inversion is usually a costly computation and there may be some\nbenefit to caching the inverse of a matrix rather than computing it\nrepeatedly (there are also alternatives to matrix inversion that we will\nnot discuss here). Your assignment is to write a pair of functions that\ncache the inverse of a matrix.\n\nWrite the following functions:\n\n1.  `makeCacheMatrix`: This function creates a special \"matrix\" object\n    that can cache its inverse.\n2.  `cacheSolve`: This function computes the inverse of the special\n    \"matrix\" returned by `makeCacheMatrix` above. If the inverse has\n    already been calculated (and the matrix has not changed), then\n    `cacheSolve` should retrieve the inverse from the cache.\n\nComputing the inverse of a square matrix can be done with the `solve`\nfunction in R. For example, if `X` is a square invertible matrix, then\n`solve(X)` returns its inverse.\n\nFor this assignment, assume that the matrix supplied is always\ninvertible.\n\nIn order to complete this assignment, you must do the following:\n\n1.  Fork the GitHub repository containing the stub R files at\n    [https://github.com/rdpeng/ProgrammingAssignment2](https://github.com/rdpeng/ProgrammingAssignment2)\n    to create a copy under your own account.\n2.  Clone your forked GitHub repository to your computer so that you can\n    edit the files locally on your own machine.\n3.  Edit the R file contained in the git repository and place your\n    solution in that file (please do not rename the file).\n4.  Commit your completed R file into YOUR git repository and push your\n    git branch to the GitHub repository under your account.\n5.  Submit to Coursera the URL to your GitHub repository that contains\n    the completed R code for the assignment.\n\n### Grading\n\nThis assignment will be graded via peer assessment.\n"
 },
 {
  "repo": "octocat/Spoon-Knife",
  "language": "HTML",
  "readme_contents": "### Well hello there!\n\nThis repository is meant to provide an example for *forking* a repository on GitHub.\n\nCreating a *fork* is producing a personal copy of someone else's project. Forks act as a sort of bridge between the original repository and your personal copy. You can submit *Pull Requests* to help make other people's projects better by offering your changes up to the original project. Forking is at the core of social coding at GitHub.\n\nAfter forking this repository, you can make some changes to the project, and submit [a Pull Request](https://github.com/octocat/Spoon-Knife/pulls) as practice.\n\nFor some more information on how to fork a repository, [check out our guide, \"Forking Projects\"\"](http://guides.github.com/overviews/forking/). Thanks! :sparkling_heart:\n"
 },
 {
  "repo": "tensorflow/tensorflow",
  "language": "C++",
  "readme_contents": "<div align=\"center\">\n  <img src=\"https://www.tensorflow.org/images/tf_logo_social.png\">\n</div>\n\n[![Python](https://img.shields.io/pypi/pyversions/tensorflow.svg?style=plastic)](https://badge.fury.io/py/tensorflow)\n[![PyPI](https://badge.fury.io/py/tensorflow.svg)](https://badge.fury.io/py/tensorflow)\n\n\n**`Documentation`** |\n------------------- |\n[![Documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://www.tensorflow.org/api_docs/) |\n\n[TensorFlow](https://www.tensorflow.org/) is an end-to-end open source platform\nfor machine learning. It has a comprehensive, flexible ecosystem of\n[tools](https://www.tensorflow.org/resources/tools),\n[libraries](https://www.tensorflow.org/resources/libraries-extensions), and\n[community](https://www.tensorflow.org/community) resources that lets\nresearchers push the state-of-the-art in ML and developers easily build and\ndeploy ML-powered applications.\n\nTensorFlow was originally developed by researchers and engineers working on the\nGoogle Brain team within Google's Machine Intelligence Research organization to\nconduct machine learning and deep neural networks research. The system is\ngeneral enough to be applicable in a wide variety of other domains, as well.\n\nTensorFlow provides stable [Python](https://www.tensorflow.org/api_docs/python)\nand [C++](https://www.tensorflow.org/api_docs/cc) APIs, as well as\nnon-guaranteed backward compatible API for\n[other languages](https://www.tensorflow.org/api_docs).\n\nKeep up-to-date with release announcements and security updates by subscribing\nto\n[announce@tensorflow.org](https://groups.google.com/a/tensorflow.org/forum/#!forum/announce).\nSee all the [mailing lists](https://www.tensorflow.org/community/forums).\n\n## Install\n\nSee the [TensorFlow install guide](https://www.tensorflow.org/install) for the\n[pip package](https://www.tensorflow.org/install/pip), to\n[enable GPU support](https://www.tensorflow.org/install/gpu), use a\n[Docker container](https://www.tensorflow.org/install/docker), and\n[build from source](https://www.tensorflow.org/install/source).\n\nTo install the current release, which includes support for\n[CUDA-enabled GPU cards](https://www.tensorflow.org/install/gpu) *(Ubuntu and\nWindows)*:\n\n```\n$ pip install tensorflow\n```\n\nA smaller CPU-only package is also available:\n\n```\n$ pip install tensorflow-cpu\n```\n\nTo update TensorFlow to the latest version, add `--upgrade` flag to the above\ncommands.\n\n*Nightly binaries are available for testing using the\n[tf-nightly](https://pypi.python.org/pypi/tf-nightly) and\n[tf-nightly-cpu](https://pypi.python.org/pypi/tf-nightly-cpu) packages on PyPi.*\n\n#### *Try your first TensorFlow program*\n\n```shell\n$ python\n```\n\n```python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\nb'Hello, TensorFlow!'\n```\n\nFor more examples, see the\n[TensorFlow tutorials](https://www.tensorflow.org/tutorials/).\n\n## Contribution guidelines\n\n**If you want to contribute to TensorFlow, be sure to review the\n[contribution guidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.**\n\n**We use [GitHub issues](https://github.com/tensorflow/tensorflow/issues) for\ntracking requests and bugs, please see\n[TensorFlow Discuss](https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss)\nfor general questions and discussion, and please direct specific questions to\n[Stack Overflow](https://stackoverflow.com/questions/tagged/tensorflow).**\n\nThe TensorFlow project strives to abide by generally accepted best practices in\nopen-source software development:\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1486/badge)](https://bestpractices.coreinfrastructure.org/projects/1486)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n\n## Continuous build status\n\n### Official Builds\n\nBuild Type               | Status                                                                                                                                                                           | Artifacts\n------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux CPU**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html)           | [PyPI](https://pypi.org/project/tf-nightly/)\n**Linux GPU**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html) | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Linux XLA**            | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html)         | TBA\n**macOS**                | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html)     | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows CPU**          | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html)       | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows GPU**          | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html)       | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Android**              | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html)               | [![Download](https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg)](https://bintray.com/google/tensorflow/tensorflow/_latestVersion)\n**Raspberry Pi 0 and 1** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html)           | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl)\n**Raspberry Pi 2 and 3** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html)           | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl)\n\n### Community Supported Builds\n\nBuild Type                                                        | Status                                                                                                                                                                                        | Artifacts\n----------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux AMD ROCm GPU** Nightly                                    | [![Build Status](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/badge/icon)](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly)                                                  | [Nightly](http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/lastSuccessfulBuild/)\n**Linux AMD ROCm GPU** Stable Release                             | [![Build Status](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/badge/icon)](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/)                                                 | Release [1.15](http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/lastSuccessfulBuild/) / [2.x](http://ml-ci.amd.com:21096/job/tensorflow-rocm-v2-release/lastSuccessfulBuild/)\n**Linux s390x** Nightly                                           | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon)](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)                                                             | [Nightly](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)\n**Linux s390x CPU** Stable Release                                | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/badge/icon)](https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/)                                      | [Release](https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/)\n**Linux ppc64le CPU** Nightly                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/)\n**Linux ppc64le CPU** Stable Release                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/)                       | Release [1.15](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/) / [2.x](https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_CPU_Release_Build/)\n**Linux ppc64le GPU** Nightly                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/)\n**Linux ppc64le GPU** Stable Release                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/)                       | Release [1.15](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/) / [2.x](https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_GPU_Release_Build/)\n**Linux CPU with Intel\u00ae MKL-DNN** Nightly                         | [![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/badge/icon)](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)                     | [Nightly](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)\n**Linux CPU with Intel\u00ae MKL-DNN** Stable Release                  | ![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon)                                                                                              | Release [1.15](https://pypi.org/project/intel-tensorflow/1.15.0/) / [2.x](https://pypi.org/project/intel-tensorflow/)\n**Red Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU** <br> Python 2.7, 3.6 | [![Build Status](https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&build=2)](https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/) | [1.13.1 PyPI](https://tensorflow.pypi.thoth-station.ninja/index/)\n\n## Resources\n\n*   [TensorFlow.org](https://www.tensorflow.org)\n*   [TensorFlow Tutorials](https://www.tensorflow.org/tutorials/)\n*   [TensorFlow Official Models](https://github.com/tensorflow/models/tree/master/official)\n*   [TensorFlow Examples](https://github.com/tensorflow/examples)\n*   [TensorFlow in Practice from Coursera](https://www.coursera.org/specializations/tensorflow-in-practice)\n*   [TensorFlow: Data and Deployment from Coursera](https://www.coursera.org/specializations/tensorflow-data-and-deployment)\n*   [Getting Started with TensorFlow 2 from Coursera](https://www.coursera.org/learn/getting-started-with-tensor-flow2)\n*   [Intro to TensorFlow for Deep Learning from Udacity](https://www.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187)\n*   [Introduction to TensorFlow Lite from Udacity](https://www.udacity.com/course/intro-to-tensorflow-lite--ud190)\n*   [Machine Learning with TensorFlow on GCP](https://www.coursera.org/specializations/machine-learning-tensorflow-gcp)\n*   [TensorFlow Blog](https://blog.tensorflow.org)\n*   [Learn ML with TensorFlow](https://www.tensorflow.org/resources/learn-ml)\n*   [TensorFlow Twitter](https://twitter.com/tensorflow)\n*   [TensorFlow YouTube](https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ)\n*   [TensorFlow Roadmap](https://www.tensorflow.org/community/roadmap)\n*   [TensorFlow White Papers](https://www.tensorflow.org/about/bib)\n*   [TensorBoard Visualization Toolkit](https://github.com/tensorflow/tensorboard)\n\nLearn more about the\n[TensorFlow community](https://www.tensorflow.org/community) and how to\n[contribute](https://www.tensorflow.org/community/contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
 },
 {
  "repo": "SmartThingsCommunity/SmartThingsPublic",
  "language": "Groovy",
  "readme_contents": "# SmartThings Public GitHub Repo\n\nAn official list of SmartApps and Device Types from SmartThings.\n\nHere are some links to help you get started coding right away:\n\n* [GitHub-specific Documentation](http://docs.smartthings.com/en/latest/tools-and-ide/github-integration.html)\n* [Full Documentation](http://docs.smartthings.com)\n* [IDE & Simulator](http://ide.smartthings.com)\n* [Community Forums](http://community.smartthings.com)\n\nFollow us on the web:\n\n* Twitter: http://twitter.com/smartthingsdev\n* Facebook: http://facebook.com/smartthingsdevelopers\n"
 },
 {
  "repo": "twbs/bootstrap",
  "language": "JavaScript",
  "readme_contents": "<p align=\"center\">\n  <a href=\"https://getbootstrap.com/\">\n    <img src=\"https://getbootstrap.com/docs/4.5/assets/brand/bootstrap-solid.svg\" alt=\"Bootstrap logo\" width=\"72\" height=\"72\">\n  </a>\n</p>\n\n<h3 align=\"center\">Bootstrap</h3>\n\n<p align=\"center\">\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  <br>\n  <a href=\"https://getbootstrap.com/docs/4.5/\"><strong>Explore Bootstrap docs \u00bb</strong></a>\n  <br>\n  <br>\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=bug.md\">Report bug</a>\n  \u00b7\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=feature.md&labels=feature\">Request feature</a>\n  \u00b7\n  <a href=\"https://themes.getbootstrap.com/\">Themes</a>\n  \u00b7\n  <a href=\"https://blog.getbootstrap.com/\">Blog</a>\n</p>\n\n\n## Table of contents\n\n- [Quick start](#quick-start)\n- [Status](#status)\n- [What's included](#whats-included)\n- [Bugs and feature requests](#bugs-and-feature-requests)\n- [Documentation](#documentation)\n- [Contributing](#contributing)\n- [Community](#community)\n- [Versioning](#versioning)\n- [Creators](#creators)\n- [Thanks](#thanks)\n- [Copyright and license](#copyright-and-license)\n\n\n## Quick start\n\nSeveral quick start options are available:\n\n- [Download the latest release.](https://github.com/twbs/bootstrap/archive/v4.5.0.zip)\n- Clone the repo: `git clone https://github.com/twbs/bootstrap.git`\n- Install with [npm](https://www.npmjs.com/): `npm install bootstrap`\n- Install with [yarn](https://yarnpkg.com/): `yarn add bootstrap@4.5.0`\n- Install with [Composer](https://getcomposer.org/): `composer require twbs/bootstrap:4.5.0`\n- Install with [NuGet](https://www.nuget.org/): CSS: `Install-Package bootstrap` Sass: `Install-Package bootstrap.sass`\n\nRead the [Getting started page](https://getbootstrap.com/docs/4.5/getting-started/introduction/) for information on the framework contents, templates and examples, and more.\n\n\n## Status\n\n[![Slack](https://bootstrap-slack.herokuapp.com/badge.svg)](https://bootstrap-slack.herokuapp.com/)\n[![Build Status](https://github.com/twbs/bootstrap/workflows/Tests/badge.svg?branch=master)](https://github.com/twbs/bootstrap/actions?query=workflow%3ATests+branch%3Amaster)\n[![npm version](https://img.shields.io/npm/v/bootstrap.svg)](https://www.npmjs.com/package/bootstrap)\n[![Gem version](https://img.shields.io/gem/v/bootstrap.svg)](https://rubygems.org/gems/bootstrap)\n[![Meteor Atmosphere](https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue.svg)](https://atmospherejs.com/twbs/bootstrap)\n[![Packagist Prerelease](https://img.shields.io/packagist/vpre/twbs/bootstrap.svg)](https://packagist.org/packages/twbs/bootstrap)\n[![NuGet](https://img.shields.io/nuget/vpre/bootstrap.svg)](https://www.nuget.org/packages/bootstrap/absoluteLatest)\n[![peerDependencies Status](https://img.shields.io/david/peer/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=peer)\n[![devDependency Status](https://img.shields.io/david/dev/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=dev)\n[![Coverage Status](https://img.shields.io/coveralls/github/twbs/bootstrap/master.svg)](https://coveralls.io/github/twbs/bootstrap?branch=master)\n[![CSS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/css/bootstrap.min.css?compression=gzip&label=CSS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/css/bootstrap.min.css)\n[![JS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/js/bootstrap.min.js?compression=gzip&label=JS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/js/bootstrap.min.js)\n[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)](https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)\n[![Backers on Open Collective](https://img.shields.io/opencollective/backers/bootstrap.svg)](#backers)\n[![Sponsors on Open Collective](https://img.shields.io/opencollective/sponsors/bootstrap.svg)](#sponsors)\n\n\n## What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\n\n```text\nbootstrap/\n\u2514\u2500\u2500 dist/\n    \u251c\u2500\u2500 css/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n```\n\nWe provide compiled CSS and JS (`bootstrap.*`), as well as compiled and minified CSS and JS (`bootstrap.min.*`). [source maps](https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps) (`bootstrap.*.map`) are available for use with certain browsers' developer tools. Bundled JS files (`bootstrap.bundle.js` and minified `bootstrap.bundle.min.js`) include [Popper](https://popper.js.org/).\n\n\n## Bugs and feature requests\n\nHave a bug or a feature request? Please first read the [issue guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md#using-the-issue-tracker) and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/twbs/bootstrap/issues/new).\n\n\n## Documentation\n\nBootstrap's documentation, included in this repo in the root directory, is built with [Hugo](https://gohugo.io/) and publicly hosted on GitHub Pages at <https://getbootstrap.com/>. The docs may also be run locally.\n\nDocumentation search is powered by [Algolia's DocSearch](https://community.algolia.com/docsearch/). Working on our search? Be sure to set `debug: true` in `site/assets/js/src/search.js` file.\n\n### Running documentation locally\n\n1. Run `npm install` to install the Node.js dependencies, including Hugo (the site builder).\n2. Run `npm run test` (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\n3. From the root `/bootstrap` directory, run `npm run docs-serve` in the command line.\n4. Open `http://localhost:9001/` in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its [documentation](https://gohugo.io/documentation/).\n\n### Documentation for previous releases\n\nYou can find all our previous releases docs on <https://getbootstrap.com/docs/versions/>.\n\n[Previous releases](https://github.com/twbs/bootstrap/releases) and their documentation are also available for download.\n\n\n## Contributing\n\nPlease read through our [contributing guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.\n\nMoreover, if your pull request contains JavaScript patches or features, you must include [relevant unit tests](https://github.com/twbs/bootstrap/tree/master/js/tests). All HTML and CSS should conform to the [Code Guide](https://github.com/mdo/code-guide), maintained by [Mark Otto](https://github.com/mdo).\n\nEditor preferences are available in the [editor config](https://github.com/twbs/bootstrap/blob/master/.editorconfig) for easy use in common text editors. Read more and download plugins at <https://editorconfig.org/>.\n\n\n## Community\n\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\n- Follow [@getbootstrap on Twitter](https://twitter.com/getbootstrap).\n- Read and subscribe to [The Official Bootstrap Blog](https://blog.getbootstrap.com/).\n- Join [the official Slack room](https://bootstrap-slack.herokuapp.com/).\n- Chat with fellow Bootstrappers in IRC. On the `irc.freenode.net` server, in the `##bootstrap` channel.\n- Implementation help may be found at Stack Overflow (tagged [`bootstrap-4`](https://stackoverflow.com/questions/tagged/bootstrap-4)).\n- Developers should use the keyword `bootstrap` on packages which modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/browse/keyword/bootstrap) or similar delivery mechanisms for maximum discoverability.\n\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under [the Semantic Versioning guidelines](https://semver.org/). Sometimes we screw up, but we adhere to those rules whenever possible.\n\nSee [the Releases section of our GitHub project](https://github.com/twbs/bootstrap/releases) for changelogs for each release version of Bootstrap. Release announcement posts on [the official Bootstrap blog](https://blog.getbootstrap.com/) contain summaries of the most noteworthy changes made in each release.\n\n\n## Creators\n\n**Mark Otto**\n\n- <https://twitter.com/mdo>\n- <https://github.com/mdo>\n\n**Jacob Thornton**\n\n- <https://twitter.com/fat>\n- <https://github.com/fat>\n\n\n## Thanks\n\n<a href=\"https://www.browserstack.com/\">\n  <img src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\" width=\"192\" height=\"42\">\n</a>\n\nThanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/bootstrap#sponsor)]\n\n[![OC sponsor 0](https://opencollective.com/bootstrap/sponsor/0/avatar.svg)](https://opencollective.com/bootstrap/sponsor/0/website)\n[![OC sponsor 1](https://opencollective.com/bootstrap/sponsor/1/avatar.svg)](https://opencollective.com/bootstrap/sponsor/1/website)\n[![OC sponsor 2](https://opencollective.com/bootstrap/sponsor/2/avatar.svg)](https://opencollective.com/bootstrap/sponsor/2/website)\n[![OC sponsor 3](https://opencollective.com/bootstrap/sponsor/3/avatar.svg)](https://opencollective.com/bootstrap/sponsor/3/website)\n[![OC sponsor 4](https://opencollective.com/bootstrap/sponsor/4/avatar.svg)](https://opencollective.com/bootstrap/sponsor/4/website)\n[![OC sponsor 5](https://opencollective.com/bootstrap/sponsor/5/avatar.svg)](https://opencollective.com/bootstrap/sponsor/5/website)\n[![OC sponsor 6](https://opencollective.com/bootstrap/sponsor/6/avatar.svg)](https://opencollective.com/bootstrap/sponsor/6/website)\n[![OC sponsor 7](https://opencollective.com/bootstrap/sponsor/7/avatar.svg)](https://opencollective.com/bootstrap/sponsor/7/website)\n[![OC sponsor 8](https://opencollective.com/bootstrap/sponsor/8/avatar.svg)](https://opencollective.com/bootstrap/sponsor/8/website)\n[![OC sponsor 9](https://opencollective.com/bootstrap/sponsor/9/avatar.svg)](https://opencollective.com/bootstrap/sponsor/9/website)\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/bootstrap#backer)]\n\n[![Backers](https://opencollective.com/bootstrap/backers.svg?width=890)](https://opencollective.com/bootstrap#backers)\n\n\n## Copyright and license\n\nCode and documentation copyright 2011\u20132020 the [Bootstrap Authors](https://github.com/twbs/bootstrap/graphs/contributors) and [Twitter, Inc.](https://twitter.com) Code released under the [MIT License](https://github.com/twbs/bootstrap/blob/master/LICENSE). Docs released under [Creative Commons](https://creativecommons.org/licenses/by/3.0/).\n"
 },
 {
  "repo": "github/gitignore",
  "language": null,
  "readme_contents": "# A collection of `.gitignore` templates\n\nThis is GitHub\u2019s collection of [`.gitignore`][man] file templates.\nWe use this list to populate the `.gitignore` template choosers available\nin the GitHub.com interface when creating new repositories and files.\n\nFor more information about how `.gitignore` files work, and how to use them,\nthe following resources are a great place to start:\n\n- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.\n- The [Ignoring Files article][help] on the GitHub Help site.\n- The [gitignore(5)][man] manual page.\n\n[man]: http://git-scm.com/docs/gitignore\n[help]: https://help.github.com/articles/ignoring-files\n[chapter]: https://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository#_ignoring\n[progit]: http://git-scm.com/book\n\n## Folder structure\n\nWe support a collection of templates, organized in this way:\n\n- the root folder contains templates in common use, to help people get started\n  with popular programming languages and technologies. These define a meaningful\n  set of rules to help get started, and ensure you are not committing\n  unimportant files into your repository\n- [`Global`](./Global) contains templates for various editors, tools and\n  operating systems that can be used in different situations. It is recommended\n  that you either [add these to your global template](https://help.github.com/articles/ignoring-files/#create-a-global-gitignore)\n  or merge these rules into your project-specific templates if you want to use\n  them permanently.\n- [`community`](./community) contains specialized templates for other popular\n  languages, tools and project, which don't currently belong in the mainstream\n  templates. These should be added to your project-specific templates when you\n  decide to adopt the framework or tool.\n\n## What makes a good template?\n\nA template should contain a set of rules to help Git repositories work with a\nspecific programming language, framework, tool or environment.\n\nIf it's not possible to curate a small set of useful rules for this situation,\nthen the template is not a good fit for this collection.\n\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework), it could live under the `community`\ndirectory. See [versioned templates](#versioned-templates) for more details.\n\nIf you have a small set of rules, or want to support a technology that is not\nwidely in use, and still believe this will be helpful to others, please read the\nsection about [specialized templates](#specialized-templates) for more details.\n\nInclude details when opening pull request if the template is important and visible. We\nmay not accept it immediately, but we can promote it to the root at a later date\nbased on interest.\n\nPlease also understand that we can\u2019t list every tool that ever existed.\nOur aim is to curate a collection of the _most common and helpful_ templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, it\u2019s not because it\u2019s not awesome.\n\n## Contributing guidelines\n\nWe\u2019d love for you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n- **Provide a link to the application or project\u2019s homepage**. Unless it\u2019s\n  extremely popular, there\u2019s a chance the maintainers don\u2019t know about or use\n  the language, framework, editor, app, or project your change applies to.\n\n- **Provide links to documentation** supporting the change you\u2019re making.\n  Current, canonical documentation mentioning the files being ignored is best.\n  If documentation isn\u2019t available to support your change, do the best you can\n  to explain what the files being ignored are for.\n\n- **Explain why you\u2019re making a change**. Even if it seems self-evident, please\n  take a sentence or two to tell us why your change or addition should happen.\n  It\u2019s especially helpful to articulate why this change applies to _everyone_\n  who works with the applicable technology, rather than just you or your team.\n\n- **Please consider the scope of your change**. If your change is specific to a\n  certain language or framework, then make sure the change is made to the\n  template for that language or framework, rather than to the template for an\n  editor, tool, or operating system.\n\n- **Please only modify _one template_ per pull request**. This helps keep pull\n  requests and feedback focused on a specific project or technology.\n\nIn general, the more you can do to help us understand the change you\u2019re making,\nthe more likely we\u2019ll be to accept your contribution quickly.\n\n## Versioned templates\n\nSome templates can change greatly between versions, and if you wish to contribute\nto this repository we need to follow this specific flow:\n\n- the template at the root should be the current supported version\n- the template at the root should not have a version in the filename (i.e.\n  \"evergreen\")\n- previous versions of templates should live under `community/`\n- previous versions of the template should embed the version in the filename,\n  for readability\n\nThis helps ensure users get the latest version (because they'll use whatever is\nat the root) but helps maintainers support older versions still in the wild.\n\n## Specialized templates\n\nIf you have a template that you would like to contribute, but it isn't quite\nmainstream, please consider adding this to the `community` directory under a\nfolder that best suits where it belongs.\n\nThe rules in your specialized template should be specific to the framework or\ntool, and any additional templates should be mentioned in a comment in the\nheader of the template.\n\nFor example, this template might live at `community/DotNet/InforCRM.gitignore`:\n\n```\n# gitignore template for InforCRM (formerly SalesLogix)\n# website: https://www.infor.com/product-summary/cx/infor-crm/\n#\n# Recommended: VisualStudio.gitignore\n\n# Ignore model files that are auto-generated\nModelIndex.xml\nExportedFiles.xml\n\n# Ignore deployment files\n[Mm]odel/[Dd]eployment\n\n# Force include portal SupportFiles\n!Model/Portal/*/SupportFiles/[Bb]in/\n!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in\n```\n\n## Contributing workflow\n\nHere\u2019s how we suggest you go about proposing a change to this project:\n\n1. [Fork this project][fork] to your account.\n2. [Create a branch][branch] for the change you intend to make.\n3. Make your changes to your fork.\n4. [Send a pull request][pr] from your fork\u2019s branch to our `master` branch.\n\nUsing the web-based interface to make changes is fine too, and will help you\nby automatically forking the project and prompting to send a pull request too.\n\n[fork]: https://help.github.com/articles/fork-a-repo/\n[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository\n[pr]: https://help.github.com/articles/using-pull-requests/\n\n## License\n\n[CC0-1.0](./LICENSE).\n"
 },
 {
  "repo": "rdpeng/ExData_Plotting1",
  "language": null,
  "readme_contents": "## Introduction\n\nThis assignment uses data from\nthe <a href=\"http://archive.ics.uci.edu/ml/\">UC Irvine Machine\nLearning Repository</a>, a popular repository for machine learning\ndatasets. In particular, we will be using the \"Individual household\nelectric power consumption Data Set\" which I have made available on\nthe course web site:\n\n\n* <b>Dataset</b>: <a href=\"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip\">Electric power consumption</a> [20Mb]\n\n* <b>Description</b>: Measurements of electric power consumption in\none household with a one-minute sampling rate over a period of almost\n4 years. Different electrical quantities and some sub-metering values\nare available.\n\n\nThe following descriptions of the 9 variables in the dataset are taken\nfrom\nthe <a href=\"https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption\">UCI\nweb site</a>:\n\n<ol>\n<li><b>Date</b>: Date in format dd/mm/yyyy </li>\n<li><b>Time</b>: time in format hh:mm:ss </li>\n<li><b>Global_active_power</b>: household global minute-averaged active power (in kilowatt) </li>\n<li><b>Global_reactive_power</b>: household global minute-averaged reactive power (in kilowatt) </li>\n<li><b>Voltage</b>: minute-averaged voltage (in volt) </li>\n<li><b>Global_intensity</b>: household global minute-averaged current intensity (in ampere) </li>\n<li><b>Sub_metering_1</b>: energy sub-metering No. 1 (in watt-hour of active energy). It corresponds to the kitchen, containing mainly a dishwasher, an oven and a microwave (hot plates are not electric but gas powered). </li>\n<li><b>Sub_metering_2</b>: energy sub-metering No. 2 (in watt-hour of active energy). It corresponds to the laundry room, containing a washing-machine, a tumble-drier, a refrigerator and a light. </li>\n<li><b>Sub_metering_3</b>: energy sub-metering No. 3 (in watt-hour of active energy). It corresponds to an electric water-heater and an air-conditioner.</li>\n</ol>\n\n## Loading the data\n\n\n\n\n\nWhen loading the dataset into R, please consider the following:\n\n* The dataset has 2,075,259 rows and 9 columns. First\ncalculate a rough estimate of how much memory the dataset will require\nin memory before reading into R. Make sure your computer has enough\nmemory (most modern computers should be fine).\n\n* We will only be using data from the dates 2007-02-01 and\n2007-02-02. One alternative is to read the data from just those dates\nrather than reading in the entire dataset and subsetting to those\ndates.\n\n* You may find it useful to convert the Date and Time variables to\nDate/Time classes in R using the `strptime()` and `as.Date()`\nfunctions.\n\n* Note that in this dataset missing values are coded as `?`.\n\n\n## Making Plots\n\nOur overall goal here is simply to examine how household energy usage\nvaries over a 2-day period in February, 2007. Your task is to\nreconstruct the following plots below, all of which were constructed\nusing the base plotting system.\n\nFirst you will need to fork and clone the following GitHub repository:\n[https://github.com/rdpeng/ExData_Plotting1](https://github.com/rdpeng/ExData_Plotting1)\n\n\nFor each plot you should\n\n* Construct the plot and save it to a PNG file with a width of 480\npixels and a height of 480 pixels.\n\n* Name each of the plot files as `plot1.png`, `plot2.png`, etc.\n\n* Create a separate R code file (`plot1.R`, `plot2.R`, etc.) that\nconstructs the corresponding plot, i.e. code in `plot1.R` constructs\nthe `plot1.png` plot. Your code file **should include code for reading\nthe data** so that the plot can be fully reproduced. You should also\ninclude the code that creates the PNG file.\n\n* Add the PNG file and R code file to your git repository\n\nWhen you are finished with the assignment, push your git repository to\nGitHub so that the GitHub version of your repository is up to\ndate. There should be four PNG files and four R code files.\n\n\nThe four plots that you will need to construct are shown below. \n\n\n### Plot 1\n\n\n![plot of chunk unnamed-chunk-2](figure/unnamed-chunk-2.png) \n\n\n### Plot 2\n\n![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-3.png) \n\n\n### Plot 3\n\n![plot of chunk unnamed-chunk-4](figure/unnamed-chunk-4.png) \n\n\n### Plot 4\n\n![plot of chunk unnamed-chunk-5](figure/unnamed-chunk-5.png) \n\n"
 },
 {
  "repo": "tensorflow/models",
  "language": "Python",
  "readme_contents": "![Logo](https://storage.googleapis.com/model_garden_artifacts/TF_Model_Garden.png)\n\n# Welcome to the Model Garden for TensorFlow\n\nThe TensorFlow Model Garden is a repository with a number of different implementations of state-of-the-art (SOTA) models and modeling solutions for TensorFlow users. We aim to demonstrate the best practices for modeling so that TensorFlow users can take full advantage of TensorFlow for their research and product development.\n\n| Directory | Description |\n|-----------|-------------|\n| [official](official) | \u2022 A collection of example implementations for SOTA models using the latest TensorFlow 2's high-level APIs<br />\u2022 Officially maintained, supported, and kept up to date with the latest TensorFlow 2 APIs by TensorFlow<br />\u2022 Reasonably optimized for fast performance while still being easy to read |\n| [research](research) | \u2022 A collection of research model implementations in TensorFlow 1 or 2 by researchers<br />\u2022 Maintained and supported by researchers |\n| [community](community) | \u2022 A curated list of the GitHub repositories with machine learning models and implementations powered by TensorFlow 2 |\n\n## [Announcements](../../wiki/Announcements)\n\n| Date | News |\n|------|------|\n| May 21, 2020 | [Unifying Deep Local and Global Features for Image Search (DELG)](https://github.com/tensorflow/models/tree/master/research/delf#delg) code released\n| May 7, 2020 | [MnasFPN with MobileNet-V2 backbone](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md#mobile-models) released for object detection\n| May 1, 2020 | [DELF: DEep Local Features](https://github.com/tensorflow/models/tree/master/research/delf) updated to support TensorFlow 2.1\n| March 31, 2020 | [Introducing the Model Garden for TensorFlow 2](https://blog.tensorflow.org/2020/03/introducing-model-garden-for-tensorflow-2.html) ([Tweet](https://twitter.com/TensorFlow/status/1245029834633297921)) |\n\n## Contributions\n\n[![help wanted:paper implementation](https://img.shields.io/github/issues/tensorflow/models/help%20wanted%3Apaper%20implementation)](https://github.com/tensorflow/models/labels/help%20wanted%3Apaper%20implementation)\n\nIf you want to contribute, please review the [contribution guidelines](../../wiki/How-to-contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
 },
 {
  "repo": "nightscout/cgm-remote-monitor",
  "language": "JavaScript",
  "readme_contents": "Nightscout Web Monitor (a.k.a. cgm-remote-monitor)\n======================================\n\n![nightscout horizontal](https://cloud.githubusercontent.com/assets/751143/8425633/93c94dc0-1ebc-11e5-99e7-71a8f464caac.png)\n\n[![Build Status][build-img]][build-url]\n[![Dependency Status][dependency-img]][dependency-url]\n[![Coverage Status][coverage-img]][coverage-url]\n[![Codacy Badge][codacy-img]][codacy-url]\n[![Discord chat][discord-img]][discord-url]\n\n[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://azuredeploy.net/) [![Deploy to Heroku][heroku-img]][heroku-url] [![Update your site][update-img]][update-fork]\n\nThis acts as a web-based CGM (Continuous Glucose Monitor) to allow\nmultiple caregivers to remotely view a patient's glucose data in\nreal time.  The server reads a MongoDB which is intended to be data\nfrom a physical CGM, where it sends new SGV (sensor glucose values) as\nthe data becomes available.  The data is then displayed graphically\nand blood glucose values are predicted 0.5 hours ahead using an\nautoregressive second order model.  Alarms are generated for high and\nlow values, which can be cleared by any watcher of the data.\n\n# [#WeAreNotWaiting](https://twitter.com/hashtag/wearenotwaiting?src=hash&vertical=default&f=images) and [this](https://vimeo.com/109767890) is why.\n\nCommunity maintained fork of the\n[original cgm-remote-monitor][original].\n\n[![Coverage Status](https://coveralls.io/repos/github/nightscout/cgm-remote-monitor/badge.svg?branch=master)](https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master)\n\n[build-img]: https://img.shields.io/travis/nightscout/cgm-remote-monitor.svg\n[build-url]: https://travis-ci.org/nightscout/cgm-remote-monitor\n[dependency-img]: https://img.shields.io/david/nightscout/cgm-remote-monitor.svg\n[dependency-url]: https://david-dm.org/nightscout/cgm-remote-monitor\n[coverage-img]: https://img.shields.io/coveralls/nightscout/cgm-remote-monitor/dev.svg\n[coverage-url]: https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master\n[codacy-img]: https://www.codacy.com/project/badge/f79327216860472dad9afda07de39d3b\n[codacy-url]: https://www.codacy.com/app/Nightscout/cgm-remote-monitor\n[discord-img]: https://img.shields.io/discord/629952586895851530?label=discord%20chat\n[discord-url]: https://discord.gg/rTKhrqz\n[heroku-img]: https://www.herokucdn.com/deploy/button.png\n[heroku-url]: https://heroku.com/deploy\n[update-img]: update.png\n[update-fork]: http://nightscout.github.io/pages/update-fork/\n[original]: https://github.com/rnpenguin/cgm-remote-monitor\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**\n\n- [Install](#install)\n  - [Supported configurations:](#supported-configurations)\n  - [Minimum browser requirements for viewing the site:](#minimum-browser-requirements-for-viewing-the-site)\n  - [Windows installation software requirements:](#windows-installation-software-requirements)\n  - [Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:](#installation-notes-for-users-with-nginx-or-apache-reverse-proxy-for-ssltls-offloading)\n  - [Installation notes for Microsoft Azure, Windows:](#installation-notes-for-microsoft-azure-windows)\n- [Usage](#usage)\n  - [Updating my version?](#updating-my-version)\n  - [What is my mongo string?](#what-is-my-mongo-string)\n  - [Configure my uploader to match](#configure-my-uploader-to-match)\n  - [Nightscout API](#nightscout-api)\n      - [Example Queries](#example-queries)\n  - [Environment](#environment)\n    - [Required](#required)\n    - [Features/Labs](#featureslabs)\n    - [Alarms](#alarms)\n    - [Core](#core)\n    - [Predefined values for your browser settings (optional)](#predefined-values-for-your-browser-settings-optional)\n    - [Predefined values for your server settings (optional)](#predefined-values-for-your-server-settings-optional)\n    - [Plugins](#plugins)\n      - [Default Plugins](#default-plugins)\n        - [`delta` (BG Delta)](#delta-bg-delta)\n        - [`direction` (BG Direction)](#direction-bg-direction)\n        - [`upbat` (Uploader Battery)](#upbat-uploader-battery)\n        - [`timeago` (Time Ago)](#timeago-time-ago)\n        - [`devicestatus` (Device Status)](#devicestatus-device-status)\n        - [`errorcodes` (CGM Error Codes)](#errorcodes-cgm-error-codes)\n        - [`ar2` (AR2 Forecasting)](#ar2-ar2-forecasting)\n        - [`simplealarms` (Simple BG Alarms)](#simplealarms-simple-bg-alarms)\n        - [`profile` (Treatment Profile)](#profile-treatment-profile)\n      - [Advanced Plugins:](#advanced-plugins)\n        - [`careportal` (Careportal)](#careportal-careportal)\n        - [`boluscalc` (Bolus Wizard)](#boluscalc-bolus-wizard)\n        - [`food` (Custom Foods)](#food-custom-foods)\n        - [`rawbg` (Raw BG)](#rawbg-raw-bg)\n        - [`iob` (Insulin-on-Board)](#iob-insulin-on-board)\n        - [`cob` (Carbs-on-Board)](#cob-carbs-on-board)\n        - [`bwp` (Bolus Wizard Preview)](#bwp-bolus-wizard-preview)\n        - [`cage` (Cannula Age)](#cage-cannula-age)\n        - [`sage` (Sensor Age)](#sage-sensor-age)\n        - [`iage` (Insulin Age)](#iage-insulin-age)\n        - [`bage` (Battery Age)](#bage-battery-age)\n        - [`treatmentnotify` (Treatment Notifications)](#treatmentnotify-treatment-notifications)\n        - [`basal` (Basal Profile)](#basal-basal-profile)\n        - [`bridge` (Share2Nightscout bridge)](#bridge-share2nightscout-bridge)\n        - [`mmconnect` (MiniMed Connect bridge)](#mmconnect-minimed-connect-bridge)\n        - [`pump` (Pump Monitoring)](#pump-pump-monitoring)\n        - [`openaps` (OpenAPS)](#openaps-openaps)\n        - [`loop` (Loop)](#loop-loop)\n        - [`override` (Override Mode)](#override-override-mode)\n        - [`xdripjs` (xDrip-js)](#xdripjs-xdripjs)\n        - [`alexa` (Amazon Alexa)](#alexa-amazon-alexa)\n        - [`googlehome` (Google Home/DialogFLow)](#googlehome-google-homedialogflow)\n        - [`speech` (Speech)](#speech-speech)\n        - [`cors` (CORS)](#cors-cors)\n      - [Extended Settings](#extended-settings)\n      - [Pushover](#pushover)\n      - [IFTTT Maker](#ifttt-maker)\n    - [Treatment Profile](#treatment-profile)\n  - [Setting environment variables](#setting-environment-variables)\n    - [Vagrant install](#vagrant-install)\n  - [More questions?](#more-questions)\n  - [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# Install\n\n## Supported configurations:\n\nIf you plan to use Nightscout, we recommend using [Heroku](http://www.nightscout.info/wiki/welcome/set-up-nightscout-using-heroku), as Nightscout can reach the usage limits of the free Azure plan and cause it to shut down for hours or days. If you end up needing a paid tier, the $7/mo Heroku plan is also much cheaper than the first paid tier of Azure. Currently, the only added benefit to choosing the $7/mo Heroku plan vs the free Heroku plan is a section showing site use metrics for performance (such as response time). This has limited benefit to the average Nightscout user. In short, Heroku is the free and best option for Nightscout hosting.\n\n- [Nightscout Setup with Heroku](http://www.nightscout.info/wiki/welcome/set-up-nightscout-using-heroku) (recommended)\n- [Nightscout Setup with Microsoft Azure](http://www.nightscout.info/wiki/faqs-2/azure-2) (not recommended, please\n[switch from Azure to Heroku](http://openaps.readthedocs.io/en/latest/docs/While%20You%20Wait%20For%20Gear/nightscout-setup.html#switching-from-azure-to-heroku) )\n- Linux based install (Debian, Ubuntu, Raspbian) install with own Node.JS and MongoDB install (see software requirements below)\n- Windows based install with own Node.JS and MongoDB install (see software requirements below)\n\n## Recommended minimum browser versions for using Nightscout:\n\nOlder versions of the browsers might work, but are untested.\n\n- Android 4\n- iOS 6\n- Chrome 35\n- Edge 17\n- Firefox 61\n- Opera 12.1\n- Safari 6 (macOS 10.7)\n- Internet Explorer: not supported\n\nSome features may not work with devices/browsers on the older end of these requirements.\n\n## Windows installation software requirements:\n\n- [Node.js](http://nodejs.org/) Latest Node 8 LTS (Node 8.15.1 or later) or Node 10 LTS (Node 10.16.0 or later; Node 10.15.2 works for Azure). Node versions that do not have the latest security patches will not work. Use [Install instructions for Node](https://nodejs.org/en/download/package-manager/) or use `setup.sh`)\n- [MongoDB](https://www.mongodb.com/download-center?jmp=nav#community) 3.x or later. MongoDB 2.4 is only supported for Raspberry Pi.\n\nAs a non-root user clone this repo then install dependencies into the root of the project:\n\n```bash\n$ npm install\n```\n\n## Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:\n\n- Your site redirects insecure connections to `https` by default. If you use a reverse proxy like nginx or Apache to handle the connection security for you, make sure it sets the `X-Forwarded-Proto` header. Otherwise nightscout will be unable to know if it was called through a secure connection and will try to redirect you to the https version. If you're unable to set this Header, you can change the `INSECURE_USE_HTTP` setting in nightscout to true in order to allow insecure connections without being redirected.\n- In case you use a proxy. Do not use an external network interfaces for hosting Nightscout. Make sure the unsecure port is not available from a remote network connection\n- HTTP Strict Transport Security (HSTS) headers are enabled by default, use settings `SECURE_HSTS_HEADER` and `SECURE_HSTS_HEADER_*`\n- See [Predefined values for your server settings](#predefined-values-for-your-server-settings-optional) for more details\n\n## Installation notes for Microsoft Azure, Windows:\n\n- If deploying the software to Microsoft Azure, you must set ** in the app settings for *WEBSITE_NODE_DEFAULT_VERSION* and *SCM_COMMAND_IDLE_TIMEOUT* **before** you deploy the latest Nightscout or the site deployment will likely fail. Other hosting environments do not require this setting. Additionally, if using the Azure free hosting tier, the installation might fail due to resource constraints imposed by Azure on the free hosting. Please set the following settings to the environment in Azure:\n```\nWEBSITE_NODE_DEFAULT_VERSION=10.15.2\nSCM_COMMAND_IDLE_TIMEOUT=300\n```\n- See [install MongoDB, Node.js, and Nightscouton a single Windows system](https://github.com/jaylagorio/Nightscout-on-Windows-Server). if you want to host your Nightscout outside of the cloud. Although the instructions are intended for Windows Server the procedure is compatible with client versions of Windows such as Windows 7 and Windows 10.\n- If you deploy to Windows and want to develop or test you need to install [Cygwin](https://www.cygwin.com/) (use [setup-x86_64.exe](https://www.cygwin.com/setup-x86_64.exe) and make sure to install `build-essential` package. Test your configuration by executing `make` and check if all tests are ok.\n\n# Development\n\nWant to help with development, or just see how Nightscout works? Great! See [CONTRIBUTING.md](CONTRIBUTING.md) for development-related documentation.\n\n# Usage\n\nThe data being uploaded from the server to the client is from a\nMongoDB server such as [mLab][mLab].\n\n[mLab]: https://mlab.com/\n[autoconfigure]: https://nightscout.github.io/pages/configure/\n[mongostring]: https://nightscout.github.io/pages/mongostring/\n\n## Updating my version?\n\nThe easiest way to update your version of cgm-remote-monitor to the latest version is to use the [update tool][update-fork]. A step-by-step guide is available [here][http://www.nightscout.info/wiki/welcome/how-to-update-to-latest-cgm-remote-monitor-aka-cookie].\nTo downgrade to an older version, follow [this guide][http://www.nightscout.info/wiki/welcome/how-to-deploy-an-older-version-of-nightscout].\n\n## Configure my uploader to match\n\nUse the [autoconfigure tool][autoconfigure] to sync an uploader to your config.\n\n## Nightscout API\n\nThe Nightscout API enables direct access to your data without the need for Mongo access.\nYou can find CGM data in `/api/v1/entries`, Care Portal Treatments in `/api/v1/treatments`, and Treatment Profiles in `/api/v1/profile`.\nThe server status and settings are available from `/api/v1/status.json`.\n\nBy default the `/entries` and `/treatments` APIs limit results to the the most recent 10 values from the last 2 days.\nYou can get many more results, by using the `count`, `date`, `dateString`, and `created_at` parameters, depending on the type of data you're looking for.\n\nOnce you've installed Nightscout, you can access API documentation by loading `/api-docs/` URL in your instance.\n\n#### Example Queries\n\n(replace `http://localhost:1337` with your own URL)\n\n  * 100's: `http://localhost:1337/api/v1/entries.json?find[sgv]=100`\n  * Count of 100's in a month: `http://localhost:1337/api/v1/count/entries/where?find[dateString][$gte]=2016-09&find[dateString][$lte]=2016-10&find[sgv]=100`\n  * BGs between 2 days: `http://localhost:1337/api/v1/entries/sgv.json?find[dateString][$gte]=2015-08-28&find[dateString][$lte]=2015-08-30`\n  * Juice Box corrections in a year: `http://localhost:1337/api/v1/treatments.json?count=1000&find[carbs]=15&find[eventType]=Carb+Correction&find[created_at][$gte]=2015`\n  * Boluses over 2U: `http://localhost:1337/api/v1/treatments.json?find[insulin][$gte]=2`\n\nThe API is Swagger enabled, so you can generate client code to make working with the API easy.\nTo learn more about the Nightscout API, visit https://YOUR-SITE.com/api-docs/ or review [swagger.yaml](swagger.yaml).\n\n## Environment\n\n`VARIABLE` (default) - description\n\n### Required\n\n  * `MONGODB_URI` - The connection string for your Mongo database. Something like `mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout`.\n  * `API_SECRET` - A secret passphrase that must be at least 12 characters long.\n  * `MONGODB_COLLECTION` (`entries`) - The Mongo collection where CGM entries are stored.\n  * `DISPLAY_UNITS` (`mg/dl`) - Options are `mg/dl` or `mmol/L` (or just `mmol`).  Setting to `mmol/L` puts the entire server into `mmol/L` mode by default, no further settings needed.\n\n### Features\n\n  * `ENABLE` - Used to enable optional features, expects a space delimited list, such as: `careportal rawbg iob`, see [plugins](#plugins) below\n  * `DISABLE` - Used to disable default features, expects a space delimited list, such as: `direction upbat`, see [plugins](#plugins) below\n  * `BASE_URL` - Used for building links to your site's API, i.e. Pushover callbacks, usually the URL of your Nightscout site.\n  * `AUTH_DEFAULT_ROLES` (`readable`) - possible values `readable`, `denied`, or any valid role\n    name.  When `readable`, anyone can view Nightscout without a token.\n    Setting it to `denied` will require a token from every visit, using `status-only` will enable api-secret based login.\n  * `IMPORT_CONFIG` - Used to import settings and extended settings from a url such as a gist.  Structure of file should be something like: `{\"settings\": {\"theme\": \"colors\"}, \"extendedSettings\": {\"upbat\": {\"enableAlerts\": true}}}`\n  * `TREATMENTS_AUTH` (`on`) - possible values `on` or `off`. Deprecated, if set to `off` the `careportal` role will be added to `AUTH_DEFAULT_ROLES`\n\n### Alarms\n\n  These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.\n\n  * `ALARM_TYPES` (`simple` if any `BG_`* ENV's are set, otherwise `predict`) - currently 2 alarm types are supported, and can be used independently or combined.  The `simple` alarm type only compares the current BG to `BG_` thresholds above, the `predict` alarm type uses highly tuned formula that forecasts where the BG is going based on it's trend.  `predict` **DOES NOT** currently use any of the `BG_`* ENV's\n  * `BG_HIGH` (`260`) - the high BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)\n  * `BG_TARGET_TOP` (`180`) - the top of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)\n  * `BG_TARGET_BOTTOM` (`80`) - the bottom of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)\n  * `BG_LOW` (`55`) - the low BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)\n  * `ALARM_URGENT_HIGH` (`on`) - possible values `on` or `off`\n  * `ALARM_URGENT_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent high alarms, space separated for options in browser, first used for pushover\n  * `ALARM_HIGH` (`on`) - possible values `on` or `off`\n  * `ALARM_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze high alarms, space separated for options in browser, first used for pushover\n  * `ALARM_LOW` (`on`) - possible values `on` or `off`\n  * `ALARM_LOW_MINS` (`15 30 45 60`) - Number of minutes to snooze low alarms, space separated for options in browser, first used for pushover\n  * `ALARM_URGENT_LOW` (`on`) - possible values `on` or `off`\n  * `ALARM_URGENT_LOW_MINS` (`15 30 45`) - Number of minutes to snooze urgent low alarms, space separated for options in browser, first used for pushover\n  * `ALARM_URGENT_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover\n  * `ALARM_WARN_MINS` (`30 60 90 120`) - Number of minutes to snooze warning alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover\n\n### Core\n\n  * `MONGO_TREATMENTS_COLLECTION` (`treatments`) -The collection used to store treatments entered in the Care Portal, see the `ENABLE` env var above\n  * `MONGO_DEVICESTATUS_COLLECTION`(`devicestatus`) - The collection used to store device status information such as uploader battery\n  * `MONGO_PROFILE_COLLECTION`(`profile`) - The collection used to store your profiles\n  * `MONGO_FOOD_COLLECTION`(`food`) - The collection used to store your food database\n  * `MONGO_ACTIVITY_COLLECTION`(`activity`) - The collection used to store activity data\n  * `PORT` (`1337`) - The port that the node.js application will listen on.\n  * `HOSTNAME` - The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use `::`.\n  * `SSL_KEY` - Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to your privkey.pem file (private key).\n  * `SSL_CERT` - Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to fullchain.pem file (cert + ca).\n  * `SSL_CA` - Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to chain.pem file (chain).\n  * `HEARTBEAT` (`60`)  - Number of seconds to wait in between database checks\n  * `DEBUG_MINIFY` (`true`)  - Debug option, setting to `false` will disable bundle minification to help tracking down error and speed up development\n  * `DE_NORMALIZE_DATES`(`true`) - The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to `true` causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST.\n\n### Predefined values for your browser settings (optional)\n\n  * `TIME_FORMAT` (`12`)- possible values `12` or `24`\n  * `NIGHT_MODE` (`off`) - possible values `on` or `off`\n  * `SHOW_RAWBG` (`never`) - possible values `always`, `never` or `noise`\n  * `CUSTOM_TITLE` (`Nightscout`) - Title for the main view\n  * `THEME` (`colors`) - possible values `default`, `colors`, or `colorblindfriendly`\n  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning\n  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm\n  * `SHOW_PLUGINS` - enabled plugins that should have their visualizations shown, defaults to all enabled\n  * `SHOW_FORECAST` (`ar2`) - plugin forecasts that should be shown by default, supports space delimited values such as `\"ar2 openaps\"`\n  * `LANGUAGE` (`en`) - language of Nightscout. If not available english is used\n    * Currently supported language codes are: bg (\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438), cs (\u010ce\u0161tina), de (Deutsch), dk (Dansk), el (\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac), en (English), es (Espa\u00f1ol), fi (Suomi), fr (Fran\u00e7ais), he (\u05e2\u05d1\u05e8\u05d9\u05ea), hr (Hrvatski), it (Italiano), ko (\ud55c\uad6d\uc5b4), nb (Norsk (Bokm\u00e5l)), nl (Nederlands), pl (Polski), pt (Portugu\u00eas (Brasil)), ro (Rom\u00e2n\u0103), ru (\u0420\u0443\u0441\u0441\u043a\u0438\u0439), sk (Sloven\u010dina), sv (Svenska), tr (Turkish), zh_cn (\u4e2d\u6587\uff08\u7b80\u4f53)), zh_tw (\u4e2d\u6587\uff08\u7e41\u9ad4))\n  * `SCALE_Y` (`log`) - The type of scaling used for the Y axis of the charts system wide.\n    * The default `log` (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range.\n    * The `linear` option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn't wasted.\n    * The `log-dynamic` is similar to the default `log` options, but uses the same dynamic range and the `linear` scale.\n  * `EDIT_MODE` (`on`) - possible values `on` or `off`. Enables the icon allowing for editing of treatments in the main view.\n\n### Predefined values for your server settings (optional)\n  * `INSECURE_USE_HTTP` (`false`) - Redirect unsafe http traffic to https. Possible values `false`, or `true`. Your site redirects to `https` by default. If you don't want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set `INSECURE_USE_HTTP` to `true`. Note: This will allow (unsafe) http traffic to your Nightscout instance and is not recommended.\n  * `SECURE_HSTS_HEADER` (`true`) - Add HTTP Strict Transport Security (HSTS) header. Possible values `false`, or `true`.\n  * `SECURE_HSTS_HEADER_INCLUDESUBDOMAINS` (`false`) - includeSubdomains options for HSTS. Possible values `false`, or `true`.\n  * `SECURE_HSTS_HEADER_PRELOAD` (`false`) - ask for preload in browsers for HSTS. Possible values `false`, or `true`.\n  * `SECURE_CSP` (`false`) - Add Content Security Policy headers. Possible values `false`, or `true`.\n  * `SECURE_CSP_REPORT_ONLY` (`false`) - If set to `true` allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values `false`, or `true`.\n\n### Views\n\n  There are a few alternate web views available from the main menu that display a simplified BG stream. (If you launch one of these in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view.)\n  * `Clock` - Shows current BG, trend arrow, and time of day. Grey text on a black background.\n  * `Color` - Shows current BG and trend arrow. White text on a background that changes color to indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above). Set `SHOW_CLOCK_DELTA` to `true` to show BG change in the last 5 minutes, set `SHOW_CLOCK_LAST_TIME` to `true` to always show BG age.\n  * `Simple` - Shows current BG. Grey text on a black background.\n\n### Plugins\n\n  Plugins are used extend the way information is displayed, how notifications are sent, alarms are triggered, and more.\n\n  The built-in/example plugins that are available by default are listed below.  The plugins may still need to be enabled by adding to the `ENABLE` environment variable.\n\n#### Default Plugins\n\n  These can be disabled by adding them to the `DISABLE` variable, for example `DISABLE=\"direction upbat\"`\n\n##### `delta` (BG Delta)\n  Calculates and displays the change between the last 2 BG values.\n\n##### `direction` (BG Direction)\n  Displays the trend direction.\n\n##### `upbat` (Uploader Battery)\n  Displays the most recent battery status from the uploader phone. . Use these [extended setting](#extended-settings) to adjust behavior:\n  * `UPBAT_ENABLE_ALERTS` (`false`) - Set to `true` to enable uploader battery alarms via Pushover and IFTTT.\n  * `UPBAT_WARN` (`30`) - Minimum battery percent to trigger warning.\n  * `UPBAT_URGENT` (`20`) - Minimum battery percent to trigger urgent alarm.\n\n##### `timeago` (Time Ago)\n  Displays the time since last CGM entry. Use these [extended setting](#extended-settings) to adjust behavior:\n  * `TIMEAGO_ENABLE_ALERTS` (`false`) - Set to `true` to enable stale data alarms via Pushover and IFTTT.\n  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning\n  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`\n  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm\n\n##### `devicestatus` (Device Status)\n  Used by `upbat` and other plugins to display device status info.  Supports the `DEVICESTATUS_ADVANCED=\"true\"` [extended setting](#extended-settings) to send all device statuses to the client for retrospective use and to support other plugins.\n\n##### `errorcodes` (CGM Error Codes)\n  Generates alarms for CGM codes `9` (hourglass) and `10` (???).\n  * Use [extended settings](#extended-settings) to adjust what errorcodes trigger notifications and alarms:\n    * `ERRORCODES_INFO` (`1 2 3 4 5 6 7 8`) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or `off` to disable\n    * `ERRORCODES_WARN` (`off`) - By default there are no warning configured, set to a space separate list of numbers or `off` to disable\n    * `ERRORCODES_URGENT` (`9 10`) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or `off` to disable\n\n##### `ar2` (AR2 Forecasting)\n  Generates alarms based on forecasted values. See [Forecasting using AR2 algorithm](https://github.com/nightscout/nightscout.github.io/wiki/Forecasting)\n  * Enabled by default if no thresholds are set **OR** `ALARM_TYPES` includes `predict`.\n  * Use [extended settings](#extended-settings) to adjust AR2 behavior:\n    * `AR2_CONE_FACTOR` (`2`) - to adjust size of cone, use `0` for a single line.\n\n##### `simplealarms` (Simple BG Alarms)\n  Uses `BG_HIGH`, `BG_TARGET_TOP`, `BG_TARGET_BOTTOM`, `BG_LOW` thresholds to generate alarms.\n  * Enabled by default if 1 of these thresholds is set **OR** `ALARM_TYPES` includes `simple`.\n\n##### `profile` (Treatment Profile)\n  Add link to Profile Editor and allow to enter treatment profile settings. Also uses the extended setting:\n  * `PROFILE_HISTORY` (`off`) - possible values `on` or `off`. Enable/disable NS ability to keep history of your profiles (still experimental)\n  * `PROFILE_MULTIPLE` (`off`) - possible values `on` or `off`. Enable/disable NS ability to handle and switch between multiple treatment profiles\n\n#### Advanced Plugins:\n\n##### `careportal` (Careportal)\n  An optional form to enter treatments.\n\n##### `boluscalc` (Bolus Wizard)\n\n##### `food` (Custom Foods)\n  An option plugin to enable adding foods from database in Bolus Wizard and enable .\n\n##### `rawbg` (Raw BG)\n  Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with [extended setting](#extended-settings)\n  * `DISPLAY` (`unsmoothed`) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record.\n    * `unfiltered` - Raw BG is calculated by applying the calibration to the glucose record's unfiltered value.\n    * `filtered` - Raw BG is calculated by applying the calibration to the glucose record's filtered value. The glucose record's filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high.\n    * `unsmoothed` - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the `filtered` setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the `unfiltered` setting) by the ratio.  The effect is to exagerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm.\n\n##### `iob` (Insulin-on-Board)\n  Adds the IOB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with insulin doses and the `dia` and `sens` fields from the [treatment profile](#treatment-profile).\n\n##### `cob` (Carbs-on-Board)\n  Adds the COB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with carb doses and the `carbs_hr`, `carbratio`, and `sens` fields from the [treatment profile](#treatment-profile).\n\n##### `bwp` (Bolus Wizard Preview)\n  This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. ***The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation.*** The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the `iob` plugin and `sens`, `target_high`, and `target_low` fields from the [treatment profile](#treatment-profile). Defaults that can be adjusted with [extended setting](#extended-settings)\n  * `BWP_WARN` (`0.50`) - If `BWP` is > `BWP_WARN` a warning alarm will be triggered.\n  * `BWP_URGENT` (`1.00`) - If `BWP` is > `BWP_URGENT` an urgent alarm will be triggered.\n  * `BWP_SNOOZE_MINS` (`10`) - minutes to snooze when there is enough IOB to cover a high BG.\n  * `BWP_SNOOZE` - (`0.10`) If BG is higher then the `target_high` and `BWP` < `BWP_SNOOZE` alarms will be snoozed for `BWP_SNOOZE_MINS`.\n\n##### `cage` (Cannula Age)\n  Calculates the number of hours since the last `Site Change` treatment that was recorded.\n  * `CAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming cannula change.\n  * `CAGE_INFO` (`44`) - If time since last `Site Change` matches `CAGE_INFO`, user will be warned of upcoming cannula change\n  * `CAGE_WARN` (`48`) - If time since last `Site Change` matches `CAGE_WARN`, user will be alarmed to to change the cannula\n  * `CAGE_URGENT` (`72`) - If time since last `Site Change` matches `CAGE_URGENT`, user will be issued a persistent warning of overdue change.\n  * `CAGE_DISPLAY` (`hours`) - Possible values are 'hours' or 'days'. If 'days' is selected and age of canula is greater than 24h number is displayed in days and hours\n\n#####  `sage` (Sensor Age)\n  Calculates the number of days and hours since the last `Sensor Start` and `Sensor Change` treatment that was recorded.\n  * `SAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming sensor change.\n  * `SAGE_INFO` (`144`) - If time since last sensor event matches `SAGE_INFO`, user will be warned of upcoming sensor change\n  * `SAGE_WARN` (`164`) - If time since last sensor event matches `SAGE_WARN`, user will be alarmed to to change/restart the sensor\n  * `SAGE_URGENT` (`166`) - If time since last sensor event matches `SAGE_URGENT`, user will be issued a persistent warning of overdue change.\n\n##### `iage` (Insulin Age)\n  Calculates the number of days and hours since the last `Insulin Change` treatment that was recorded.\n  * `IAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming insulin reservoir change.\n  * `IAGE_INFO` (`44`) - If time since last `Insulin Change` matches `IAGE_INFO`, user will be warned of upcoming insulin reservoir change\n  * `IAGE_WARN` (`48`) - If time since last `Insulin Change` matches `IAGE_WARN`, user will be alarmed to to change the insulin reservoir\n  * `IAGE_URGENT` (`72`) - If time since last `Insulin Change` matches `IAGE_URGENT`, user will be issued a persistent warning of overdue change.\n\n##### `bage` (Battery Age)\n  Calculates the number of days and hours since the last `Pump Battery Change` treatment that was recorded.\n  * `BAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming pump battery change.\n  * `BAGE_DISPLAY` (`days`) - Set to `hours` to display time since last `Pump Battery Change` in hours only.\n  * `BAGE_INFO` (`312`) - If time since last `Pump Battery Change` matches `BAGE_INFO` hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days).\n  * `BAGE_WARN` (`336`) - If time since last `Pump Battery Change` matches `BAGE_WARN` hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days).\n  * `BAGE_URGENT` (`360`) - If time since last `Pump Battery Change` matches `BAGE_URGENT` hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).\n\n##### `treatmentnotify` (Treatment Notifications)\n  Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment.  Default snooze is 10 minutes, and can be set using the `TREATMENTNOTIFY_SNOOZE_MINS` [extended setting](#extended-settings).\n\n##### `basal` (Basal Profile)\n  Adds the Basal pill visualization to display the basal rate for the current time.  Also enables the `bwp` plugin to calculate correction temp basal suggestions.  Uses the `basal` field from the [treatment profile](#treatment-profile). Also uses the extended setting:\n  * `BASAL_RENDER` (`none`) - Possible values are `none`, `default`, or `icicle` (inverted)\n\n##### `bridge` (Share2Nightscout bridge)\n  Glucose reading directly from the Share service, uses these extended settings:\n  * `BRIDGE_USER_NAME` - Your user name for the Share service.\n  * `BRIDGE_PASSWORD` - Your password for the Share service.\n  * `BRIDGE_INTERVAL` (`150000` *2.5 minutes*) - The time to wait between each update.\n  * `BRIDGE_MAX_COUNT` (`1`) - The number of records to attempt to fetch per update.\n  * `BRIDGE_FIRST_FETCH_COUNT` (`3`) - Changes max count during the very first update only.\n  * `BRIDGE_MAX_FAILURES` (`3`) - How many failures before giving up.\n  * `BRIDGE_MINUTES` (`1400`) - The time window to search for new data per update (default is one day in minutes).\n\n##### `mmconnect` (MiniMed Connect bridge)\n  Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout ([read more](https://github.com/mddub/minimed-connect-to-nightscout))\n  * `MMCONNECT_USER_NAME` - Your user name for CareLink Connect.\n  * `MMCONNECT_PASSWORD` - Your password for CareLink Connect.\n  * `MMCONNECT_INTERVAL` (`60000` *1 minute*) - Number of milliseconds to wait between requests to the CareLink server.\n  * `MMCONNECT_MAX_RETRY_DURATION` (`32`) - Maximum number of total seconds to spend retrying failed requests before giving up.\n  * `MMCONNECT_SGV_LIMIT` (`24`) - Maximum number of recent sensor glucose values to send to Nightscout on each request.\n  * `MMCONNECT_VERBOSE` - Set this to \"true\" to log CareLink request information to the console.\n  * `MMCONNECT_STORE_RAW_DATA` - Set this to \"true\" to store raw data returned from CareLink as `type: \"carelink_raw\"` database entries (useful for development).\n  * `MMCONNECT_SERVER` - Set this to `EU` if you're using the European Medtronic services\n\n##### `pump` (Pump Monitoring)\n  Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, with more on the way\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `PUMP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications for Pump battery and reservoir.\n  * `PUMP_WARN_ON_SUSPEND` (`false`) - Set to `true` to get an alarm when the pump is suspended.\n  * `PUMP_FIELDS` (`reservoir battery`) - The fields to display by default.  Any of the following fields: `reservoir`, `battery`, `clock`, `status`, and `device`\n  * `PUMP_RETRO_FIELDS` (`reservoir battery clock`) - The fields to display in retro mode. Any of the above fields.\n  * `PUMP_WARN_CLOCK` (`30`) - The number of minutes ago that needs to be exceed before an alert is triggered.\n  * `PUMP_URGENT_CLOCK` (`60`) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered.\n  * `PUMP_WARN_RES` (`10`) - The number of units remaining, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_RES` (`5`) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold.\n  * `PUMP_WARN_BATT_P` (`30`) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_BATT_P` (`20`) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold.\n  * `PUMP_WARN_BATT_V` (`1.35`) - The voltage (if percent isn't available) of the pump battery, a warning will be triggered when dropping below this threshold.\n  * `PUMP_URGENT_BATT_V` (`1.30`) - The  voltage (if percent isn't available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold.\n\n##### `openaps` (OpenAPS)\n  Integrated OpenAPS loop monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `OPENAPS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when OpenAPS isn't looping.  If OpenAPS is going to offline for a period of time, you can add an `OpenAPS Offline` event for the expected duration from Careportal to avoid getting alerts.\n  * `OPENAPS_WARN` (`30`) - The number of minutes since the last loop that needs to be exceed before an alert is triggered\n  * `OPENAPS_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggered\n  * `OPENAPS_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display by default.  Any of the following fields: `status-symbol`, `status-label`, `iob`, `meal-assist`, `freq`, and `rssi`\n  * `OPENAPS_RETRO_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display in retro mode. Any of the above fields.\n  * `OPENAPS_PRED_IOB_COLOR` (`#1e88e5`) - The color to use for IOB prediction lines. Colors can be in `#RRGGBB` format, but [other CSS color units](https://www.w3.org/TR/css-color-3/#colorunits) may be used as well.\n  * `OPENAPS_PRED_COB_COLOR` (`#FB8C00`) - The color to use for COB prediction lines. Same format as above.\n  * `OPENAPS_PRED_ACOB_COLOR` (`#FB8C00`) - The color to use for ACOB prediction lines. Same format as above.\n  * `OPENAPS_PRED_ZT_COLOR` (`#00d2d2`) - The color to use for ZT prediction lines. Same format as above.\n  * `OPENAPS_PRED_UAM_COLOR` (`#c9bd60`) - The color to use for UAM prediction lines. Same format as above.\n  * `OPENAPS_COLOR_PREDICTION_LINES` (`true`) - Enables / disables the colored lines vs the classic purple color.\n\n Also see [Pushover](#pushover) and [IFTTT Maker](#ifttt-maker).\n\n##### `loop` (Loop)\n  iOS Loop app monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `LOOP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when Loop isn't looping.\n  * `LOOP_WARN` (`30`) - The number of minutes since the last loop that needs to be exceeded before an alert is triggered\n  * `LOOP_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggered\n  * Add `loop` to `SHOW_FORECAST` to show forecasted BG.\n\nFor remote overrides, the following extended settings must be configured:\n  * `LOOP_APNS_KEY` - Apple Push Notifications service (APNs) Key, created in the Apple Developer website.\n  * `LOOP_APNS_KEY_ID` - The Key ID for the above key.\n  * `LOOP_DEVELOPER_TEAM_ID` - Your Apple developer team ID.\n  * `LOOP_PUSH_SERVER_ENVIRONMENT` - (optional) Set this to `production` if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight.\n\n##### `override` (Override Mode)\n  Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n\n##### `xdripjs` (xDrip-js)\n  Integrated xDrip-js monitoring, uses these extended settings:\n  * Requires `DEVICESTATUS_ADVANCED=\"true\"` to be set\n  * `XDRIPJS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when CGM state is not OK or battery voltages fall below threshold.\n  * `XDRIPJS_STATE_NOTIFY_INTRVL` (`0.5`) - Set to number of hours between CGM state notifications\n  * `XDRIPJS_WARN_BAT_V` (`300`) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold.\n\n##### `alexa` (Amazon Alexa)\n  Integration with Amazon Alexa, [detailed setup instructions](docs/plugins/alexa-plugin.md)\n\n##### `googlehome` (Google Home/DialogFLow)\n  Integration with Google Home (via DialogFlow), [detailed setup instructions](docs/plugins/googlehome-plugin.md)\n\n##### `speech` (Speech)\n  Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms.\n\n##### `cors` (CORS)\n  Enabled [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) so other websites can make request to your Nightscout site, uses these extended settings:\n  * `CORS_ALLOW_ORIGIN` (`*`) - The list of sites that are allow to make requests\n\n#### Extended Settings\n  Some plugins support additional configuration using extra environment variables.  These are prefixed with the name of the plugin and a `_`.  For example setting `MYPLUGIN_EXAMPLE_VALUE=1234` would make `extendedSettings.exampleValue` available to the `MYPLUGIN` plugin.\n\n  Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser.\n\n  * `DEVICESTATUS_ADVANCED` (`true`) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site.\n\n#### Pushover\n  In addition to the normal web based alarms, there is also support for [Pushover](https://pushover.net/) based alarms and notifications.\n\n  To get started install the Pushover application on your iOS or Android device and create an account.\n\n  Using that account login to [Pushover](https://pushover.net/), in the top left you\u2019ll see your User Key, you\u2019ll need this plus an application API Token/Key to complete this setup.\n\n  You\u2019ll need to [Create a Pushover Application](https://pushover.net/apps/build).  You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch.  Maybe you'd like to use [this one](https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/static/images/large.png)?\n\n  Pushover is configured using the following Environment Variables:\n\n    * `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=\"pushover\"`.\n    * `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below.\n    * `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user.  This also supports a space delimited list of keys.  To disable `INFO` level pushes set this to `off`.\n    * `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level > `WARN`).  If not defined this will fallback to `PUSHOVER_USER_KEY`.  A possible use for this is sending important messages and alarms to a CWD that you don't want to send all notification too.  This also support a space delimited list of keys.  To disable Alarm pushes set this to `off`.\n    * `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements.  If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`.  This also support a space delimited list of keys. To disable Announcement pushes set this to `off`.\n    * `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible.\n    * `API_SECRET` - Used for signing the pushover callback request for acknowledgments.\n\n    If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=\"off\"`\n    If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=\"off\"`\n    If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=\"off\"`\n\n    If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcements\n\n    For testing/development try [localtunnel](http://localtunnel.me/).\n\n#### IFTTT Maker\n In addition to the normal web based alarms, and pushover, there is also integration for [IFTTT Webhooks](https://ifttt.com/maker_webhooks).\n\n With Maker you are able to integrate with all the other [IFTTT Services](https://ifttt.com/services).  For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more.\n\n 1. Setup IFTTT account: [login](https://ifttt.com/login) or [create an account](https://ifttt.com/join)\n 2. Follow the  [Detailed IFTTT setup Instructions](docs/plugins/maker-setup.md)\n 3. Configure Nightscout by setting these webpage environment variables:\n  * `ENABLE` - `maker` should be added to the list of plugins, for example: `ENABLE=\"maker\"`.\n  * `MAKER_KEY` - Set this to your secret key (see  [[Detailed Instructions](docs/plugins/maker-setup.md) ) `MAKER_KEY=\"abcMyExampleabc123defjt1DeNSiftttmak-XQb69p\"` This also supports a space delimited list of keys.\n  * `MAKER_ANNOUNCEMENT_KEY` - An optional Maker key, will be used for system wide user generated announcements.  If not defined this will fallback to `MAKER_KEY`.  A possible use for this is sending important messages and alarms to another device that you don't want to send all notification too.  This also support a space delimited list of keys.\n\n Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with `ns-`.  The core events are:\n  * `ns-event` - This event is sent to the maker service for all alarms and notifications.  This is good catch all event for general logging.\n  * `ns-allclear` - This event is sent to the maker service when an alarm has been ack'd or when the server starts up without triggering any alarms.  For example, you could use this event to turn a light to green.\n  * `ns-info` - Plugins that generate notifications at the info level will cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * `ns-warning` - Alarms at the warning level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * `ns-urgent` - Alarms at the urgent level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.\n  * see the [full list of events](lib/plugins/maker-setup.md#events)\n\n\n### Treatment Profile\n  Some of the [plugins](#plugins) make use of a treatment profile that can be edited using the Profile Editor, see the link in the Settings drawer on your site.\n\n  Treatment Profile Fields:\n\n  * `timezone` (Time Zone) - time zone local to the patient. *Should be set.*\n  * `units` (Profile Units) - blood glucose units used in the profile, either \"mgdl\" or \"mmol\"\n  * `dia` (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours.\n  * `carbs_hr` (Carbs per Hour) - The number of carbs that are processed per hour, for more information see [#DIYPS](http://diyps.org/2014/05/29/determining-your-carbohydrate-absorption-rate-diyps-lessons-learned/).\n  * `carbratio` (Carb Ratio) - grams per unit of insulin.\n  * `sens` (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose.\n  * `basal` The basal rate set on the pump.\n  * `target_high` - Upper target for correction boluses.\n  * `target_low` - Lower target for correction boluses.\n\n  Some example profiles are [here](example-profiles.md).\n\n## Setting environment variables\nEasy to emulate on the commandline:\n\n```bash\n    echo 'MONGO_CONNECTION=mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout' >> my.env\n    echo 'MONGO_COLLECTION=entries' >> my.env\n```\n\nFrom now on you can run using\n```bash\n    $ (eval $(cat my.env | sed 's/^/export /') && PORT=1337 node server.js)\n```\n\nYour hosting provider probably has a way to set these through their GUI.\n\n### Vagrant install\n\nOptionally, use [Vagrant](https://www.vagrantup.com/) with the\nincluded `Vagrantfile` and `setup.sh` to install OS and node packages to\na virtual machine.\n\n```bash\nhost$ vagrant up\nhost$ vagrant ssh\nvm$ setup.sh\n```\n\nThe setup script will install OS packages then run `npm install`.\n\nThe Vagrant VM serves to your host machine only on 192.168.33.10, you can access\nthe web interface on [http://192.168.33.10:1337](http://192.168.33.10:1337)\n\nMore questions?\n---------------\n\nFeel free to [post an issue][issues], but read the [wiki][wiki] first.\n\n[issues]: https://github.com/nightscout/cgm-remote-monitor/issues\n[wiki]: https://github.com/nightscout/cgm-remote-monitor/wiki\n\n### Browser testing suite provided by\n[![BrowserStack][browserstack-img]][browserstack-url]\n\n[browserstack-img]: /static/images/browserstack-logo.png\n[browserstack-url]: https://www.browserstack.com/\n\nLicense\n---------------\n\n[agpl-3]: http://www.gnu.org/licenses/agpl-3.0.txt\n\n    cgm-remote-monitor - web app to broadcast cgm readings\n    Copyright (C) 2017 Nightscout contributors.  See the COPYRIGHT file\n    at the root directory of this distribution and at\n    https://github.com/nightscout/cgm-remote-monitor/blob/master/COPYRIGHT\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
 },
 {
  "repo": "Pierian-Data/Complete-Python-3-Bootcamp",
  "language": "Jupyter Notebook",
  "readme_contents": "# Complete-Python-3-Bootcamp\nCourse Files for Complete Python 3 Bootcamp Course on Udemy\n\n\nGet it now for 95% off with the link:\nhttps://www.udemy.com/complete-python-bootcamp/?couponCode=COMPLETE_GITHUB\n\nThanks!\n"
 },
 {
  "repo": "opencv/opencv",
  "language": "C++",
  "readme_contents": "## OpenCV: Open Source Computer Vision Library\n\n### Resources\n\n* Homepage: <https://opencv.org>\n  * Courses: <https://opencv.org/courses>\n* Docs: <https://docs.opencv.org/master/>\n* Q&A forum: <http://answers.opencv.org>\n* Issue tracking: <https://github.com/opencv/opencv/issues>\n\n\n### Contributing\n\nPlease read the [contribution guidelines](https://github.com/opencv/opencv/wiki/How_to_contribute) before starting work on a pull request.\n\n#### Summary of the guidelines:\n\n* One pull request per issue;\n* Choose the right base branch;\n* Include tests and documentation;\n* Clean up \"oops\" commits before submitting;\n* Follow the [coding style guide](https://github.com/opencv/opencv/wiki/Coding_Style_Guide).\n"
 },
 {
  "repo": "EbookFoundation/free-programming-books",
  "language": null,
  "readme_contents": "This page is available as an easy-to-read website at [https://ebookfoundation.github.io/](https://ebookfoundation.github.io/free-programming-books/).\n\n# List of Free Learning Resources [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\n[View the English list](/free-programming-books.md)\n\n## Intro\nThis list was originally a clone of [stackoverflow - List of Freely Available Programming Books](http://web.archive.org/web/20130824154208/http://stackoverflow.com/a/392926) with contributions from Karan Bhangui and George Stocker.\n\nThe list was moved to GitHub by Victor Felder for collaborative updating and maintenance. It has grown to become one of the [most popular repositories on Github](https://octoverse.github.com/), with over 100,000 stars, over 4500 commits, over 950 contributors, and over 25,000 forks.\n\nThe repo is now administered by the [Free Ebook Foundation](https://ebookfoundation.org), a not-for-profit organization devoted to promoting the creation, distribution, archiving and sustainability of free ebooks. [Donations](https://ebookfoundation.org/contributions.html) to the Free Ebook Foundation are tax-deductible in the US.\n\n### How To Contribute\n\nPlease read [CONTRIBUTING](/CONTRIBUTING.md). If you're new to Github, [welcome](/HOWTO.md)!\n\n### How to Share\n+ [Share on Twitter](http://twitter.com/home?status=https://github.com/EbookFoundation/free-programming-books%0AFree%20Programming%20Books)\n+ [Share on Facebook](http://www.facebook.com/sharer/sharer.php?s=100&p[url]=https://github.com/EbookFoundation/free-programming-books&p[images][0]=&p[title]=Free%20Programming%20Books&p[summary]=)\n+ [Share on Google Plus](https://plus.google.com/share?url=https://github.com/EbookFoundation/free-programming-books)\n+ [Share on LinkedIn](http://www.linkedin.com/shareArticle?mini=true&url=https://github.com/EbookFoundation/free-programming-books&title=Free%20Programming%20Books&summary=&source=)\n+ [Share on Telegram](https://t.me/share/url?url=https://github.com/EbookFoundation/free-programming-books)\n\n\n### In Other Written Languages\n+ [Arabic](/free-programming-books-ar.md)\n+ [Azerbaijani](/free-programming-books-az.md)\n+ [Bengali](/free-programming-books-bl.md)\n+ [Bulgarian](/free-programming-books-bg.md)\n+ [Burmese](/free-programming-books-mm.md)\n+ [Chinese](/free-programming-books-zh.md)\n+ [Czech](/free-programming-books-cs.md)\n+ [Danish](/free-programming-books-dk.md)\n+ [Dutch](/free-programming-books-nl.md)\n+ [English](/free-programming-books.md)\n+ [Estonian](/free-programming-books-et.md)\n+ [Finnish](/free-programming-books-fi.md)\n+ [French](/free-programming-books-fr.md)\n+ [German](/free-programming-books-de.md)\n+ [Greek](/free-programming-books-gr.md)\n+ [Hungarian](/free-programming-books-hu.md)\n+ [Indonesian](/free-programming-books-id.md)\n+ [Italian](/free-programming-books-it.md)\n+ [Japanese](/free-programming-books-ja.md)\n+ [Korean](/free-programming-books-ko.md)\n+ [Persian/Farsi (Iran)](/free-programming-books-fa_IR.md)\n+ [Polish](/free-programming-books-pl.md)\n+ [Portuguese (Brazil)](/free-programming-books-pt_BR.md)\n+ [Portuguese (Portugal)](/free-programming-books-pt_PT.md)\n+ [Romanian (Romania)](/free-programming-books-ro.md)\n+ [Russian](/free-programming-books-ru.md)\n+ [Slovak](/free-programming-books-sk.md)\n+ [Spanish](/free-programming-books-es.md)\n+ [Swedish](/free-programming-books-se.md)\n+ [Tamil](/free-programming-books-ta.md)\n+ [Turkish](/free-programming-books-tr.md)\n+ [Ukrainian](/free-programming-books-ua.md)\n\n\n### Free Online Courses\n+ [Bulgarian](/free-courses-bg.md)\n+ [English](/free-courses-en.md)\n+ [Finnish](/free-courses-fi.md)\n+ [German](/free-courses-de.md)\n+ [Italian](/free-courses-it.md)\n+ [Korean](/free-courses-ko.md)\n+ [Polish](/free-courses-pl.md)\n+ [Portuguese (Brazil)](/free-courses-pt_BR.md)\n+ [Russian](/free-courses-ru.md)\n+ [Spanish](/free-courses-es.md)\n+ [Vietnamese](/free-courses-vi.md)\n\n\n### Interactive Programming Resources\n+ [English](/free-programming-interactive-tutorials-en.md)\n+ [Russian](/free-programming-interactive-tutorials-ru.md)\n\n\n### Problem Sets and Competitive Programming\n+ [Problem Sets](/problem-sets-competitive-programming.md)\n\n\n### Podcast - Screencast\nFree Podcasts and Screencasts:\n\n+ [Czech](/free-podcasts-screencasts-cs.md)\n+ [English](/free-podcasts-screencasts-en.md)\n+ [Portuguese (Brazil)](/free-podcasts-screencasts-pt_BR.md)\n+ [Russian](/free-podcasts-screencasts-ru.md)\n+ [Swedish](/free-podcasts-screencasts-se.md)\n\n\n### Programming Playgrounds\n+ [Free Programming Playgrounds](/free-programming-playgrounds.md)\n\n## License\nEach file included in this repository is licensed under the [CC BY License](/LICENSE).\n"
 },
 {
  "repo": "jackfrued/Python-100-Days",
  "language": "Jupyter Notebook",
  "readme_contents": "## Python - 100\u5929\u4ece\u65b0\u624b\u5230\u5927\u5e08\n\n> **\u4f5c\u8005**\uff1a\u9a86\u660a\n>\n> **\u8bf4\u660e**\uff1a\u4ece\u9879\u76ee\u4e0a\u7ebf\u5230\u83b7\u5f978w+\u661f\u6807\u4ee5\u6765\uff0c\u4e00\u76f4\u6536\u5230\u53cd\u9988\u8bf4\u57fa\u7840\u90e8\u5206\uff08\u524d15\u5929\u7684\u5185\u5bb9\uff09\u5bf9\u65b0\u624b\u6765\u8bf4\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u5efa\u8bae\u6709\u914d\u5957\u89c6\u9891\u8fdb\u884c\u8bb2\u89e3\u3002\u6700\u8fd1\u628a\u57fa\u7840\u90e8\u5206\u7684\u5185\u5bb9\u91cd\u65b0\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a[\u201cPython-Core-50-Courses\u201d](<https://github.com/jackfrued/Python-Core-50-Courses>)\u7684\u9879\u76ee\uff0c**\u7528\u66f4\u4e3a\u7b80\u5355\u901a\u4fd7\u7684\u65b9\u5f0f\u91cd\u5199\u4e86\u8fd9\u90e8\u5206\u5185\u5bb9\u5e76\u9644\u5e26\u4e86\u89c6\u9891\u8bb2\u89e3**\uff0c\u521d\u5b66\u8005\u53ef\u4ee5\u5173\u6ce8\u4e0b\u8fd9\u4e2a\u65b0\u9879\u76ee\u3002\u56fd\u5185\u7528\u6237\u5982\u679c\u8bbf\u95eeGitHub\u6bd4\u8f83\u6162\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5173\u6ce8\u6211\u7684\u77e5\u4e4e\u53f7[Python-Jack](https://www.zhihu.com/people/jackfrued)\u4e0a\u7684[\u201c\u4ece\u96f6\u5f00\u59cb\u5b66Python\u201d](<https://zhuanlan.zhihu.com/c_1216656665569013760>)\u4e13\u680f\uff0c\u4e13\u680f\u4f1a\u6301\u7eed\u66f4\u65b0\uff0c\u8fd8\u6709\u5927\u5bb6\u6bd4\u8f83\u671f\u5f85\u7684\u201c\u6570\u636e\u5206\u6790\u201d\u7684\u5185\u5bb9\u4e5f\u5373\u5c06\u4e0a\u7ebf\uff0c**\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8\u6211\u5728\u77e5\u4e4e\u7684\u4e13\u680f\u3001\u6587\u7ae0\u548c\u56de\u7b54**\u3002\n>\n> \u521b\u4f5c\u4e0d\u6613\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u6253\u8d4f\u652f\u6301\uff0c\u8fd9\u4e9b\u94b1\u57fa\u672c\u4e0d\u4f1a\u7528\u4e8e\u8d2d\u4e70\u5496\u5561\uff0c\u800c\u662f\u901a\u8fc7\u817e\u8baf\u516c\u76ca\u3001\u7f8e\u56e2\u516c\u76ca\u3001\u6c34\u6ef4\u7b79\u7b49\u5e73\u53f0\u6350\u8d60\u7ed9\u9700\u8981\u5e2e\u52a9\u7684\u4eba\uff08[\u70b9\u51fb](./\u66f4\u65b0\u65e5\u5fd7.md)\u4e86\u89e3\u6350\u8d60\u60c5\u51b5\uff09\u3002\u9700\u8981\u52a0\u5165QQ\u4ea4\u6d41\u7fa4\u7684\u53ef\u4ee5\u626b\u63cf\u4e0b\u9762\u7684\u4e8c\u7ef4\u7801\uff0c\u4ea4\u6d41\u7fa4\u4f1a\u4e3a\u5927\u5bb6\u63d0\u4f9b**\u5b66\u4e60\u8d44\u6e90**\u548c**\u95ee\u9898\u89e3\u7b54**\uff0c\u8fd8\u4f1a\u6301\u7eed\u4e3a\u5927\u5bb6\u5e26\u6765**\u514d\u8d39\u7684\u7ebf\u4e0aPython\u4f53\u9a8c\u8bfe\u548c\u884c\u4e1a\u516c\u5f00\u8bfe**\uff0c\u656c\u8bf7\u5173\u6ce8\u3002\n\n![](./res/python-qq-group.png)\n\n### Python\u5e94\u7528\u9886\u57df\u548c\u5c31\u4e1a\u5f62\u52bf\u5206\u6790\n\n\u7b80\u5355\u7684\u8bf4\uff0cPython\u662f\u4e00\u4e2a\u201c\u4f18\u96c5\u201d\u3001\u201c\u660e\u786e\u201d\u3001\u201c\u7b80\u5355\u201d\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n\n - \u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u975e\u4e13\u4e1a\u4eba\u58eb\u4e5f\u80fd\u4e0a\u624b\n - \u5f00\u6e90\u7cfb\u7edf\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u751f\u6001\u5708\n - \u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5b8c\u7f8e\u7684\u5e73\u53f0\u53ef\u79fb\u690d\u6027\n - \u652f\u6301\u9762\u5411\u5bf9\u8c61\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\n - \u80fd\u591f\u901a\u8fc7\u8c03\u7528C/C++\u4ee3\u7801\u6269\u5c55\u529f\u80fd\n - \u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\n\n\u76ee\u524d\u51e0\u4e2a\u6bd4\u8f83\u6d41\u884c\u7684\u9886\u57df\uff0cPython\u90fd\u6709\u7528\u6b66\u4e4b\u5730\u3002\n\n - \u4e91\u57fa\u7840\u8bbe\u65bd - Python / Java / Go\n - DevOps - Python / Shell / Ruby / Go\n - \u7f51\u7edc\u722c\u866b - Python / PHP / C++\n - \u6570\u636e\u5206\u6790\u6316\u6398 - Python / R / Scala / Matlab\n - \u673a\u5668\u5b66\u4e60 - Python / R / Java / Lisp\n\n\u4f5c\u4e3a\u4e00\u540dPython\u5f00\u53d1\u8005\uff0c\u4e3b\u8981\u7684\u5c31\u4e1a\u9886\u57df\u5305\u62ec\uff1a\n\n- Python\u670d\u52a1\u5668\u540e\u53f0\u5f00\u53d1 / \u6e38\u620f\u670d\u52a1\u5668\u5f00\u53d1 / \u6570\u636e\u63a5\u53e3\u5f00\u53d1\u5de5\u7a0b\u5e08\n- Python\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u7a0b\u5e08\n- Python\u6570\u636e\u5206\u6790 / \u6570\u636e\u53ef\u89c6\u5316 / \u5927\u6570\u636e\u5de5\u7a0b\u5e08\n- Python\u722c\u866b\u5de5\u7a0b\u5e08\n- Python\u804a\u5929\u673a\u5668\u4eba\u5f00\u53d1 / \u56fe\u50cf\u8bc6\u522b\u548c\u89c6\u89c9\u7b97\u6cd5 / \u6df1\u5ea6\u5b66\u4e60\u5de5\u7a0b\u5e08\n\n\u4e0b\u56fe\u663e\u793a\u4e86\u4e3b\u8981\u57ce\u5e02Python\u62db\u8058\u9700\u6c42\u91cf\u53ca\u85aa\u8d44\u5f85\u9047\u6392\u884c\u699c\uff08\u622a\u6b62\u52302018\u5e745\u6708\uff09\u3002\n\n![Python\u62db\u8058\u9700\u6c42\u53ca\u85aa\u8d44\u5f85\u9047Top 10](./res/python-top-10.png)\n\n![](./res/python-bj-salary.png)\n\n![](./res/python-salary-chengdu.png)\n\n\u7ed9\u521d\u5b66\u8005\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a\n\n- Make English as your working language. \uff08\u8ba9\u82f1\u8bed\u6210\u4e3a\u4f60\u7684\u5de5\u4f5c\u8bed\u8a00\uff09\n- Practice makes perfect. \uff08\u719f\u80fd\u751f\u5de7\uff09\n- All experience comes from mistakes. \uff08\u6240\u6709\u7684\u7ecf\u9a8c\u90fd\u6e90\u4e8e\u4f60\u72af\u8fc7\u7684\u9519\u8bef\uff09\n- Don't be one of the leeches. \uff08\u4e0d\u8981\u5f53\u4f38\u624b\u515a\uff09\n- Either outstanding or out. \uff08\u8981\u4e48\u51fa\u4f17\uff0c\u8981\u4e48\u51fa\u5c40\uff09\n\n### Day01~15 - [Python\u8bed\u8a00\u57fa\u7840](./Day01-15)\n\n#### Day01 - [\u521d\u8bc6Python](./Day01-15/01.\u521d\u8bc6Python.md)\n\n- Python\u7b80\u4ecb - Python\u7684\u5386\u53f2 / Python\u7684\u4f18\u7f3a\u70b9 / Python\u7684\u5e94\u7528\u9886\u57df\n- \u642d\u5efa\u7f16\u7a0b\u73af\u5883 - Windows\u73af\u5883 / Linux\u73af\u5883 / MacOS\u73af\u5883\n- \u4ece\u7ec8\u7aef\u8fd0\u884cPython\u7a0b\u5e8f - Hello, world / print\u51fd\u6570 / \u8fd0\u884c\u7a0b\u5e8f\n- \u4f7f\u7528IDLE - \u4ea4\u4e92\u5f0f\u73af\u5883(REPL) / \u7f16\u5199\u591a\u884c\u4ee3\u7801 / \u8fd0\u884c\u7a0b\u5e8f / \u9000\u51faIDLE\n- \u6ce8\u91ca - \u6ce8\u91ca\u7684\u4f5c\u7528 / \u5355\u884c\u6ce8\u91ca / \u591a\u884c\u6ce8\u91ca\n\n#### Day02 - [\u8bed\u8a00\u5143\u7d20](./Day01-15/02.\u8bed\u8a00\u5143\u7d20.md)\n\n- \u7a0b\u5e8f\u548c\u8fdb\u5236 - \u6307\u4ee4\u548c\u7a0b\u5e8f / \u51af\u8bfa\u4f9d\u66fc\u673a / \u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236 / \u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\n- \u53d8\u91cf\u548c\u7c7b\u578b - \u53d8\u91cf\u7684\u547d\u540d / \u53d8\u91cf\u7684\u4f7f\u7528 / input\u51fd\u6570 / \u68c0\u67e5\u53d8\u91cf\u7c7b\u578b / \u7c7b\u578b\u8f6c\u6362\n- \u6570\u5b57\u548c\u5b57\u7b26\u4e32 - \u6574\u6570 / \u6d6e\u70b9\u6570 / \u590d\u6570 / \u5b57\u7b26\u4e32 / \u5b57\u7b26\u4e32\u57fa\u672c\u64cd\u4f5c / \u5b57\u7b26\u7f16\u7801\n- \u8fd0\u7b97\u7b26 - \u6570\u5b66\u8fd0\u7b97\u7b26 / \u8d4b\u503c\u8fd0\u7b97\u7b26 / \u6bd4\u8f83\u8fd0\u7b97\u7b26 / \u903b\u8f91\u8fd0\u7b97\u7b26 / \u8eab\u4efd\u8fd0\u7b97\u7b26 / \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\n- \u5e94\u7528\u6848\u4f8b - \u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u6210\u6444\u6c0f\u6e29\u5ea6 / \u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef / \u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u5426\u662f\u95f0\u5e74\n\n#### Day03 - [\u5206\u652f\u7ed3\u6784](./Day01-15/03.\u5206\u652f\u7ed3\u6784.md)\n\n- \u5206\u652f\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\n- if\u8bed\u53e5 - \u7b80\u5355\u7684if / if-else\u7ed3\u6784 / if-elif-else\u7ed3\u6784 / \u5d4c\u5957\u7684if\n- \u5e94\u7528\u6848\u4f8b - \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 / \u82f1\u5236\u5355\u4f4d\u4e0e\u516c\u5236\u5355\u4f4d\u4e92\u6362 / \u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48 / \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236 / \u5206\u6bb5\u51fd\u6570\u6c42\u503c / \u8f93\u5165\u4e09\u6761\u8fb9\u7684\u957f\u5ea6\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\n\n#### Day04 - [\u5faa\u73af\u7ed3\u6784](./Day01-15/04.\u5faa\u73af\u7ed3\u6784.md)\n\n- \u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\n- while\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / break\u8bed\u53e5 / continue\u8bed\u53e5\n- for\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / range\u7c7b\u578b / \u5faa\u73af\u4e2d\u7684\u5206\u652f\u7ed3\u6784 / \u5d4c\u5957\u7684\u5faa\u73af / \u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f \n- \u5e94\u7528\u6848\u4f8b - 1~100\u6c42\u548c / \u5224\u65ad\u7d20\u6570 / \u731c\u6570\u5b57\u6e38\u620f / \u6253\u5370\u4e5d\u4e5d\u8868 / \u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848 / \u7334\u5b50\u5403\u6843 / \u767e\u94b1\u767e\u9e21\n\n#### Day05 - [\u6784\u9020\u7a0b\u5e8f\u903b\u8f91](./Day01-15/05.\u6784\u9020\u7a0b\u5e8f\u903b\u8f91.md)\n\n- \u7ecf\u5178\u6848\u4f8b\uff1a\u6c34\u4ed9\u82b1\u6570 / \u767e\u94b1\u767e\u9e21 / Craps\u8d4c\u535a\u6e38\u620f\n- \u7ec3\u4e60\u9898\u76ee\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217 / \u5b8c\u7f8e\u6570 / \u7d20\u6570\n\n#### Day06 - [\u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528](./Day01-15/06.\u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528.md)\n\n- \u51fd\u6570\u7684\u4f5c\u7528 - \u4ee3\u7801\u7684\u574f\u5473\u9053 / \u7528\u51fd\u6570\u5c01\u88c5\u529f\u80fd\u6a21\u5757\n- \u5b9a\u4e49\u51fd\u6570 - def\u8bed\u53e5 / \u51fd\u6570\u540d / \u53c2\u6570\u5217\u8868 / return\u8bed\u53e5 / \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\n- \u8c03\u7528\u51fd\u6570 - Python\u5185\u7f6e\u51fd\u6570 /  \u5bfc\u5165\u6a21\u5757\u548c\u51fd\u6570\n- \u51fd\u6570\u7684\u53c2\u6570 - \u9ed8\u8ba4\u53c2\u6570 / \u53ef\u53d8\u53c2\u6570 / \u5173\u952e\u5b57\u53c2\u6570 / \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\n- \u51fd\u6570\u7684\u8fd4\u56de\u503c - \u6ca1\u6709\u8fd4\u56de\u503c  / \u8fd4\u56de\u5355\u4e2a\u503c / \u8fd4\u56de\u591a\u4e2a\u503c\n- \u4f5c\u7528\u57df\u95ee\u9898 - \u5c40\u90e8\u4f5c\u7528\u57df / \u5d4c\u5957\u4f5c\u7528\u57df / \u5168\u5c40\u4f5c\u7528\u57df / \u5185\u7f6e\u4f5c\u7528\u57df / \u548c\u4f5c\u7528\u57df\u76f8\u5173\u7684\u5173\u952e\u5b57\n- \u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570 - \u6a21\u5757\u7684\u6982\u5ff5 / \u7528\u81ea\u5b9a\u4e49\u6a21\u5757\u7ba1\u7406\u51fd\u6570 / \u547d\u540d\u51b2\u7a81\u7684\u65f6\u5019\u4f1a\u600e\u6837\uff08\u540c\u4e00\u4e2a\u6a21\u5757\u548c\u4e0d\u540c\u7684\u6a21\u5757\uff09\n\n#### Day07 - [\u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784](./Day01-15/07.\u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784.md)\n\n- \u5b57\u7b26\u4e32\u7684\u4f7f\u7528 - \u8ba1\u7b97\u957f\u5ea6 / \u4e0b\u6807\u8fd0\u7b97 / \u5207\u7247 / \u5e38\u7528\u65b9\u6cd5\n- \u5217\u8868\u57fa\u672c\u7528\u6cd5 - \u5b9a\u4e49\u5217\u8868 / \u7528\u4e0b\u8868\u8bbf\u95ee\u5143\u7d20 / \u4e0b\u6807\u8d8a\u754c / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u4fee\u6539\u5143\u7d20 / \u5207\u7247 / \u5faa\u73af\u904d\u5386\n- \u5217\u8868\u5e38\u7528\u64cd\u4f5c - \u8fde\u63a5 / \u590d\u5236(\u590d\u5236\u5143\u7d20\u548c\u590d\u5236\u6570\u7ec4) / \u957f\u5ea6 / \u6392\u5e8f / \u5012\u8f6c / \u67e5\u627e\n- \u751f\u6210\u5217\u8868 - \u4f7f\u7528range\u521b\u5efa\u6570\u5b57\u5217\u8868 / \u751f\u6210\u8868\u8fbe\u5f0f / \u751f\u6210\u5668\n- \u5143\u7ec4\u7684\u4f7f\u7528 - \u5b9a\u4e49\u5143\u7ec4 / \u4f7f\u7528\u5143\u7ec4\u4e2d\u7684\u503c / \u4fee\u6539\u5143\u7ec4\u53d8\u91cf / \u5143\u7ec4\u548c\u5217\u8868\u8f6c\u6362\n- \u96c6\u5408\u57fa\u672c\u7528\u6cd5 - \u96c6\u5408\u548c\u5217\u8868\u7684\u533a\u522b /  \u521b\u5efa\u96c6\u5408 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 /  \u6e05\u7a7a\n- \u96c6\u5408\u5e38\u7528\u64cd\u4f5c - \u4ea4\u96c6 / \u5e76\u96c6 / \u5dee\u96c6 / \u5bf9\u79f0\u5dee / \u5b50\u96c6 / \u8d85\u96c6\n- \u5b57\u5178\u7684\u57fa\u672c\u7528\u6cd5 - \u5b57\u5178\u7684\u7279\u70b9 / \u521b\u5efa\u5b57\u5178 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u53d6\u503c / \u6e05\u7a7a\n- \u5b57\u5178\u5e38\u7528\u64cd\u4f5c - keys()\u65b9\u6cd5 / values()\u65b9\u6cd5 / items()\u65b9\u6cd5 / setdefault()\u65b9\u6cd5\n- \u57fa\u7840\u7ec3\u4e60 - \u8dd1\u9a6c\u706f\u6548\u679c / \u5217\u8868\u627e\u6700\u5927\u5143\u7d20 / \u7edf\u8ba1\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206 / Fibonacci\u6570\u5217 / \u6768\u8f89\u4e09\u89d2\n- \u7efc\u5408\u6848\u4f8b - \u53cc\u8272\u7403\u9009\u53f7 / \u4e95\u5b57\u68cb\n\n#### Day08 - [\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840](./Day01-15/08.\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840.md)\n\n- \u7c7b\u548c\u5bf9\u8c61 - \u4ec0\u4e48\u662f\u7c7b / \u4ec0\u4e48\u662f\u5bf9\u8c61 / \u9762\u5411\u5bf9\u8c61\u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n- \u5b9a\u4e49\u7c7b - \u57fa\u672c\u7ed3\u6784 / \u5c5e\u6027\u548c\u65b9\u6cd5 / \u6784\u9020\u5668 / \u6790\u6784\u5668 / \\_\\_str\\_\\_\u65b9\u6cd5\n- \u4f7f\u7528\u5bf9\u8c61 - \u521b\u5efa\u5bf9\u8c61 / \u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\n- \u9762\u5411\u5bf9\u8c61\u7684\u56db\u5927\u652f\u67f1 - \u62bd\u8c61 / \u5c01\u88c5 / \u7ee7\u627f / \u591a\u6001\n- \u57fa\u7840\u7ec3\u4e60 - \u5b9a\u4e49\u5b66\u751f\u7c7b / \u5b9a\u4e49\u65f6\u949f\u7c7b / \u5b9a\u4e49\u56fe\u5f62\u7c7b / \u5b9a\u4e49\u6c7d\u8f66\u7c7b\n\n#### Day09 - [\u9762\u5411\u5bf9\u8c61\u8fdb\u9636](./Day01-15/09.\u9762\u5411\u5bf9\u8c61\u8fdb\u9636.md)\n\n- \u5c5e\u6027 - \u7c7b\u5c5e\u6027 / \u5b9e\u4f8b\u5c5e\u6027 / \u5c5e\u6027\u8bbf\u95ee\u5668 / \u5c5e\u6027\u4fee\u6539\u5668 / \u5c5e\u6027\u5220\u9664\u5668 / \u4f7f\u7528\\_\\_slots\\_\\_\n- \u7c7b\u4e2d\u7684\u65b9\u6cd5 - \u5b9e\u4f8b\u65b9\u6cd5 / \u7c7b\u65b9\u6cd5 / \u9759\u6001\u65b9\u6cd5\n- \u8fd0\u7b97\u7b26\u91cd\u8f7d - \\_\\_add\\_\\_ / \\_\\_sub\\_\\_ / \\_\\_or\\_\\_ /\\_\\_getitem\\_\\_ / \\_\\_setitem\\_\\_ / \\_\\_len\\_\\_ / \\_\\_repr\\_\\_ / \\_\\_gt\\_\\_ / \\_\\_lt\\_\\_ / \\_\\_le\\_\\_ / \\_\\_ge\\_\\_ / \\_\\_eq\\_\\_ / \\_\\_ne\\_\\_ / \\_\\_contains\\_\\_ \n- \u7c7b(\u7684\u5bf9\u8c61)\u4e4b\u95f4\u7684\u5173\u7cfb - \u5173\u8054 / \u7ee7\u627f / \u4f9d\u8d56\n- \u7ee7\u627f\u548c\u591a\u6001 - \u4ec0\u4e48\u662f\u7ee7\u627f / \u7ee7\u627f\u7684\u8bed\u6cd5 / \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 / \u65b9\u6cd5\u91cd\u5199 / \u7c7b\u578b\u5224\u5b9a / \u591a\u91cd\u7ee7\u627f / \u83f1\u5f62\u7ee7\u627f(\u94bb\u77f3\u7ee7\u627f)\u548cC3\u7b97\u6cd5\n- \u7efc\u5408\u6848\u4f8b - \u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf / \u56fe\u4e66\u81ea\u52a8\u6298\u6263\u7cfb\u7edf / \u81ea\u5b9a\u4e49\u5206\u6570\u7c7b\n\n#### Day10 - [\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1](./Day01-15/10.\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1.md)\n\n- \u4f7f\u7528tkinter\u5f00\u53d1GUI\u7a0b\u5e8f\n- \u4f7f\u7528pygame\u4e09\u65b9\u5e93\u5f00\u53d1\u6e38\u620f\u5e94\u7528\n- \u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u6e38\u620f\n\n#### Day11 - [\u6587\u4ef6\u548c\u5f02\u5e38](./Day01-15/11.\u6587\u4ef6\u548c\u5f02\u5e38.md)\n\n- \u8bfb\u6587\u4ef6 - \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6 / \u9010\u884c\u8bfb\u53d6 / \u6587\u4ef6\u8def\u5f84\n- \u5199\u6587\u4ef6 - \u8986\u76d6\u5199\u5165 / \u8ffd\u52a0\u5199\u5165 / \u6587\u672c\u6587\u4ef6 / \u4e8c\u8fdb\u5236\u6587\u4ef6\n- \u5f02\u5e38\u5904\u7406 - \u5f02\u5e38\u673a\u5236\u7684\u91cd\u8981\u6027 / try-except\u4ee3\u7801\u5757 / else\u4ee3\u7801\u5757 / finally\u4ee3\u7801\u5757 / \u5185\u7f6e\u5f02\u5e38\u7c7b\u578b / \u5f02\u5e38\u6808 / raise\u8bed\u53e5\n- \u6570\u636e\u6301\u4e45\u5316 - CSV\u6587\u4ef6\u6982\u8ff0 / csv\u6a21\u5757\u7684\u5e94\u7528 / JSON\u6570\u636e\u683c\u5f0f / json\u6a21\u5757\u7684\u5e94\u7528\n\n#### Day12 - [\u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f](./Day01-15/12.\u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f.md)\n\n- \u5b57\u7b26\u4e32\u9ad8\u7ea7\u64cd\u4f5c - \u8f6c\u4e49\u5b57\u7b26 / \u539f\u59cb\u5b57\u7b26\u4e32 / \u591a\u884c\u5b57\u7b26\u4e32 / in\u548c not in\u8fd0\u7b97\u7b26 / is\u5f00\u5934\u7684\u65b9\u6cd5 / join\u548csplit\u65b9\u6cd5 / strip\u76f8\u5173\u65b9\u6cd5 / pyperclip\u6a21\u5757 / \u4e0d\u53d8\u5b57\u7b26\u4e32\u548c\u53ef\u53d8\u5b57\u7b26\u4e32 / StringIO\u7684\u4f7f\u7528\n- \u6b63\u5219\u8868\u8fbe\u5f0f\u5165\u95e8 - \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528 / \u5143\u5b57\u7b26 / \u8f6c\u4e49 / \u91cf\u8bcd / \u5206\u7ec4 / \u96f6\u5bbd\u65ad\u8a00 /\u8d2a\u5a6a\u5339\u914d\u4e0e\u60f0\u6027\u5339\u914d\u61d2\u60f0 / \u4f7f\u7528re\u6a21\u5757\u5b9e\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\uff08\u5339\u914d\u3001\u641c\u7d22\u3001\u66ff\u6362\u3001\u6355\u83b7\uff09\n- \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f - re\u6a21\u5757 / compile\u51fd\u6570 / group\u548cgroups\u65b9\u6cd5 / match\u65b9\u6cd5 / search\u65b9\u6cd5 / findall\u548cfinditer\u65b9\u6cd5 / sub\u548csubn\u65b9\u6cd5 / split\u65b9\u6cd5\n- \u5e94\u7528\u6848\u4f8b - \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9a8c\u8bc1\u8f93\u5165\u7684\u5b57\u7b26\u4e32\n\n#### Day13 - [\u8fdb\u7a0b\u548c\u7ebf\u7a0b](./Day01-15/13.\u8fdb\u7a0b\u548c\u7ebf\u7a0b.md)\n\n- \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u6982\u5ff5 - \u4ec0\u4e48\u662f\u8fdb\u7a0b / \u4ec0\u4e48\u662f\u7ebf\u7a0b / \u591a\u7ebf\u7a0b\u7684\u5e94\u7528\u573a\u666f\n- \u4f7f\u7528\u8fdb\u7a0b - fork\u51fd\u6570 / multiprocessing\u6a21\u5757 / \u8fdb\u7a0b\u6c60 / \u8fdb\u7a0b\u95f4\u901a\u4fe1\n- \u4f7f\u7528\u7ebf\u7a0b - thread\u6a21\u5757 / threading\u6a21\u5757 / Thread\u7c7b / Lock\u7c7b / Condition\u7c7b / \u7ebf\u7a0b\u6c60\n\n#### Day14 - [\u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\u548c\u7f51\u7edc\u5e94\u7528\u5f00\u53d1](./Day01-15/14.\u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\u548c\u7f51\u7edc\u5e94\u7528\u5f00\u53d1.md)\n\n- \u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840 - \u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2 / \u201cTCP-IP\u201d\u6a21\u578b / IP\u5730\u5740 / \u7aef\u53e3 / \u534f\u8bae / \u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n- \u7f51\u7edc\u5e94\u7528\u6a21\u5f0f - \u201c\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u201d\u6a21\u5f0f / \u201c\u6d4f\u89c8\u5668-\u670d\u52a1\u5668\u201d\u6a21\u5f0f\n- \u57fa\u4e8eHTTP\u534f\u8bae\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90 - \u7f51\u7edcAPI\u6982\u8ff0 / \u8bbf\u95eeURL / requests\u6a21\u5757 / \u89e3\u6790JSON\u683c\u5f0f\u6570\u636e\n- Python\u7f51\u7edc\u7f16\u7a0b - \u5957\u63a5\u5b57\u7684\u6982\u5ff5 / socket\u6a21\u5757 /  socket\u51fd\u6570 / \u521b\u5efaTCP\u670d\u52a1\u5668 / \u521b\u5efaTCP\u5ba2\u6237\u7aef / \u521b\u5efaUDP\u670d\u52a1\u5668 / \u521b\u5efaUDP\u5ba2\u6237\u7aef / SocketServer\u6a21\u5757\n- \u7535\u5b50\u90ae\u4ef6 - SMTP\u534f\u8bae / POP3\u534f\u8bae / IMAP\u534f\u8bae / smtplib\u6a21\u5757 / poplib\u6a21\u5757 / imaplib\u6a21\u5757\n- \u77ed\u4fe1\u670d\u52a1 - \u8c03\u7528\u77ed\u4fe1\u670d\u52a1\u7f51\u5173\n\n#### Day15 - [\u56fe\u50cf\u548c\u6587\u6863\u5904\u7406](./Day01-15/15.\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u5904\u7406.md)\n\n- \u7528Pillow\u5904\u7406\u56fe\u7247 - \u56fe\u7247\u8bfb\u5199 / \u56fe\u7247\u5408\u6210 / \u51e0\u4f55\u53d8\u6362 / \u8272\u5f69\u8f6c\u6362 / \u6ee4\u955c\u6548\u679c\n- \u8bfb\u5199Word\u6587\u6863 - \u6587\u672c\u5185\u5bb9\u7684\u5904\u7406 / \u6bb5\u843d / \u9875\u7709\u548c\u9875\u811a / \u6837\u5f0f\u7684\u5904\u7406\n- \u8bfb\u5199Excel\u6587\u4ef6 - xlrd\u6a21\u5757 / xlwt\u6a21\u5757\n- \u751f\u6210PDF\u6587\u4ef6 - pypdf2\u6a21\u5757 / reportlab\u6a21\u5757\n\n### Day16~Day20 - [Python\u8bed\u8a00\u8fdb\u9636 ](./Day16-20/16-20.Python\u8bed\u8a00\u8fdb\u9636.md)\n\n- \u5e38\u7528\u6570\u636e\u7ed3\u6784\n- \u51fd\u6570\u7684\u9ad8\u7ea7\u7528\u6cd5 - \u201c\u4e00\u7b49\u516c\u6c11\u201d / \u9ad8\u9636\u51fd\u6570 / Lambda\u51fd\u6570 / \u4f5c\u7528\u57df\u548c\u95ed\u5305 / \u88c5\u9970\u5668\n- \u9762\u5411\u5bf9\u8c61\u9ad8\u7ea7\u77e5\u8bc6 - \u201c\u4e09\u5927\u652f\u67f1\u201d / \u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb / \u5783\u573e\u56de\u6536 / \u9b54\u672f\u5c5e\u6027\u548c\u65b9\u6cd5 / \u6df7\u5165 / \u5143\u7c7b / \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219 / GoF\u8bbe\u8ba1\u6a21\u5f0f\n- \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 - \u76f8\u5173\u9b54\u672f\u65b9\u6cd5 / \u521b\u5efa\u751f\u6210\u5668\u7684\u4e24\u79cd\u65b9\u5f0f / \n- \u5e76\u53d1\u548c\u5f02\u6b65\u7f16\u7a0b - \u591a\u7ebf\u7a0b / \u591a\u8fdb\u7a0b / \u5f02\u6b65IO / async\u548cawait\n\n### Day21~30 - [Web\u524d\u7aef\u5165\u95e8](./Day21-30/21-30.Web\u524d\u7aef\u6982\u8ff0.md)\n\n- \u7528HTML\u6807\u7b7e\u627f\u8f7d\u9875\u9762\u5185\u5bb9\n- \u7528CSS\u6e32\u67d3\u9875\u9762\n- \u7528JavaScript\u5904\u7406\u4ea4\u4e92\u5f0f\u884c\u4e3a\n- jQuery\u5165\u95e8\u548c\u63d0\u9ad8\n- Vue.js\u5165\u95e8\n- Element\u7684\u4f7f\u7528\n- Bootstrap\u7684\u4f7f\u7528\n\n### Day31~35 - [\u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf](./Day31-35/31-35.\u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf.md)\n\n- \u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u53f2\u548cLinux\u6982\u8ff0\n- Linux\u57fa\u7840\u547d\u4ee4\n- Linux\u4e2d\u7684\u5b9e\u7528\u7a0b\u5e8f\n- Linux\u7684\u6587\u4ef6\u7cfb\u7edf\n- Vim\u7f16\u8f91\u5668\u7684\u5e94\u7528\n- \u73af\u5883\u53d8\u91cf\u548cShell\u7f16\u7a0b\n- \u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u670d\u52a1\u7684\u914d\u7f6e\n- \u7f51\u7edc\u8bbf\u95ee\u548c\u7ba1\u7406\n- \u5176\u4ed6\u76f8\u5173\u5185\u5bb9\n\n### Day36~40 - [\u6570\u636e\u5e93\u57fa\u7840\u548c\u8fdb\u9636](./Day36-40)\n\n- [\u5173\u7cfb\u578b\u6570\u636e\u5e93MySQL](./Day36-40/36-38.\u5173\u7cfb\u578b\u6570\u636e\u5e93MySQL.md)\n  - \u5173\u7cfb\u578b\u6570\u636e\u5e93\u6982\u8ff0\n  - MySQL\u7684\u5b89\u88c5\u548c\u4f7f\u7528\n  - SQL\u7684\u4f7f\u7528\n    - DDL - \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 - create / drop / alter\n    - DML - \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 - insert / delete / update / select\n    - DCL - \u6570\u636e\u63a7\u5236\u8bed\u8a00 - grant / revoke\n  - \u76f8\u5173\u77e5\u8bc6\n    - \u8303\u5f0f\u7406\u8bba - \u8bbe\u8ba1\u4e8c\u7ef4\u8868\u7684\u6307\u5bfc\u601d\u60f3\n    - \u6570\u636e\u5b8c\u6574\u6027\n    - \u6570\u636e\u4e00\u81f4\u6027\n  - \u5728Python\u4e2d\u64cd\u4f5cMySQL\n- [NoSQL\u5165\u95e8](./Day36-40/39-40.NoSQL\u5165\u95e8.md)\n  - NoSQL\u6982\u8ff0\n  - Redis\u6982\u8ff0\n  - Mongo\u6982\u8ff0\n\n### Day41~55 - [\u5b9e\u6218Django](./Day41-55)\n\n#### Day41 - [\u5feb\u901f\u4e0a\u624b](./Day41-55/41.\u5feb\u901f\u4e0a\u624b.md)\n\n- Web\u5e94\u7528\u5de5\u4f5c\u539f\u7406\u548cHTTP\u534f\u8bae\n- Django\u6846\u67b6\u6982\u8ff0\n- 5\u5206\u949f\u5feb\u901f\u4e0a\u624b\n- \u4f7f\u7528\u89c6\u56fe\u6a21\u677f\n\n#### Day42 - [\u6df1\u5165\u6a21\u578b](./Day41-55/42.\u6df1\u5165\u6a21\u578b.md)\n\n- \u5173\u7cfb\u578b\u6570\u636e\u5e93\u914d\u7f6e\n- \u7ba1\u7406\u540e\u53f0\u7684\u4f7f\u7528\n- \u4f7f\u7528ORM\u5b8c\u6210\u5bf9\u6a21\u578b\u7684CRUD\u64cd\u4f5c\n- Django\u6a21\u578b\u6700\u4f73\u5b9e\u8df5\n- \u6a21\u578b\u5b9a\u4e49\u53c2\u8003\n\n#### Day43 - [\u9759\u6001\u8d44\u6e90\u548cAjax\u8bf7\u6c42](./Day41-55/43.\u9759\u6001\u8d44\u6e90\u548cAjax\u8bf7\u6c42.md)\n\n- \u52a0\u8f7d\u9759\u6001\u8d44\u6e90\n- \u7528Ajax\u8bf7\u6c42\u83b7\u53d6\u6570\u636e\n\n#### Day44 - [\u8868\u5355\u7684\u5e94\u7528](./Day41-55/44.\u8868\u5355\u7684\u5e94\u7528.md)\n\n- \u8868\u5355\u548c\u8868\u5355\u63a7\u4ef6\n- \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u548cCSRF\u4ee4\u724c\n- Form\u548cModelForm\n- \u8868\u5355\u9a8c\u8bc1\n\n#### Day45 - [Cookie\u548cSession](./Day41-55/45.Cookie\u548cSession.md)\n\n- \u5b9e\u73b0\u7528\u6237\u8ddf\u8e2a\n- cookie\u548csession\u7684\u5173\u7cfb\n- Django\u6846\u67b6\u5bf9session\u7684\u652f\u6301\n- \u89c6\u56fe\u51fd\u6570\u4e2d\u7684cookie\u8bfb\u5199\u64cd\u4f5c\n\n#### Day46 - [\u62a5\u8868\u548c\u65e5\u5fd7](./Day41-55/46.\u62a5\u8868\u548c\u65e5\u5fd7.md)\n\n- \u901a\u8fc7HttpResponse\u4fee\u6539\u54cd\u5e94\u5934\n- \u4f7f\u7528StreamingHttpResponse\u5904\u7406\u5927\u6587\u4ef6\n- \u4f7f\u7528xlwt\u751f\u6210Excel\u62a5\u8868\n- \u4f7f\u7528reportlab\u751f\u6210PDF\u62a5\u8868\n- \u4f7f\u7528ECharts\u751f\u6210\u524d\u7aef\u56fe\u8868\n- \u914d\u7f6e\u65e5\u5fd7\u548cDjango-Debug-Toolbar\n\n#### Day47 - [\u4e2d\u95f4\u4ef6\u7684\u5e94\u7528](./Day41-55/47.\u4e2d\u95f4\u4ef6\u7684\u5e94\u7528.md)\n\n- \u4ec0\u4e48\u662f\u4e2d\u95f4\u4ef6\n- Django\u6846\u67b6\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6\n- \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u53ca\u5176\u5e94\u7528\u573a\u666f\n\n#### Day48 - [\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u5165\u95e8](./Day41-55/48.\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u5165\u95e8.md)\n\n- \u8fd4\u56deJSON\u683c\u5f0f\u7684\u6570\u636e\n- \u7528Vue.js\u6e32\u67d3\u9875\u9762\n\n#### Day49 - [RESTful\u67b6\u6784\u548cDRF\u5165\u95e8](./Day41-55/49.RESTful\u67b6\u6784\u548cDRF\u5165\u95e8.md)\n\n#### Day50 - [RESTful\u67b6\u6784\u548cDRF\u8fdb\u9636](./Day41-55/50.RESTful\u67b6\u6784\u548cDRF\u8fdb\u9636.md)\n\n#### Day51 - [\u4f7f\u7528\u7f13\u5b58](./Day41-55/51.\u4f7f\u7528\u7f13\u5b58.md)\n\n- \u7f51\u7ad9\u4f18\u5316\u7b2c\u4e00\u5b9a\u5f8b\n\n- \u5728Django\u9879\u76ee\u4e2d\u4f7f\u7528Redis\u63d0\u4f9b\u7f13\u5b58\u670d\u52a1\n- \u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u8bfb\u5199\u7f13\u5b58\n- \u4f7f\u7528\u88c5\u9970\u5668\u5b9e\u73b0\u9875\u9762\u7f13\u5b58\n- \u4e3a\u6570\u636e\u63a5\u53e3\u63d0\u4f9b\u7f13\u5b58\u670d\u52a1\n\n#### Day52 - [\u6587\u4ef6\u4e0a\u4f20\u548c\u5bcc\u6587\u672c\u7f16\u8f91](./Day41-55/52.\u6587\u4ef6\u4e0a\u4f20\u548c\u5bcc\u6587\u672c\u7f16\u8f91\u5668.md)\n\n- \u6587\u4ef6\u4e0a\u4f20\u8868\u5355\u63a7\u4ef6\u548c\u56fe\u7247\u6587\u4ef6\u9884\u89c8\n- \u670d\u52a1\u5668\u7aef\u5982\u4f55\u5904\u7406\u4e0a\u4f20\u7684\u6587\u4ef6\n- \u5bcc\u6587\u672c\u7f16\u8f91\u5668\u6982\u8ff0\n- wangEditor\u7684\u4f7f\u7528\n\n#### Day53 - [\u77ed\u4fe1\u548c\u90ae\u4ef6](./Day41-55/53.\u77ed\u4fe1\u548c\u90ae\u4ef6.md)\n\n- \u5e38\u7528\u77ed\u4fe1\u7f51\u5173\u5e73\u53f0\u4ecb\u7ecd\n- \u4f7f\u7528\u87ba\u4e1d\u5e3d\u53d1\u9001\u77ed\u4fe1\n- Django\u6846\u67b6\u5bf9\u90ae\u4ef6\u670d\u52a1\u7684\u652f\u6301\n\n#### Day54 - [\u5f02\u6b65\u4efb\u52a1\u548c\u5b9a\u65f6\u4efb\u52a1](./Day41-55/54.\u5f02\u6b65\u4efb\u52a1\u548c\u5b9a\u65f6\u4efb\u52a1.md)\n\n- \u7f51\u7ad9\u4f18\u5316\u7b2c\u4e8c\u5b9a\u5f8b\n- \u914d\u7f6e\u6d88\u606f\u961f\u5217\u670d\u52a1\n- \u5728\u9879\u76ee\u4e2d\u4f7f\u7528celery\u5b9e\u73b0\u4efb\u52a1\u5f02\u6b65\u5316\n- \u5728\u9879\u76ee\u4e2d\u4f7f\u7528celery\u5b9e\u73b0\u5b9a\u65f6\u4efb\u52a1\n\n#### Day55 - [\u5355\u5143\u6d4b\u8bd5\u548c\u9879\u76ee\u4e0a\u7ebf](./Day41-55/55.\u5355\u5143\u6d4b\u8bd5\u548c\u9879\u76ee\u4e0a\u7ebf.md)\n\n- Python\u4e2d\u7684\u5355\u5143\u6d4b\u8bd5\n- Django\u6846\u67b6\u5bf9\u5355\u5143\u6d4b\u8bd5\u7684\u652f\u6301\n- \u4f7f\u7528\u7248\u672c\u63a7\u5236\u7cfb\u7edf\n- \u914d\u7f6e\u548c\u4f7f\u7528uWSGI\n- \u52a8\u9759\u5206\u79bb\u548cNginx\u914d\u7f6e\n- \u914d\u7f6eHTTPS\n- \u914d\u7f6e\u57df\u540d\u89e3\u6790\n\n\n### Day56~60 - [\u5b9e\u6218Flask](./Day56-65)\n\n#### Day56 - [Flask\u5165\u95e8](./Day56-60/56.Flask\u5165\u95e8.md) \n\n#### Day57 - [\u6a21\u677f\u7684\u4f7f\u7528](./Day56-60/57.\u6a21\u677f\u7684\u4f7f\u7528.md) \n\n#### Day58 - [\u8868\u5355\u7684\u5904\u7406](./Day56-60/58.\u8868\u5355\u7684\u5904\u7406.md) \n\n#### Day59 - [\u6570\u636e\u5e93\u64cd\u4f5c](./Day56-60/59.\u6570\u636e\u5e93\u64cd\u4f5c.md)\n\n#### Day60 - [\u9879\u76ee\u5b9e\u6218](./Day56-60/60.\u9879\u76ee\u5b9e\u6218.md)\n\n### Day61~65 - [\u5b9e\u6218Tornado](./Day61-65)\n\n#### Day61 - [\u9884\u5907\u77e5\u8bc6](./Day61-65/61.\u9884\u5907\u77e5\u8bc6.md)\n\n- \u5e76\u53d1\u7f16\u7a0b\n- I/O\u6a21\u5f0f\u548c\u4e8b\u4ef6\u9a71\u52a8\n\n#### Day62 - [Tornado\u5165\u95e8](./Day61-65/62.Tornado\u5165\u95e8.md)\n\n- Tornado\u6982\u8ff0\n- 5\u5206\u949f\u4e0a\u624bTornado\n- \u8def\u7531\u89e3\u6790\n- \u8bf7\u6c42\u5904\u7406\u5668\n\n#### Day63 - [\u5f02\u6b65\u5316](./Day61-65/63.\u5f02\u6b65\u5316.md)\n\n- aiomysql\u548caioredis\u7684\u4f7f\u7528\n\n#### Day64 - [WebSocket\u7684\u5e94\u7528](./Day61-65/64.WebSocket\u7684\u5e94\u7528.md)\n\n- WebSocket\u7b80\u4ecb\n- WebSocket\u670d\u52a1\u5668\u7aef\u7f16\u7a0b\n- WebSocket\u5ba2\u6237\u7aef\u7f16\u7a0b\n- \u9879\u76ee\uff1aWeb\u804a\u5929\u5ba4\n\n#### Day65 - [\u9879\u76ee\u5b9e\u6218](./Day61-65/65.\u9879\u76ee\u5b9e\u6218.md)\n\n- \u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u548c\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n- \u4f7f\u7528Vue.js\u5b9e\u73b0\u524d\u7aef\u6e32\u67d3\n- \u4f7f\u7528ECharts\u5b9e\u73b0\u62a5\u8868\u529f\u80fd\n- \u4f7f\u7528WebSocket\u5b9e\u73b0\u63a8\u9001\u670d\u52a1\n\n### Day66~75 - [\u722c\u866b\u5f00\u53d1](./Day66-75)\n\n#### Day66 - [\u7f51\u7edc\u722c\u866b\u548c\u76f8\u5173\u5de5\u5177](./Day66-75/66.\u7f51\u7edc\u722c\u866b\u548c\u76f8\u5173\u5de5\u5177.md)\n\n- \u7f51\u7edc\u722c\u866b\u7684\u6982\u5ff5\u53ca\u5176\u5e94\u7528\u9886\u57df\n- \u7f51\u7edc\u722c\u866b\u7684\u5408\u6cd5\u6027\u63a2\u8ba8\n- \u5f00\u53d1\u7f51\u7edc\u722c\u866b\u7684\u76f8\u5173\u5de5\u5177\n- \u4e00\u4e2a\u722c\u866b\u7a0b\u5e8f\u7684\u6784\u6210\n\n#### Day67 - [\u6570\u636e\u91c7\u96c6\u548c\u89e3\u6790](./Day66-75/67.\u6570\u636e\u91c7\u96c6\u548c\u89e3\u6790.md)\n\n- \u6570\u636e\u91c7\u96c6\u7684\u6807\u51c6\u548c\u4e09\u65b9\u5e93\n- \u9875\u9762\u89e3\u6790\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790 / XPath\u89e3\u6790 / CSS\u9009\u62e9\u5668\u89e3\u6790\n\n#### Day68 - [\u5b58\u50a8\u6570\u636e](./Day66-75/68.\u5b58\u50a8\u6570\u636e.md)\n\n- \u5982\u4f55\u5b58\u50a8\u6d77\u91cf\u6570\u636e\n- \u5b9e\u73b0\u6570\u636e\u7684\u7f13\u5b58\n\n#### Day69 - [\u5e76\u53d1\u4e0b\u8f7d](./Day66-75/69.\u5e76\u53d1\u4e0b\u8f7d.md)\n\n- \u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\n- \u5f02\u6b65I/O\u548c\u534f\u7a0b\n- async\u548cawait\u5173\u952e\u5b57\u7684\u4f7f\u7528\n- \u4e09\u65b9\u5e93aiohttp\u7684\u5e94\u7528\n\n#### Day70 - [\u89e3\u6790\u52a8\u6001\u5185\u5bb9](./Day66-75/70.\u89e3\u6790\u52a8\u6001\u5185\u5bb9.md)\n\n- JavaScript\u9006\u5411\u5de5\u7a0b\n- \u4f7f\u7528Selenium\u83b7\u53d6\u52a8\u6001\u5185\u5bb9\n\n#### Day71 - [\u8868\u5355\u4ea4\u4e92\u548c\u9a8c\u8bc1\u7801\u5904\u7406](./Day66-75/71.\u8868\u5355\u4ea4\u4e92\u548c\u9a8c\u8bc1\u7801\u5904\u7406.md)\n\n- \u81ea\u52a8\u63d0\u4ea4\u8868\u5355\n- Cookie\u6c60\u7684\u5e94\u7528\n- \u9a8c\u8bc1\u7801\u5904\u7406\n\n#### Day72 - [Scrapy\u5165\u95e8](./Day66-75/72.Scrapy\u5165\u95e8.md)\n\n- Scrapy\u722c\u866b\u6846\u67b6\u6982\u8ff0\n- \u5b89\u88c5\u548c\u4f7f\u7528Scrapy\n\n#### Day73 - [Scrapy\u9ad8\u7ea7\u5e94\u7528](./Day66-75/73.Scrapy\u9ad8\u7ea7\u5e94\u7528.md)\n\n- Spider\u7684\u7528\u6cd5\n- \u4e2d\u95f4\u4ef6\u7684\u5e94\u7528\uff1a\u4e0b\u8f7d\u4e2d\u95f4\u4ef6 / \u8718\u86db\u4e2d\u95f4\u4ef6\n- Scrapy\u5bf9\u63a5Selenium\u6293\u53d6\u52a8\u6001\u5185\u5bb9\n- Scrapy\u90e8\u7f72\u5230Docker\n\n#### Day74 - [Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0](./Day66-75/74.Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0.md)\n\n- \u5206\u5e03\u5f0f\u722c\u866b\u7684\u539f\u7406\n- Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0\n- \u4f7f\u7528Scrapyd\u5b9e\u73b0\u5206\u5e03\u5f0f\u90e8\u7f72\n\n#### Day75 - [\u722c\u866b\u9879\u76ee\u5b9e\u6218](./Day66-75/75.\u722c\u866b\u9879\u76ee\u5b9e\u6218.md)\n\n- \u722c\u53d6\u62db\u8058\u7f51\u7ad9\u6570\u636e\n- \u722c\u53d6\u623f\u5730\u4ea7\u884c\u4e1a\u6570\u636e\n- \u722c\u53d6\u4e8c\u624b\u8f66\u4ea4\u6613\u5e73\u53f0\u6570\u636e\n\n### Day76~90 - [\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60](./Day76-90)\n\n> **\u6e29\u99a8\u63d0\u793a**\uff1a\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u7684\u5185\u5bb9\u5728code\u6587\u4ef6\u5939\u4e2d\uff0c\u662f\u7528jupyter notebook\u4e66\u5199\u7684\u4ee3\u7801\u548c\u7b14\u8bb0\uff0c\u9700\u8981\u5148\u542f\u52a8jupyter notebook\u518d\u6253\u5f00\u5bf9\u5e94\u7684\u6587\u4ef6\u8fdb\u884c\u5b66\u4e60\u30022020\u5e74\u4f1a\u6301\u7eed\u8865\u5145\u76f8\u5173\u6587\u6863\uff0c\u5e0c\u671b\u5927\u5bb6\u6301\u7eed\u5173\u6ce8\u3002\n\n#### Day76 - [\u673a\u5668\u5b66\u4e60\u57fa\u7840](./Day76-90/76.\u673a\u5668\u5b66\u4e60\u57fa\u7840.md)\n\n#### Day77 - [Pandas\u7684\u5e94\u7528](./Day76-90/77.Pandas\u7684\u5e94\u7528.md)\n\n#### Day78 - [NumPy\u548cSciPy\u7684\u5e94\u7528](./Day76-90/78.NumPy\u548cSciPy\u7684\u5e94\u7528)\n\n#### Day79 - [Matplotlib\u548c\u6570\u636e\u53ef\u89c6\u5316](./Day76-90/79.Matplotlib\u548c\u6570\u636e\u53ef\u89c6\u5316)\n\n#### Day80 - [k\u6700\u8fd1\u90bb(KNN)\u5206\u7c7b](./Day76-90/80.k\u6700\u8fd1\u90bb\u5206\u7c7b.md)\n\n#### Day81 - [\u51b3\u7b56\u6811](./Day76-90/81.\u51b3\u7b56\u6811.md)\n\n#### Day82 - [\u8d1d\u53f6\u65af\u5206\u7c7b](./Day76-90/82.\u8d1d\u53f6\u65af\u5206\u7c7b.md)\n\n#### Day83 - [\u652f\u6301\u5411\u91cf\u673a(SVM)](./Day76-90/83.\u652f\u6301\u5411\u91cf\u673a.md)\n\n#### Day84 - [K-\u5747\u503c\u805a\u7c7b](./Day76-90/84.K-\u5747\u503c\u805a\u7c7b.md)\n\n#### Day85 - [\u56de\u5f52\u5206\u6790](./Day76-90/85.\u56de\u5f52\u5206\u6790.md)\n\n#### Day86 - [\u5927\u6570\u636e\u5206\u6790\u5165\u95e8](./Day76-90/86.\u5927\u6570\u636e\u5206\u6790\u5165\u95e8.md)\n\n#### Day87 - [\u5927\u6570\u636e\u5206\u6790\u8fdb\u9636](./Day76-90/87.\u5927\u6570\u636e\u5206\u6790\u8fdb\u9636.md)\n\n#### Day88 - [Tensorflow\u5165\u95e8](./Day76-90/88.Tensorflow\u5165\u95e8.md)\n\n#### Day89 - [Tensorflow\u5b9e\u6218](./Day76-90/89.Tensorflow\u5b9e\u6218.md)\n\n#### Day90 - [\u63a8\u8350\u7cfb\u7edf\u5b9e\u6218](./Day76-90/90.\u63a8\u8350\u7cfb\u7edf\u5b9e\u6218.md)\n\n### Day91~100 - [\u56e2\u961f\u9879\u76ee\u5f00\u53d1](./Day91-100)\n\n#### \u7b2c91\u5929\uff1a[\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848](./Day91-100/91.\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848.md)\n\n1. \u8f6f\u4ef6\u8fc7\u7a0b\u6a21\u578b\n   - \u7ecf\u5178\u8fc7\u7a0b\u6a21\u578b\uff08\u7011\u5e03\u6a21\u578b\uff09\n     - \u53ef\u884c\u6027\u5206\u6790\uff08\u7814\u7a76\u505a\u8fd8\u662f\u4e0d\u505a\uff09\uff0c\u8f93\u51fa\u300a\u53ef\u884c\u6027\u5206\u6790\u62a5\u544a\u300b\u3002\n     - \u9700\u6c42\u5206\u6790\uff08\u7814\u7a76\u505a\u4ec0\u4e48\uff09\uff0c\u8f93\u51fa\u300a\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u300b\u548c\u4ea7\u54c1\u754c\u9762\u539f\u578b\u56fe\u3002\n     - \u6982\u8981\u8bbe\u8ba1\u548c\u8be6\u7ec6\u8bbe\u8ba1\uff0c\u8f93\u51fa\u6982\u5ff5\u6a21\u578b\u56fe\uff08ER\u56fe\uff09\u3001\u7269\u7406\u6a21\u578b\u56fe\u3001\u7c7b\u56fe\u3001\u65f6\u5e8f\u56fe\u7b49\u3002\n     - \u7f16\u7801 / \u6d4b\u8bd5\u3002\n     - \u4e0a\u7ebf / \u7ef4\u62a4\u3002\n\n     \u7011\u5e03\u6a21\u578b\u6700\u5927\u7684\u7f3a\u70b9\u662f\u65e0\u6cd5\u62e5\u62b1\u9700\u6c42\u53d8\u5316\uff0c\u6574\u5957\u6d41\u7a0b\u7ed3\u675f\u540e\u624d\u80fd\u770b\u5230\u4ea7\u54c1\uff0c\u56e2\u961f\u58eb\u6c14\u4f4e\u843d\u3002\n   - \u654f\u6377\u5f00\u53d1\uff08Scrum\uff09- \u4ea7\u54c1\u6240\u6709\u8005\u3001Scrum Master\u3001\u7814\u53d1\u4eba\u5458 - Sprint\n     - \u4ea7\u54c1\u7684Backlog\uff08\u7528\u6237\u6545\u4e8b\u3001\u4ea7\u54c1\u539f\u578b\uff09\u3002\n     - \u8ba1\u5212\u4f1a\u8bae\uff08\u8bc4\u4f30\u548c\u9884\u7b97\uff09\u3002\n     - \u65e5\u5e38\u5f00\u53d1\uff08\u7ad9\u7acb\u4f1a\u8bae\u3001\u756a\u8304\u5de5\u4f5c\u6cd5\u3001\u7ed3\u5bf9\u7f16\u7a0b\u3001\u6d4b\u8bd5\u5148\u884c\u3001\u4ee3\u7801\u91cd\u6784\u2026\u2026\uff09\u3002\n     - \u4fee\u590dbug\uff08\u95ee\u9898\u63cf\u8ff0\u3001\u91cd\u73b0\u6b65\u9aa4\u3001\u6d4b\u8bd5\u4eba\u5458\u3001\u88ab\u6307\u6d3e\u4eba\uff09\u3002\n     - \u53d1\u5e03\u7248\u672c\u3002\n     - \u8bc4\u5ba1\u4f1a\u8bae\uff08Showcase\uff0c\u7528\u6237\u9700\u8981\u53c2\u4e0e\uff09\u3002\n     - \u56de\u987e\u4f1a\u8bae\uff08\u5bf9\u5f53\u524d\u8fed\u4ee3\u5468\u671f\u505a\u4e00\u4e2a\u603b\u7ed3\uff09\u3002\n\n     > \u8865\u5145\uff1a\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u5ba3\u8a00\n     >\n     > - **\u4e2a\u4f53\u548c\u4e92\u52a8** \u9ad8\u4e8e \u6d41\u7a0b\u548c\u5de5\u5177\n     > - **\u5de5\u4f5c\u7684\u8f6f\u4ef6** \u9ad8\u4e8e \u8be6\u5c3d\u7684\u6587\u6863\n     > - **\u5ba2\u6237\u5408\u4f5c** \u9ad8\u4e8e \u5408\u540c\u8c08\u5224\n     > - **\u54cd\u5e94\u53d8\u5316** \u9ad8\u4e8e \u9075\u5faa\u8ba1\u5212\n\n     ![](./res/agile-scrum-sprint-cycle.png)\n\n     > \u89d2\u8272\uff1a\u4ea7\u54c1\u6240\u6709\u8005\uff08\u51b3\u5b9a\u505a\u4ec0\u4e48\uff0c\u80fd\u5bf9\u9700\u6c42\u62cd\u677f\u7684\u4eba\uff09\u3001\u56e2\u961f\u8d1f\u8d23\u4eba\uff08\u89e3\u51b3\u5404\u79cd\u95ee\u9898\uff0c\u4e13\u6ce8\u5982\u4f55\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u5c4f\u853d\u5916\u90e8\u5bf9\u5f00\u53d1\u56e2\u961f\u7684\u5f71\u54cd\uff09\u3001\u5f00\u53d1\u56e2\u961f\uff08\u9879\u76ee\u6267\u884c\u4eba\u5458\uff0c\u5177\u4f53\u6307\u5f00\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\uff09\u3002\n\n     > \u51c6\u5907\u5de5\u4f5c\uff1a\u5546\u4e1a\u6848\u4f8b\u548c\u8d44\u91d1\u3001\u5408\u540c\u3001\u61a7\u61ac\u3001\u521d\u59cb\u4ea7\u54c1\u9700\u6c42\u3001\u521d\u59cb\u53d1\u5e03\u8ba1\u5212\u3001\u5165\u80a1\u3001\u7ec4\u5efa\u56e2\u961f\u3002\n\n     >  \u654f\u6377\u56e2\u961f\u901a\u5e38\u4eba\u6570\u4e3a8-10\u4eba\u3002\n\n     >  \u5de5\u4f5c\u91cf\u4f30\u7b97\uff1a\u5c06\u5f00\u53d1\u4efb\u52a1\u91cf\u5316\uff0c\u5305\u62ec\u539f\u578b\u3001Logo\u8bbe\u8ba1\u3001UI\u8bbe\u8ba1\u3001\u524d\u7aef\u5f00\u53d1\u7b49\uff0c\u5c3d\u91cf\u628a\u6bcf\u4e2a\u5de5\u4f5c\u5206\u89e3\u5230\u6700\u5c0f\u4efb\u52a1\u91cf\uff0c\u6700\u5c0f\u4efb\u52a1\u91cf\u6807\u51c6\u4e3a\u5de5\u4f5c\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7\u4e24\u5929\uff0c\u7136\u540e\u4f30\u7b97\u603b\u4f53\u9879\u76ee\u65f6\u95f4\u3002\u628a\u6bcf\u4e2a\u4efb\u52a1\u90fd\u8d34\u5728\u770b\u677f\u4e0a\u9762\uff0c\u770b\u677f\u4e0a\u5206\u4e09\u90e8\u5206\uff1ato do\uff08\u5f85\u5b8c\u6210\uff09\u3001in progress\uff08\u8fdb\u884c\u4e2d\uff09\u548cdone\uff08\u5df2\u5b8c\u6210\uff09\u3002\n\n2. \u9879\u76ee\u56e2\u961f\u7ec4\u5efa\n\n   - \u56e2\u961f\u7684\u6784\u6210\u548c\u89d2\u8272\n\n     > \u8bf4\u660e\uff1a\u8c22\u8c22**\u4ed8\u7965\u82f1**\u5973\u58eb\u5e2e\u52a9\u6211\u7ed8\u5236\u4e86\u4e0b\u9762\u8fd9\u5f20\u7cbe\u7f8e\u7684\u516c\u53f8\u7ec4\u7ec7\u67b6\u6784\u56fe\u3002\n\n     ![company_architecture](./res/company_architecture.png)\n\n   - \u7f16\u7a0b\u89c4\u8303\u548c\u4ee3\u7801\u5ba1\u67e5\uff08flake8\u3001pylint\uff09\n\n     ![](./res/pylint.png)\n\n   - Python\u4e2d\u7684\u4e00\u4e9b\u201c\u60ef\u4f8b\u201d\uff08\u8bf7\u53c2\u8003[\u300aPython\u60ef\u4f8b-\u5982\u4f55\u7f16\u5199Pythonic\u7684\u4ee3\u7801\u300b](Python\u60ef\u4f8b.md)\uff09\n\n   - \u5f71\u54cd\u4ee3\u7801\u53ef\u8bfb\u6027\u7684\u539f\u56e0\uff1a\n\n     - \u4ee3\u7801\u6ce8\u91ca\u592a\u5c11\u6216\u8005\u6ca1\u6709\u6ce8\u91ca\n     - \u4ee3\u7801\u7834\u574f\u4e86\u8bed\u8a00\u7684\u6700\u4f73\u5b9e\u8df5\n     - \u53cd\u6a21\u5f0f\u7f16\u7a0b\uff08\u610f\u5927\u5229\u9762\u4ee3\u7801\u3001\u590d\u5236-\u9ecf\u8d34\u7f16\u7a0b\u3001\u81ea\u8d1f\u7f16\u7a0b\u3001\u2026\u2026\uff09\n\n3. \u56e2\u961f\u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd\n   - \u7248\u672c\u63a7\u5236\uff1aGit\u3001Mercury\n   - \u7f3a\u9677\u7ba1\u7406\uff1a[Gitlab](https://about.gitlab.com/)\u3001[Redmine](http://www.redmine.org.cn/)\n   - \u654f\u6377\u95ed\u73af\u5de5\u5177\uff1a[\u7985\u9053](https://www.zentao.net/)\u3001[JIRA](https://www.atlassian.com/software/jira/features)\n   - \u6301\u7eed\u96c6\u6210\uff1a[Jenkins](https://jenkins.io/)\u3001[Travis-CI](https://travis-ci.org/)\n\n   \u8bf7\u53c2\u8003[\u300a\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u300b](Day91-100/91.\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848.md)\u3002\n\n##### \u9879\u76ee\u9009\u9898\u548c\u7406\u89e3\u4e1a\u52a1\n\n1. \u9009\u9898\u8303\u56f4\u8bbe\u5b9a\n\n   - CMS\uff08\u7528\u6237\u7aef\uff09\uff1a\u65b0\u95fb\u805a\u5408\u7f51\u7ad9\u3001\u95ee\u7b54/\u5206\u4eab\u793e\u533a\u3001\u5f71\u8bc4/\u4e66\u8bc4\u7f51\u7ad9\u7b49\u3002\n   - MIS\uff08\u7528\u6237\u7aef+\u7ba1\u7406\u7aef\uff09\uff1aKMS\u3001KPI\u8003\u6838\u7cfb\u7edf\u3001HRS\u3001CRM\u7cfb\u7edf\u3001\u4f9b\u5e94\u94fe\u7cfb\u7edf\u3001\u4ed3\u50a8\u7ba1\u7406\u7cfb\u7edf\u7b49\u3002\n\n   - App\u540e\u53f0\uff08\u7ba1\u7406\u7aef+\u6570\u636e\u63a5\u53e3\uff09\uff1a\u4e8c\u624b\u4ea4\u6613\u7c7b\u3001\u62a5\u520a\u6742\u5fd7\u7c7b\u3001\u5c0f\u4f17\u7535\u5546\u7c7b\u3001\u65b0\u95fb\u8d44\u8baf\u7c7b\u3001\u65c5\u6e38\u7c7b\u3001\u793e\u4ea4\u7c7b\u3001\u9605\u8bfb\u7c7b\u7b49\u3002\n   - \u5176\u4ed6\u7c7b\u578b\uff1a\u81ea\u8eab\u884c\u4e1a\u80cc\u666f\u548c\u5de5\u4f5c\u7ecf\u9a8c\u3001\u4e1a\u52a1\u5bb9\u6613\u7406\u89e3\u548c\u628a\u63a7\u3002\n\n2. \u9700\u6c42\u7406\u89e3\u3001\u6a21\u5757\u5212\u5206\u548c\u4efb\u52a1\u5206\u914d\n\n   - \u9700\u6c42\u7406\u89e3\uff1a\u5934\u8111\u98ce\u66b4\u548c\u7ade\u54c1\u5206\u6790\u3002\n   - \u6a21\u5757\u5212\u5206\uff1a\u753b\u601d\u7ef4\u5bfc\u56fe\uff08XMind\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u662f\u4e00\u4e2a\u679d\u8282\u70b9\uff0c\u6bcf\u4e2a\u5177\u4f53\u7684\u529f\u80fd\u662f\u4e00\u4e2a\u53f6\u8282\u70b9\uff08\u7528\u52a8\u8bcd\u8868\u8ff0\uff09\uff0c\u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u53f6\u8282\u70b9\u65e0\u6cd5\u518d\u751f\u51fa\u65b0\u8282\u70b9\uff0c\u786e\u5b9a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u91cd\u8981\u6027\u3001\u4f18\u5148\u7ea7\u548c\u5de5\u4f5c\u91cf\u3002\n   - \u4efb\u52a1\u5206\u914d\uff1a\u7531\u9879\u76ee\u8d1f\u8d23\u4eba\u6839\u636e\u4e0a\u9762\u7684\u6307\u6807\u4e3a\u6bcf\u4e2a\u56e2\u961f\u6210\u5458\u5206\u914d\u4efb\u52a1\u3002\n\n   ![](./res/requirements_by_xmind.png)\n\n3. \u5236\u5b9a\u9879\u76ee\u8fdb\u5ea6\u8868\uff08\u6bcf\u65e5\u66f4\u65b0\uff09\n\n   | \u6a21\u5757 | \u529f\u80fd     | \u4eba\u5458   | \u72b6\u6001     | \u5b8c\u6210 | \u5de5\u65f6 | \u8ba1\u5212\u5f00\u59cb | \u5b9e\u9645\u5f00\u59cb | \u8ba1\u5212\u7ed3\u675f | \u5b9e\u9645\u7ed3\u675f | \u5907\u6ce8             |\n   | ---- | -------- | ------ | -------- | ---- | ---- | -------- | -------- | -------- | -------- | ---------------- |\n   | \u8bc4\u8bba | \u6dfb\u52a0\u8bc4\u8bba | \u738b\u5927\u9524 | \u6b63\u5728\u8fdb\u884c | 50%  | 4    | 2018/8/7 |          | 2018/8/7 |          |                  |\n   |      | \u5220\u9664\u8bc4\u8bba | \u738b\u5927\u9524 | \u7b49\u5f85     | 0%   | 2    | 2018/8/7 |          | 2018/8/7 |          |                  |\n   |      | \u67e5\u770b\u8bc4\u8bba | \u767d\u5143\u82b3 | \u6b63\u5728\u8fdb\u884c | 20%  | 4    | 2018/8/7 |          | 2018/8/7 |          | \u9700\u8981\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5 |\n   |      | \u8bc4\u8bba\u6295\u7968 | \u767d\u5143\u82b3 | \u7b49\u5f85     | 0%   | 4    | 2018/8/8 |          | 2018/8/8 |          |                  |\n\n4. OOAD\u548c\u6570\u636e\u5e93\u8bbe\u8ba1\n\n  - UML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u7c7b\u56fe\n\n    ![uml](./res/uml-class-diagram.png)\n\n  - \u901a\u8fc7\u6a21\u578b\u521b\u5efa\u8868\uff08\u6b63\u5411\u5de5\u7a0b\uff09\n\n    ```Shell\n    python manage.py makemigrations app\n    python manage.py migrate\n    ```\n\n  - \u4f7f\u7528PowerDesigner\u7ed8\u5236\u7269\u7406\u6a21\u578b\u56fe\u3002\n\n    ![](./res/power-designer-pdm.png)\n\n  - \u901a\u8fc7\u6570\u636e\u8868\u521b\u5efa\u6a21\u578b\uff08\u53cd\u5411\u5de5\u7a0b\uff09\n\n    ```Shell\n    python manage.py inspectdb > app/models.py\n    ```\n\n#### \u7b2c92\u5929\uff1a[Docker\u5bb9\u5668\u8be6\u89e3](./Day91-100/92.Docker\u5bb9\u5668\u8be6\u89e3.md)\n\n1. Docker\u7b80\u4ecb\n2. \u5b89\u88c5Docker\n3. \u4f7f\u7528Docker\u521b\u5efa\u5bb9\u5668\uff08Nginx\u3001MySQL\u3001Redis\u3001Gitlab\u3001Jenkins\uff09\n4. \u6784\u5efaDocker\u955c\u50cf\uff08Dockerfile\u7684\u7f16\u5199\u548c\u76f8\u5173\u6307\u4ee4\uff09\n5. \u5bb9\u5668\u7f16\u6392\uff08Docker-compose\uff09\n6. \u96c6\u7fa4\u7ba1\u7406\uff08Kubernetes\uff09\n\n#### \u7b2c93\u5929\uff1a[MySQL\u6027\u80fd\u4f18\u5316](./Day91-100/93.MySQL\u6027\u80fd\u4f18\u5316.md)\n\n#### \u7b2c94\u5929\uff1a[\u7f51\u7edcAPI\u63a5\u53e3\u8bbe\u8ba1](./Day91-100/94.\u7f51\u7edcAPI\u63a5\u53e3\u8bbe\u8ba1.md)\n\n#### \u7b2c95\u5929\uff1a[\u4f7f\u7528Django\u5f00\u53d1\u5546\u4e1a\u9879\u76ee](./Day91-100/95.\u4f7f\u7528Django\u5f00\u53d1\u5546\u4e1a\u9879\t\u76ee.md)\n\n##### \u9879\u76ee\u5f00\u53d1\u4e2d\u7684\u516c\u5171\u95ee\u9898\n\n1. \u6570\u636e\u5e93\u7684\u914d\u7f6e\uff08\u591a\u6570\u636e\u5e93\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6570\u636e\u5e93\u8def\u7531\uff09\n2. \u7f13\u5b58\u7684\u914d\u7f6e\uff08\u5206\u533a\u7f13\u5b58\u3001\u952e\u8bbe\u7f6e\u3001\u8d85\u65f6\u8bbe\u7f6e\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6545\u969c\u6062\u590d\uff08\u54e8\u5175\uff09\uff09\n3. \u65e5\u5fd7\u7684\u914d\u7f6e\n4. \u5206\u6790\u548c\u8c03\u8bd5\uff08Django-Debug-ToolBar\uff09\n5. \u597d\u7528\u7684Python\u6a21\u5757\uff08\u65e5\u671f\u8ba1\u7b97\u3001\u56fe\u50cf\u5904\u7406\u3001\u6570\u636e\u52a0\u5bc6\u3001\u4e09\u65b9API\uff09\n\n##### REST API\u8bbe\u8ba1\n\n1. RESTful\u67b6\u6784\n   - [\u7406\u89e3RESTful\u67b6\u6784](http://www.ruanyifeng.com/blog/2011/09/restful.html)\n   - [RESTful API\u8bbe\u8ba1\u6307\u5357](http://www.ruanyifeng.com/blog/2014/05/restful_api.html)\n   - [RESTful API\u6700\u4f73\u5b9e\u8df5](http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html)\n2. API\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n   - [RAP2](http://rap2.taobao.org/)\n   - [YAPI](http://yapi.demo.qunar.com/)\n3. [django-REST-framework](https://www.django-rest-framework.org/)\u7684\u5e94\u7528\n\n##### \u9879\u76ee\u4e2d\u7684\u91cd\u70b9\u96be\u70b9\u5256\u6790\n\n1. \u4f7f\u7528\u7f13\u5b58\u7f13\u89e3\u6570\u636e\u5e93\u538b\u529b - Redis\n2. \u4f7f\u7528\u6d88\u606f\u961f\u5217\u505a\u89e3\u8026\u5408\u548c\u524a\u5cf0 - Celery + RabbitMQ\n\n#### \u7b2c96\u5929\uff1a[\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u81ea\u52a8\u5316\u6d4b\u8bd5](Day91-100/96.\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u81ea\u52a8\u5316\u6d4b\u8bd5.md)\n\n##### \u5355\u5143\u6d4b\u8bd5\n\n1. \u6d4b\u8bd5\u7684\u79cd\u7c7b\n2. \u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff08unittest\u3001pytest\u3001nose2\u3001tox\u3001ddt\u3001\u2026\u2026\uff09\n3. \u6d4b\u8bd5\u8986\u76d6\u7387\uff08coverage\uff09\n\n##### \u9879\u76ee\u90e8\u7f72\n\n1. \u90e8\u7f72\u524d\u7684\u51c6\u5907\u5de5\u4f5c\n   - \u5173\u952e\u8bbe\u7f6e\uff08SECRET_KEY / DEBUG / ALLOWED_HOSTS / \u7f13\u5b58 / \u6570\u636e\u5e93\uff09\n   - HTTPS / CSRF_COOKIE_SECUR  / SESSION_COOKIE_SECURE  \n   - \u65e5\u5fd7\u76f8\u5173\u914d\u7f6e\n2. Linux\u5e38\u7528\u547d\u4ee4\u56de\u987e\n3. Linux\u5e38\u7528\u670d\u52a1\u7684\u5b89\u88c5\u548c\u914d\u7f6e\n4. uWSGI/Gunicorn\u548cNginx\u7684\u4f7f\u7528\n   - Gunicorn\u548cuWSGI\u7684\u6bd4\u8f83\n     - \u5bf9\u4e8e\u4e0d\u9700\u8981\u5927\u91cf\u5b9a\u5236\u5316\u7684\u7b80\u5355\u5e94\u7528\u7a0b\u5e8f\uff0cGunicorn\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0cuWSGI\u7684\u5b66\u4e60\u66f2\u7ebf\u6bd4Gunicorn\u8981\u9661\u5ced\u5f97\u591a\uff0cGunicorn\u7684\u9ed8\u8ba4\u53c2\u6570\u5c31\u5df2\u7ecf\u80fd\u591f\u9002\u5e94\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002\n     - uWSGI\u652f\u6301\u5f02\u6784\u90e8\u7f72\u3002\n     - \u7531\u4e8eNginx\u672c\u8eab\u652f\u6301uWSGI\uff0c\u5728\u7ebf\u4e0a\u4e00\u822c\u90fd\u5c06Nginx\u548cuWSGI\u6346\u7ed1\u5728\u4e00\u8d77\u90e8\u7f72\uff0c\u800c\u4e14uWSGI\u5c5e\u4e8e\u529f\u80fd\u9f50\u5168\u4e14\u9ad8\u5ea6\u5b9a\u5236\u7684WSGI\u4e2d\u95f4\u4ef6\u3002\n     - \u5728\u6027\u80fd\u4e0a\uff0cGunicorn\u548cuWSGI\u5176\u5b9e\u8868\u73b0\u76f8\u5f53\u3002\n5. \u4f7f\u7528\u865a\u62df\u5316\u6280\u672f\uff08Docker\uff09\u90e8\u7f72\u6d4b\u8bd5\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883\n\n##### \u6027\u80fd\u6d4b\u8bd5\n\n1. AB\u7684\u4f7f\u7528\n2. SQLslap\u7684\u4f7f\u7528\n3. sysbench\u7684\u4f7f\u7528\n\n##### \u81ea\u52a8\u5316\u6d4b\u8bd5\n\n1. \u4f7f\u7528Shell\u548cPython\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\n2. \u4f7f\u7528Selenium\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\n   - Selenium IDE\n   - Selenium WebDriver\n   - Selenium Remote Control\n3. \u6d4b\u8bd5\u5de5\u5177Robot Framework\u4ecb\u7ecd\n\n#### \u7b2c97\u5929\uff1a[\u7535\u5546\u7f51\u7ad9\u6280\u672f\u8981\u70b9\u5256\u6790](./Day91-100/97.\u7535\u5546\u7f51\u7ad9\u6280\u672f\u8981\u70b9\u5256\u6790.md)\n\n#### \u7b2c98\u5929\uff1a[\u9879\u76ee\u90e8\u7f72\u4e0a\u7ebf\u548c\u6027\u80fd\u8c03\u4f18](./Day91-100/98.\u9879\u76ee\u90e8\u7f72\u4e0a\u7ebf\u548c\u6027\u80fd\u8c03\u4f18.md)\n\n1. MySQL\u6570\u636e\u5e93\u8c03\u4f18\n2. Web\u670d\u52a1\u5668\u6027\u80fd\u4f18\u5316\n   - Nginx\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\n   - Keepalived\u5b9e\u73b0\u9ad8\u53ef\u7528\n3. \u4ee3\u7801\u6027\u80fd\u8c03\u4f18\n   - \u591a\u7ebf\u7a0b\n   - \u5f02\u6b65\u5316\n4. \u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u4f18\u5316\n   - \u4e91\u5b58\u50a8\n   - CDN\n\n#### \u7b2c99\u5929\uff1a[\u9762\u8bd5\u4e2d\u7684\u516c\u5171\u95ee\u9898](./Day91-100/99.\u9762\u8bd5\u4e2d\u7684\u516c\u5171\u95ee\u9898.md)\n\n#### \u7b2c100\u5929\uff1a[Python\u9762\u8bd5\u9898\u96c6](./Day91-100/100.Python\u9762\u8bd5\u9898\u96c6.md)\n\n"
 },
 {
  "repo": "jwasham/coding-interview-university",
  "language": null,
  "readme_contents": "# Coding Interview University\n\n> I originally created this as a short to-do list of study topics for becoming a software engineer,\n> but it grew to the large list you see today. After going through this study plan, [I got hired\n> as a Software Development Engineer at Amazon](https://startupnextdoor.com/ive-been-acquired-by-amazon/?src=ciu)!\n> You probably won't have to study as much as I did. Anyway, everything you need is here.\n>\n> I studied about 8-12 hours a day, for several months. This is my story: [Why I studied full-time for 8 months for a Google interview](https://medium.freecodecamp.org/why-i-studied-full-time-for-8-months-for-a-google-interview-cc662ce9bb13)\n>\n> The items listed here will prepare you well for a technical interview at just about any software company,\n> including the giants: Amazon, Facebook, Google, and Microsoft.\n>\n> *Best of luck to you!*\n\n<details>\n<summary>Translations:</summary>\n\n- [\u4e2d\u6587\u7248\u672c](translations/README-cn.md)\n- [Ti\u1ebfng Vi\u1ec7t - Vietnamese](translations/README-vi.md)\n- [Espa\u00f1ol](translations/README-es.md)\n- [Portugu\u00eas Brasileiro](translations/README-ptbr.md)\n- [Polish](translations/README-pl.md)\n\n</details>\n\n<details>\n<summary>Translations in progress:</summary>\n\n- [\u0939\u093f\u0928\u094d\u0926\u0940](https://github.com/jwasham/coding-interview-university/issues/81)\n- [\u05e2\u05d1\u05e8\u05d9\u05ea](https://github.com/jwasham/coding-interview-university/issues/82)\n- [Bahasa Indonesia](https://github.com/jwasham/coding-interview-university/issues/101)\n- [Arabic](https://github.com/jwasham/coding-interview-university/issues/98)\n- [Turkish](https://github.com/jwasham/coding-interview-university/issues/90)\n- [French](https://github.com/jwasham/coding-interview-university/issues/89)\n- [Russian](https://github.com/jwasham/coding-interview-university/issues/87)\n- [Ukrainian](https://github.com/jwasham/coding-interview-university/issues/106)\n- [Korean(\ud55c\uad6d\uc5b4)](https://github.com/jwasham/coding-interview-university/issues/118)\n- [Telugu](https://github.com/jwasham/coding-interview-university/issues/117)\n- [Urdu](https://github.com/jwasham/coding-interview-university/issues/140)\n- [Thai](https://github.com/jwasham/coding-interview-university/issues/156)\n- [Greek](https://github.com/jwasham/coding-interview-university/issues/166)\n- [Italian](https://github.com/jwasham/coding-interview-university/issues/170)\n- [Malayalam](https://github.com/jwasham/coding-interview-university/issues/239)\n- [Japanese (\u65e5\u672c\u8a9e)](https://github.com/jwasham/coding-interview-university/issues/257)\n\n</details>\n\n## What is it?\n\nThis is my multi-month study plan for going from web developer (self-taught, no CS degree) to software engineer for a large company.\n\n![Coding at the whiteboard - from HBO's Silicon Valley](https://d3j2pkmjtin6ou.cloudfront.net/coding-at-the-whiteboard-silicon-valley.png)\n\nThis is meant for **new software engineers** or those switching from\nsoftware/web development to software engineering (where computer science knowledge is required). If you have\nmany years of experience and are claiming many years of software engineering experience, expect a harder interview.\n\nIf you have many years of software/web development experience, note that large software companies like Google, Amazon,\nFacebook and Microsoft view software engineering as different from software/web development, and they require computer science knowledge.\n\nIf you want to be a reliability engineer or operations engineer, study more from the optional list (networking, security).\n\n---\n\n## Table of Contents\n\n- [What is it?](#what-is-it)\n- [Why use it?](#why-use-it)\n- [How to use it](#how-to-use-it)\n- [Don't feel you aren't smart enough](#dont-feel-you-arent-smart-enough)\n- [About Video Resources](#about-video-resources)\n- [Interview Process & General Interview Prep](#interview-process--general-interview-prep)\n- [Pick One Language for the Interview](#pick-one-language-for-the-interview)\n- [Book List](#book-list)\n- [Before you Get Started](#before-you-get-started)\n- [What you Won't See Covered](#what-you-wont-see-covered)\n- [Prerequisite Knowledge](#prerequisite-knowledge)\n- [The Daily Plan](#the-daily-plan)\n- [Algorithmic complexity / Big-O / Asymptotic analysis](#algorithmic-complexity--big-o--asymptotic-analysis)\n- [Data Structures](#data-structures)\n    - [Arrays](#arrays)\n    - [Linked Lists](#linked-lists)\n    - [Stack](#stack)\n    - [Queue](#queue)\n    - [Hash table](#hash-table)\n- [More Knowledge](#more-knowledge)\n    - [Binary search](#binary-search)\n    - [Bitwise operations](#bitwise-operations)\n- [Trees](#trees)\n    - [Trees - Notes & Background](#trees---notes--background)\n    - [Binary search trees: BSTs](#binary-search-trees-bsts)\n    - [Heap / Priority Queue / Binary Heap](#heap--priority-queue--binary-heap)\n    - balanced search trees (general concept, not details)\n    - traversals: preorder, inorder, postorder, BFS, DFS\n- [Sorting](#sorting)\n    - selection\n    - insertion\n    - heapsort\n    - quicksort\n    - merge sort\n- [Graphs](#graphs)\n    - directed\n    - undirected\n    - adjacency matrix\n    - adjacency list\n    - traversals: BFS, DFS\n- [Even More Knowledge](#even-more-knowledge)\n    - [Recursion](#recursion)\n    - [Dynamic Programming](#dynamic-programming)\n    - [Object-Oriented Programming](#object-oriented-programming)\n    - [Design Patterns](#design-patterns)\n    - [Combinatorics (n choose k) & Probability](#combinatorics-n-choose-k--probability)\n    - [NP, NP-Complete and Approximation Algorithms](#np-np-complete-and-approximation-algorithms)\n    - [Caches](#caches)\n    - [Processes and Threads](#processes-and-threads)\n    - [Testing](#testing)\n    - [Scheduling](#scheduling)\n    - [String searching & manipulations](#string-searching--manipulations)\n    - [Tries](#tries)\n    - [Floating Point Numbers](#floating-point-numbers)\n    - [Unicode](#unicode)\n    - [Endianness](#endianness)\n    - [Networking](#networking)\n- [System Design, Scalability, Data Handling](#system-design-scalability-data-handling) (if you have 4+ years experience)\n- [Final Review](#final-review)\n- [Coding Question Practice](#coding-question-practice)\n- [Coding exercises/challenges](#coding-exerciseschallenges)\n- [Once you're closer to the interview](#once-youre-closer-to-the-interview)\n- [Your Resume](#your-resume)\n- [Be thinking of for when the interview comes](#be-thinking-of-for-when-the-interview-comes)\n- [Have questions for the interviewer](#have-questions-for-the-interviewer)\n- [Once You've Got The Job](#once-youve-got-the-job)\n\n---------------- Everything below this point is optional ----------------\n\n## Additional Resources\n\n- [Additional Books](#additional-books)\n- [Additional Learning](#additional-learning)\n    - [Compilers](#compilers)\n    - [Emacs and vi(m)](#emacs-and-vim)\n    - [Unix command line tools](#unix-command-line-tools)\n    - [Information theory](#information-theory-videos)\n    - [Parity & Hamming Code](#parity--hamming-code-videos)\n    - [Entropy](#entropy)\n    - [Cryptography](#cryptography)\n    - [Compression](#compression)\n    - [Computer Security](#computer-security)\n    - [Garbage collection](#garbage-collection)\n    - [Parallel Programming](#parallel-programming)\n    - [Messaging, Serialization, and Queueing Systems](#messaging-serialization-and-queueing-systems)\n    - [A*](#a)\n    - [Fast Fourier Transform](#fast-fourier-transform)\n    - [Bloom Filter](#bloom-filter)\n    - [HyperLogLog](#hyperloglog)\n    - [Locality-Sensitive Hashing](#locality-sensitive-hashing)\n    - [van Emde Boas Trees](#van-emde-boas-trees)\n    - [Augmented Data Structures](#augmented-data-structures)\n    - [Balanced search trees](#balanced-search-trees)\n        - AVL trees\n        - Splay trees\n        - Red/black trees\n        - 2-3 search trees\n        - 2-3-4 Trees (aka 2-4 trees)\n        - N-ary (K-ary, M-ary) trees\n        - B-Trees\n    - [k-D Trees](#k-d-trees)\n    - [Skip lists](#skip-lists)\n    - [Network Flows](#network-flows)\n    - [Disjoint Sets & Union Find](#disjoint-sets--union-find)\n    - [Math for Fast Processing](#math-for-fast-processing)\n    - [Treap](#treap)\n    - [Linear Programming](#linear-programming-videos)\n    - [Geometry, Convex hull](#geometry-convex-hull-videos)\n    - [Discrete math](#discrete-math)\n    - [Machine Learning](#machine-learning)\n- [Additional Detail on Some Subjects](#additional-detail-on-some-subjects)\n- [Video Series](#video-series)\n- [Computer Science Courses](#computer-science-courses)\n- [Papers](#papers)\n\n---\n\n## Why use it?\n\nWhen I started this project, I didn't know a stack from a heap, didn't know Big-O anything, anything about trees, or how to\ntraverse a graph. If I had to code a sorting algorithm, I can tell ya it wouldn't have been very good.\nEvery data structure I've ever used was built into the language, and I didn't know how they worked\nunder the hood at all. I've never had to manage memory unless a process I was running would give an \"out of\nmemory\" error, and then I'd have to find a workaround. I've used a few multidimensional arrays in my life and\nthousands of associative arrays, but I've never created data structures from scratch.\n\nIt's a long plan. It may take you months. If you are familiar with a lot of this already it will take you a lot less time.\n\n## How to use it\n\nEverything below is an outline, and you should tackle the items in order from top to bottom.\n\nI'm using Github's special markdown flavor, including tasks lists to check progress.\n\n**Create a new branch so you can check items like this, just put an x in the brackets: [x]**\n\n\n    Fork a branch and follow the commands below\n\n`git checkout -b progress`\n\n`git remote add jwasham https://github.com/jwasham/coding-interview-university`\n\n`git fetch --all`\n\n    Mark all boxes with X after you completed your changes\n\n`git add .`\n\n`git commit -m \"Marked x\"`\n\n`git rebase jwasham/master`\n\n`git push --force`\n\n[More about Github-flavored markdown](https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown)\n\n\n## Don't feel you aren't smart enough\n\n- Successful software engineers are smart, but many have an insecurity that they aren't smart enough.\n- [The myth of the Genius Programmer](https://www.youtube.com/watch?v=0SARbwvhupQ)\n- [It's Dangerous to Go Alone: Battling the Invisible Monsters in Tech](https://www.youtube.com/watch?v=1i8ylq4j_EY)\n\n## About Video Resources\n\nSome videos are available only by enrolling in a Coursera or EdX class. These are called MOOCs.\nSometimes the classes are not in session so you have to wait a couple of months, so you have no access.\n\n    I'd appreciate your help to add free and always-available public sources, such as YouTube videos to accompany the online course videos.\n    I like using university lectures.\n\n\n## Interview Process & General Interview Prep\n\n- [ ] [ABC: Always Be Coding](https://medium.com/always-be-coding/abc-always-be-coding-d5f8051afce2#.4heg8zvm4)\n- [ ] [Whiteboarding](https://medium.com/@dpup/whiteboarding-4df873dbba2e#.hf6jn45g1)\n- [ ] [Demystifying Tech Recruiting](https://www.youtube.com/watch?v=N233T0epWTs)\n- [ ] How to Get a Job at the Big 4:\n    - [ ] [How to Get a Job at the Big 4 - Amazon, Facebook, Google & Microsoft (video)](https://www.youtube.com/watch?v=YJZCUhxNCv8)\n- [ ] Cracking The Coding Interview Set 1:\n    - [ ] [Gayle L McDowell - Cracking The Coding Interview (video)](https://www.youtube.com/watch?v=rEJzOhC5ZtQ)\n    - [ ] [Cracking the Coding Interview with Author Gayle Laakmann McDowell (video)](https://www.youtube.com/watch?v=aClxtDcdpsQ)\n- [ ] Cracking the Facebook Coding Interview\n    - [ ] [The Approach](https://www.youtube.com/watch?v=wCl9kvQGHPI)\n    - [ ] [Problem Walkthrough](https://www.youtube.com/watch?v=4UWDyJq8jZg)\n- [ ] Prep Course:\n    - [ ] [Software Engineer Interview Unleashed (paid course)](https://www.udemy.com/software-engineer-interview-unleashed):\n        - Learn how to make yourself ready for software engineer interviews from a former Google interviewer.\n    - [ ] [Python for Data Structures, Algorithms, and Interviews (paid course)](https://www.udemy.com/python-for-data-structures-algorithms-and-interviews/):\n        - A Python centric interview prep course which covers data structures, algorithms, mock interviews and much more.\n    - [ ] [Intro to Data Structures and Algorithms using Python (Udacity free course)](https://www.udacity.com/course/data-structures-and-algorithms-in-python--ud513):\n        - A free Python centric data structures and algorithms course.\n    - [ ] [Data Structures and Algorithms Nanodegree! (Udacity paid Nanodegree)](https://www.udacity.com/course/data-structures-and-algorithms-nanodegree--nd256):\n        - Get hands-on practice with over 100 data structures and algorithm exercises and guidance from a dedicated mentor to help prepare you for interviews and on-the-job scenarios.\n\n## Pick One Language for the Interview\n\nYou can use a language you are comfortable in to do the coding part of the interview, but for large companies, these are solid choices:\n\n- C++\n- Java\n- Python\n\nYou could also use these, but read around first. There may be caveats:\n\n- JavaScript\n- Ruby\n\nHere is an article I wrote about choosing a language for the interview: [Pick One Language for the Coding Interview](https://startupnextdoor.com/important-pick-one-language-for-the-coding-interview/)\n\nYou need to be very comfortable in the language and be knowledgeable.\n\nRead more about choices:\n- http://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/\n- http://blog.codingforinterviews.com/best-programming-language-jobs/\n\n[See language resources here](programming-language-resources.md)\n\nYou'll see some C, C++, and Python learning included below, because I'm learning. There are a few books involved, see the bottom.\n\n## Book List\n\nThis is a shorter list than what I used. This is abbreviated to save you time.\n\n### Interview Prep\n\n- [ ] [Programming Interviews Exposed: Coding Your Way Through the Interview, 4th Edition](https://www.amazon.com/Programming-Interviews-Exposed-Through-Interview/dp/111941847X/)\n    - answers in C++ and Java\n    - this is a good warm-up for Cracking the Coding Interview\n    - not too difficult, most problems may be easier than what you'll see in an interview (from what I've read)\n- [ ] [Cracking the Coding Interview, 6th Edition](http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/)\n    - answers in Java\n\n### If you have tons of extra time:\n\nChoose one:\n\n- [ ] [Elements of Programming Interviews (C++ version)](https://www.amazon.com/Elements-Programming-Interviews-Insiders-Guide/dp/1479274836)\n- [ ] [Elements of Programming Interviews in Python](https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949/)\n- [ ] Elements of Programming Interviews (Java version)\n    - [book](https://www.amazon.com/Elements-Programming-Interviews-Java-Insiders/dp/1517435803/)\n    - [Companion Project - Method Stub and Test Cases for Every Problem in the Book](https://github.com/gardncl/elements-of-programming-interviews)\n\n### Language Specific\n\n**You need to choose a language for the interview (see above).**\n\nHere are my recommendations by language. I don't have resources for all languages. I welcome additions.\n\nIf you read through one of these, you should have all the data structures and algorithms knowledge you'll need to start doing coding problems.\n**You can skip all the video lectures in this project**, unless you'd like a review.\n\n[Additional language-specific resources here.](programming-language-resources.md)\n\n### C++\n\nI haven't read these two, but they are highly rated and written by Sedgewick. He's awesome.\n\n- [ ] [Algorithms in C++, Parts 1-4: Fundamentals, Data Structure, Sorting, Searching](https://www.amazon.com/Algorithms-Parts-1-4-Fundamentals-Structure/dp/0201350882/)\n- [ ] [Algorithms in C++ Part 5: Graph Algorithms](https://www.amazon.com/Algorithms-Part-Graph-3rd-Pt-5/dp/0201361183/)\n\nIf you have a better recommendation for C++, please let me know. Looking for a comprehensive resource.\n\n### Java\n\n- [ ] [Algorithms (Sedgewick and Wayne)](https://www.amazon.com/Algorithms-4th-Robert-Sedgewick/dp/032157351X/)\n    - videos with book content (and Sedgewick!) on coursera:\n        - [Algorithms I](https://www.coursera.org/learn/algorithms-part1)\n        - [Algorithms II](https://www.coursera.org/learn/algorithms-part2)\n\nOR:\n\n- [ ] [Data Structures and Algorithms in Java](https://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/1118771338/)\n    - by Goodrich, Tamassia, Goldwasser\n    - used as optional text for CS intro course at UC Berkeley\n    - see my book report on the Python version below. This book covers the same topics.\n\n### Python\n\n- [ ] [Data Structures and Algorithms in Python](https://www.amazon.com/Structures-Algorithms-Python-Michael-Goodrich/dp/1118290275/)\n    - by Goodrich, Tamassia, Goldwasser\n    - I loved this book. It covered everything and more.\n    - Pythonic code\n    - my glowing book report: https://startupnextdoor.com/book-report-data-structures-and-algorithms-in-python/\n\n\n## Before you Get Started\n\nThis list grew over many months, and yes, it kind of got out of hand.\n\nHere are some mistakes I made so you'll have a better experience.\n\n### 1. You Won't Remember it All\n\nI watched hours of videos and took copious notes, and months later there was much I didn't remember. I spent 3 days going\nthrough my notes and making flashcards so I could review.\n\nRead please so you won't make my mistakes:\n\n[Retaining Computer Science Knowledge](https://startupnextdoor.com/retaining-computer-science-knowledge/).\n\nA course recommended to me (haven't taken it): [Learning how to Learn](https://www.coursera.org/learn/learning-how-to-learn)\n\n### 2. Use Flashcards\n\nTo solve the problem, I made a little flashcards site where I could add flashcards of 2 types: general and code.\nEach card has different formatting.\n\nI made a mobile-first website so I could review on my phone and tablet, wherever I am.\n\nMake your own for free:\n\n- [Flashcards site repo](https://github.com/jwasham/computer-science-flash-cards)\n- [My flash cards database (old - 1200 cards)](https://github.com/jwasham/computer-science-flash-cards/blob/master/cards-jwasham.db):\n- [My flash cards database (new - 1800 cards)](https://github.com/jwasham/computer-science-flash-cards/blob/master/cards-jwasham-extreme.db):\n\nKeep in mind I went overboard and have cards covering everything from assembly language and Python trivia to machine learning and statistics. It's way too much for what's required.\n\n**Note on flashcards:** The first time you recognize you know the answer, don't mark it as known. You have to see the\nsame card and answer it several times correctly before you really know it. Repetition will put that knowledge deeper in\nyour brain.\n\nAn alternative to using my flashcard site is [Anki](http://ankisrs.net/), which has been recommended to me numerous times. It uses a repetition system to help you remember.\nIt's user-friendly, available on all platforms and has a cloud sync system. It costs $25 on iOS but is free on other platforms.\n\nMy flashcard database in Anki format: https://ankiweb.net/shared/info/25173560 (thanks [@xiewenya](https://github.com/xiewenya))\n\n### 3. Start doing coding interview questions while you're learning data structures and algorithms, \n\nYou need to apply what you're learning to solving problems, or you'll forget. I made this mistake. Once you've learned a topic, \nand feel comfortable with it, like linked lists, open one of the coding interview books and do a couple of questions regarding \nlinked lists. Then move on to the next learning topic. Then later, go back and do another linked list problem, \nor recursion problem, or whatever. But keep doing problems while you're learning. You're not being hired for knowledge, \nbut how you apply the knowledge. There are several books and sites I recommend. \nSee here for more: [Coding Question Practice](#coding-question-practice)\n\n### 4. Review, review, review\n\nI keep a set of cheat sheets on ASCII, OSI stack, Big-O notations, and more. I study them when I have some spare time.\n\nTake a break from programming problems for a half hour and go through your flashcards.\n\n### 5. Focus\n\nThere are a lot of distractions that can take up valuable time. Focus and concentration are hard. Turn on some music \nwithout lyrics and you'll be able to focus pretty well.\n\n## What you won't see covered\n\nThese are prevalent technologies but not part of this study plan:\n\n- SQL\n- Javascript\n- HTML, CSS, and other front-end technologies\n\n## The Daily Plan\n\nSome subjects take one day, and some will take multiple days. Some are just learning with nothing to implement.\n\nEach day I take one subject from the list below, watch videos about that subject, and write an implementation in:\n- C - using structs and functions that take a struct * and something else as args.\n- C++ - without using built-in types\n- C++ - using built-in types, like STL's std::list for a linked list\n- Python - using built-in types (to keep practicing Python)\n- and write tests to ensure I'm doing it right, sometimes just using simple assert() statements\n- You may do Java or something else, this is just my thing.\n\nYou don't need all these. You need only [one language for the interview](#pick-one-language-for-the-interview).\n\nWhy code in all of these?\n- Practice, practice, practice, until I'm sick of it, and can do it with no problem (some have many edge cases and bookkeeping details to remember)\n- Work within the raw constraints (allocating/freeing memory without help of garbage collection (except Python or Java))\n- Make use of built-in types so I have experience using the built-in tools for real-world use (not going to write my own linked list implementation in production)\n\nI may not have time to do all of these for every subject, but I'll try.\n\nYou can see my code here:\n - [C](https://github.com/jwasham/practice-c)\n - [C++](https://github.com/jwasham/practice-cpp)\n - [Python](https://github.com/jwasham/practice-python)\n\nYou don't need to memorize the guts of every algorithm.\n\nWrite code on a whiteboard or paper, not a computer. Test with some sample inputs. Then test it out on a computer.\n\n## Prerequisite Knowledge\n\n- [ ] **Learn C**\n    - C is everywhere. You'll see examples in books, lectures, videos, *everywhere* while you're studying.\n    - [ ] [C Programming Language, Vol 2](https://www.amazon.com/Programming-Language-Brian-W-Kernighan/dp/0131103628)\n        - This is a short book, but it will give you a great handle on the C language and if you practice it a little\n            you'll quickly get proficient. Understanding C helps you understand how programs and memory work.\n        - [answers to questions](https://github.com/lekkas/c-algorithms)\n\n- [ ] **How computers process a program:**\n    - [ ] [How CPU executes a program (video)](https://www.youtube.com/watch?v=XM4lGflQFvA)\n    - [ ] [How computers calculate - ALU (video)](https://youtu.be/1I5ZMmrOfnA)\n    - [ ] [Registers and RAM (video)](https://youtu.be/fpnE6UAfbtU)\n    - [ ] [The Central Processing Unit (CPU) (video)](https://youtu.be/FZGugFqdr60)\n    - [ ] [Instructions and Programs (video)](https://youtu.be/zltgXvg6r3k)\n\n## Algorithmic complexity / Big-O / Asymptotic analysis\n\n- Nothing to implement\n- There are a lot of videos here. Just watch enough until you understand it. You can always come back and review.\n- If some of the lectures are too mathy, you can jump down to the bottom and watch the discrete mathematics videos to get the background knowledge.\n- [ ] [Harvard CS50 - Asymptotic Notation (video)](https://www.youtube.com/watch?v=iOq5kSKqeR4)\n- [ ] [Big O Notations (general quick tutorial) (video)](https://www.youtube.com/watch?v=V6mKVRU1evU)\n- [ ] [Big O Notation (and Omega and Theta) - best mathematical explanation (video)](https://www.youtube.com/watch?v=ei-A_wy5Yxw&index=2&list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN)\n- [ ] Skiena:\n    - [video](https://www.youtube.com/watch?v=gSyDMtdPNpU&index=2&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n    - [slides](http://www3.cs.stonybrook.edu/~algorith/video-lectures/2007/lecture2.pdf)\n- [ ] [A Gentle Introduction to Algorithm Complexity Analysis](http://discrete.gr/complexity/)\n- [ ] [Orders of Growth (video)](https://www.coursera.org/lecture/algorithmic-thinking-1/orders-of-growth-6PKkX)\n- [ ] [Asymptotics (video)](https://www.coursera.org/lecture/algorithmic-thinking-1/asymptotics-bXAtM)\n- [ ] [UC Berkeley Big O (video)](https://archive.org/details/ucberkeley_webcast_VIS4YDpuP98)\n- [ ] [UC Berkeley Big Omega (video)](https://archive.org/details/ucberkeley_webcast_ca3e7UVmeUc)\n- [ ] [Amortized Analysis (video)](https://www.youtube.com/watch?v=B3SpQZaAZP4&index=10&list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN)\n- [ ] [Illustrating \"Big O\" (video)](https://www.coursera.org/lecture/algorithmic-thinking-1/illustrating-big-o-YVqzv)\n- [ ] TopCoder (includes recurrence relations and master theorem):\n    - [Computational Complexity: Section 1](https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-1/)\n    - [Computational Complexity: Section 2](https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-2/)\n- [ ] [Cheat sheet](http://bigocheatsheet.com/)\n\n## Data Structures\n\n- ### Arrays\n    - Implement an automatically resizing vector.\n    - [ ] Description:\n        - [Arrays (video)](https://www.coursera.org/learn/data-structures/lecture/OsBSF/arrays)\n        - [UC Berkeley CS61B - Linear and Multi-Dim Arrays (video)](https://archive.org/details/ucberkeley_webcast_Wp8oiO_CZZE) (Start watching from 15m 32s)\n        - [Basic Arrays (video)](https://archive.org/details/0102WhatYouShouldKnow/02_04-basicArrays.mp4)\n        - [Multi-dim (video)](https://archive.org/details/0102WhatYouShouldKnow/02_05-multidimensionalArrays.mp4)\n        - [Dynamic Arrays (video)](https://www.coursera.org/learn/data-structures/lecture/EwbnV/dynamic-arrays)\n        - [Jagged Arrays (video)](https://www.youtube.com/watch?v=1jtrQqYpt7g)\n        - [Jagged Arrays (video)](https://archive.org/details/0102WhatYouShouldKnow/02_06-jaggedArrays.mp4)\n        - [Resizing arrays (video)](https://archive.org/details/0102WhatYouShouldKnow/03_01-resizableArrays.mp4)\n    - [ ] Implement a vector (mutable array with automatic resizing):\n        - [ ] Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing.\n        - [ ] new raw data array with allocated memory\n            - can allocate int array under the hood, just not use its features\n            - start with 16, or if starting number is greater, use power of 2 - 16, 32, 64, 128\n        - [ ] size() - number of items\n        - [ ] capacity() - number of items it can hold\n        - [ ] is_empty()\n        - [ ] at(index) - returns item at given index, blows up if index out of bounds\n        - [ ] push(item)\n        - [ ] insert(index, item) - inserts item at index, shifts that index's value and trailing elements to the right\n        - [ ] prepend(item) - can use insert above at index 0\n        - [ ] pop() - remove from end, return value\n        - [ ] delete(index) - delete item at index, shifting all trailing elements left\n        - [ ] remove(item) - looks for value and removes index holding it (even if in multiple places)\n        - [ ] find(item) - looks for value and returns first index with that value, -1 if not found\n        - [ ] resize(new_capacity) // private function\n            - when you reach capacity, resize to double the size\n            - when popping an item, if size is 1/4 of capacity, resize to half\n    - [ ] Time\n        - O(1) to add/remove at end (amortized for allocations for more space), index, or update\n        - O(n) to insert/remove elsewhere\n    - [ ] Space\n        - contiguous in memory, so proximity helps performance\n        - space needed = (array capacity, which is >= n) * size of item, but even if 2n, still O(n)\n\n- ### Linked Lists\n    - [ ] Description:\n        - [ ] [Singly Linked Lists (video)](https://www.coursera.org/learn/data-structures/lecture/kHhgK/singly-linked-lists)\n        - [ ] [CS 61B - Linked Lists 1 (video)](https://archive.org/details/ucberkeley_webcast_htzJdKoEmO0)\n        - [ ] [CS 61B - Linked Lists 2 (video)](https://archive.org/details/ucberkeley_webcast_-c4I3gFYe3w)\n    - [ ] [C Code (video)](https://www.youtube.com/watch?v=QN6FPiD0Gzo)\n            - not the whole video, just portions about Node struct and memory allocation.\n    - [ ] Linked List vs Arrays:\n        - [Core Linked Lists Vs Arrays (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/rjBs9/core-linked-lists-vs-arrays)\n        - [In The Real World Linked Lists Vs Arrays (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/QUaUd/in-the-real-world-lists-vs-arrays)\n    - [ ] [why you should avoid linked lists (video)](https://www.youtube.com/watch?v=YQs6IC-vgmo)\n    - [ ] Gotcha: you need pointer to pointer knowledge:\n        (for when you pass a pointer to a function that may change the address where that pointer points)\n        This page is just to get a grasp on ptr to ptr. I don't recommend this list traversal style. Readability and maintainability suffer due to cleverness.\n        - [Pointers to Pointers](https://www.eskimo.com/~scs/cclass/int/sx8.html)\n    - [ ] implement (I did with tail pointer & without):\n        - [ ] size() - returns number of data elements in list\n        - [ ] empty() - bool returns true if empty\n        - [ ] value_at(index) - returns the value of the nth item (starting at 0 for first)\n        - [ ] push_front(value) - adds an item to the front of the list\n        - [ ] pop_front() - remove front item and return its value\n        - [ ] push_back(value) - adds an item at the end\n        - [ ] pop_back() - removes end item and returns its value\n        - [ ] front() - get value of front item\n        - [ ] back() - get value of end item\n        - [ ] insert(index, value) - insert value at index, so current item at that index is pointed to by new item at index\n        - [ ] erase(index) - removes node at given index\n        - [ ] value_n_from_end(n) - returns the value of the node at nth position from the end of the list\n        - [ ] reverse() - reverses the list\n        - [ ] remove_value(value) - removes the first item in the list with this value\n    - [ ] Doubly-linked List\n        - [Description (video)](https://www.coursera.org/learn/data-structures/lecture/jpGKD/doubly-linked-lists)\n        - No need to implement\n\n- ### Stack\n    - [ ] [Stacks (video)](https://www.coursera.org/learn/data-structures/lecture/UdKzQ/stacks)\n    - [ ] [Using Stacks Last-In First-Out (video)](https://archive.org/details/0102WhatYouShouldKnow/05_01-usingStacksForLast-inFirst-out.mp4)\n    - [ ] Will not implement. Implementing with array is trivial.\n\n- ### Queue\n    - [ ] [Using Queues First-In First-Out(video)](https://archive.org/details/0102WhatYouShouldKnow/05_03-usingQueuesForFirst-inFirst-out.mp4)\n    - [ ] [Queue (video)](https://www.coursera.org/lecture/data-structures/queues-EShpq)\n    - [ ] [Circular buffer/FIFO](https://en.wikipedia.org/wiki/Circular_buffer)\n    - [ ] [Priority Queues (video)](https://archive.org/details/0102WhatYouShouldKnow/05_04-priorityQueuesAndDeques.mp4)\n    - [ ] Implement using linked-list, with tail pointer:\n        - enqueue(value) - adds value at position at tail\n        - dequeue() - returns value and removes least recently added element (front)\n        - empty()\n    - [ ] Implement using fixed-sized array:\n        - enqueue(value) - adds item at end of available storage\n        - dequeue() - returns value and removes least recently added element\n        - empty()\n        - full()\n    - [ ] Cost:\n        - a bad implementation using linked list where you enqueue at head and dequeue at tail would be O(n)\n            because you'd need the next to last element, causing a full traversal each dequeue\n        - enqueue: O(1) (amortized, linked list and array [probing])\n        - dequeue: O(1) (linked list and array)\n        - empty: O(1) (linked list and array)\n\n- ### Hash table\n    - [ ] Videos:\n        - [ ] [Hashing with Chaining (video)](https://www.youtube.com/watch?v=0M_kIqhwbFo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=8)\n        - [ ] [Table Doubling, Karp-Rabin (video)](https://www.youtube.com/watch?v=BRO7mVIFt08&index=9&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n        - [ ] [Open Addressing, Cryptographic Hashing (video)](https://www.youtube.com/watch?v=rvdJDijO2Ro&index=10&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n        - [ ] [PyCon 2010: The Mighty Dictionary (video)](https://www.youtube.com/watch?v=C4Kc8xzcA68)\n        - [ ] [(Advanced) Randomization: Universal & Perfect Hashing (video)](https://www.youtube.com/watch?v=z0lJ2k0sl1g&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=11)\n        - [ ] [(Advanced) Perfect hashing (video)](https://www.youtube.com/watch?v=N0COwN14gt0&list=PL2B4EEwhKD-NbwZ4ezj7gyc_3yNrojKM9&index=4)\n\n    - [ ] Online Courses:\n        - [ ] [Understanding Hash Functions (video)](https://archive.org/details/0102WhatYouShouldKnow/06_02-understandingHashFunctions.mp4)\n        - [ ] [Using Hash Tables (video)](https://archive.org/details/0102WhatYouShouldKnow/06_03-usingHashTables.mp4)\n        - [ ] [Supporting Hashing (video)](https://archive.org/details/0102WhatYouShouldKnow/06_04-supportingHashing.mp4)\n        - [ ] [Language Support Hash Tables (video)](https://archive.org/details/0102WhatYouShouldKnow/06_05-languageSupportForHashTables.mp4)\n        - [ ] [Core Hash Tables (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/m7UuP/core-hash-tables)\n        - [ ] [Data Structures (video)](https://www.coursera.org/learn/data-structures/home/week/4)\n        - [ ] [Phone Book Problem (video)](https://www.coursera.org/learn/data-structures/lecture/NYZZP/phone-book-problem)\n        - [ ] distributed hash tables:\n            - [Instant Uploads And Storage Optimization In Dropbox (video)](https://www.coursera.org/learn/data-structures/lecture/DvaIb/instant-uploads-and-storage-optimization-in-dropbox)\n            - [Distributed Hash Tables (video)](https://www.coursera.org/learn/data-structures/lecture/tvH8H/distributed-hash-tables)\n\n    - [ ] implement with array using linear probing\n        - hash(k, m) - m is size of hash table\n        - add(key, value) - if key already exists, update value\n        - exists(key)\n        - get(key)\n        - remove(key)\n\n## More Knowledge\n\n- ### Binary search\n    - [ ] [Binary Search (video)](https://www.youtube.com/watch?v=D5SrAga1pno)\n    - [ ] [Binary Search (video)](https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search)\n    - [ ] [detail](https://www.topcoder.com/community/competitive-programming/tutorials/binary-search/)\n    - [ ] Implement:\n        - binary search (on sorted array of integers)\n        - binary search using recursion\n\n- ### Bitwise operations\n    - [ ] [Bits cheat sheet](https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/bits-cheat-sheet.pdf) - you should know many of the powers of 2 from (2^1 to 2^16 and 2^32)\n    - [ ] Get a really good understanding of manipulating bits with: &, |, ^, ~, >>, <<\n        - [ ] [words](https://en.wikipedia.org/wiki/Word_(computer_architecture))\n        - [ ] Good intro:\n            [Bit Manipulation (video)](https://www.youtube.com/watch?v=7jkIUgLC29I)\n        - [ ] [C Programming Tutorial 2-10: Bitwise Operators (video)](https://www.youtube.com/watch?v=d0AwjSpNXR0)\n        - [ ] [Bit Manipulation](https://en.wikipedia.org/wiki/Bit_manipulation)\n        - [ ] [Bitwise Operation](https://en.wikipedia.org/wiki/Bitwise_operation)\n        - [ ] [Bithacks](https://graphics.stanford.edu/~seander/bithacks.html)\n        - [ ] [The Bit Twiddler](https://bits.stephan-brumme.com/)\n        - [ ] [The Bit Twiddler Interactive](https://bits.stephan-brumme.com/interactive.html)\n        - [ ] [Bit Hacks (video)](https://www.youtube.com/watch?v=ZusiKXcz_ac)\n    - [ ] 2s and 1s complement\n        - [Binary: Plusses & Minuses (Why We Use Two's Complement) (video)](https://www.youtube.com/watch?v=lKTsv6iVxV4)\n        - [1s Complement](https://en.wikipedia.org/wiki/Ones%27_complement)\n        - [2s Complement](https://en.wikipedia.org/wiki/Two%27s_complement)\n    - [ ] count set bits\n        - [4 ways to count bits in a byte (video)](https://youtu.be/Hzuzo9NJrlc)\n        - [Count Bits](https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan)\n        - [How To Count The Number Of Set Bits In a 32 Bit Integer](http://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer)\n    - [ ] swap values:\n        - [Swap](https://bits.stephan-brumme.com/swap.html)\n    - [ ] absolute value:\n        - [Absolute Integer](https://bits.stephan-brumme.com/absInteger.html)\n\n## Trees\n\n- ### Trees - Notes & Background\n    - [ ] [Series: Core Trees (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/ovovP/core-trees)\n    - [ ] [Series: Trees (video)](https://www.coursera.org/learn/data-structures/lecture/95qda/trees)\n    - basic tree construction\n    - traversal\n    - manipulation algorithms\n    - [ ] [BFS(breadth-first search) and DFS(depth-first search) (video)](https://www.youtube.com/watch?v=uWL6FJhq5fM)\n        - BFS notes:\n           - level order (BFS, using queue)\n           - time complexity: O(n)\n           - space complexity: best: O(1), worst: O(n/2)=O(n)\n        - DFS notes:\n            - time complexity: O(n)\n            - space complexity:\n                best: O(log n) - avg. height of tree\n                worst: O(n)\n            - inorder (DFS: left, self, right)\n            - postorder (DFS: left, right, self)\n            - preorder (DFS: self, left, right)\n\n- ### Binary search trees: BSTs\n    - [ ] [Binary Search Tree Review (video)](https://www.youtube.com/watch?v=x6At0nzX92o&index=1&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n    - [ ] [Series (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/p82sw/core-introduction-to-binary-search-trees)\n        - starts with symbol table and goes through BST applications\n    - [ ] [Introduction (video)](https://www.coursera.org/learn/data-structures/lecture/E7cXP/introduction)\n    - [ ] [MIT (video)](https://www.youtube.com/watch?v=9Jry5-82I68)\n    - C/C++:\n        - [ ] [Binary search tree - Implementation in C/C++ (video)](https://www.youtube.com/watch?v=COZK7NATh4k&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=28)\n        - [ ] [BST implementation - memory allocation in stack and heap (video)](https://www.youtube.com/watch?v=hWokyBoo0aI&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=29)\n        - [ ] [Find min and max element in a binary search tree (video)](https://www.youtube.com/watch?v=Ut90klNN264&index=30&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n        - [ ] [Find height of a binary tree (video)](https://www.youtube.com/watch?v=_pnqMz5nrRs&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=31)\n        - [ ] [Binary tree traversal - breadth-first and depth-first strategies (video)](https://www.youtube.com/watch?v=9RHO6jU--GU&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=32)\n        - [ ] [Binary tree: Level Order Traversal (video)](https://www.youtube.com/watch?v=86g8jAQug04&index=33&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n        - [ ] [Binary tree traversal: Preorder, Inorder, Postorder (video)](https://www.youtube.com/watch?v=gm8DUJJhmY4&index=34&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n        - [ ] [Check if a binary tree is binary search tree or not (video)](https://www.youtube.com/watch?v=yEwSGhSsT0U&index=35&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n        - [ ] [Delete a node from Binary Search Tree (video)](https://www.youtube.com/watch?v=gcULXE7ViZw&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=36)\n        - [ ] [Inorder Successor in a binary search tree (video)](https://www.youtube.com/watch?v=5cPbNCrdotA&index=37&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n    - [ ] Implement:\n        - [ ] insert    // insert value into tree\n        - [ ] get_node_count // get count of values stored\n        - [ ] print_values // prints the values in the tree, from min to max\n        - [ ] delete_tree\n        - [ ] is_in_tree // returns true if given value exists in the tree\n        - [ ] get_height // returns the height in nodes (single node's height is 1)\n        - [ ] get_min   // returns the minimum value stored in the tree\n        - [ ] get_max   // returns the maximum value stored in the tree\n        - [ ] is_binary_search_tree\n        - [ ] delete_value\n        - [ ] get_successor // returns next-highest value in tree after given value, -1 if none\n\n- ### Heap / Priority Queue / Binary Heap\n    - visualized as a tree, but is usually linear in storage (array, linked list)\n    - [ ] [Heap](https://en.wikipedia.org/wiki/Heap_(data_structure))\n    - [ ] [Introduction (video)](https://www.coursera.org/learn/data-structures/lecture/2OpTs/introduction)\n    - [ ] [Naive Implementations (video)](https://www.coursera.org/learn/data-structures/lecture/z3l9N/naive-implementations)\n    - [ ] [Binary Trees (video)](https://www.coursera.org/learn/data-structures/lecture/GRV2q/binary-trees)\n    - [ ] [Tree Height Remark (video)](https://www.coursera.org/learn/data-structures/supplement/S5xxz/tree-height-remark)\n    - [ ] [Basic Operations (video)](https://www.coursera.org/learn/data-structures/lecture/0g1dl/basic-operations)\n    - [ ] [Complete Binary Trees (video)](https://www.coursera.org/learn/data-structures/lecture/gl5Ni/complete-binary-trees)\n    - [ ] [Pseudocode (video)](https://www.coursera.org/learn/data-structures/lecture/HxQo9/pseudocode)\n    - [ ] [Heap Sort - jumps to start (video)](https://youtu.be/odNJmw5TOEE?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3291)\n    - [ ] [Heap Sort (video)](https://www.coursera.org/learn/data-structures/lecture/hSzMO/heap-sort)\n    - [ ] [Building a heap (video)](https://www.coursera.org/learn/data-structures/lecture/dwrOS/building-a-heap)\n    - [ ] [MIT: Heaps and Heap Sort (video)](https://www.youtube.com/watch?v=B7hVxCmfPtM&index=4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [ ] [CS 61B Lecture 24: Priority Queues (video)](https://archive.org/details/ucberkeley_webcast_yIUFT6AKBGE)\n    - [ ] [Linear Time BuildHeap (max-heap)](https://www.youtube.com/watch?v=MiyLo8adrWw)\n    - [ ] Implement a max-heap:\n        - [ ] insert\n        - [ ] sift_up - needed for insert\n        - [ ] get_max - returns the max item, without removing it\n        - [ ] get_size() - return number of elements stored\n        - [ ] is_empty() - returns true if heap contains no elements\n        - [ ] extract_max - returns the max item, removing it\n        - [ ] sift_down - needed for extract_max\n        - [ ] remove(i) - removes item at index x\n        - [ ] heapify - create a heap from an array of elements, needed for heap_sort\n        - [ ] heap_sort() - take an unsorted array and turn it into a sorted array in-place using a max heap\n            - note: using a min heap instead would save operations, but double the space needed (cannot do in-place).\n\n## Sorting\n\n- [ ] Notes:\n    - Implement sorts & know best case/worst case, average complexity of each:\n        - no bubble sort - it's terrible - O(n^2), except when n <= 16\n    - [ ] stability in sorting algorithms (\"Is Quicksort stable?\")\n        - [Sorting Algorithm Stability](https://en.wikipedia.org/wiki/Sorting_algorithm#Stability)\n        - [Stability In Sorting Algorithms](http://stackoverflow.com/questions/1517793/stability-in-sorting-algorithms)\n        - [Stability In Sorting Algorithms](http://www.geeksforgeeks.org/stability-in-sorting-algorithms/)\n        - [Sorting Algorithms - Stability](http://homepages.math.uic.edu/~leon/cs-mcs401-s08/handouts/stability.pdf)\n    - [ ] Which algorithms can be used on linked lists? Which on arrays? Which on both?\n        - I wouldn't recommend sorting a linked list, but merge sort is doable.\n        - [Merge Sort For Linked List](http://www.geeksforgeeks.org/merge-sort-for-linked-list/)\n\n- For heapsort, see Heap data structure above. Heap sort is great, but not stable.\n\n- [ ] [Sedgewick - Mergesort (5 videos)](https://www.coursera.org/learn/algorithms-part1/home/week/3)\n    - [ ] [1. Mergesort](https://www.coursera.org/learn/algorithms-part1/lecture/ARWDq/mergesort)\n    - [ ] [2. Bottom up Mergesort](https://www.coursera.org/learn/algorithms-part1/lecture/PWNEl/bottom-up-mergesort)\n    - [ ] [3. Sorting Complexity](https://www.coursera.org/learn/algorithms-part1/lecture/xAltF/sorting-complexity)\n    - [ ] [4. Comparators](https://www.coursera.org/learn/algorithms-part1/lecture/9FYhS/comparators)\n    - [ ] [5. Stability](https://www.coursera.org/learn/algorithms-part1/lecture/pvvLZ/stability)\n\n- [ ] [Sedgewick - Quicksort (4 videos)](https://www.coursera.org/learn/algorithms-part1/home/week/3)\n    - [ ] [1. Quicksort](https://www.coursera.org/learn/algorithms-part1/lecture/vjvnC/quicksort)\n    - [ ] [2. Selection](https://www.coursera.org/learn/algorithms-part1/lecture/UQxFT/selection)\n    - [ ] [3. Duplicate Keys](https://www.coursera.org/learn/algorithms-part1/lecture/XvjPd/duplicate-keys)\n    - [ ] [4. System Sorts](https://www.coursera.org/learn/algorithms-part1/lecture/QBNZ7/system-sorts)\n\n- [ ] UC Berkeley:\n    - [ ] [CS 61B Lecture 29: Sorting I (video)](https://archive.org/details/ucberkeley_webcast_EiUvYS2DT6I)\n    - [ ] [CS 61B Lecture 30: Sorting II (video)](https://archive.org/details/ucberkeley_webcast_2hTY3t80Qsk)\n    - [ ] [CS 61B Lecture 32: Sorting III (video)](https://archive.org/details/ucberkeley_webcast_Y6LOLpxg6Dc)\n    - [ ] [CS 61B Lecture 33: Sorting V (video)](https://archive.org/details/ucberkeley_webcast_qNMQ4ly43p4)\n\n- [ ] [Bubble Sort (video)](https://www.youtube.com/watch?v=P00xJgWzz2c&index=1&list=PL89B61F78B552C1AB)\n- [ ] [Analyzing Bubble Sort (video)](https://www.youtube.com/watch?v=ni_zk257Nqo&index=7&list=PL89B61F78B552C1AB)\n- [ ] [Insertion Sort, Merge Sort (video)](https://www.youtube.com/watch?v=Kg4bqzAqRBM&index=3&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n- [ ] [Insertion Sort (video)](https://www.youtube.com/watch?v=c4BRHC7kTaQ&index=2&list=PL89B61F78B552C1AB)\n- [ ] [Merge Sort (video)](https://www.youtube.com/watch?v=GCae1WNvnZM&index=3&list=PL89B61F78B552C1AB)\n- [ ] [Quicksort (video)](https://www.youtube.com/watch?v=y_G9BkAm6B8&index=4&list=PL89B61F78B552C1AB)\n- [ ] [Selection Sort (video)](https://www.youtube.com/watch?v=6nDMgr0-Yyo&index=8&list=PL89B61F78B552C1AB)\n\n- [ ] Merge sort code:\n    - [ ] [Using output array (C)](http://www.cs.yale.edu/homes/aspnes/classes/223/examples/sorting/mergesort.c)\n    - [ ] [Using output array (Python)](https://github.com/jwasham/practice-python/blob/master/merge_sort/merge_sort.py)\n    - [ ] [In-place (C++)](https://github.com/jwasham/practice-cpp/blob/master/merge_sort/merge_sort.cc)\n- [ ] Quick sort code:\n    - [ ] [Implementation (C)](http://www.cs.yale.edu/homes/aspnes/classes/223/examples/randomization/quick.c)\n    - [ ] [Implementation (C)](https://github.com/jwasham/practice-c/blob/master/quick_sort/quick_sort.c)\n    - [ ] [Implementation (Python)](https://github.com/jwasham/practice-python/blob/master/quick_sort/quick_sort.py)\n\n- [ ] Implement:\n    - [ ] Mergesort: O(n log n) average and worst case\n    - [ ] Quicksort O(n log n) average case\n    - Selection sort and insertion sort are both O(n^2) average and worst case\n    - For heapsort, see Heap data structure above.\n\n- [ ] Not required, but I recommended them:\n    - [ ] [Sedgewick - Radix Sorts (6 videos)](https://www.coursera.org/learn/algorithms-part2/home/week/3)\n        - [ ] [1. Strings in Java](https://www.coursera.org/learn/algorithms-part2/lecture/vGHvb/strings-in-java)\n        - [ ] [2. Key Indexed Counting](https://www.coursera.org/learn/algorithms-part2/lecture/2pi1Z/key-indexed-counting)\n        - [ ] [3. Least Significant Digit First String Radix Sort](https://www.coursera.org/learn/algorithms-part2/lecture/c1U7L/lsd-radix-sort)\n        - [ ] [4. Most Significant Digit First String Radix Sort](https://www.coursera.org/learn/algorithms-part2/lecture/gFxwG/msd-radix-sort)\n        - [ ] [5. 3 Way Radix Quicksort](https://www.coursera.org/learn/algorithms-part2/lecture/crkd5/3-way-radix-quicksort)\n        - [ ] [6. Suffix Arrays](https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays)\n    - [ ] [Radix Sort](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#radixSort)\n    - [ ] [Radix Sort (video)](https://www.youtube.com/watch?v=xhr26ia4k38)\n    - [ ] [Radix Sort, Counting Sort (linear time given constraints) (video)](https://www.youtube.com/watch?v=Nz1KZXbghj8&index=7&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [ ] [Randomization: Matrix Multiply, Quicksort, Freivalds' algorithm (video)](https://www.youtube.com/watch?v=cNB2lADK3_s&index=8&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - [ ] [Sorting in Linear Time (video)](https://www.youtube.com/watch?v=pOKy3RZbSws&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=14)\n\nAs a summary, here is a visual representation of [15 sorting algorithms](https://www.youtube.com/watch?v=kPRA0W1kECg).\nIf you need more detail on this subject, see \"Sorting\" section in [Additional Detail on Some Subjects](#additional-detail-on-some-subjects)\n\n## Graphs\n\nGraphs can be used to represent many problems in computer science, so this section is long, like trees and sorting were.\n\n- Notes:\n    - There are 4 basic ways to represent a graph in memory:\n        - objects and pointers\n        - adjacency matrix\n        - adjacency list\n        - adjacency map\n    - Familiarize yourself with each representation and its pros & cons\n    - BFS and DFS - know their computational complexity, their tradeoffs, and how to implement them in real code\n    - When asked a question, look for a graph-based solution first, then move on if none.\n\n- [ ] MIT(videos):\n    - [ ] [Breadth-First Search](https://www.youtube.com/watch?v=s-CYnVz-uh4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=13)\n    - [ ] [Depth-First Search](https://www.youtube.com/watch?v=AfSk24UTFS8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=14)\n\n- [ ] Skiena Lectures - great intro:\n    - [ ] [CSE373 2012 - Lecture 11 - Graph Data Structures (video)](https://www.youtube.com/watch?v=OiXxhDrFruw&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=11)\n    - [ ] [CSE373 2012 - Lecture 12 - Breadth-First Search (video)](https://www.youtube.com/watch?v=g5vF8jscteo&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=12)\n    - [ ] [CSE373 2012 - Lecture 13 - Graph Algorithms (video)](https://www.youtube.com/watch?v=S23W6eTcqdY&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=13)\n    - [ ] [CSE373 2012 - Lecture 14 - Graph Algorithms (con't) (video)](https://www.youtube.com/watch?v=WitPBKGV0HY&index=14&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n    - [ ] [CSE373 2012 - Lecture 15 - Graph Algorithms (con't 2) (video)](https://www.youtube.com/watch?v=ia1L30l7OIg&index=15&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n    - [ ] [CSE373 2012 - Lecture 16 - Graph Algorithms (con't 3) (video)](https://www.youtube.com/watch?v=jgDOQq6iWy8&index=16&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n\n- [ ] Graphs (review and more):\n\n    - [ ] [6.006 Single-Source Shortest Paths Problem (video)](https://www.youtube.com/watch?v=Aa2sqUhIn-E&index=15&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [ ] [6.006 Dijkstra (video)](https://www.youtube.com/watch?v=2E7MmKv0Y24&index=16&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [ ] [6.006 Bellman-Ford (video)](https://www.youtube.com/watch?v=ozsuci5pIso&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=17)\n    - [ ] [6.006 Speeding Up Dijkstra (video)](https://www.youtube.com/watch?v=CHvQ3q_gJ7E&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=18)\n    - [ ] [Aduni: Graph Algorithms I - Topological Sorting, Minimum Spanning Trees, Prim's Algorithm -  Lecture 6 (video)]( https://www.youtube.com/watch?v=i_AQT_XfvD8&index=6&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n    - [ ] [Aduni: Graph Algorithms II - DFS, BFS, Kruskal's Algorithm, Union Find Data Structure - Lecture 7 (video)]( https://www.youtube.com/watch?v=ufj5_bppBsA&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=7)\n    - [ ] [Aduni: Graph Algorithms III: Shortest Path - Lecture 8 (video)](https://www.youtube.com/watch?v=DiedsPsMKXc&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=8)\n    - [ ] [Aduni: Graph Alg. IV: Intro to geometric algorithms - Lecture 9 (video)](https://www.youtube.com/watch?v=XIAQRlNkJAw&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=9)\n    - [ ] ~~[CS 61B 2014 (starting at 58:09) (video)](https://youtu.be/dgjX4HdMI-Q?list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&t=3489)~~\n    - [ ] [CS 61B 2014: Weighted graphs (video)](https://archive.org/details/ucberkeley_webcast_zFbq8vOZ_0k)\n    - [ ] [Greedy Algorithms: Minimum Spanning Tree (video)](https://www.youtube.com/watch?v=tKwnms5iRBU&index=16&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - [ ] [Strongly Connected Components Kosaraju's Algorithm Graph Algorithm (video)](https://www.youtube.com/watch?v=RpgcYiky7uw)\n\n- Full Coursera Course:\n    - [ ] [Algorithms on Graphs (video)](https://www.coursera.org/learn/algorithms-on-graphs/home/welcome)\n\n- I'll implement:\n    - [ ] DFS with adjacency list (recursive)\n    - [ ] DFS with adjacency list (iterative with stack)\n    - [ ] DFS with adjacency matrix (recursive)\n    - [ ] DFS with adjacency matrix (iterative with stack)\n    - [ ] BFS with adjacency list\n    - [ ] BFS with adjacency matrix\n    - [ ] single-source shortest path (Dijkstra)\n    - [ ] minimum spanning tree\n    - DFS-based algorithms (see Aduni videos above):\n        - [ ] check for cycle (needed for topological sort, since we'll check for cycle before starting)\n        - [ ] topological sort\n        - [ ] count connected components in a graph\n        - [ ] list strongly connected components\n        - [ ] check for bipartite graph\n\n## Even More Knowledge\n\n- ### Recursion\n    - [ ] Stanford lectures on recursion & backtracking:\n        - [ ] [Lecture 8 | Programming Abstractions (video)](https://www.youtube.com/watch?v=gl3emqCuueQ&list=PLFE6E58F856038C69&index=8)\n        - [ ] [Lecture 9 | Programming Abstractions (video)](https://www.youtube.com/watch?v=uFJhEPrbycQ&list=PLFE6E58F856038C69&index=9)\n        - [ ] [Lecture 10 | Programming Abstractions (video)](https://www.youtube.com/watch?v=NdF1QDTRkck&index=10&list=PLFE6E58F856038C69)\n        - [ ] [Lecture 11 | Programming Abstractions (video)](https://www.youtube.com/watch?v=p-gpaIGRCQI&list=PLFE6E58F856038C69&index=11)\n    - when it is appropriate to use it\n    - how is tail recursion better than not?\n        - [ ] [What Is Tail Recursion Why Is It So Bad?](https://www.quora.com/What-is-tail-recursion-Why-is-it-so-bad)\n        - [ ] [Tail Recursion (video)](https://www.youtube.com/watch?v=L1jjXGfxozc)\n\n- ### Dynamic Programming\n    - You probably won't see any dynamic programming problems in your interview, but it's worth being able to recognize a problem as being a candidate for dynamic programming.\n    - This subject can be pretty difficult, as each DP soluble problem must be defined as a recursion relation, and coming up with it can be tricky.\n    - I suggest looking at many examples of DP problems until you have a solid understanding of the pattern involved.\n    - [ ] Videos:\n        - the Skiena videos can be hard to follow since he sometimes uses the whiteboard, which is too small to see\n        - [ ] [Skiena: CSE373 2012 - Lecture 19 - Introduction to Dynamic Programming (video)](https://youtu.be/Qc2ieXRgR0k?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1718)\n        - [ ] [Skiena: CSE373 2012 - Lecture 20 - Edit Distance (video)](https://youtu.be/IsmMhMdyeGY?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=2749)\n        - [ ] [Skiena: CSE373 2012 - Lecture 21 - Dynamic Programming Examples (video)](https://youtu.be/o0V9eYF4UI8?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=406)\n        - [ ] [Skiena: CSE373 2012 - Lecture 22 - Applications of Dynamic Programming (video)](https://www.youtube.com/watch?v=dRbMC1Ltl3A&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=22)\n        - [ ] [Simonson: Dynamic Programming 0 (starts at 59:18) (video)](https://youtu.be/J5aJEcOr6Eo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3558)\n        - [ ] [Simonson: Dynamic Programming I - Lecture 11 (video)](https://www.youtube.com/watch?v=0EzHjQ_SOeU&index=11&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n        - [ ] [Simonson: Dynamic programming II - Lecture 12 (video)](https://www.youtube.com/watch?v=v1qiRwuJU7g&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=12)\n        - [ ] List of individual DP problems (each is short):\n            [Dynamic Programming (video)](https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr)\n    - [ ] Yale Lecture notes:\n        - [ ] [Dynamic Programming](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#dynamicProgramming)\n    - [ ] Coursera:\n        - [ ] [The RNA secondary structure problem (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/80RrW/the-rna-secondary-structure-problem)\n        - [ ] [A dynamic programming algorithm (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/PSonq/a-dynamic-programming-algorithm)\n        - [ ] [Illustrating the DP algorithm (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/oUEK2/illustrating-the-dp-algorithm)\n        - [ ] [Running time of the DP algorithm (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/nfK2r/running-time-of-the-dp-algorithm)\n        - [ ] [DP vs. recursive implementation (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/M999a/dp-vs-recursive-implementation)\n        - [ ] [Global pairwise sequence alignment (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/UZ7o6/global-pairwise-sequence-alignment)\n        - [ ] [Local pairwise sequence alignment (video)](https://www.coursera.org/learn/algorithmic-thinking-2/lecture/WnNau/local-pairwise-sequence-alignment)\n\n- ### Object-Oriented Programming\n    - [ ] [Optional: UML 2.0 Series (video)](https://www.youtube.com/watch?v=OkC7HKtiZC0&list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc)\n    - [ ] SOLID OOP Principles: [SOLID Principles (video)](https://www.youtube.com/playlist?list=PL4CE9F710017EA77A)\n\n- ### Design patterns\n    - [ ] [Quick UML review (video)](https://www.youtube.com/watch?v=3cmzqZzwNDM&list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc&index=3)\n    - [ ] Learn these patterns:\n        - [ ] strategy\n        - [ ] singleton\n        - [ ] adapter\n        - [ ] prototype\n        - [ ] decorator\n        - [ ] visitor\n        - [ ] factory, abstract factory\n        - [ ] facade\n        - [ ] observer\n        - [ ] proxy\n        - [ ] delegate\n        - [ ] command\n        - [ ] state\n        - [ ] memento\n        - [ ] iterator\n        - [ ] composite\n        - [ ] flyweight\n    - [ ] [Chapter 6 (Part 1) - Patterns (video)](https://youtu.be/LAP2A80Ajrg?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO&t=3344)\n    - [ ] [Chapter 6 (Part 2) - Abstraction-Occurrence, General Hierarchy, Player-Role, Singleton, Observer, Delegation (video)](https://www.youtube.com/watch?v=U8-PGsjvZc4&index=12&list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO)\n    - [ ] [Chapter 6 (Part 3) - Adapter, Facade, Immutable, Read-Only Interface, Proxy (video)](https://www.youtube.com/watch?v=7sduBHuex4c&index=13&list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO)\n    - [ ] [Series of videos (27 videos)](https://www.youtube.com/playlist?list=PLF206E906175C7E07)\n    - [ ] [Head First Design Patterns](https://www.amazon.com/Head-First-Design-Patterns-Freeman/dp/0596007124)\n        - I know the canonical book is \"Design Patterns: Elements of Reusable Object-Oriented Software\", but Head First is great for beginners to OO.\n    - [ ] [Handy reference: 101 Design Patterns & Tips for Developers](https://sourcemaking.com/design-patterns-and-tips)\n    - [ ] [Design patterns for humans](https://github.com/kamranahmedse/design-patterns-for-humans#structural-design-patterns)\n\n\n- ### Combinatorics (n choose k) & Probability\n    - [ ] [Math Skills: How to find Factorial, Permutation and Combination (Choose) (video)](https://www.youtube.com/watch?v=8RRo6Ti9d0U)\n    - [ ] [Make School: Probability (video)](https://www.youtube.com/watch?v=sZkAAk9Wwa4)\n    - [ ] [Make School: More Probability and Markov Chains (video)](https://www.youtube.com/watch?v=dNaJg-mLobQ)\n    - [ ] Khan Academy:\n        - Course layout:\n            - [ ] [Basic Theoretical Probability](https://www.khanacademy.org/math/probability/probability-and-combinatorics-topic)\n        - Just the videos - 41 (each are simple and each are short):\n            - [ ] [Probability Explained (video)](https://www.youtube.com/watch?v=uzkc-qNVoOk&list=PLC58778F28211FA19)\n\n- ### NP, NP-Complete and Approximation Algorithms\n    - Know about the most famous classes of NP-complete problems, such as traveling salesman and the knapsack problem,\n        and be able to recognize them when an interviewer asks you them in disguise.\n    - Know what NP-complete means.\n    - [ ] [Computational Complexity (video)](https://www.youtube.com/watch?v=moPtwq_cVH8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=23)\n    - [ ] Simonson:\n        - [ ] [Greedy Algs. II & Intro to NP Completeness (video)](https://youtu.be/qcGnJ47Smlo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=2939)\n        - [ ] [NP Completeness II & Reductions (video)](https://www.youtube.com/watch?v=e0tGC6ZQdQE&index=16&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n        - [ ] [NP Completeness III (Video)](https://www.youtube.com/watch?v=fCX1BGT3wjE&index=17&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n        - [ ] [NP Completeness IV (video)](https://www.youtube.com/watch?v=NKLDp3Rch3M&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=18)\n    - [ ] Skiena:\n        - [ ] [CSE373 2012 - Lecture 23 - Introduction to NP-Completeness (video)](https://youtu.be/KiK5TVgXbFg?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1508)\n        - [ ] [CSE373 2012 - Lecture 24 - NP-Completeness Proofs (video)](https://www.youtube.com/watch?v=27Al52X3hd4&index=24&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n        - [ ] [CSE373 2012 - Lecture 25 - NP-Completeness Challenge (video)](https://www.youtube.com/watch?v=xCPH4gwIIXM&index=25&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n    - [ ] [Complexity: P, NP, NP-completeness, Reductions (video)](https://www.youtube.com/watch?v=eHZifpgyH_4&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=22)\n    - [ ] [Complexity: Approximation Algorithms (video)](https://www.youtube.com/watch?v=MEz1J9wY2iM&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=24)\n    - [ ] [Complexity: Fixed-Parameter Algorithms (video)](https://www.youtube.com/watch?v=4q-jmGrmxKs&index=25&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - Peter Norvig discusses near-optimal solutions to traveling salesman problem:\n        - [Jupyter Notebook](http://nbviewer.jupyter.org/url/norvig.com/ipython/TSP.ipynb)\n    - Pages 1048 - 1140 in CLRS if you have it.\n\n- ### Caches\n    - [ ] LRU cache:\n        - [ ] [The Magic of LRU Cache (100 Days of Google Dev) (video)](https://www.youtube.com/watch?v=R5ON3iwx78M)\n        - [ ] [Implementing LRU (video)](https://www.youtube.com/watch?v=bq6N7Ym81iI)\n        - [ ] [LeetCode - 146 LRU Cache (C++) (video)](https://www.youtube.com/watch?v=8-FZRAjR7qU)\n    - [ ] CPU cache:\n        - [ ] [MIT 6.004 L15: The Memory Hierarchy (video)](https://www.youtube.com/watch?v=vjYF_fAZI5E&list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-&index=24)\n        - [ ] [MIT 6.004 L16: Cache Issues (video)](https://www.youtube.com/watch?v=ajgC3-pyGlk&index=25&list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-)\n\n- ### Processes and Threads\n    - [ ] Computer Science 162 - Operating Systems (25 videos):\n        - for processes and threads see videos 1-11\n        - [Operating Systems and System Programming (video)](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c)\n    - [What Is The Difference Between A Process And A Thread?](https://www.quora.com/What-is-the-difference-between-a-process-and-a-thread)\n    - Covers:\n        - Processes, Threads, Concurrency issues\n            - difference between processes and threads\n            - processes\n            - threads\n            - locks\n            - mutexes\n            - semaphores\n            - monitors\n            - how they work\n            - deadlock\n            - livelock\n        - CPU activity, interrupts, context switching\n        - Modern concurrency constructs with multicore processors\n        - [Paging, segmentation and virtual memory (video)](https://www.youtube.com/watch?v=LKe7xK0bF7o&list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&index=2)\n        - [Interrupts (video)](https://www.youtube.com/watch?v=uFKi2-J-6II&list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&index=3)\n        - Process resource needs (memory: code, static storage, stack, heap, and also file descriptors, i/o)\n        - Thread resource needs (shares above (minus stack) with other threads in the same process but each has its own pc, stack counter, registers, and stack)\n        - Forking is really copy on write (read-only) until the new process writes to memory, then it does a full copy.\n        - Context switching\n            - How context switching is initiated by the operating system and underlying hardware\n    - [ ] [threads in C++ (series - 10 videos)](https://www.youtube.com/playlist?list=PL5jc9xFGsL8E12so1wlMS0r0hTQoJL74M)\n    - [ ] concurrency in Python (videos):\n        - [ ] [Short series on threads](https://www.youtube.com/playlist?list=PL1H1sBF1VAKVMONJWJkmUh6_p8g4F2oy1)\n        - [ ] [Python Threads](https://www.youtube.com/watch?v=Bs7vPNbB9JM)\n        - [ ] [Understanding the Python GIL (2010)](https://www.youtube.com/watch?v=Obt-vMVdM8s)\n            - [reference](http://www.dabeaz.com/GIL)\n        - [ ] [David Beazley - Python Concurrency From the Ground Up: LIVE! - PyCon 2015](https://www.youtube.com/watch?v=MCs5OvhV9S4)\n        - [ ] [Keynote David Beazley - Topics of Interest (Python Asyncio)](https://www.youtube.com/watch?v=ZzfHjytDceU)\n        - [ ] [Mutex in Python](https://www.youtube.com/watch?v=0zaPs8OtyKY)\n\n- ### Testing\n    - To cover:\n        - how unit testing works\n        - what are mock objects\n        - what is integration testing\n        - what is dependency injection\n    - [ ] [Agile Software Testing with James Bach (video)](https://www.youtube.com/watch?v=SAhJf36_u5U)\n    - [ ] [Open Lecture by James Bach on Software Testing (video)](https://www.youtube.com/watch?v=ILkT_HV9DVU)\n    - [ ] [Steve Freeman - Test-Driven Development (that\u2019s not what we meant) (video)](https://vimeo.com/83960706)\n        - [slides](http://gotocon.com/dl/goto-berlin-2013/slides/SteveFreeman_TestDrivenDevelopmentThatsNotWhatWeMeant.pdf)\n    - [ ] Dependency injection:\n        - [ ] [video](https://www.youtube.com/watch?v=IKD2-MAkXyQ)\n        - [ ] [Tao Of Testing](http://jasonpolites.github.io/tao-of-testing/ch3-1.1.html)\n    - [ ] [How to write tests](http://jasonpolites.github.io/tao-of-testing/ch4-1.1.html)\n\n- ### Scheduling\n    - in an OS, how it works\n    - can be gleaned from Operating System videos\n\n- ### String searching & manipulations\n    - [ ] [Sedgewick - Suffix Arrays (video)](https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays)\n    - [ ] [Sedgewick - Substring Search (videos)](https://www.coursera.org/learn/algorithms-part2/home/week/4)\n        - [ ] [1. Introduction to Substring Search](https://www.coursera.org/learn/algorithms-part2/lecture/n3ZpG/introduction-to-substring-search)\n        - [ ] [2. Brute-Force Substring Search](https://www.coursera.org/learn/algorithms-part2/lecture/2Kn5i/brute-force-substring-search)\n        - [ ] [3. Knuth-Morris Pratt](https://www.coursera.org/learn/algorithms-part2/lecture/TAtDr/knuth-morris-pratt)\n        - [ ] [4. Boyer-Moore](https://www.coursera.org/learn/algorithms-part2/lecture/CYxOT/boyer-moore)\n        - [ ] [5. Rabin-Karp](https://www.coursera.org/learn/algorithms-part2/lecture/3KiqT/rabin-karp)\n    - [ ] [Search pattern in text (video)](https://www.coursera.org/learn/data-structures/lecture/tAfHI/search-pattern-in-text)\n\n    If you need more detail on this subject, see \"String Matching\" section in [Additional Detail on Some Subjects](#additional-detail-on-some-subjects)\n\n- ### Tries\n    - Note there are different kinds of tries. Some have prefixes, some don't, and some use string instead of bits\n        to track the path.\n    - I read through code, but will not implement.\n    - [ ] [Sedgewick - Tries (3 videos)](https://www.coursera.org/learn/algorithms-part2/home/week/4)\n        - [ ] [1. R Way Tries](https://www.coursera.org/learn/algorithms-part2/lecture/CPVdr/r-way-tries)\n        - [ ] [2. Ternary Search Tries](https://www.coursera.org/learn/algorithms-part2/lecture/yQM8K/ternary-search-tries)\n        - [ ] [3. Character Based Operations](https://www.coursera.org/learn/algorithms-part2/lecture/jwNmV/character-based-operations)\n    - [ ] [Notes on Data Structures and Programming Techniques](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Tries)\n    - [ ] Short course videos:\n        - [ ] [Introduction To Tries (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/08Xyf/core-introduction-to-tries)\n        - [ ] [Performance Of Tries (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/PvlZW/core-performance-of-tries)\n        - [ ] [Implementing A Trie (video)](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/DFvd3/core-implementing-a-trie)\n    - [ ] [The Trie: A Neglected Data Structure](https://www.toptal.com/java/the-trie-a-neglected-data-structure)\n    - [ ] [TopCoder - Using Tries](https://www.topcoder.com/community/competitive-programming/tutorials/using-tries/)\n    - [ ] [Stanford Lecture (real world use case) (video)](https://www.youtube.com/watch?v=TJ8SkcUSdbU)\n    - [ ] [MIT, Advanced Data Structures, Strings (can get pretty obscure about halfway through) (video)](https://www.youtube.com/watch?v=NinWEPPrkDQ&index=16&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf)\n\n- ### Floating Point Numbers\n    - [ ] simple 8-bit: [Representation of Floating Point Numbers - 1 (video - there is an error in calculations - see video description)](https://www.youtube.com/watch?v=ji3SfClm8TU)\n    - [ ] 32 bit: [IEEE754 32-bit floating point binary (video)](https://www.youtube.com/watch?v=50ZYcZebIec)\n\n- ### Unicode\n    - [ ] [The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets]( http://www.joelonsoftware.com/articles/Unicode.html)\n    - [ ] [What Every Programmer Absolutely, Positively Needs To Know About Encodings And Character Sets To Work With Text](http://kunststube.net/encoding/)\n\n- ### Endianness\n    - [ ] [Big And Little Endian](https://web.archive.org/web/20180107141940/http://www.cs.umd.edu:80/class/sum2003/cmsc311/Notes/Data/endian.html)\n    - [ ] [Big Endian Vs Little Endian (video)](https://www.youtube.com/watch?v=JrNF0KRAlyo)\n    - [ ] [Big And Little Endian Inside/Out (video)](https://www.youtube.com/watch?v=oBSuXP-1Tc0)\n        - Very technical talk for kernel devs. Don't worry if most is over your head.\n        - The first half is enough.\n\n- ### Networking\n    - **if you have networking experience or want to be a reliability engineer or operations engineer, expect questions**\n    - otherwise, this is just good to know\n    - [ ] [Khan Academy](https://www.khanacademy.org/computing/computer-science/computers-and-internet-code-org)\n    - [ ] [UDP and TCP: Comparison of Transport Protocols (video)](https://www.youtube.com/watch?v=Vdc8TCESIg8)\n    - [ ] [TCP/IP and the OSI Model Explained! (video)](https://www.youtube.com/watch?v=e5DEVa9eSN0)\n    - [ ] [Packet Transmission across the Internet. Networking & TCP/IP tutorial. (video)](https://www.youtube.com/watch?v=nomyRJehhnM)\n    - [ ] [HTTP (video)](https://www.youtube.com/watch?v=WGJrLqtX7As)\n    - [ ] [SSL and HTTPS (video)](https://www.youtube.com/watch?v=S2iBR2ZlZf0)\n    - [ ] [SSL/TLS (video)](https://www.youtube.com/watch?v=Rp3iZUvXWlM)\n    - [ ] [HTTP 2.0 (video)](https://www.youtube.com/watch?v=E9FxNzv1Tr8)\n    - [ ] [Video Series (21 videos) (video)](https://www.youtube.com/playlist?list=PLEbnTDJUr_IegfoqO4iPnPYQui46QqT0j)\n    - [ ] [Subnetting Demystified - Part 5 CIDR Notation (video)](https://www.youtube.com/watch?v=t5xYI0jzOf4)\n    - [ ] Sockets:\n        - [ ] [Java - Sockets - Introduction (video)](https://www.youtube.com/watch?v=6G_W54zuadg&t=6s)\n        - [ ] [Socket Programming (video)](https://www.youtube.com/watch?v=G75vN2mnJeQ)\n\n## System Design, Scalability, Data Handling\n\n**You can expect system design questions if you have 4+ years of experience.**\n\n- Scalability and System Design are very large topics with many topics and resources, since\n      there is a lot to consider when designing a software/hardware system that can scale.\n      Expect to spend quite a bit of time on this.\n- Considerations:\n    - scalability\n        - Distill large data sets to single values\n        - Transform one data set to another\n        - Handling obscenely large amounts of data\n    - system design\n        - features sets\n        - interfaces\n        - class hierarchies\n        - designing a system under certain constraints\n        - simplicity and robustness\n        - tradeoffs\n        - performance analysis and optimization\n- [ ] **START HERE**: [The System Design Primer](https://github.com/donnemartin/system-design-primer)\n- [ ] [System Design from HiredInTech](http://www.hiredintech.com/system-design/)\n- [ ] [How Do I Prepare To Answer Design Questions In A Technical Inverview?](https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview?redirected_qid=1500023)\n- [ ] [8 Things You Need to Know Before a System Design Interview](http://blog.gainlo.co/index.php/2015/10/22/8-things-you-need-to-know-before-system-design-interviews/)\n- [ ] [Algorithm design](http://www.hiredintech.com/algorithm-design/)\n- [ ] [Database Normalization - 1NF, 2NF, 3NF and 4NF (video)](https://www.youtube.com/watch?v=UrYLYV7WSHM)\n- [ ] [System Design Interview](https://github.com/checkcheckzz/system-design-interview) - There are a lot of resources in this one. Look through the articles and examples. I put some of them below.\n- [ ] [How to ace a systems design interview](http://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n- [ ] [Numbers Everyone Should Know](http://everythingisdata.wordpress.com/2009/10/17/numbers-everyone-should-know/)\n- [ ] [How long does it take to make a context switch?](http://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html)\n- [ ] [Transactions Across Datacenters (video)](https://www.youtube.com/watch?v=srOgpXECblk)\n- [ ] [A plain English introduction to CAP Theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem/)\n- [ ] Consensus Algorithms:\n    - [ ] Paxos - [Paxos Agreement - Computerphile (video)](https://www.youtube.com/watch?v=s8JqcZtvnsM)\n    - [ ] Raft - [An Introduction to the Raft Distributed Consensus Algorithm (video)](https://www.youtube.com/watch?v=P9Ydif5_qvE)\n        - [ ] [Easy-to-read paper](https://raft.github.io/)\n        - [ ] [Infographic](http://thesecretlivesofdata.com/raft/)\n- [ ] [Consistent Hashing](http://www.tom-e-white.com/2007/11/consistent-hashing.html)\n- [ ] [NoSQL Patterns](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n- [ ] Scalability:\n    - You don't need all of these. Just pick a few that interest you.\n    - [ ] [Great overview (video)](https://www.youtube.com/watch?v=-W9F__D3oY4)\n    - [ ] Short series:\n        - [Clones](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n        - [Database](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n        - [Cache](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n        - [Asynchronism](http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n    - [ ] [Scalable Web Architecture and Distributed Systems](http://www.aosabook.org/en/distsys.html)\n    - [ ] [Fallacies of Distributed Computing Explained](https://pages.cs.wisc.edu/~zuyu/files/fallacies.pdf)\n    - [ ] [Pragmatic Programming Techniques](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n        - [extra: Google Pregel Graph Processing](http://horicky.blogspot.com/2010/07/google-pregel-graph-processing.html)\n    - [ ] [Jeff Dean - Building Software Systems At Google and Lessons Learned (video)](https://www.youtube.com/watch?v=modXC5IWTJI)\n    - [ ] [Introduction to Architecting Systems for Scale](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n    - [ ] [Scaling mobile games to a global audience using App Engine and Cloud Datastore (video)](https://www.youtube.com/watch?v=9nWyWwY2Onc)\n    - [ ] [How Google Does Planet-Scale Engineering for Planet-Scale Infra (video)](https://www.youtube.com/watch?v=H4vMcD7zKM0)\n    - [ ] [The Importance of Algorithms](https://www.topcoder.com/community/competitive-programming/tutorials/the-importance-of-algorithms/)\n    - [ ] [Sharding](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n    - [ ] [Scale at Facebook (2012), \"Building for a Billion Users\" (video)](https://www.youtube.com/watch?v=oodS71YtkGU)\n    - [ ] [Engineering for the Long Game - Astrid Atkinson Keynote(video)](https://www.youtube.com/watch?v=p0jGmgIrf_M&list=PLRXxvay_m8gqVlExPC5DG3TGWJTaBgqSA&index=4)\n    - [ ] [7 Years Of YouTube Scalability Lessons In 30 Minutes](http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html)\n        - [video](https://www.youtube.com/watch?v=G-lGCC4KKok)\n    - [ ] [How PayPal Scaled To Billions Of Transactions Daily Using Just 8VMs](http://highscalability.com/blog/2016/8/15/how-paypal-scaled-to-billions-of-transactions-daily-using-ju.html)\n    - [ ] [How to Remove Duplicates in Large Datasets](https://blog.clevertap.com/how-to-remove-duplicates-in-large-datasets/)\n    - [ ] [A look inside Etsy's scale and engineering culture with Jon Cowie (video)](https://www.youtube.com/watch?v=3vV4YiqKm1o)\n    - [ ] [What Led Amazon to its Own Microservices Architecture](http://thenewstack.io/led-amazon-microservices-architecture/)\n    - [ ] [To Compress Or Not To Compress, That Was Uber's Question](https://eng.uber.com/trip-data-squeeze/)\n    - [ ] [Asyncio Tarantool Queue, Get In The Queue](http://highscalability.com/blog/2016/3/3/asyncio-tarantool-queue-get-in-the-queue.html)\n    - [ ] [When Should Approximate Query Processing Be Used?](http://highscalability.com/blog/2016/2/25/when-should-approximate-query-processing-be-used.html)\n    - [ ] [Google's Transition From Single Datacenter, To Failover, To A Native Multihomed Architecture]( http://highscalability.com/blog/2016/2/23/googles-transition-from-single-datacenter-to-failover-to-a-n.html)\n    - [ ] [Spanner](http://highscalability.com/blog/2012/9/24/google-spanners-most-surprising-revelation-nosql-is-out-and.html)\n    - [ ] [Machine Learning Driven Programming: A New Programming For A New World](http://highscalability.com/blog/2016/7/6/machine-learning-driven-programming-a-new-programming-for-a.html)\n    - [ ] [The Image Optimization Technology That Serves Millions Of Requests Per Day](http://highscalability.com/blog/2016/6/15/the-image-optimization-technology-that-serves-millions-of-re.html)\n    - [ ] [A Patreon Architecture Short](http://highscalability.com/blog/2016/2/1/a-patreon-architecture-short.html)\n    - [ ] [Tinder: How Does One Of The Largest Recommendation Engines Decide Who You'll See Next?](http://highscalability.com/blog/2016/1/27/tinder-how-does-one-of-the-largest-recommendation-engines-de.html)\n    - [ ] [Design Of A Modern Cache](http://highscalability.com/blog/2016/1/25/design-of-a-modern-cache.html)\n    - [ ] [Live Video Streaming At Facebook Scale](http://highscalability.com/blog/2016/1/13/live-video-streaming-at-facebook-scale.html)\n    - [ ] [A Beginner's Guide To Scaling To 11 Million+ Users On Amazon's AWS](http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html)\n    - [ ] [How Does The Use Of Docker Effect Latency?](http://highscalability.com/blog/2015/12/16/how-does-the-use-of-docker-effect-latency.html)\n    - [ ] [A 360 Degree View Of The Entire Netflix Stack](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)\n    - [ ] [Latency Is Everywhere And It Costs You Sales - How To Crush It](http://highscalability.com/latency-everywhere-and-it-costs-you-sales-how-crush-it)\n    - [ ] [Serverless (very long, just need the gist)](http://martinfowler.com/articles/serverless.html)\n    - [ ] [What Powers Instagram: Hundreds of Instances, Dozens of Technologies](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances)\n    - [ ] [Cinchcast Architecture - Producing 1,500 Hours Of Audio Every Day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html)\n    - [ ] [Justin.Tv's Live Video Broadcasting Architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html)\n    - [ ] [Playfish's Social Gaming Architecture - 50 Million Monthly Users And Growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html)\n    - [ ] [TripAdvisor Architecture - 40M Visitors, 200M Dynamic Page Views, 30TB Data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html)\n    - [ ] [PlentyOfFish Architecture](http://highscalability.com/plentyoffish-architecture)\n    - [ ] [Salesforce Architecture - How They Handle 1.3 Billion Transactions A Day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html)\n    - [ ] [ESPN's Architecture At Scale - Operating At 100,000 Duh Nuh Nuhs Per Second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html)\n    - [ ] See \"Messaging, Serialization, and Queueing Systems\" way below for info on some of the technologies that can glue services together\n    - [ ] Twitter:\n        - [O'Reilly MySQL CE 2011: Jeremy Cole, \"Big and Small Data at @Twitter\" (video)](https://www.youtube.com/watch?v=5cKTP36HVgI)\n        - [Timelines at Scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)\n    - For even more, see \"Mining Massive Datasets\" video series in the [Video Series](#video-series) section.\n- [ ] Practicing the system design process: Here are some ideas to try working through on paper, each with some documentation on how it was handled in the real world:\n    - review: [The System Design Primer](https://github.com/donnemartin/system-design-primer)\n    - [System Design from HiredInTech](http://www.hiredintech.com/system-design/)\n    - [cheat sheet](https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/system-design.pdf)\n    - flow:\n        1. Understand the problem and scope:\n            - define the use cases, with interviewer's help\n            - suggest additional features\n            - remove items that interviewer deems out of scope\n            - assume high availability is required, add as a use case\n        2. Think about constraints:\n            - ask how many requests per month\n            - ask how many requests per second (they may volunteer it or make you do the math)\n            - estimate reads vs. writes percentage\n            - keep 80/20 rule in mind when estimating\n            - how much data written per second\n            - total storage required over 5 years\n            - how much data read per second\n        3. Abstract design:\n            - layers (service, data, caching)\n            - infrastructure: load balancing, messaging\n            - rough overview of any key algorithm that drives the service\n            - consider bottlenecks and determine solutions\n    - Exercises:\n        - [Design a CDN network: old article](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci)\n        - [Design a random unique ID generation system](https://blog.twitter.com/2010/announcing-snowflake)\n        - [Design an online multiplayer card game](http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)\n        - [Design a key-value database](http://www.slideshare.net/dvirsky/introduction-to-redis)\n        - [Design a picture sharing system](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)\n        - [Design a recommendation system](http://ijcai13.org/files/tutorial_slides/td3.pdf)\n        - [Design a URL-shortener system: copied from above](http://www.hiredintech.com/system-design/the-system-design-process/)\n        - [Design a cache system](https://www.adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n---\n\n## Final Review\n\n    This section will have shorter videos that you can watch pretty quickly to review most of the important concepts.\n    It's nice if you want a refresher often.\n\n- [ ] Series of 2-3 minutes short subject videos (23 videos)\n    - [Videos](https://www.youtube.com/watch?v=r4r1DZcx1cM&list=PLmVb1OknmNJuC5POdcDv5oCS7_OUkDgpj&index=22)\n- [ ] Series of 2-5 minutes short subject videos - Michael Sambol (18 videos):\n    - [Videos](https://www.youtube.com/channel/UCzDJwLWoYCUQowF_nG3m5OQ)\n- [ ] [Sedgewick Videos - Algorithms I](https://www.coursera.org/learn/algorithms-part1)\n- [ ] [Sedgewick Videos - Algorithms II](https://www.coursera.org/learn/algorithms-part2)\n\n---\n\n## Coding Question Practice\n\nNow that you know all the computer science topics above, it's time to practice answering coding problems.\n\n**Coding question practice is not about memorizing answers to programming problems.**\n\nWhy you need to practice doing programming problems:\n- problem recognition, and where the right data structures and algorithms fit in\n- gathering requirements for the problem\n- talking your way through the problem like you will in the interview\n- coding on a whiteboard or paper, not a computer\n- coming up with time and space complexity for your solutions\n- testing your solutions\n\nThere is a great intro for methodical, communicative problem solving in an interview. You'll get this from the programming\ninterview books, too, but I found this outstanding:\n[Algorithm design canvas](http://www.hiredintech.com/algorithm-design/)\n\nNo whiteboard at home? That makes sense. I'm a weirdo and have a big whiteboard. Instead of a whiteboard, pick up a\nlarge drawing pad from an art store. You can sit on the couch and practice. This is my \"sofa whiteboard\".\nI added the pen in the photo for scale. If you use a pen, you'll wish you could erase. Gets messy quick. I use a pencil \nand eraser.\n\n![my sofa whiteboard](https://d3j2pkmjtin6ou.cloudfront.net/art_board_sm_2.jpg)\n\nSupplemental:\n\n- [Mathematics for Topcoders](https://www.topcoder.com/community/competitive-programming/tutorials/mathematics-for-topcoders/)\n- [Dynamic Programming \u2013 From Novice to Advanced](https://www.topcoder.com/community/competitive-programming/tutorials/dynamic-programming-from-novice-to-advanced/)\n- [MIT Interview Materials](https://web.archive.org/web/20160906124824/http://courses.csail.mit.edu/iap/interview/materials.php)\n- [Exercises for getting better at a given language](http://exercism.io/languages)\n\n**Read and Do Programming Problems (in this order):**\n\n- [ ] [Programming Interviews Exposed: Secrets to Landing Your Next Job, 2nd Edition](http://www.wiley.com/WileyCDA/WileyTitle/productCd-047012167X.html)\n    - answers in C, C++ and Java\n- [ ] [Cracking the Coding Interview, 6th Edition](http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/)\n    - answers in Java\n\nSee [Book List above](#book-list)\n\n\n## Coding exercises/challenges\n\nOnce you've learned your brains out, put those brains to work.\nTake coding challenges every day, as many as you can.\n\n- [How to Find a Solution](https://www.topcoder.com/community/competitive-programming/tutorials/how-to-find-a-solution/)\n- [How to Dissect a Topcoder Problem Statement](https://www.topcoder.com/community/competitive-programming/tutorials/how-to-dissect-a-topcoder-problem-statement/)\n\nCoding Interview Question Videos:\n- [IDeserve (88 videos)](https://www.youtube.com/watch?v=NBcqBddFbZw&list=PLamzFoFxwoNjPfxzaWqs7cZGsPYy0x_gI)\n- [Tushar Roy (5 playlists)](https://www.youtube.com/user/tusharroy2525/playlists?shelf_id=2&view=50&sort=dd)\n    - Super for walkthroughs of problem solutions.\n- [Nick White - LeetCode Solutions (187 Videos)](https://www.youtube.com/playlist?list=PLU_sdQYzUj2keVENTP0a5rdykRSgg9Wp-)\n    - Good explanations of solution and the code.\n    - You can watch several in a short time.\n- [FisherCoder - LeetCode Solutions](https://youtube.com/FisherCoder)\n\nChallenge sites:\n- [LeetCode](https://leetcode.com/)\n    - My favorite coding problem site. It's worth the subscription money for the 1-2 months you'll likely be preparing.\n    - [LeetCode solutions from FisherCoder](https://github.com/fishercoder1534/Leetcode) \n    - See Nick White Videos above for short code-throughs\n- [HackerRank](https://www.hackerrank.com/)\n- [TopCoder](https://www.topcoder.com/)\n- [InterviewCake](https://www.interviewcake.com/)\n- [Geeks for Geeks](http://www.geeksforgeeks.org/)\n- [InterviewBit](https://www.interviewbit.com/invite/icjf)\n- [Project Euler (math-focused)](https://projecteuler.net/index.php?section=problems)\n\nLanguage-learning sites, with challenges:\n- [Codewars](http://www.codewars.com)\n- [Codility](https://codility.com/programmers/)\n- [HackerEarth](https://www.hackerearth.com/)\n- [Sphere Online Judge (spoj)](http://www.spoj.com/)\n- [Codechef](https://www.codechef.com/)\n\nChallenge repos:\n- [Interactive Coding Interview Challenges in Python](https://github.com/donnemartin/interactive-coding-challenges)\n\nMock Interviews:\n- [Gainlo.co: Mock interviewers from big companies](http://www.gainlo.co/) - I used this and it helped me relax for the phone screen and on-site interview.\n- [Pramp: Mock interviews from/with peers](https://www.pramp.com/) - peer-to-peer model of practice interviews\n- [Refdash: Mock interviews and expedited interviews](https://refdash.com/) - also help candidates fast track by skipping multiple interviews with tech companies.\n\n\n## Once you're closer to the interview\n\n- Cracking The Coding Interview Set 2 (videos):\n    - [Cracking The Code Interview](https://www.youtube.com/watch?v=4NIb9l3imAo)\n    - [Cracking the Coding Interview - Fullstack Speaker Series](https://www.youtube.com/watch?v=Eg5-tdAwclo)\n\n## Your Resume\n\n- See Resume prep items in Cracking The Coding Interview and back of Programming Interviews Exposed\n\n\n## Be thinking of for when the interview comes\n\nThink of about 20 interview questions you'll get, along with the lines of the items below. Have 2-3 answers for each.\nHave a story, not just data, about something you accomplished.\n\n- Why do you want this job?\n- What's a tough problem you've solved?\n- Biggest challenges faced?\n- Best/worst designs seen?\n- Ideas for improving an existing product.\n- How do you work best, as an individual and as part of a team?\n- Which of your skills or experiences would be assets in the role and why?\n- What did you most enjoy at [job x / project y]?\n- What was the biggest challenge you faced at [job x / project y]?\n- What was the hardest bug you faced at [job x / project y]?\n- What did you learn at [job x / project y]?\n- What would you have done better at [job x / project y]?\n\n## Have questions for the interviewer\n\n    Some of mine (I already may know answer to but want their opinion or team perspective):\n\n- How large is your team?\n- What does your dev cycle look like? Do you do waterfall/sprints/agile?\n- Are rushes to deadlines common? Or is there flexibility?\n- How are decisions made in your team?\n- How many meetings do you have per week?\n- Do you feel your work environment helps you concentrate?\n- What are you working on?\n- What do you like about it?\n- What is the work life like?\n- How is work/life balance?\n\n## Once You've Got The Job\n\nCongratulations!\n\nKeep learning.\n\nYou're never really done.\n\n---\n\n    *****************************************************************************************************\n    *****************************************************************************************************\n\n    Everything below this point is optional.\n    By studying these, you'll get greater exposure to more CS concepts, and will be better prepared for\n    any software engineering job. You'll be a much more well-rounded software engineer.\n\n    *****************************************************************************************************\n    *****************************************************************************************************\n\n---\n\n## Additional Books\n\n    These are here so you can dive into a topic you find interesting.\n\n- [The Unix Programming Environment](https://www.amazon.com/dp/013937681X)\n    - an oldie but a goodie\n- [The Linux Command Line: A Complete Introduction](https://www.amazon.com/dp/1593273894/)\n    - a modern option\n- [TCP/IP Illustrated Series](https://en.wikipedia.org/wiki/TCP/IP_Illustrated)\n- [Head First Design Patterns](https://www.amazon.com/gp/product/0596007124/)\n    - a gentle introduction to design patterns\n- [Design Patterns: Elements of Reusable Object-Oriente\u200bd Software](https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612)\n    - aka the \"Gang Of Four\" book, or GOF\n    - the canonical design patterns book\n- [UNIX and Linux System Administration Handbook, 5th Edition](https://www.amazon.com/UNIX-Linux-System-Administration-Handbook/dp/0134277554/)\n- [Algorithm Design Manual](http://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202) (Skiena)\n    - As a review and problem recognition\n    - The algorithm catalog portion is well beyond the scope of difficulty you'll get in an interview.\n    - This book has 2 parts:\n        - class textbook on data structures and algorithms\n            - pros:\n                - is a good review as any algorithms textbook would be\n                - nice stories from his experiences solving problems in industry and academia\n                - code examples in C\n            - cons:\n                - can be as dense or impenetrable as CLRS, and in some cases, CLRS may be a better alternative for some subjects\n                - chapters 7, 8, 9 can be painful to try to follow, as some items are not explained well or require more brain than I have\n                - don't get me wrong: I like Skiena, his teaching style, and mannerisms, but I may not be Stony Brook material.\n        - algorithm catalog:\n            - this is the real reason you buy this book.\n            - about to get to this part. Will update here once I've made my way through it.\n    - Can rent it on kindle\n    - Answers:\n        - [Solutions](http://www.algorithm.cs.sunysb.edu/algowiki/index.php/The_Algorithms_Design_Manual_(Second_Edition))\n        - [Solutions](http://blog.panictank.net/category/algorithmndesignmanualsolutions/page/2/)\n    - [Errata](http://www3.cs.stonybrook.edu/~skiena/algorist/book/errata)\n- [Write Great Code: Volume 1: Understanding the Machine](https://www.amazon.com/Write-Great-Code-Understanding-Machine/dp/1593270038)\n    - The book was published in 2004, and is somewhat outdated, but it's a terrific resource for understanding a computer in brief.\n    - The author invented [HLA](https://en.wikipedia.org/wiki/High_Level_Assembly), so take mentions and examples in HLA with a grain of salt. Not widely used, but decent examples of what assembly looks like.\n    - These chapters are worth the read to give you a nice foundation:\n        - Chapter 2 - Numeric Representation\n        - Chapter 3 - Binary Arithmetic and Bit Operations\n        - Chapter 4 - Floating-Point Representation\n        - Chapter 5 - Character Representation\n        - Chapter 6 - Memory Organization and Access\n        - Chapter 7 - Composite Data Types and Memory Objects\n        - Chapter 9 - CPU Architecture\n        - Chapter 10 - Instruction Set Architecture\n        - Chapter 11 - Memory Architecture and Organization\n- [Introduction to Algorithms](https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844)\n    - **Important:** Reading this book will only have limited value. This book is a great review of algorithms and data structures, but won't teach you how to write good code. You have to be able to code a decent solution efficiently.\n    - aka CLR, sometimes CLRS, because Stein was late to the game\n\n- [Computer Architecture, Sixth Edition: A Quantitative Approach](https://www.amazon.com/dp/0128119055)\n    - For a richer, more up-to-date (2017), but longer treatment\n\n- [Programming Pearls](http://www.amazon.com/Programming-Pearls-2nd-Jon-Bentley/dp/0201657880)\n    - The first couple of chapters present clever solutions to programming problems (some very old using data tape) but\n      that is just an intro. This a guidebook on program design and architecture.\n\n## Additional Learning\n    \n    I added them to help you become a well-rounded software engineer, and to be aware of certain \n    technologies and algorithms, so you'll have a bigger toolbox.\n\n- ### Compilers\n    - [How a Compiler Works in ~1 minute (video)](https://www.youtube.com/watch?v=IhC7sdYe-Jg)\n    - [Harvard CS50 - Compilers (video)](https://www.youtube.com/watch?v=CSZLNYF4Klo)\n    - [C++ (video)](https://www.youtube.com/watch?v=twodd1KFfGk)\n    - [Understanding Compiler Optimization (C++) (video)](https://www.youtube.com/watch?v=FnGCDLhaxKU)\n\n- ### Emacs and vi(m)\n    - Familiarize yourself with a unix-based code editor\n    - vi(m):\n        - [Editing With vim 01 - Installation, Setup, and The Modes (video)](https://www.youtube.com/watch?v=5givLEMcINQ&index=1&list=PL13bz4SHGmRxlZVmWQ9DvXo1fEg4UdGkr)\n        - [VIM Adventures](http://vim-adventures.com/)\n        - set of 4 videos:\n            - [The vi/vim editor - Lesson 1](https://www.youtube.com/watch?v=SI8TeVMX8pk)\n            - [The vi/vim editor - Lesson 2](https://www.youtube.com/watch?v=F3OO7ZIOaJE)\n            - [The vi/vim editor - Lesson 3](https://www.youtube.com/watch?v=ZYEccA_nMaI)\n            - [The vi/vim editor - Lesson 4](https://www.youtube.com/watch?v=1lYD5gwgZIA)\n        - [Using Vi Instead of Emacs](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Using_Vi_instead_of_Emacs)\n    - emacs:\n        - [Basics Emacs Tutorial (video)](https://www.youtube.com/watch?v=hbmV1bnQ-i0)\n        - set of 3 (videos):\n            - [Emacs Tutorial (Beginners) -Part 1- File commands, cut/copy/paste, cursor commands](https://www.youtube.com/watch?v=ujODL7MD04Q)\n            - [Emacs Tutorial (Beginners) -Part 2- Buffer management, search, M-x grep and rgrep modes](https://www.youtube.com/watch?v=XWpsRupJ4II)\n            - [Emacs Tutorial (Beginners) -Part 3- Expressions, Statements, ~/.emacs file and packages](https://www.youtube.com/watch?v=paSgzPso-yc)\n        - [Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs (video)](https://www.youtube.com/watch?v=JWD1Fpdd4Pc)\n        - [Writing C Programs With Emacs](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Writing_C_programs_with_Emacs)\n        - [(maybe) Org Mode In Depth: Managing Structure (video)](https://www.youtube.com/watch?v=nsGYet02bEk)\n\n- ### Unix command line tools\n    - I filled in the list below from good tools.\n    - bash\n    - cat\n    - grep\n    - sed\n    - awk\n    - curl or wget\n    - sort\n    - tr\n    - uniq\n    - [strace](https://en.wikipedia.org/wiki/Strace)\n    - [tcpdump](https://danielmiessler.com/study/tcpdump/)\n\n- ### Information theory (videos)\n    - [Khan Academy](https://www.khanacademy.org/computing/computer-science/informationtheory)\n    - more about Markov processes:\n        - [Core Markov Text Generation](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/waxgx/core-markov-text-generation)\n        - [Core Implementing Markov Text Generation](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/gZhiC/core-implementing-markov-text-generation)\n        - [Project = Markov Text Generation Walk Through](https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/EUjrq/project-markov-text-generation-walk-through)\n    - See more in MIT 6.050J Information and Entropy series below.\n\n- ### Parity & Hamming Code (videos)\n    - [Intro](https://www.youtube.com/watch?v=q-3BctoUpHE)\n    - [Parity](https://www.youtube.com/watch?v=DdMcAUlxh1M)\n    - Hamming Code:\n        - [Error detection](https://www.youtube.com/watch?v=1A_NcXxdoCc)\n        - [Error correction](https://www.youtube.com/watch?v=JAMLuxdHH8o)\n    - [Error Checking](https://www.youtube.com/watch?v=wbH2VxzmoZk)\n\n- ### Entropy\n    - also see videos below\n    - make sure to watch information theory videos first\n    - [Information Theory, Claude Shannon, Entropy, Redundancy, Data Compression & Bits (video)](https://youtu.be/JnJq3Py0dyM?t=176)\n\n- ### Cryptography\n    - also see videos below\n    - make sure to watch information theory videos first\n    - [Khan Academy Series](https://www.khanacademy.org/computing/computer-science/cryptography)\n    - [Cryptography: Hash Functions](https://www.youtube.com/watch?v=KqqOXndnvic&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=30)\n    - [Cryptography: Encryption](https://www.youtube.com/watch?v=9TNI2wHmaeI&index=31&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n\n- ### Compression\n    - make sure to watch information theory videos first\n    - Computerphile (videos):\n        - [Compression](https://www.youtube.com/watch?v=Lto-ajuqW3w)\n        - [Entropy in Compression](https://www.youtube.com/watch?v=M5c_RFKVkko)\n        - [Upside Down Trees (Huffman Trees)](https://www.youtube.com/watch?v=umTbivyJoiI)\n        - [EXTRA BITS/TRITS - Huffman Trees](https://www.youtube.com/watch?v=DV8efuB3h2g)\n        - [Elegant Compression in Text (The LZ 77 Method)](https://www.youtube.com/watch?v=goOa3DGezUA)\n        - [Text Compression Meets Probabilities](https://www.youtube.com/watch?v=cCDCfoHTsaU)\n    - [Compressor Head videos](https://www.youtube.com/playlist?list=PLOU2XLYxmsIJGErt5rrCqaSGTMyyqNt2H)\n    - [(optional) Google Developers Live: GZIP is not enough!](https://www.youtube.com/watch?v=whGwm0Lky2s)\n\n- ### Computer Security\n    - [MIT (23 videos)](https://www.youtube.com/playlist?list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Introduction, Threat Models](https://www.youtube.com/watch?v=GqmQg-cszw4&index=1&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Control Hijacking Attacks](https://www.youtube.com/watch?v=6bwzNg5qQ0o&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=2)\n        - [Buffer Overflow Exploits and Defenses](https://www.youtube.com/watch?v=drQyrzRoRiA&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=3)\n        - [Privilege Separation](https://www.youtube.com/watch?v=6SIJmoE9L9g&index=4&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Capabilities](https://www.youtube.com/watch?v=8VqTSY-11F4&index=5&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Sandboxing Native Code](https://www.youtube.com/watch?v=VEV74hwASeU&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&index=6)\n        - [Web Security Model](https://www.youtube.com/watch?v=chkFBigodIw&index=7&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Securing Web Applications](https://www.youtube.com/watch?v=EBQIGy1ROLY&index=8&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Symbolic Execution](https://www.youtube.com/watch?v=yRVZPvHYHzw&index=9&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Network Security](https://www.youtube.com/watch?v=SIEVvk3NVuk&index=11&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Network Protocols](https://www.youtube.com/watch?v=QOtA76ga_fY&index=12&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n        - [Side-Channel Attacks](https://www.youtube.com/watch?v=PuVMkSEcPiI&index=15&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n\n- ### Garbage collection\n    - [GC in Python (video)](https://www.youtube.com/watch?v=iHVs_HkjdmI)\n    - [Deep Dive Java: Garbage Collection is Good!](https://www.infoq.com/presentations/garbage-collection-benefits)\n    - [Deep Dive Python: Garbage Collection in CPython (video)](https://www.youtube.com/watch?v=P-8Z0-MhdQs&list=PLdzf4Clw0VbOEWOS_sLhT_9zaiQDrS5AR&index=3)\n\n- ### Parallel Programming\n    - [Coursera (Scala)](https://www.coursera.org/learn/parprog1/home/week/1)\n    - [Efficient Python for High Performance Parallel Computing (video)](https://www.youtube.com/watch?v=uY85GkaYzBk)\n\n- ### Messaging, Serialization, and Queueing Systems\n    - [Thrift](https://thrift.apache.org/)\n        - [Tutorial](http://thrift-tutorial.readthedocs.io/en/latest/intro.html)\n    - [Protocol Buffers](https://developers.google.com/protocol-buffers/)\n        - [Tutorials](https://developers.google.com/protocol-buffers/docs/tutorials)\n    - [gRPC](http://www.grpc.io/)\n        - [gRPC 101 for Java Developers (video)](https://www.youtube.com/watch?v=5tmPvSe7xXQ&list=PLcTqM9n_dieN0k1nSeN36Z_ppKnvMJoly&index=1)\n    - [Redis](http://redis.io/)\n        - [Tutorial](http://try.redis.io/)\n    - [Amazon SQS (queue)](https://aws.amazon.com/sqs/)\n    - [Amazon SNS (pub-sub)](https://aws.amazon.com/sns/)\n    - [RabbitMQ](https://www.rabbitmq.com/)\n        - [Get Started](https://www.rabbitmq.com/getstarted.html)\n    - [Celery](http://www.celeryproject.org/)\n        - [First Steps With Celery](http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html)\n    - [ZeroMQ](http://zeromq.org/)\n        - [Intro - Read The Manual](http://zeromq.org/intro:read-the-manual)\n    - [ActiveMQ](http://activemq.apache.org/)\n    - [Kafka](http://kafka.apache.org/documentation.html#introduction)\n    - [MessagePack](http://msgpack.org/index.html)\n    - [Avro](https://avro.apache.org/)\n\n- ### A*\n    - [A Search Algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm)\n    - [A* Pathfinding Tutorial (video)](https://www.youtube.com/watch?v=KNXfSOx4eEE)\n    - [A* Pathfinding (E01: algorithm explanation) (video)](https://www.youtube.com/watch?v=-L-WgKMFuhE)\n\n- ### Fast Fourier Transform\n    - [An Interactive Guide To The Fourier Transform](https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/)\n    - [What is a Fourier transform? What is it used for?](http://www.askamathematician.com/2012/09/q-what-is-a-fourier-transform-what-is-it-used-for/)\n    - [What is the Fourier Transform? (video)](https://www.youtube.com/watch?v=Xxut2PN-V8Q)\n    - [Divide & Conquer: FFT (video)](https://www.youtube.com/watch?v=iTMn0Kt18tg&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=4)\n    - [Understanding The FFT](http://jakevdp.github.io/blog/2013/08/28/understanding-the-fft/)\n\n- ### Bloom Filter\n    - Given a Bloom filter with m bits and k hashing functions, both insertion and membership testing are O(k)\n    - [Bloom Filters (video)](https://www.youtube.com/watch?v=-SuTGoFYjZs)\n    - [Bloom Filters | Mining of Massive Datasets | Stanford University (video)](https://www.youtube.com/watch?v=qBTdukbzc78)\n    - [Tutorial](http://billmill.org/bloomfilter-tutorial/)\n    - [How To Write A Bloom Filter App](http://blog.michaelschmatz.com/2016/04/11/how-to-write-a-bloom-filter-cpp/)\n\n- ### HyperLogLog\n    - [How To Count A Billion Distinct Objects Using Only 1.5KB Of Memory](http://highscalability.com/blog/2012/4/5/big-data-counting-how-to-count-a-billion-distinct-objects-us.html)\n\n- ### Locality-Sensitive Hashing\n    - used to determine the similarity of documents\n    - the opposite of MD5 or SHA which are used to determine if 2 documents/strings are exactly the same.\n    - [Simhashing (hopefully) made simple](http://ferd.ca/simhashing-hopefully-made-simple.html)\n\n- ### van Emde Boas Trees\n    - [Divide & Conquer: van Emde Boas Trees (video)](https://www.youtube.com/watch?v=hmReJCupbNU&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=6)\n    - [MIT Lecture Notes](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2012/lecture-notes/MIT6_046JS12_lec15.pdf)\n\n- ### Augmented Data Structures\n    - [CS 61B Lecture 39: Augmenting Data Structures](https://archive.org/details/ucberkeley_webcast_zksIj9O8_jc)\n\n- ### Balanced search trees\n    - Know at least one type of balanced binary tree (and know how it's implemented):\n    - \"Among balanced search trees, AVL and 2/3 trees are now pass\u00e9, and red-black trees seem to be more popular.\n        A particularly interesting self-organizing data structure is the splay tree, which uses rotations\n        to move any accessed key to the root.\" - Skiena\n    - Of these, I chose to implement a splay tree. From what I've read, you won't implement a\n        balanced search tree in your interview. But I wanted exposure to coding one up\n        and let's face it, splay trees are the bee's knees. I did read a lot of red-black tree code.\n        - splay tree: insert, search, delete functions\n        If you end up implementing red/black tree try just these:\n        - search and insertion functions, skipping delete\n    - I want to learn more about B-Tree since it's used so widely with very large data sets.\n    - [Self-balancing binary search tree](https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree)\n\n    - **AVL trees**\n        - In practice:\n            From what I can tell, these aren't used much in practice, but I could see where they would be:\n            The AVL tree is another structure supporting O(log n) search, insertion, and removal. It is more rigidly\n            balanced than red\u2013black trees, leading to slower insertion and removal but faster retrieval. This makes it\n            attractive for data structures that may be built once and loaded without reconstruction, such as language\n            dictionaries (or program dictionaries, such as the opcodes of an assembler or interpreter).\n        - [MIT AVL Trees / AVL Sort (video)](https://www.youtube.com/watch?v=FNeL18KsWPc&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=6)\n        - [AVL Trees (video)](https://www.coursera.org/learn/data-structures/lecture/Qq5E0/avl-trees)\n        - [AVL Tree Implementation (video)](https://www.coursera.org/learn/data-structures/lecture/PKEBC/avl-tree-implementation)\n        - [Split And Merge](https://www.coursera.org/learn/data-structures/lecture/22BgE/split-and-merge)\n\n    - **Splay trees**\n        - In practice:\n            Splay trees are typically used in the implementation of caches, memory allocators, routers, garbage collectors,\n            data compression, ropes (replacement of string used for long text strings), in Windows NT (in the virtual memory,\n            networking and file system code) etc.\n        - [CS 61B: Splay Trees (video)](https://archive.org/details/ucberkeley_webcast_G5QIXywcJlY)\n        - MIT Lecture: Splay Trees:\n            - Gets very mathy, but watch the last 10 minutes for sure.\n            - [Video](https://www.youtube.com/watch?v=QnPl_Y6EqMo)\n\n    - **Red/black trees**\n        - these are a translation of a 2-3 tree (see below)\n        - In practice:\n            Red\u2013black trees offer worst-case guarantees for insertion time, deletion time, and search time.\n            Not only does this make them valuable in time-sensitive applications such as real-time applications,\n            but it makes them valuable building blocks in other data structures which provide worst-case guarantees;\n            for example, many data structures used in computational geometry can be based on red\u2013black trees, and\n            the Completely Fair Scheduler used in current Linux kernels uses red\u2013black trees. In the version 8 of Java,\n            the Collection HashMap has been modified such that instead of using a LinkedList to store identical elements with poor\n            hashcodes, a Red-Black tree is used.\n        - [Aduni - Algorithms - Lecture 4 (link jumps to starting point) (video)](https://youtu.be/1W3x0f_RmUo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3871)\n        - [Aduni - Algorithms - Lecture 5 (video)](https://www.youtube.com/watch?v=hm2GHwyKF1o&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=5)\n        - [Red-Black Tree](https://en.wikipedia.org/wiki/Red%E2%80%93black_tree)\n        - [An Introduction To Binary Search And Red Black Tree](https://www.topcoder.com/community/competitive-programming/tutorials/an-introduction-to-binary-search-and-red-black-trees/)\n\n    - **2-3 search trees**\n        - In practice:\n            2-3 trees have faster inserts at the expense of slower searches (since height is more compared to AVL trees).\n        - You would use 2-3 tree very rarely because its implementation involves different types of nodes. Instead, people use Red Black trees.\n        - [23-Tree Intuition and Definition (video)](https://www.youtube.com/watch?v=C3SsdUqasD4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=2)\n        - [Binary View of 23-Tree](https://www.youtube.com/watch?v=iYvBtGKsqSg&index=3&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n        - [2-3 Trees (student recitation) (video)](https://www.youtube.com/watch?v=TOb1tuEZ2X4&index=5&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n\n    - **2-3-4 Trees (aka 2-4 trees)**\n        - In practice:\n            For every 2-4 tree, there are corresponding red\u2013black trees with data elements in the same order. The insertion and deletion\n            operations on 2-4 trees are also equivalent to color-flipping and rotations in red\u2013black trees. This makes 2-4 trees an\n            important tool for understanding the logic behind red\u2013black trees, and this is why many introductory algorithm texts introduce\n            2-4 trees just before red\u2013black trees, even though **2-4 trees are not often used in practice**.\n        - [CS 61B Lecture 26: Balanced Search Trees (video)](https://archive.org/details/ucberkeley_webcast_zqrqYXkth6Q)\n        - [Bottom Up 234-Trees (video)](https://www.youtube.com/watch?v=DQdMYevEyE4&index=4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n        - [Top Down 234-Trees (video)](https://www.youtube.com/watch?v=2679VQ26Fp4&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=5)\n\n    - **N-ary (K-ary, M-ary) trees**\n        - note: the N or K is the branching factor (max branches)\n        - binary trees are a 2-ary tree, with branching factor = 2\n        - 2-3 trees are 3-ary\n        - [K-Ary Tree](https://en.wikipedia.org/wiki/K-ary_tree)\n\n    - **B-Trees**\n        - fun fact: it's a mystery, but the B could stand for Boeing, Balanced, or Bayer (co-inventor)\n        - In Practice:\n            B-Trees are widely used in databases. Most modern filesystems use B-trees (or Variants). In addition to\n            its use in databases, the B-tree is also used in filesystems to allow quick random access to an arbitrary\n            block in a particular file. The basic problem is turning the file block i address into a disk block\n            (or perhaps to a cylinder-head-sector) address.\n        - [B-Tree](https://en.wikipedia.org/wiki/B-tree)\n        - [B-Tree Datastructure](http://btechsmartclass.com/data_structures/b-trees.html)\n        - [Introduction to B-Trees (video)](https://www.youtube.com/watch?v=I22wEC1tTGo&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&index=6)\n        - [B-Tree Definition and Insertion (video)](https://www.youtube.com/watch?v=s3bCdZGrgpA&index=7&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n        - [B-Tree Deletion (video)](https://www.youtube.com/watch?v=svfnVhJOfMc&index=8&list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6)\n        - [MIT 6.851 - Memory Hierarchy Models (video)](https://www.youtube.com/watch?v=V3omVLzI0WE&index=7&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf)\n                - covers cache-oblivious B-Trees, very interesting data structures\n                - the first 37 minutes are very technical, may be skipped (B is block size, cache line size)\n\n\n- ### k-D Trees\n    - great for finding number of points in a rectangle or higher dimension object\n    - a good fit for k-nearest neighbors\n    - [Kd Trees (video)](https://www.youtube.com/watch?v=W94M9D_yXKk)\n    - [kNN K-d tree algorithm (video)](https://www.youtube.com/watch?v=Y4ZgLlDfKDg)\n\n- ### Skip lists\n    - \"These are somewhat of a cult data structure\" - Skiena\n    - [Randomization: Skip Lists (video)](https://www.youtube.com/watch?v=2g9OSRKJuzM&index=10&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - [For animations and a little more detail](https://en.wikipedia.org/wiki/Skip_list)\n\n- ### Network Flows\n    - [Ford-Fulkerson in 5 minutes \u2014 Step by step example (video)](https://www.youtube.com/watch?v=Tl90tNtKvxs)\n    - [Ford-Fulkerson Algorithm (video)](https://www.youtube.com/watch?v=v1VgJmkEJW0)\n    - [Network Flows (video)](https://www.youtube.com/watch?v=2vhN4Ice5jI)\n\n- ### Disjoint Sets & Union Find\n    - [UCB 61B - Disjoint Sets; Sorting & selection (video)](https://archive.org/details/ucberkeley_webcast_MAEGXTwmUsI)\n    - [Sedgewick Algorithms - Union-Find (6 videos)](https://www.coursera.org/learn/algorithms-part1/home/week/1)\n\n- ### Math for Fast Processing\n    - [Integer Arithmetic, Karatsuba Multiplication (video)](https://www.youtube.com/watch?v=eCaXlAaN2uE&index=11&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [The Chinese Remainder Theorem (used in cryptography) (video)](https://www.youtube.com/watch?v=ru7mWZJlRQg)\n\n- ### Treap\n    - Combination of a binary search tree and a heap\n    - [Treap](https://en.wikipedia.org/wiki/Treap)\n    - [Data Structures: Treaps explained (video)](https://www.youtube.com/watch?v=6podLUYinH8)\n    - [Applications in set operations](https://www.cs.cmu.edu/~scandal/papers/treaps-spaa98.pdf)\n\n- ### Linear Programming (videos)\n    - [Linear Programming](https://www.youtube.com/watch?v=M4K6HYLHREQ)\n    - [Finding minimum cost](https://www.youtube.com/watch?v=2ACJ9ewUC6U)\n    - [Finding maximum value](https://www.youtube.com/watch?v=8AA_81xI3ik)\n    - [Solve Linear Equations with Python - Simplex Algorithm](https://www.youtube.com/watch?v=44pAWI7v5Zk)\n\n- ### Geometry, Convex hull (videos)\n    - [Graph Alg. IV: Intro to geometric algorithms - Lecture 9](https://youtu.be/XIAQRlNkJAw?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=3164)\n    - [Geometric Algorithms: Graham & Jarvis - Lecture 10](https://www.youtube.com/watch?v=J5aJEcOr6Eo&index=10&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n    - [Divide & Conquer: Convex Hull, Median Finding](https://www.youtube.com/watch?v=EzeYI7p9MjU&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=2)\n\n- ### Discrete math\n    - see videos below\n\n- ### Machine Learning\n    - Why ML?\n        - [How Google Is Remaking Itself As A Machine Learning First Company](https://backchannel.com/how-google-is-remaking-itself-as-a-machine-learning-first-company-ada63defcb70)\n        - [Large-Scale Deep Learning for Intelligent Computer Systems (video)](https://www.youtube.com/watch?v=QSaZGT4-6EY)\n        - [Deep Learning and Understandability versus Software Engineering and Verification by Peter Norvig](https://www.youtube.com/watch?v=X769cyzBNVw)\n    - [Google's Cloud Machine learning tools (video)](https://www.youtube.com/watch?v=Ja2hxBAwG_0)\n    - [Google Developers' Machine Learning Recipes (Scikit Learn & Tensorflow) (video)](https://www.youtube.com/playlist?list=PLOU2XLYxmsIIuiBfYad6rFYQU_jL2ryal)\n    - [Tensorflow (video)](https://www.youtube.com/watch?v=oZikw5k_2FM)\n    - [Tensorflow Tutorials](https://www.tensorflow.org/versions/r0.11/tutorials/index.html)\n    - [Practical Guide to implementing Neural Networks in Python (using Theano)](http://www.analyticsvidhya.com/blog/2016/04/neural-networks-python-theano/)\n    - Courses:\n        - [Great starter course: Machine Learning](https://www.coursera.org/learn/machine-learning)\n              - [videos only](https://www.youtube.com/playlist?list=PLZ9qNFMHZ-A4rycgrgOYma6zxF4BZGGPW)\n              - see videos 12-18 for a review of linear algebra (14 and 15 are duplicates)\n        - [Neural Networks for Machine Learning](https://www.coursera.org/learn/neural-networks)\n        - [Google's Deep Learning Nanodegree](https://www.udacity.com/course/deep-learning--ud730)\n        - [Google/Kaggle Machine Learning Engineer Nanodegree](https://www.udacity.com/course/machine-learning-engineer-nanodegree-by-google--nd009)\n        - [Self-Driving Car Engineer Nanodegree](https://www.udacity.com/drive)\n        - [Metis Online Course ($99 for 2 months)](http://www.thisismetis.com/explore-data-science)\n    - Resources:\n        - Books:\n            - [Python Machine Learning](https://www.amazon.com/Python-Machine-Learning-Sebastian-Raschka/dp/1783555130/)\n            - [Data Science from Scratch: First Principles with Python](https://www.amazon.com/Data-Science-Scratch-Principles-Python/dp/149190142X)\n            - [Introduction to Machine Learning with Python](https://www.amazon.com/Introduction-Machine-Learning-Python-Scientists/dp/1449369413/)\n        - [Machine Learning for Software Engineers](https://github.com/ZuzooVn/machine-learning-for-software-engineers)\n        - Data School: http://www.dataschool.io/\n\n---\n\n## Additional Detail on Some Subjects\n\n    I added these to reinforce some ideas already presented above, but didn't want to include them\n    above because it's just too much. It's easy to overdo it on a subject.\n    You want to get hired in this century, right?\n\n- **SOLID**   \n    - [ ] [Bob Martin SOLID Principles of Object Oriented and Agile Design (video)](https://www.youtube.com/watch?v=TMuno5RZNeE)\n    - [ ] S - [Single Responsibility Principle](http://www.oodesign.com/single-responsibility-principle.html) | [Single responsibility to each Object](http://www.javacodegeeks.com/2011/11/solid-single-responsibility-principle.html)\n        - [more flavor](https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk)\n    - [ ] O - [Open/Closed Principal](http://www.oodesign.com/open-close-principle.html)  | [On production level Objects are ready for extension but not for modification](https://en.wikipedia.org/wiki/Open/closed_principle)\n        - [more flavor](http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&hl=en)\n    - [ ] L - [Liskov Substitution Principal](http://www.oodesign.com/liskov-s-substitution-principle.html) | [Base Class and Derived class follow \u2018IS A\u2019 principal](http://stackoverflow.com/questions/56860/what-is-the-liskov-substitution-principle)\n        - [more flavor](http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&hl=en)\n    - [ ] I - [Interface segregation principle](http://www.oodesign.com/interface-segregation-principle.html) | clients should not be forced to implement interfaces they don't use\n        - [Interface Segregation Principle in 5 minutes (video)](https://www.youtube.com/watch?v=3CtAfl7aXAQ)\n        - [more flavor](http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&hl=en)\n    - [ ] D -[Dependency Inversion principle](http://www.oodesign.com/dependency-inversion-principle.html) | Reduce the dependency In composition of objects.\n        - [Why Is The Dependency Inversion Principle And Why Is It Important](http://stackoverflow.com/questions/62539/what-is-the-dependency-inversion-principle-and-why-is-it-important)\n        - [more flavor](http://docs.google.com/a/cleancoder.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&hl=en)\n\n\n- **Union-Find**\n    - [Overview](https://www.coursera.org/learn/data-structures/lecture/JssSY/overview)\n    - [Naive Implementation](https://www.coursera.org/learn/data-structures/lecture/EM5D0/naive-implementations)\n    - [Trees](https://www.coursera.org/learn/data-structures/lecture/Mxu0w/trees)\n    - [Union By Rank](https://www.coursera.org/learn/data-structures/lecture/qb4c2/union-by-rank)\n    - [Path Compression](https://www.coursera.org/learn/data-structures/lecture/Q9CVI/path-compression)\n    - [Analysis Options](https://www.coursera.org/learn/data-structures/lecture/GQQLN/analysis-optional)\n\n- **More Dynamic Programming** (videos)\n    - [6.006: Dynamic Programming I: Fibonacci, Shortest Paths](https://www.youtube.com/watch?v=OQ5jsbhAv_M&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=19)\n    - [6.006: Dynamic Programming II: Text Justification, Blackjack](https://www.youtube.com/watch?v=ENyox7kNKeY&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=20)\n    - [6.006: DP III: Parenthesization, Edit Distance, Knapsack](https://www.youtube.com/watch?v=ocZMDMZwhCY&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=21)\n    - [6.006: DP IV: Guitar Fingering, Tetris, Super Mario Bros.](https://www.youtube.com/watch?v=tp4_UXaVyx8&index=22&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n    - [6.046: Dynamic Programming & Advanced DP](https://www.youtube.com/watch?v=Tw1k46ywN6E&index=14&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n    - [6.046: Dynamic Programming: All-Pairs Shortest Paths](https://www.youtube.com/watch?v=NzgFUwOaoIw&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=15)\n    - [6.046: Dynamic Programming (student recitation)](https://www.youtube.com/watch?v=krZI60lKPek&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=12)\n\n- **Advanced Graph Processing** (videos)\n    - [Synchronous Distributed Algorithms: Symmetry-Breaking. Shortest-Paths Spanning Trees](https://www.youtube.com/watch?v=mUBmcbbJNf4&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=27)\n    - [Asynchronous Distributed Algorithms: Shortest-Paths Spanning Trees](https://www.youtube.com/watch?v=kQ-UQAzcnzA&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=28)\n\n- MIT **Probability** (mathy, and go slowly, which is good for mathy things) (videos):\n    - [MIT 6.042J - Probability Introduction](https://www.youtube.com/watch?v=SmFwFdESMHI&index=18&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Conditional Probability](https://www.youtube.com/watch?v=E6FbvM-FGZ8&index=19&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Independence](https://www.youtube.com/watch?v=l1BCv3qqW4A&index=20&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Random Variables](https://www.youtube.com/watch?v=MOfhhFaQdjw&list=PLB7540DEDD482705B&index=21)\n    - [MIT 6.042J - Expectation I](https://www.youtube.com/watch?v=gGlMSe7uEkA&index=22&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Expectation II](https://www.youtube.com/watch?v=oI9fMUqgfxY&index=23&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Large Deviations](https://www.youtube.com/watch?v=q4mwO2qS2z4&index=24&list=PLB7540DEDD482705B)\n    - [MIT 6.042J - Random Walks](https://www.youtube.com/watch?v=56iFMY8QW2k&list=PLB7540DEDD482705B&index=25)\n\n- [Simonson: Approximation Algorithms (video)](https://www.youtube.com/watch?v=oDniZCmNmNw&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=19)\n\n- **String Matching**\n    - Rabin-Karp (videos):\n        - [Rabin Karps Algorithm](https://www.coursera.org/learn/data-structures/lecture/c0Qkw/rabin-karps-algorithm)\n        - [Precomputing](https://www.coursera.org/learn/data-structures/lecture/nYrc8/optimization-precomputation)\n        - [Optimization: Implementation and Analysis](https://www.coursera.org/learn/data-structures/lecture/h4ZLc/optimization-implementation-and-analysis)\n        - [Table Doubling, Karp-Rabin](https://www.youtube.com/watch?v=BRO7mVIFt08&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=9)\n        - [Rolling Hashes, Amortized Analysis](https://www.youtube.com/watch?v=w6nuXg0BISo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=32)\n    - Knuth-Morris-Pratt (KMP):\n        - [TThe Knuth-Morris-Pratt (KMP) String Matching Algorithm](https://www.youtube.com/watch?v=5i7oKodCRJo)\n    - Boyer\u2013Moore string search algorithm\n        - [Boyer-Moore String Search Algorithm](https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm)\n        - [Advanced String Searching Boyer-Moore-Horspool Algorithms (video)](https://www.youtube.com/watch?v=QDZpzctPf10)\n    - [Coursera: Algorithms on Strings](https://www.coursera.org/learn/algorithms-on-strings/home/week/1)\n        - starts off great, but by the time it gets past KMP it gets more complicated than it needs to be\n        - nice explanation of tries\n        - can be skipped\n\n- **Sorting**\n\n    - Stanford lectures on sorting:\n        - [Lecture 15 | Programming Abstractions (video)](https://www.youtube.com/watch?v=ENp00xylP7c&index=15&list=PLFE6E58F856038C69)\n        - [Lecture 16 | Programming Abstractions (video)](https://www.youtube.com/watch?v=y4M9IVgrVKo&index=16&list=PLFE6E58F856038C69)\n    - Shai Simonson, [Aduni.org](http://www.aduni.org/):\n        - [Algorithms - Sorting - Lecture 2 (video)](https://www.youtube.com/watch?v=odNJmw5TOEE&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=2)\n        - [Algorithms - Sorting II - Lecture 3 (video)](https://www.youtube.com/watch?v=hj8YKFTFKEE&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=3)\n    - Steven Skiena lectures on sorting:\n        - [lecture begins at 26:46 (video)](https://youtu.be/ute-pmMkyuk?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&t=1600)\n        - [lecture begins at 27:40 (video)](https://www.youtube.com/watch?v=yLvp-pB8mak&index=8&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n        - [lecture begins at 35:00 (video)](https://www.youtube.com/watch?v=q7K9otnzlfE&index=9&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b)\n        - [lecture begins at 23:50 (video)](https://www.youtube.com/watch?v=TvqIGu9Iupw&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=10)\n\n## Video Series\n\nSit back and enjoy. \"Netflix and skill\" :P\n\n- [List of individual Dynamic Programming problems (each is short)](https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr)\n\n- [x86 Architecture, Assembly, Applications (11 videos)](https://www.youtube.com/playlist?list=PL038BE01D3BAEFDB0)\n\n- [MIT 18.06 Linear Algebra, Spring 2005 (35 videos)](https://www.youtube.com/playlist?list=PLE7DDD91010BC51F8)\n\n- [Excellent - MIT Calculus Revisited: Single Variable Calculus](https://www.youtube.com/playlist?list=PL3B08AE665AB9002A)\n\n- [Computer Science 70, 001 - Spring 2015 - Discrete Mathematics and Probability Theory](http://www.infocobuild.com/education/audio-video-courses/computer-science/cs70-spring2015-berkeley.html)\n\n- [Discrete Mathematics by Shai Simonson (19 videos)](https://www.youtube.com/playlist?list=PL3o9D4Dl2FJ9q0_gtFXPh_H4POI5dK0yG)\n\n- [Discrete Mathematics Part 1 by Sarada Herke (5 videos)](https://www.youtube.com/playlist?list=PLGxuz-nmYlQPOc4w1Kp2MZrdqOOm4Jxeo)\n\n- CSE373 - Analysis of Algorithms (25 videos)\n    - [Skiena lectures from Algorithm Design Manual](https://www.youtube.com/watch?v=ZFjhkohHdAA&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=1)\n\n- [UC Berkeley 61B (Spring 2014): Data Structures (25 videos)](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd)\n\n- [UC Berkeley 61B (Fall 2006): Data Structures (39 videos)](https://archive.org/details/ucberkeley-webcast-PL4BBB74C7D2A1049C)\n\n- [UC Berkeley 61C: Machine Structures (26 videos)](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iCl2-D-FS5mk0jFF6cYSJs_)\n\n- [OOSE: Software Dev Using UML and Java (21 videos)](https://www.youtube.com/playlist?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO)\n\n- ~~[UC Berkeley CS 152: Computer Architecture and Engineering (20 videos)](https://www.youtube.com/watch?v=UH0QYvtP7Rk&index=20&list=PLkFD6_40KJIwEiwQx1dACXwh-2Fuo32qr)~~\n\n- [MIT 6.004: Computation Structures (49 videos)](https://www.youtube.com/playlist?list=PLDSlqjcPpoL64CJdF0Qee5oWqGS6we_Yu)\n\n- [Carnegie Mellon - Computer Architecture Lectures (39 videos)](https://www.youtube.com/playlist?list=PL5PHm2jkkXmi5CxxI7b3JCL1TWybTDtKq)\n\n- [MIT 6.006: Intro to Algorithms (47 videos)](https://www.youtube.com/watch?v=HtSuA80QTyo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&nohtml5=False)\n\n- [MIT 6.033: Computer System Engineering (22 videos)](https://www.youtube.com/watch?v=zm2VP0kHl1M&list=PL6535748F59DCA484)\n\n- [MIT 6.034 Artificial Intelligence, Fall 2010 (30 videos)](https://www.youtube.com/playlist?list=PLUl4u3cNGP63gFHB6xb-kVBiQHYe_4hSi)\n\n- [MIT 6.042J: Mathematics for Computer Science, Fall 2010 (25 videos)](https://www.youtube.com/watch?v=L3LMbpZIKhQ&list=PLB7540DEDD482705B)\n\n- [MIT 6.046: Design and Analysis of Algorithms (34 videos)](https://www.youtube.com/watch?v=2P-yW7LQr08&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n\n- [MIT 6.050J: Information and Entropy, Spring 2008 (19 videos)](https://www.youtube.com/watch?v=phxsQrZQupo&list=PL_2Bwul6T-A7OldmhGODImZL8KEVE38X7)\n\n- [MIT 6.851: Advanced Data Structures (22 videos)](https://www.youtube.com/watch?v=T0yzrZL1py0&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=1)\n\n- [MIT 6.854: Advanced Algorithms, Spring 2016 (24 videos)](https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c)\n\n- [Harvard COMPSCI 224: Advanced Algorithms (25 videos)](https://www.youtube.com/playlist?list=PL2SOU6wwxB0uP4rJgf5ayhHWgw7akUWSf)\n\n- [MIT 6.858 Computer Systems Security, Fall 2014](https://www.youtube.com/watch?v=GqmQg-cszw4&index=1&list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n\n- [Stanford: Programming Paradigms (27 videos)](https://www.youtube.com/view_play_list?p=9D558D49CA734A02)\n\n- [Introduction to Cryptography by Christof Paar](https://www.youtube.com/playlist?list=PL6N5qY2nvvJE8X75VkXglSrVhLv1tVcfy)\n    - [Course Website along with Slides and Problem Sets](http://www.crypto-textbook.com/)\n\n- [Mining Massive Datasets - Stanford University (94 videos)](https://www.youtube.com/playlist?list=PLLssT5z_DsK9JDLcT8T62VtzwyW9LNepV)\n\n- [Graph Theory by Sarada Herke (67 videos)](https://www.youtube.com/user/DrSaradaHerke/playlists?shelf_id=5&view=50&sort=dd)\n\n## Computer Science Courses\n\n- [Directory of Online CS Courses](https://github.com/open-source-society/computer-science)\n- [Directory of CS Courses (many with online lectures)](https://github.com/prakhar1989/awesome-courses)\n\n## Papers\n\n- [Love classic papers?](https://www.cs.cmu.edu/~crary/819-f09/)\n- [1978: Communicating Sequential Processes](http://spinroot.com/courses/summer/Papers/hoare_1978.pdf)\n    - [implemented in Go](https://godoc.org/github.com/thomas11/csp)\n- [2003: The Google File System](http://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf)\n    - replaced by Colossus in 2012\n- [2004: MapReduce: Simplified Data Processing on Large Clusters]( http://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf)\n    - mostly replaced by Cloud Dataflow?\n- [2006: Bigtable: A Distributed Storage System for Structured Data](https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf)\n    - [An Inside Look at Google BigQuery](https://cloud.google.com/files/BigQueryTechnicalWP.pdf)\n- [2006: The Chubby Lock Service for Loosely-Coupled Distributed Systems](https://research.google.com/archive/chubby-osdi06.pdf)\n- [2007: Dynamo: Amazon\u2019s Highly Available Key-value Store](http://s3.amazonaws.com/AllThingsDistributed/sosp/amazon-dynamo-sosp2007.pdf)\n    - The Dynamo paper kicked off the NoSQL revolution\n- [2007: What Every Programmer Should Know About Memory (very long, and the author encourages skipping of some sections)](https://www.akkadia.org/drepper/cpumemory.pdf)\n- [2010: Dapper, a Large-Scale Distributed Systems Tracing Infrastructure](https://research.google.com/pubs/archive/36356.pdf)\n- [2010: Dremel: Interactive Analysis of Web-Scale Datasets](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36632.pdf)\n- [2012: Google's Colossus](https://www.wired.com/2012/07/google-colossus/)\n    - paper not available\n- 2012: AddressSanitizer: A Fast Address Sanity Checker:\n    - [paper](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37752.pdf)\n    - [video](https://www.usenix.org/conference/atc12/technical-sessions/presentation/serebryany)\n- 2013: Spanner: Google\u2019s Globally-Distributed Database:\n    - [paper](http://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf)\n    - [video](https://www.usenix.org/node/170855)\n- [2014: Machine Learning: The High-Interest Credit Card of Technical Debt](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43146.pdf)\n- [2015: Continuous Pipelines at Google](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43790.pdf)\n- [2015: High-Availability at Massive Scale: Building Google\u2019s Data Infrastructure for Ads](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44686.pdf)\n- [2015: TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems](http://download.tensorflow.org/paper/whitepaper2015.pdf )\n- [2015: How Developers Search for Code: A Case Study](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43835.pdf)\n- [2016: Borg, Omega, and Kubernetes](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44843.pdf)\n\n\n## LICENSE\n\n[CC-BY-SA-4.0](./LICENSE.txt)\n"
 },
 {
  "repo": "eugenp/tutorials",
  "language": "Java",
  "readme_contents": "**UPDATE**: The price of \"Learn Spring Security OAuth\" will permanently change on the 11th of December, along with the upcoming OAuth2 material: http://bit.ly/github-lss\n\nThe Courses\n==============================\n\n\nHere's the new \"Learn Spring\" course: <br/>\n**[>> LEARN SPRING - THE MASTER CLASS](https://www.baeldung.com/learn-spring-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=ls#master-class)**\n\nHere's the Master Class of \"REST With Spring\" (along with the new announced Boot 2 material): <br/>\n**[>> THE REST WITH SPRING - MASTER CLASS](https://www.baeldung.com/rest-with-spring-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=rws#master-class)**\n\nAnd here's the Master Class of \"Learn Spring Security\": <br/>\n**[>> LEARN SPRING SECURITY - MASTER CLASS](https://www.baeldung.com/learn-spring-security-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=lss#master-class)**\n\n\n\nJava and Spring Tutorials\n================\n\nThis project is **a collection of small and focused tutorials** - each covering a single and well defined area of development in the Java ecosystem. \nA strong focus of these is, of course, the Spring Framework - Spring, Spring Boot and Spring Security. \nIn additional to Spring, the modules here are covering a number of aspects in Java. \n\nProfile based segregation\n====================\n\nWe are using maven build profiles to segregate the huge list of individual projects we have in our repository.\n\nThe projects are broadly divided into 3 list: first, second and heavy. \n\nNext, they are segregated further on the basis of tests that we want to execute.\n\nTherefore, we have a total of 6 profiles:\n\n| Profile                 | Includes                    | Type of test enabled |\n| ----------------------- | --------------------------- | -------------------- |\n| default-first           | First set of projects       | *UnitTest            |\n| integration-lite-first  | First set of projects       | *IntegrationTest     |\n| default-second          | Second set of projects      | *UnitTest            |\n| integration-lite-second | Second set of projects      | *IntegrationTest     |\n| default-heavy           | Heavy/long running projects | *UnitTest            |\n| integration-heavy       | Heavy/long running projects | *IntegrationTest     |\n\nBuilding the project\n====================\n\nThough it should not be needed often to build the entire repository at once because we are usually concerned with a specific module.\n\nBut if we want to, we can invoke the below command from the root of the repository if we want to build the entire repository with only Unit Tests enabled:\n\n`mvn clean install -Pdefault-first,default-second,default-heavy`\n\nor if we want to build the entire repository with Integration Tests enabled, we can do:\n\n`mvn clean install -Pintegration-lite-first,integration-lite-second,integration-heavy`\n\n\nBuilding a single module\n====================\nTo build a specific module run the command: `mvn clean install` in the module directory\n\n\nRunning a Spring Boot module\n====================\nTo run a Spring Boot module run the command: `mvn spring-boot:run` in the module directory\n\n\nWorking with the IDE\n====================\nThis repo contains a large number of modules. \nWhen you're working with an individual module, there's no need to import all of them (or build all of them) - you can simply import that particular module in either Eclipse or IntelliJ. \n\n\nRunning Tests\n=============\nThe command `mvn clean install` from within a module will run the unit tests in that module.\nFor Spring modules this will also run the `SpringContextTest` if present.\n\nTo run the integration tests, use the command:\n\n`mvn clean install -Pintegration-lite-first` or \n\n`mvn clean install -Pintegration-lite-second` or \n\n`mvn clean install -Pintegration-heavy`\n\ndepending on the list where our module exists\n\n\n\n\n\n"
 },
 {
  "repo": "CyC2018/CS-Notes",
  "language": "Java",
  "readme_contents": "<div align=\"center\">\r\n    <a href=\"https://gitstar-ranking.com/repositories\"> <img src=\"https://badgen.net/badge/Rank/20?icon=github&color=4ab8a1\"></a>\r\n    <a href=\"assets/download.md\"> <img src=\"https://badgen.net/badge/OvO/%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD?icon=telegram&color=4ab8a1\"></a>\r\n    <a href=\"https://cyc2018.github.io/CS-Notes\"> <img src=\"https://badgen.net/badge/CyC/%E5%9C%A8%E7%BA%BF%E9%98%85%E8%AF%BB?icon=sourcegraph&color=4ab8a1\"></a>\r\n    <a href=\"#\u5fae\u4fe1\u516c\u4f17\u53f7\"> <img src=\"https://badgen.net/badge/%e5%85%ac%e4%bc%97%e5%8f%b7/CyC2018?icon=rss&color=4ab8a1\"></a>\r\n</div>\r\n<br>\r\n\r\n| &nbsp;\u7b97\u6cd5&nbsp; | \u64cd\u4f5c\u7cfb\u7edf | &nbsp;\u7f51\u7edc&nbsp;|\u9762\u5411\u5bf9\u8c61| &nbsp;&nbsp;\u6570\u636e\u5e93&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Java&nbsp;&nbsp;&nbsp;|         \u7cfb\u7edf\u8bbe\u8ba1| &nbsp;&nbsp;&nbsp;\u5de5\u5177&nbsp;&nbsp;&nbsp; |\u7f16\u7801\u5b9e\u8df5| &nbsp;&nbsp;&nbsp;\u540e\u8bb0&nbsp;&nbsp;&nbsp; |\r\n| :---: | :----: | :---: | :----: | :----: | :----: | :----: | :----: | :----: | :----: |\r\n| [:pencil2:](#pencil2-\u7b97\u6cd5) | [:computer:](#computer-\u64cd\u4f5c\u7cfb\u7edf) | [:cloud:](#cloud-\u7f51\u7edc) | [:art:](#art-\u9762\u5411\u5bf9\u8c61) | [:floppy_disk:](#floppy_disk-\u6570\u636e\u5e93) |[:coffee:](#coffee-java)| [:bulb:](#bulb-\u7cfb\u7edf\u8bbe\u8ba1) |[:wrench:](#wrench-\u5de5\u5177)| [:watermelon:](#watermelon-\u7f16\u7801\u5b9e\u8df5) |[:memo:](#memo-\u540e\u8bb0)|\r\n\r\n<br>\r\n\r\n<div align=\"center\">\r\n    <img src=\"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png\" width=\"200px\">\r\n</div>\r\n\r\n\r\n\r\n<br>\r\n\r\n## :pencil2: \u7b97\u6cd5\r\n\r\n- [\u5251\u6307 Offer \u9898\u89e3](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u5251\u6307%20Offer%20\u9898\u89e3%20-%20\u76ee\u5f55.md)\r\n- [Leetcode \u9898\u89e3](https://github.com/CyC2018/CS-Notes/blob/master/notes/Leetcode%20\u9898\u89e3%20-%20\u76ee\u5f55.md)\r\n- [\u7b97\u6cd5](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u7b97\u6cd5%20-%20\u76ee\u5f55.md)\r\n- [\u7b14\u8bd5\u9762\u8bd5\u9898\u5e93](https://www.nowcoder.com/contestRoom?from=cyc_github)\r\n\r\n## :computer: \u64cd\u4f5c\u7cfb\u7edf\r\n\r\n- [\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf%20-%20\u76ee\u5f55.md)\r\n- [Linux](https://github.com/CyC2018/CS-Notes/blob/master/notes/Linux.md)\r\n\r\n## :cloud: \u7f51\u7edc \r\n\r\n- [\u8ba1\u7b97\u673a\u7f51\u7edc](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u8ba1\u7b97\u673a\u7f51\u7edc%20-%20\u76ee\u5f55.md)\r\n- [HTTP](https://github.com/CyC2018/CS-Notes/blob/master/notes/HTTP.md)\r\n- [Socket](https://github.com/CyC2018/CS-Notes/blob/master/notes/Socket.md)\r\n\r\n## :art: \u9762\u5411\u5bf9\u8c61\r\n\r\n- [\u9762\u5411\u5bf9\u8c61\u601d\u60f3](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u9762\u5411\u5bf9\u8c61\u601d\u60f3.md)\r\n- [\u8bbe\u8ba1\u6a21\u5f0f](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u8bbe\u8ba1\u6a21\u5f0f%20-%20\u76ee\u5f55.md)\r\n\r\n## :floppy_disk: \u6570\u636e\u5e93\r\n\r\n- [\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406.md)\r\n- [SQL](https://github.com/CyC2018/CS-Notes/blob/master/notes/SQL.md)\r\n- [Leetcode-Database \u9898\u89e3](https://github.com/CyC2018/CS-Notes/blob/master/notes/Leetcode-Database%20\u9898\u89e3.md)\r\n- [MySQL](https://github.com/CyC2018/CS-Notes/blob/master/notes/MySQL.md)\r\n- [Redis](https://github.com/CyC2018/CS-Notes/blob/master/notes/Redis.md)\r\n\r\n## :coffee: Java\r\n\r\n- [Java \u57fa\u7840](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20\u57fa\u7840.md)\r\n- [Java \u5bb9\u5668](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20\u5bb9\u5668.md)\r\n- [Java \u5e76\u53d1](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20\u5e76\u53d1.md)\r\n- [Java \u865a\u62df\u673a](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20\u865a\u62df\u673a.md)\r\n- [Java I/O](https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20IO.md)\r\n\r\n## :bulb: \u7cfb\u7edf\u8bbe\u8ba1 \r\n\r\n- [\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840.md)\r\n- [\u5206\u5e03\u5f0f](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u5206\u5e03\u5f0f.md)\r\n- [\u96c6\u7fa4](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u96c6\u7fa4.md)\r\n- [\u653b\u51fb\u6280\u672f](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u653b\u51fb\u6280\u672f.md)\r\n- [\u7f13\u5b58](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u7f13\u5b58.md)\r\n- [\u6d88\u606f\u961f\u5217](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u6d88\u606f\u961f\u5217.md)\r\n\r\n## :wrench: \u5de5\u5177 \r\n\r\n- [Git](https://github.com/CyC2018/CS-Notes/blob/master/notes/Git.md)\r\n- [Docker](https://github.com/CyC2018/CS-Notes/blob/master/notes/Docker.md)\r\n- [\u6784\u5efa\u5de5\u5177](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u6784\u5efa\u5de5\u5177.md)\r\n- [\u6b63\u5219\u8868\u8fbe\u5f0f](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u6b63\u5219\u8868\u8fbe\u5f0f.md)\r\n\r\n## :watermelon: \u7f16\u7801\u5b9e\u8df5 \r\n\r\n- [\u4ee3\u7801\u53ef\u8bfb\u6027](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u4ee3\u7801\u53ef\u8bfb\u6027.md)\r\n- [\u4ee3\u7801\u98ce\u683c\u89c4\u8303](https://github.com/CyC2018/CS-Notes/blob/master/notes/\u4ee3\u7801\u98ce\u683c\u89c4\u8303.md)\r\n\r\n## :memo: \u540e\u8bb0\r\n\r\n<div align=\"center\">\r\n\t<a href=\"https://www.nowcoder.com/discuss/137593?from=cyc_github\"> \u6211\u7684\u9762\u7ecf </a> / <a href=\"https://cyc2018.github.io\"> \u6211\u7684\u7b80\u5386 </a> / <a href=\"https://github.com/CyC2018/Markdown-Resume\"> \u7b80\u5386\u6a21\u7248 </a> / <a href=\"https://github.com/CyC2018/Job-Recommend\"> \u5185\u63a8 </a> / <a href=\"https://xiaozhuanlan.com/CyC2018\"> \u4e13\u680f </a> / <a href=\"assets/QQ2\u7fa4.png\"> QQ \u7fa4</a>\r\n\t<br><br>\r\n    <img width=\"320px\" src=\"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/\u516c\u4f17\u53f7\u4e8c\u7ef4\u7801-2.png\"></img>\r\n</div>\r\n\r\n\r\n\r\n### \u6392\u7248\r\n\r\n\u7b14\u8bb0\u5185\u5bb9\u6309\u7167 [\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317](https://github.com/sparanoid/chinese-copywriting-guidelines/blob/master/README.zh-CN.md) \u8fdb\u884c\u6392\u7248\uff0c\u4ee5\u4fdd\u8bc1\u5185\u5bb9\u7684\u53ef\u8bfb\u6027\u3002\r\n\r\n\u4e0d\u4f7f\u7528 `![]()` \u8fd9\u79cd\u65b9\u5f0f\u6765\u5f15\u7528\u56fe\u7247\uff0c\u800c\u662f\u7528 `<img>` \u6807\u7b7e\u3002\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u80fd\u591f\u63a7\u5236\u56fe\u7247\u4ee5\u5408\u9002\u7684\u5927\u5c0f\u663e\u793a\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a [GFM](https://github.github.com/gfm/) \u4e0d\u652f\u6301 `<center> ![]() </center>` \u8fd9\u79cd\u65b9\u6cd5\u8ba9\u56fe\u7247\u5c45\u4e2d\u663e\u793a\uff0c\u53ea\u80fd\u4f7f\u7528 `<div align=\"center\"> <img src=\"\"/> </div>` \u8fbe\u5230\u5c45\u4e2d\u7684\u6548\u679c\u3002\r\n\r\n\u5728\u7ebf\u6392\u7248\u5de5\u5177\uff1a[Text-Typesetting](https://github.com/CyC2018/Text-Typesetting)\u3002\r\n\r\n### License\r\n\r\n\u672c\u4ed3\u5e93\u7684\u5185\u5bb9\u4e0d\u662f\u5c06\u7f51\u4e0a\u7684\u8d44\u6599\u968f\u610f\u62fc\u51d1\u800c\u6765\uff0c\u9664\u4e86\u5c11\u90e8\u5206\u5f15\u7528\u4e66\u4e0a\u548c\u6280\u672f\u6587\u6863\u7684\u539f\u6587\uff08\u8fd9\u90e8\u5206\u5185\u5bb9\u90fd\u5728\u672b\u5c3e\u7684\u53c2\u8003\u94fe\u63a5\u4e2d\u52a0\u4e86\u51fa\u5904\uff09\uff0c\u5176\u4f59\u90fd\u662f\u6211\u7684\u539f\u521b\u3002\u5728\u60a8\u5f15\u7528\u672c\u4ed3\u5e93\u5185\u5bb9\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u6f14\u7ece\u65f6\uff0c\u8bf7\u7f72\u540d\u5e76\u4ee5\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff0c\u8c22\u8c22\u3002\r\n\r\n\u8f6c\u8f7d\u6587\u7ae0\u8bf7\u5728\u5f00\u5934\u660e\u663e\u5904\u6807\u660e\u8be5\u9875\u9762\u5730\u5740\uff0c\u516c\u4f17\u53f7\u7b49\u5176\u5b83\u8f6c\u8f7d\u8bf7\u8054\u7cfb zhengyc101@163.com\u3002\r\n\r\nLogo\uff1a[logomakr](https://logomakr.com/)\r\n\r\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a>\r\n\r\n### \u81f4\u8c22\r\n\r\n\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u5bf9\u672c\u4ed3\u5e93\u505a\u51fa\u7684\u8d21\u732e\uff0c\u5f53\u7136\u4e0d\u4ec5\u4ec5\u53ea\u6709\u8fd9\u4e9b\u8d21\u732e\u8005\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u679c\u4f60\u5e0c\u671b\u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u540d\u5355\u4e2d\uff0c\u5e76\u4e14\u63d0\u4ea4\u8fc7 Issue \u6216\u8005 PR\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\r\n\r\n<a href=\"https://github.com/linw7\">\r\n    <img src=\"https://avatars3.githubusercontent.com/u/21679154?s=400&v=4\" width=\"50px\">\r\n</a> \r\n<a href=\"https://github.com/g10guang\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/18458140?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/Sctwang\">\r\n    <img src=\"https://avatars3.githubusercontent.com/u/33345444?s=400&v=4\" width=\"50px\">\r\n</a> \r\n<a href=\"https://github.com/ResolveWang\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/8018776?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/crossoverJie\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/15684156?s=400&v=4\" width=\"50px\">\r\n</a> \r\n<a href=\"https://github.com/jy03078584\">\r\n    <img src=\"https://avatars2.githubusercontent.com/u/7719370?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/kwongtailau\">\r\n    <img src=\"https://avatars0.githubusercontent.com/u/22954582?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/xiangflight\">\r\n    <img src=\"https://avatars2.githubusercontent.com/u/10072416?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/mafulong\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/24795000?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/yanglbme\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/21008209?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/OOCZC\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/11623828?s=400&v=4\" width=\"50px\">\r\n</a>\r\n<a href=\"https://github.com/5renyuebing\">\r\n    <img src=\"https://avatars1.githubusercontent.com/u/32872430?s=400&v=4\" width=\"50px\">\r\n</a>\r\n"
 },
 {
  "repo": "rdpeng/RepData_PeerAssessment1",
  "language": null,
  "readme_contents": "## Introduction\n\nIt is now possible to collect a large amount of data about personal\nmovement using activity monitoring devices such as a\n[Fitbit](http://www.fitbit.com), [Nike\nFuelband](http://www.nike.com/us/en_us/c/nikeplus-fuelband), or\n[Jawbone Up](https://jawbone.com/up). These type of devices are part of\nthe \"quantified self\" movement -- a group of enthusiasts who take\nmeasurements about themselves regularly to improve their health, to\nfind patterns in their behavior, or because they are tech geeks. But\nthese data remain under-utilized both because the raw data are hard to\nobtain and there is a lack of statistical methods and software for\nprocessing and interpreting the data.\n\nThis assignment makes use of data from a personal activity monitoring\ndevice. This device collects data at 5 minute intervals through out the\nday. The data consists of two months of data from an anonymous\nindividual collected during the months of October and November, 2012\nand include the number of steps taken in 5 minute intervals each day.\n\n## Data\n\nThe data for this assignment can be downloaded from the course web\nsite:\n\n* Dataset: [Activity monitoring data](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip) [52K]\n\nThe variables included in this dataset are:\n\n* **steps**: Number of steps taking in a 5-minute interval (missing\n    values are coded as `NA`)\n\n* **date**: The date on which the measurement was taken in YYYY-MM-DD\n    format\n\n* **interval**: Identifier for the 5-minute interval in which\n    measurement was taken\n\n\n\n\nThe dataset is stored in a comma-separated-value (CSV) file and there\nare a total of 17,568 observations in this\ndataset.\n\n\n## Assignment\n\nThis assignment will be described in multiple parts. You will need to\nwrite a report that answers the questions detailed below. Ultimately,\nyou will need to complete the entire assignment in a **single R\nmarkdown** document that can be processed by **knitr** and be\ntransformed into an HTML file.\n\nThroughout your report make sure you always include the code that you\nused to generate the output you present. When writing code chunks in\nthe R markdown document, always use `echo = TRUE` so that someone else\nwill be able to read the code. **This assignment will be evaluated via\npeer assessment so it is essential that your peer evaluators be able\nto review the code for your analysis**.\n\nFor the plotting aspects of this assignment, feel free to use any\nplotting system in R (i.e., base, lattice, ggplot2)\n\nFork/clone the [GitHub repository created for this\nassignment](http://github.com/rdpeng/RepData_PeerAssessment1). You\nwill submit this assignment by pushing your completed files into your\nforked repository on GitHub. The assignment submission will consist of\nthe URL to your GitHub repository and the SHA-1 commit ID for your\nrepository state.\n\nNOTE: The GitHub repository also contains the dataset for the\nassignment so you do not have to download the data separately.\n\n\n\n### Loading and preprocessing the data\n\nShow any code that is needed to\n\n1. Load the data (i.e. `read.csv()`)\n\n2. Process/transform the data (if necessary) into a format suitable for your analysis\n\n\n### What is mean total number of steps taken per day?\n\nFor this part of the assignment, you can ignore the missing values in\nthe dataset.\n\n1. Make a histogram of the total number of steps taken each day\n\n2. Calculate and report the **mean** and **median** total number of steps taken per day\n\n\n### What is the average daily activity pattern?\n\n1. Make a time series plot (i.e. `type = \"l\"`) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n\n2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n\n\n### Imputing missing values\n\nNote that there are a number of days/intervals where there are missing\nvalues (coded as `NA`). The presence of missing days may introduce\nbias into some calculations or summaries of the data.\n\n1. Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with `NA`s)\n\n2. Devise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.\n\n3. Create a new dataset that is equal to the original dataset but with the missing data filled in.\n\n4. Make a histogram of the total number of steps taken each day and Calculate and report the **mean** and **median** total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?\n\n\n### Are there differences in activity patterns between weekdays and weekends?\n\nFor this part the `weekdays()` function may be of some help here. Use\nthe dataset with the filled-in missing values for this part.\n\n1. Create a new factor variable in the dataset with two levels -- \"weekday\" and \"weekend\" indicating whether a given date is a weekday or weekend day.\n\n1. Make a panel plot containing a time series plot (i.e. `type = \"l\"`) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). The plot should look something like the following, which was created using **simulated data**:\n\n![Sample panel plot](instructions_fig/sample_panelplot.png) \n\n\n**Your plot will look different from the one above** because you will\nbe using the activity monitor data. Note that the above plot was made\nusing the lattice system but you can make the same version of the plot\nusing any plotting system you choose.\n\n\n## Submitting the Assignment\n\nTo submit the assignment:\n\n1. Commit your completed `PA1_template.Rmd` file to the `master` branch of your git repository (you should already be on the `master` branch unless you created new ones)\n\n2. Commit your `PA1_template.md` and `PA1_template.html` files produced by processing your R markdown file with the `knit2html()` function in R (from the **knitr** package)\n\n3. If your document has figures included (it should) then they should have been placed in the `figure/` directory by default (unless you overrode the default). Add and commit the `figure/` directory to your git repository.\n\n4. Push your `master` branch to GitHub.\n\n5. Submit the URL to your GitHub repository for this assignment on the course web site.\n\nIn addition to submitting the URL for your GitHub repository, you will\nneed to submit the 40 character SHA-1 hash (as string of numbers from\n0-9 and letters from a-f) that identifies the repository commit that\ncontains the version of the files you want to submit. You can do this\nin GitHub by doing the following:\n\n1. Go into your GitHub repository web page for this assignment\n\n2. Click on the \"?? commits\" link where ?? is the number of commits you have in the repository. For example, if you made a total of 10 commits to this repository, the link should say \"10 commits\".\n\n3. You will see a list of commits that you have made to this repository. The most recent commit is at the very top. If this represents the version of the files you want to submit, then just click the \"copy to clipboard\" button on the right hand side that should appear when you hover over the SHA-1 hash. Paste this SHA-1 hash into the course web site when you submit your assignment. If you don't want to use the most recent commit, then go down and find the commit you want and copy the SHA-1 hash.\n\nA valid submission will look something like (this is just an **example**!)\n\n```r\nhttps://github.com/rdpeng/RepData_PeerAssessment1\n\n7c376cc5447f11537f8740af8e07d6facc3d9645\n```\n"
 },
 {
  "repo": "torvalds/linux",
  "language": "C",
  "readme_contents": "Linux kernel\n============\n\nThere are several guides for kernel developers and users. These guides can\nbe rendered in a number of formats, like HTML and PDF. Please read\nDocumentation/admin-guide/README.rst first.\n\nIn order to build the documentation, use ``make htmldocs`` or\n``make pdfdocs``.  The formatted documentation can also be read online at:\n\n    https://www.kernel.org/doc/html/latest/\n\nThere are various text files in the Documentation/ subdirectory,\nseveral of them using the Restructured Text markup notation.\n\nPlease read the Documentation/process/changes.rst file, as it contains the\nrequirements for building and running the kernel, and information about\nthe problems which may result by upgrading your kernel.\n"
 },
 {
  "repo": "spring-projects/spring-boot",
  "language": "Java",
  "readme_contents": "= Spring Boot image:https://ci.spring.io/api/v1/teams/spring-boot/pipelines/spring-boot-2.4.x/jobs/build/badge[\"Build Status\", link=\"https://ci.spring.io/teams/spring-boot/pipelines/spring-boot-2.4.x?groups=Build\"] image:https://badges.gitter.im/Join Chat.svg[\"Chat\",link=\"https://gitter.im/spring-projects/spring-boot?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"]\n:docs: https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference\n:github: https://github.com/spring-projects/spring-boot\n\nSpring Boot makes it easy to create Spring-powered, production-grade applications and\nservices with absolute minimum fuss. It takes an opinionated view of the Spring platform\nso that new and existing users can quickly get to the bits they need.\n\nYou can use Spring Boot to create stand-alone Java applications that can be started using\n`java -jar` or more traditional WAR deployments. We also provide a command line tool\nthat runs spring scripts.\n\nOur primary goals are:\n\n* Provide a radically faster and widely accessible getting started experience for all\nSpring development\n* Be opinionated out of the box, but get out of the way quickly as requirements start to\ndiverge from the defaults\n* Provide a range of non-functional features that are common to large classes of projects\n(e.g. embedded servers, security, metrics, health checks, externalized configuration)\n* Absolutely no code generation and no requirement for XML configuration\n\n\n\n== Installation and Getting Started\nThe {docs}/html/[reference documentation] includes detailed\n{docs}/html/getting-started.html#getting-started-installing-spring-boot[installation\ninstructions] as well as a comprehensive\n{docs}/html/getting-started.html#getting-started-first-application[``getting started``]\nguide.\n\nHere is a quick teaser of a complete Spring Boot application in Java:\n\n[source,java,indent=0]\n----\n\timport org.springframework.boot.*;\n\timport org.springframework.boot.autoconfigure.*;\n\timport org.springframework.web.bind.annotation.*;\n\n\t@RestController\n\t@SpringBootApplication\n\tpublic class Example {\n\n\t\t@RequestMapping(\"/\")\n\t\tString home() {\n\t\t\treturn \"Hello World!\";\n\t\t}\n\n\t\tpublic static void main(String[] args) {\n\t\t\tSpringApplication.run(Example.class, args);\n\t\t}\n\n\t}\n----\n\n\n\n== Getting help\nHaving trouble with Spring Boot? We'd like to help!\n\n* Check the {docs}/html/[reference documentation], especially the\n  {docs}/html/howto.html#howto[How-to's] -- they provide solutions to the most common\n  questions.\n* Learn the Spring basics -- Spring Boot builds on many other Spring projects, check\n  the https://spring.io[spring.io] web-site for a wealth of reference documentation. If\n  you are just starting out with Spring, try one of the https://spring.io/guides[guides].\n* If you are upgrading, read the {github}/wiki[release notes] for upgrade instructions and\n  \"new and noteworthy\" features.\n* Ask a question - we monitor https://stackoverflow.com[stackoverflow.com] for questions\n  tagged with https://stackoverflow.com/tags/spring-boot[`spring-boot`]. You can also chat\n  with the community on https://gitter.im/spring-projects/spring-boot[Gitter].\n* Report bugs with Spring Boot at {github}/issues[github.com/spring-projects/spring-boot/issues].\n\n\n\n== Reporting Issues\nSpring Boot uses GitHub's integrated issue tracking system to record bugs and feature\nrequests. If you want to raise an issue, please follow the recommendations below:\n\n* Before you log a bug, please search the {github}/issues[issue tracker] to see if someone\n  has already reported the problem.\n* If the issue doesn't already exist, {github}/issues/new[create a new issue].\n* Please provide as much information as possible with the issue report, we like to know\n  the version of Spring Boot that you are using, as well as your Operating System and\n  JVM version.\n* If you need to paste code, or include a stack trace use Markdown +++```+++ escapes\n  before and after your text.\n* If possible try to create a test-case or project that replicates the problem and attach\n  it to the issue.\n\n\n\n== Building from Source\nYou don't need to build from source to use Spring Boot (binaries in\nhttps://repo.spring.io[repo.spring.io]), but if you want to try out the latest and\ngreatest, Spring Boot can be built and published to your local Maven cache using the\nhttps://docs.gradle.org/current/userguide/gradle_wrapper.html[Gradle wrapper]. You also\nneed JDK 1.8.\n\n[indent=0]\n----\n\t$ ./gradlew publishToMavenLocal\n----\n\nThis will build all of the jars and documentation and publish them to your local\nMaven cache. It won't run any of the tests. If you want to build everything, use the\n`build` task:\n\n[indent=0]\n----\n\t$ ./gradlew build\n----\n\n_Also see link:CONTRIBUTING.adoc[CONTRIBUTING.adoc] if you wish to submit pull requests,\nand in particular please fill out the\nhttps://support.springsource.com/spring_committer_signup[Contributor's Agreement]\nbefore your first change, however trivial._\n\n\n\n== Modules\nThere are a number of modules in Spring Boot, here is a quick overview:\n\n\n\n=== spring-boot\nThe main library providing features that support the other parts of Spring Boot,\nthese include:\n\n* The `SpringApplication` class, providing static convenience methods that make it easy\nto write a stand-alone Spring Application. Its sole job is to create and refresh an\nappropriate Spring `ApplicationContext`\n* Embedded web applications with a choice of container (Tomcat, Jetty or Undertow)\n* First class externalized configuration support\n* Convenience `ApplicationContext` initializers, including support for sensible logging\ndefaults\n\n\n\n=== spring-boot-autoconfigure\nSpring Boot can configure large parts of common applications based on the content\nof their classpath. A single `@EnableAutoConfiguration` annotation triggers\nauto-configuration of the Spring context.\n\nAuto-configuration attempts to deduce which beans a user might need. For example, if\n`HSQLDB` is on the classpath, and the user has not configured any database connections,\nthen they probably want an in-memory database to be defined. Auto-configuration will\nalways back away as the user starts to define their own beans.\n\n\n\n=== spring-boot-starters\nStarters are a set of convenient dependency descriptors that you can include in\nyour application. You get a one-stop-shop for all the Spring and related technology\nthat you need without having to hunt through sample code and copy paste loads of\ndependency descriptors. For example, if you want to get started using Spring and JPA for\ndatabase access just include the `spring-boot-starter-data-jpa` dependency in your\nproject, and you are good to go.\n\n\n\n=== spring-boot-cli\nThe Spring command line application compiles and runs Groovy source, making it super\neasy to write the absolute minimum of code to get an application running. Spring CLI\ncan also watch files, automatically recompiling and restarting when they change.\n\n\n\n=== spring-boot-actuator\nActuator endpoints let you monitor and interact with your application.\nSpring Boot Actuator provides the infrastructure required for actuator endpoints. It contains\nannotation support for actuator endpoints. Out of the box, this module provides a number of endpoints\nincluding the `HealthEndpoint`, `EnvironmentEndpoint`, `BeansEndpoint` and many more.\n\n\n\n=== spring-boot-actuator-autoconfigure\nThis provides auto-configuration for actuator endpoints based on the content of the classpath and a set of properties.\nFor instance, if Micrometer is on the classpath, it will auto-configure the `MetricsEndpoint`.\nIt contains configuration to expose endpoints over HTTP or JMX.\nJust like Spring Boot AutoConfigure, this will back away as the user starts to define their own beans.\n\n\n\n=== spring-boot-test\nThis module contains core items and annotations that can be helpful when testing your application.\n\n\n\n=== spring-boot-test-autoconfigure\nLike other Spring Boot auto-configuration modules, spring-boot-test-autoconfigure, provides auto-configuration\nfor tests based on the classpath. It includes a number of annotations that can be used to automatically\nconfigure a slice of your application that needs to be tested.\n\n\n\n=== spring-boot-loader\nSpring Boot Loader provides the secret sauce that allows you to build a single jar file\nthat can be launched using `java -jar`. Generally you will not need to use\n`spring-boot-loader` directly, but instead work with the\nlink:spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin[Gradle] or\nlink:spring-boot-project/spring-boot-tools/spring-boot-maven-plugin[Maven] plugin.\n\n\n\n=== spring-boot-devtools\nThe spring-boot-devtools module provides additional development-time features such as automatic restarts,\nfor a smoother application development experience. Developer tools are automatically disabled when\nrunning a fully packaged application.\n\n\n\n== Samples\nGroovy samples for use with the command line application are available in\nlink:spring-boot-project/spring-boot-cli/samples[spring-boot-cli/samples]. To run the CLI samples type\n`spring run <sample>.groovy` from samples directory.\n\n\n\n== Guides\nThe https://spring.io/[spring.io] site contains several guides that show how to use Spring\nBoot step-by-step:\n\n* https://spring.io/guides/gs/spring-boot/[Building an Application with Spring Boot] is a\n  very basic guide that shows you how to create a simple application, run it and add some\n  management services.\n* https://spring.io/guides/gs/actuator-service/[Building a RESTful Web Service with Spring\n  Boot Actuator] is a guide to creating a REST web service and also shows how the server\n  can be configured.\n* https://spring.io/guides/gs/convert-jar-to-war/[Converting a Spring Boot JAR Application\n  to a WAR] shows you how to run applications in a web server as a WAR file.\n\n\n\n== License\nSpring Boot is Open Source software released under the\nhttps://www.apache.org/licenses/LICENSE-2.0.html[Apache 2.0 license].\n"
 },
 {
  "repo": "facebook/react",
  "language": "JavaScript",
  "readme_contents": "# [React](https://reactjs.org/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/master/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![CircleCI Status](https://circleci.com/gh/facebook/react.svg?style=shield&circle-token=:circle-token)](https://circleci.com/gh/facebook/react) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request)\n\nReact is a JavaScript library for building user interfaces.\n\n* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.\n* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.\n* **Learn Once, Write Anywhere:** We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using [React Native](https://reactnative.dev/).\n\n[Learn how to use React in your own project](https://reactjs.org/docs/getting-started.html).\n\n## Installation\n\nReact has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:\n\n* Use [Online Playgrounds](https://reactjs.org/docs/getting-started.html#online-playgrounds) to get a taste of React.\n* [Add React to a Website](https://reactjs.org/docs/add-react-to-a-website.html) as a `<script>` tag in one minute.\n* [Create a New React App](https://reactjs.org/docs/create-a-new-react-app.html) if you're looking for a powerful JavaScript toolchain.\n\nYou can use React as a `<script>` tag from a [CDN](https://reactjs.org/docs/cdn-links.html), or as a `react` package on [npm](https://www.npmjs.com/package/react).\n\n## Documentation\n\nYou can find the React documentation [on the website](https://reactjs.org/docs).  \n\nCheck out the [Getting Started](https://reactjs.org/docs/getting-started.html) page for a quick overview.\n\nThe documentation is divided into several sections:\n\n* [Tutorial](https://reactjs.org/tutorial/tutorial.html)\n* [Main Concepts](https://reactjs.org/docs/hello-world.html)\n* [Advanced Guides](https://reactjs.org/docs/jsx-in-depth.html)\n* [API Reference](https://reactjs.org/docs/react-api.html)\n* [Where to Get Support](https://reactjs.org/community/support.html)\n* [Contributing Guide](https://reactjs.org/docs/how-to-contribute.html)\n\nYou can improve it by sending pull requests to [this repository](https://github.com/reactjs/reactjs.org).\n\n## Examples\n\nWe have several examples [on the website](https://reactjs.org/). Here is the first one to get you started:\n\n```jsx\nfunction HelloMessage({ name }) {\n  return <div>Hello {name}</div>;\n}\n\nReactDOM.render(\n  <HelloMessage name=\"Taylor\" />,\n  document.getElementById('container')\n);\n```\n\nThis example will render \"Hello Taylor\" into a container on the page.\n\nYou'll notice that we used an HTML-like syntax; [we call it JSX](https://reactjs.org/docs/introducing-jsx.html). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you're using React as a `<script>` tag, read [this section](https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx) on integrating JSX; otherwise, the [recommended JavaScript toolchains](https://reactjs.org/docs/create-a-new-react-app.html) handle it automatically.\n\n## Contributing\n\nThe main purpose of this repository is to continue to evolve React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.\n\n### [Code of Conduct](https://code.fb.com/codeofconduct)\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.\n\n### [Contributing Guide](https://reactjs.org/contributing/how-to-contribute.html)\n\nRead our [contributing guide](https://reactjs.org/contributing/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.\n\n### Good First Issues\n\nTo help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs which have a relatively limited scope. This is a great place to get started.\n\n### License\n\nReact is [MIT licensed](./LICENSE).\n"
 },
 {
  "repo": "DataScienceSpecialization/courses",
  "language": "HTML",
  "readme_contents": "\n### Data Science Specialization\n\nThese are the course materials for the Johns Hopkins Data Science Specialization on Coursera\n\nhttps://www.coursera.org/specialization/jhudatascience/1\n\nMaterials are under development and subject to change. \n\n\n### Contributors\n\n* Brian Caffo\n* Jeff Leek\n* Roger Peng\n* Nick Carchedi \n* Sean Kross\n\n### License\n\nThese course materials are available under the Creative Commons Attribution NonCommercial ShareAlike (CC-NC-SA) license (http://www.tldrlegal.com/l/CC-NC-SA). \n\n"
 },
 {
  "repo": "angular/angular.js",
  "language": "JavaScript",
  "readme_contents": "Using AngularJS with the Closure Compiler\n=========================================\n\nThe Closure Compiler project contains definitions for the AngularJS JavaScript\nin its `contrib/externs` directory.\n\nThe definitions contain externs for use with the Closure compiler (aka\nJSCompiler). Passing these files to the --externs parameter of a compiler\npass allows using type annotations for AngularJS objects. For example,\nAngularJS's $scope objects can be annotated as:\n```js\n/** @type {angular.Scope} */\nvar scope = $scope;\n```\n\nThis allows JSCompiler to type check accesses to scope, give warnings about\nmissing methods or incorrect arguments, and also prevents renaming of property\naccesses with advanced compilation.\n\nThe externs are incomplete and maintained on an as-needed basis, but strive to\nbe correct. Externs for individual modules should be added in separate files.\n\nSee https://developers.google.com/closure/compiler/\n"
 },
 {
  "repo": "jlord/patchwork",
  "language": "HTML",
  "readme_contents": "# Patchwork\n\n![screenshot](https://raw.githubusercontent.com/jlord/patchwork/gh-pages/patchwork-ss.png)\n\nThis repository is a website hosted by [GitHub Pages](http://pages.github.com). It goes along with [Git-it](http://www.github.com/jlord/git-it-electron), a desktop application for learning Git and GitHub.\n\nUsers fork this repository and learn things like (forking) branching, adding collaborators, pulling in changes, pushing to a remote branch and submitting pull request. Once their pull request comes in, @reporobot rewrites the index.html here to include the user.\n\n#### So much social coding goodness! :octocat:\n"
 },
 {
  "repo": "barryclark/jekyll-now",
  "language": "CSS",
  "readme_contents": "> March, 2016: If you're on an old version of Jekyll Now and run into a) build warnings or b) syntax highlighting issues caused by [Jekyll 3 and GitHub Pages updates](https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0), just :sparkles:[update your _config.yml](https://github.com/barryclark/jekyll-now/pull/445/files):sparkles: and you'll be set!\n\n# Jekyll Now\n\n**Jekyll** is a static site generator that's perfect for GitHub hosted blogs ([Jekyll Repository](https://github.com/jekyll/jekyll))\n\n**Jekyll Now** makes it easier to create your Jekyll blog, by eliminating a lot of the up front setup.\n\n- You don't need to touch the command line\n- You don't need to install/configure ruby, rvm/rbenv, ruby gems :relaxed:\n- You don't need to install runtime dependencies like markdown processors, Pygments, etc\n- If you're on Windows, this will make setting up Jekyll a lot easier\n- It's easy to try out, you can just delete your forked repository if you don't like it\n\nIn a few minutes you'll be set up with a minimal, responsive blog like the one below giving you more time to spend on writing epic blog posts!\n\n![Jekyll Now Theme Screenshot](/images/jekyll-now-theme-screenshot.jpg \"Jekyll Now Theme Screenshot\")\n\n## Quick Start\n\n### Step 1) Fork Jekyll Now to your User Repository\n\nFork this repo, then rename the repository to yourgithubusername.github.io.\n\nYour Jekyll blog will often be viewable immediately at <https://yourgithubusername.github.io> (if it's not, you can often force it to build by completing step 2)\n\n![Step 1](/images/step1.gif \"Step 1\")\n\n### Step 2) Customize and view your site\n\nEnter your site name, description, avatar and many other options by editing the _config.yml file. You can easily turn on Google Analytics tracking, Disqus commenting and social icons here too.\n\nMaking a change to _config.yml (or any file in your repository) will force GitHub Pages to rebuild your site with jekyll. Your rebuilt site will be viewable a few seconds later at <https://yourgithubusername.github.io> - if not, give it ten minutes as GitHub suggests and it'll appear soon\n\n> There are 3 different ways that you can make changes to your blog's files:\n\n> 1. Edit files within your new username.github.io repository in the browser at GitHub.com (shown below).\n> 2. Use a third party GitHub content editor, like [Prose by Development Seed](http://prose.io). It's optimized for use with Jekyll making markdown editing, writing drafts, and uploading images really easy.\n> 3. Clone down your repository and make updates locally, then push them to your GitHub repository.\n\n![_config.yml](/images/config.png \"_config.yml\")\n\n### Step 3) Publish your first blog post\n\nEdit `/_posts/2014-3-3-Hello-World.md` to publish your first blog post. This [Markdown Cheatsheet](http://www.jekyllnow.com/Markdown-Style-Guide/) might come in handy.\n\n![First Post](/images/first-post.png \"First Post\")\n\n> You can add additional posts in the browser on GitHub.com too! Just hit the + icon in `/_posts/` to create new content. Just make sure to include the [front-matter](http://jekyllrb.com/docs/frontmatter/) block at the top of each new blog post and make sure the post's filename is in this format: year-month-day-title.md\n\n## Local Development\n\n1. Install Jekyll and plug-ins in one fell swoop. `gem install github-pages` This mirrors the plug-ins used by GitHub Pages on your local machine including Jekyll, Sass, etc.\n2. Clone down your fork `git clone https://github.com/yourusername/yourusername.github.io.git`\n3. Serve the site and watch for markup/sass changes `jekyll serve`\n4. View your website at http://127.0.0.1:4000/\n5. Commit any changes and push everything to the master branch of your GitHub user repository. GitHub Pages will then rebuild and serve your website.\n\n## Moar!\n\nI've created a more detailed walkthrough, [**Build A Blog With Jekyll And GitHub Pages**](http://www.smashingmagazine.com/2014/08/01/build-blog-jekyll-github-pages/) over at the Smashing Magazine website. Check it out if you'd like a more detailed walkthrough and some background on Jekyll. :metal:\n\nIt covers:\n\n- A more detailed walkthrough of setting up your Jekyll blog\n- Common issues that you might encounter while using Jekyll\n- Importing from Wordpress, using your own domain name, and blogging in your favorite editor\n- Theming in Jekyll, with Liquid templating examples\n- A quick look at Jekyll 2.0\u2019s new features, including Sass/Coffeescript support and Collections\n\n## Jekyll Now Features\n\n\u2713 Command-line free _fork-first workflow_, using GitHub.com to create, customize and post to your blog  \n\u2713 Fully responsive and mobile optimized base theme (**[Theme Demo](http://jekyllnow.com)**)  \n\u2713 Sass/Coffeescript support using Jekyll 2.0  \n\u2713 Free hosting on your GitHub Pages user site  \n\u2713 Markdown blogging  \n\u2713 Syntax highlighting  \n\u2713 Disqus commenting  \n\u2713 Google Analytics integration  \n\u2713 SVG social icons for your footer  \n\u2713 3 http requests, including your avatar  \n\n\u2718 No installing dependencies\n\u2718 No need to set up local development  \n\u2718 No configuring plugins  \n\u2718 No need to spend time on theming  \n\u2718 More time to code other things ... wait \u2713!  \n\n## Questions?\n\n[Open an Issue](https://github.com/barryclark/jekyll-now/issues/new) and let's chat!\n\n## Other forkable themes\n\nYou can use the [Quick Start](https://github.com/barryclark/jekyll-now#quick-start) workflow with other themes that are set up to be forked too! Here are some of my favorites:\n\n- [Hyde](https://github.com/poole/hyde) by MDO\n- [Lanyon](https://github.com/poole/lanyon) by MDO\n- [mojombo.github.io](https://github.com/mojombo/mojombo.github.io) by Tom Preston-Werner\n- [Left](https://github.com/holman/left) by Zach Holman\n- [Minimal Mistakes](https://github.com/mmistakes/minimal-mistakes) by Michael Rose\n- [Skinny Bones](https://github.com/mmistakes/skinny-bones-jekyll) by Michael Rose\n\n## Credits\n\n- [Jekyll](https://github.com/jekyll/jekyll) - Thanks to its creators, contributors and maintainers.\n- [SVG icons](https://github.com/neilorangepeel/Free-Social-Icons) - Thanks, Neil Orange Peel. They're beautiful.\n- [Solarized Light Pygments](https://gist.github.com/edwardhotchkiss/2005058) - Thanks, Edward.\n- [Joel Glovier](http://joelglovier.com/writing/) - Great Jekyll articles. I used Joel's feed.xml in this repository.\n- [David Furnes](https://github.com/dfurnes), [Jon Uy](https://github.com/jonuy), [Luke Patton](https://github.com/lkpttn) - Thanks for the design/code reviews.\n- [Bart Kiers](https://github.com/bkiers), [Florian Simon](https://github.com/vermluh), [Henry Stanley](https://github.com/henryaj), [Hun Jae Lee](https://github.com/hunjaelee), [Javier Cejudo](https://github.com/javiercejudo), [Peter Etelej](https://github.com/etelej), [Ben Abbott](https://github.com/jaminscript), [Ray Nicholus](https://github.com/rnicholus), [Erin Grand](https://github.com/eringrand), [L\u00e9o Colombaro](https://github.com/LeoColomb), [Dean Attali](https://github.com/daattali), [Clayton Errington](https://github.com/cjerrington), [Colton Fitzgerald](https://github.com/coltonfitzgerald), [Trace Mayer](https://github.com/sunnankar) - Thanks for your [fantastic contributions](https://github.com/barryclark/jekyll-now/commits/master) to the project!\n\n## Contributing\n\nIssues and Pull Requests are greatly appreciated. If you've never contributed to an open source project before I'm more than happy to walk you through how to create a pull request.\n\nYou can start by [opening an issue](https://github.com/barryclark/jekyll-now/issues/new) describing the problem that you're looking to resolve and we'll go from there.\n\nI want to keep Jekyll Now as minimal as possible. Every line of code should be one that's useful to 90% of the people using it. Please bear that in mind when submitting feature requests. If it's not something that most people will use, it probably won't get merged. :guardsman:\n"
 },
 {
  "repo": "Snailclimb/JavaGuide",
  "language": "Java",
  "readme_contents": "> JavaGuide \u7684Star\u6570\u91cf\u867d\u7136\u6bd4\u8f83\u591a\uff0c\u4f46\u662f\u5b83\u7684\u4ef7\u503c\u548c\u542b\u91d1\u91cf\u4e00\u5b9a\u662f\u4e0d\u80fd\u548c Dubbo\u3001Nacos\u8fd9\u4e9b\u4f18\u79c0\u7684\u56fd\u4ea7\u5f00\u6e90\u9879\u76ee\u6bd4\u7684\u3002\u5e0c\u671b\u56fd\u5185\u53ef\u4ee5\u51fa\u66f4\u591a\u4f18\u79c0\u7684\u5f00\u6e90\u9879\u76ee\uff01\n>\n> \u53e6\u5916\uff0c\u5e0c\u671b\u5927\u5bb6\u5bf9\u9762\u8bd5\u4e0d\u8981\u62b1\u6709\u4fa5\u5e78\u7684\u5fc3\u7406\uff0c\u6253\u94c1\u8fd8\u9700\u81ea\u8eab\u786c\uff01  \u6211\u5e0c\u671b\u8fd9\u4e2a\u6587\u6863\u662f\u4e3a\u4f60\u5b66\u4e60  Java \u6307\u660e\u65b9\u5411\uff0c\u800c\u4e0d\u662f\u7528\u6765\u5e94\u4ed8\u9762\u8bd5\u7528\u7684\u3002\u52a0\u6cb9\uff01\u5965\u5229\u7ed9\uff01\n\n**\u5f00\u59cb\u9605\u8bfb\u4e4b\u524d\u5fc5\u770b** \uff1a\n\n1. [\u5b8c\u7ed3\u6492\u82b1\uff01JavaGuide\u9762\u8bd5\u7a81\u51fb\u7248\u6765\u5566\uff01](./docs/javaguide\u9762\u8bd5\u7a81\u51fb\u7248.md)\n2. [JavaGuide\u91cd\u5927\u66f4\u65b0\u8bb0\u5f55](./docs/update-history.md)\n\n\u66f4\u591a\u539f\u521b\u5185\u5bb9\u548c\u5e72\u8d27\u5206\u4eab\uff1a\n\n1. [\u516c\u4f17\u53f7\u2014JavaGuide](#\u516c\u4f17\u53f7) \uff1a \u6700\u65b0\u539f\u521b\u6587\u7ae0+\u514d\u8d39\u9886\u53d6\u672c\u6587\u6863\u914d\u5957\u7684\u300aJava\u9762\u8bd5\u7a81\u51fb\u300b\u4ee5\u53caJava\u5de5\u7a0b\u5e08\u5fc5\u5907\u5b66\u4e60\u8d44\u6e90\uff09\n\nGithub\u7528\u6237\u5982\u679c\u8bbf\u95ee\u901f\u5ea6\u7f13\u6162\u7684\u8bdd\uff0c\u53ef\u4ee5\u8f6c\u79fb\u5230[\u7801\u4e91](https://gitee.com/SnailClimb/JavaGuide )\u67e5\u770b\uff0c\u6216\u8005[\u5728\u7ebf\u9605\u8bfb](https://snailclimb.gitee.io/javaguide )\u3002\n\n<p align=\"center\">\n<a href=\"https://github.com/Snailclimb/JavaGuide\" target=\"_blank\">\n\t<img src=\"https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-3/logo - \u526f\u672c.png\" width=\"\"/>\n</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://snailclimb.gitee.io/javaguide\"><img src=\"https://img.shields.io/badge/\u9605\u8bfb-read-brightgreen.svg\" alt=\"\u9605\u8bfb\"></a>\n  <a href=\"#\u516c\u4f17\u53f7\"><img src=\"https://img.shields.io/badge/%E5%85%AC%E4%BC%97%E5%8F%B7-JavaGuide-lightgrey.svg\" alt=\"\u516c\u4f17\u53f7\"></a>\n  <a href=\"#\u516c\u4f17\u53f7\"><img src=\"https://img.shields.io/badge/PDF-Java\u9762\u8bd5\u7a81\u51fb-important.svg\" alt=\"\u516c\u4f17\u53f7\"></a>\n  <a href=\"#\u6295\u7a3f\"><img src=\"https://img.shields.io/badge/support-\u6295\u7a3f-critical.svg\" alt=\"\u6295\u7a3f\"></a>\n  <a href=\"https://xiaozhuanlan.com/javainterview?rel=javaguide\"><img src=\"https://img.shields.io/badge/Java-\u9762\u8bd5\u6307\u5357-important\" alt=\"\u6295\u7a3f\"></a>\n</p>\n\n<h3 align=\"center\">Sponsor</h3>\n<p align=\"center\">\n<a  href=\"https://mp.weixin.qq.com/s/li9_YXNVxan6Qgt3Q9FYqA\">\n<img src=\"https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-7/WechatIMG1.png\" style=\"margin: 0 auto;width:400px\"/>\n</a >\n</p>\n\n## \u76ee\u5f55\n\n- [Java](#java)\n    - [\u57fa\u7840](#\u57fa\u7840)\n    - [\u5bb9\u5668](#\u5bb9\u5668)\n    - [\u5e76\u53d1](#\u5e76\u53d1)\n    - [JVM](#jvm)\n    - [\u5176\u4ed6](#\u5176\u4ed6)\n- [\u7f51\u7edc](#\u7f51\u7edc)\n- [\u64cd\u4f5c\u7cfb\u7edf](#\u64cd\u4f5c\u7cfb\u7edf)\n    - [Linux](#linux)\n- **[\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5](#\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5)**\n    - [\u6570\u636e\u7ed3\u6784](#\u6570\u636e\u7ed3\u6784)\n    - [\u7b97\u6cd5](#\u7b97\u6cd5)\n- [\u6570\u636e\u5e93](#\u6570\u636e\u5e93)\n    - [MySQL](#mysql)\n    - [Redis](#redis)\n- [\u7cfb\u7edf\u8bbe\u8ba1](#\u7cfb\u7edf\u8bbe\u8ba1)\n    - [\u5fc5\u77e5](#\u5fc5\u77e5)\n    - [\u5e38\u7528\u6846\u67b6](#\u5e38\u7528\u6846\u67b6)\n        - [Spring](#springspringboot)\n        - [SpringBoot](#springboot)\n        - [MyBatis](#mybatis)\n    - [\u8ba4\u8bc1\u6388\u6743(JWT\u3001SSO)](#\u8ba4\u8bc1\u6388\u6743)\n    - [\u5206\u5e03\u5f0f](#\u5206\u5e03\u5f0f)\n        - [Elasticsearch(\u5206\u5e03\u5f0f\u641c\u7d22\u5f15\u64ce)](#elasticsearch\u5206\u5e03\u5f0f\u641c\u7d22\u5f15\u64ce)\n        - [RPC](#rpc)\n        - [\u6d88\u606f\u961f\u5217](#\u6d88\u606f\u961f\u5217)\n        - [API \u7f51\u5173](#api-\u7f51\u5173)\n        - [\u5206\u5e03\u5f0fid](#\u5206\u5e03\u5f0fid)\n        - [\u5206\u5e03\u5f0f\u9650\u6d41](#\u5206\u5e03\u5f0f\u9650\u6d41)\n        - [\u5206\u5e03\u5f0f\u63a5\u53e3\u5e42\u7b49\u6027](#\u5206\u5e03\u5f0f\u63a5\u53e3\u5e42\u7b49\u6027)\n        - [\u6570\u636e\u5e93\u6269\u5c55](#\u6570\u636e\u5e93\u6269\u5c55)\n        - [ZooKeeper](#zookeeper)\n    - [\u5927\u578b\u7f51\u7ad9\u67b6\u6784](#\u5927\u578b\u7f51\u7ad9\u67b6\u6784)\n        - [\u6027\u80fd\u6d4b\u8bd5](#\u6027\u80fd\u6d4b\u8bd5)\n        - [\u9ad8\u5e76\u53d1](#\u9ad8\u5e76\u53d1)\n        - [\u9ad8\u53ef\u7528](#\u9ad8\u53ef\u7528)\n    - [\u5fae\u670d\u52a1](#\u5fae\u670d\u52a1)\n        - [Spring Cloud](#spring-cloud)\n- [\u5fc5\u4f1a\u5de5\u5177](#\u5fc5\u4f1a\u5de5\u5177)\n    - [Git](#git)\n    - [Docker](#docker)\n- [\u9762\u8bd5\u6307\u5357](#\u9762\u8bd5\u6307\u5357)\n- [Java\u5b66\u4e60\u5e38\u89c1\u95ee\u9898\u6c47\u603b](#java\u5b66\u4e60\u5e38\u89c1\u95ee\u9898\u6c47\u603b)\n- [\u8d44\u6e90](#\u8d44\u6e90)\n    - [\u4e66\u5355\u63a8\u8350](#\u4e66\u5355\u63a8\u8350)\n    - [\u5b9e\u6218\u9879\u76ee\u63a8\u8350](#\u5b9e\u6218\u9879\u76ee\u63a8\u8350)\n- [\u5f85\u529e](#\u5f85\u529e)\n- [\u8bf4\u660e](#\u8bf4\u660e)\n\n## Java\n\n### \u57fa\u7840\n\n**\u57fa\u7840\u77e5\u8bc6\u7cfb\u7edf\u603b\u7ed3\uff1a**\n\n1. **[Java \u57fa\u7840\u77e5\u8bc6](docs/java/Java\u57fa\u7840\u77e5\u8bc6.md)**\n2. **[Java \u57fa\u7840\u77e5\u8bc6\u7591\u96be\u70b9/\u6613\u9519\u70b9](docs/java/Java\u7591\u96be\u70b9.md)**\n3. [\u3010\u9009\u770b\u3011J2EE \u57fa\u7840\u77e5\u8bc6](docs/java/J2EE\u57fa\u7840\u77e5\u8bc6.md)\n\n**\u91cd\u8981\u77e5\u8bc6\u70b9\u8be6\u89e3\uff1a**\n\n1. [\u679a\u4e3e](docs/java/basic/\u7528\u597dJava\u4e2d\u7684\u679a\u4e3e\u771f\u7684\u6ca1\u6709\u90a3\u4e48\u7b80\u5355.md) \uff08\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u7528\u597d\u679a\u4e3e\u771f\u7684\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\uff01\uff09\n2. [Java \u5e38\u89c1\u5173\u952e\u5b57\u603b\u7ed3\uff1afinal\u3001static\u3001this\u3001super!](docs/java/basic/final,static,this,super.md)\n3. [\u4ec0\u4e48\u662f\u53cd\u5c04\u673a\u5236?\u53cd\u5c04\u673a\u5236\u7684\u5e94\u7528\u573a\u666f\u6709\u54ea\u4e9b?](docs/java/basic/reflection.md)\n\n**\u5176\u4ed6\uff1a**\n\n1. [JAD\u53cd\u7f16\u8bd1](docs/java/JAD\u53cd\u7f16\u8bd1tricks.md)\n2. [\u624b\u628a\u624b\u6559\u4f60\u5b9a\u4f4d\u5e38\u89c1Java\u6027\u80fd\u95ee\u9898](./docs/java/\u624b\u628a\u624b\u6559\u4f60\u5b9a\u4f4d\u5e38\u89c1Java\u6027\u80fd\u95ee\u9898.md)\n\n### \u5bb9\u5668\n\n1. **[Java\u5bb9\u5668\u5e38\u89c1\u9762\u8bd5\u9898/\u77e5\u8bc6\u70b9\u603b\u7ed3](docs/java/collection/Java\u96c6\u5408\u6846\u67b6\u5e38\u89c1\u9762\u8bd5\u9898.md)**\n2. [ArrayList \u6e90\u7801](docs/java/collection/ArrayList.md)  \u3001[LinkedList \u6e90\u7801](docs/java/collection/LinkedList.md)   \u3001[HashMap(JDK1.8)\u6e90\u7801](docs/java/collection/HashMap.md)  \n\n### \u5e76\u53d1\n\n**[\u591a\u7ebf\u7a0b\u5b66\u4e60\u6307\u5357](./docs/java/Multithread/\u591a\u7ebf\u7a0b\u5b66\u4e60\u6307\u5357.md)**\n\n**\u9762\u8bd5\u9898\u603b\u7ed3\uff1a**\n\n1. **[Java \u5e76\u53d1\u57fa\u7840\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3](docs/java/Multithread/JavaConcurrencyBasicsCommonInterviewQuestionsSummary.md)**\n2. **[Java \u5e76\u53d1\u8fdb\u9636\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3](docs/java/Multithread/JavaConcurrencyAdvancedCommonInterviewQuestions.md)**\n\n**\u5fc5\u5907\u77e5\u8bc6\u70b9\uff1a**\n\n1. [\u5e76\u53d1\u5bb9\u5668\u603b\u7ed3](docs/java/Multithread/\u5e76\u53d1\u5bb9\u5668\u603b\u7ed3.md)\n2. **[Java\u7ebf\u7a0b\u6c60\u5b66\u4e60\u603b\u7ed3](./docs/java/Multithread/java\u7ebf\u7a0b\u6c60\u5b66\u4e60\u603b\u7ed3.md)**\n3. [\u4e50\u89c2\u9501\u4e0e\u60b2\u89c2\u9501](docs/essential-content-for-interview/\u9762\u8bd5\u5fc5\u5907\u4e4b\u4e50\u89c2\u9501\u4e0e\u60b2\u89c2\u9501.md)\n4. [JUC \u4e2d\u7684 Atomic \u539f\u5b50\u7c7b\u603b\u7ed3](docs/java/Multithread/Atomic.md)\n5. [AQS \u539f\u7406\u4ee5\u53ca AQS \u540c\u6b65\u7ec4\u4ef6\u603b\u7ed3](docs/java/Multithread/AQS.md)\n\n### JVM\n\n1. **[Java\u5185\u5b58\u533a\u57df](docs/java/jvm/Java\u5185\u5b58\u533a\u57df.md)**\n2. **[JVM\u5783\u573e\u56de\u6536](docs/java/jvm/JVM\u5783\u573e\u56de\u6536.md)**\n3. [JDK \u76d1\u63a7\u548c\u6545\u969c\u5904\u7406\u5de5\u5177](docs/java/jvm/JDK\u76d1\u63a7\u548c\u6545\u969c\u5904\u7406\u5de5\u5177\u603b\u7ed3.md)\n4. [\u7c7b\u6587\u4ef6\u7ed3\u6784](docs/java/jvm/\u7c7b\u6587\u4ef6\u7ed3\u6784.md)\n5. **[\u7c7b\u52a0\u8f7d\u8fc7\u7a0b](docs/java/jvm/\u7c7b\u52a0\u8f7d\u8fc7\u7a0b.md)**\n6. [\u7c7b\u52a0\u8f7d\u5668](docs/java/jvm/\u7c7b\u52a0\u8f7d\u5668.md)\n7. **[\u3010\u5f85\u5b8c\u6210\u3011\u6700\u91cd\u8981\u7684 JVM \u53c2\u6570\u6307\u5357\uff08\u7ffb\u8bd1\u5b8c\u5584\u4e86\u4e00\u534a\uff09](docs/java/jvm/\u6700\u91cd\u8981\u7684JVM\u53c2\u6570\u6307\u5357.md)**\n8. [JVM \u914d\u7f6e\u5e38\u7528\u53c2\u6570\u548c\u5e38\u7528 GC \u8c03\u4f18\u7b56\u7565](docs/java/jvm/GC\u8c03\u4f18\u53c2\u6570.md)\n9. **[\u3010\u52a0\u9910\u3011\u5927\u767d\u8bdd\u5e26\u4f60\u8ba4\u8bc6JVM](docs/java/jvm/[\u52a0\u9910]\u5927\u767d\u8bdd\u5e26\u4f60\u8ba4\u8bc6JVM.md)**\n\n### \u5176\u4ed6\n\n1. **I/O** \uff1a[BIO,NIO,AIO \u603b\u7ed3 ](docs/java/BIO-NIO-AIO.md)\n2. **Java 8**  \uff1a[Java 8 \u65b0\u7279\u6027\u603b\u7ed3](docs/java/What's%20New%20in%20JDK8/Java8Tutorial.md)\u3001[Java 8 \u5b66\u4e60\u8d44\u6e90\u63a8\u8350](docs/java/What's%20New%20in%20JDK8/Java8\u6559\u7a0b\u63a8\u8350.md)\u3001[Java8 forEach \u6307\u5357](docs/java/What's%20New%20in%20JDK8/Java8foreach\u6307\u5357.md)\n3. **Java9~Java14** : [\u4e00\u6587\u5e26\u4f60\u770b\u904dJDK9~14\u7684\u91cd\u8981\u65b0\u7279\u6027\uff01](./docs/java/jdk-new-features/new-features-from-jdk8-to-jdk14.md)\n4. Java\u7f16\u7a0b\u89c4\u8303\uff1a**[Java \u7f16\u7a0b\u89c4\u8303\u4ee5\u53ca\u4f18\u96c5 Java \u4ee3\u7801\u5b9e\u8df5\u603b\u7ed3](docs/java/Java\u7f16\u7a0b\u89c4\u8303.md)** \u3001[\u544a\u522b\u7f16\u78015\u5206\u949f\uff0c\u547d\u540d2\u5c0f\u65f6\uff01\u53f2\u4e0a\u6700\u5168\u7684Java\u547d\u540d\u89c4\u8303\u53c2\u8003\uff01](docs/java/java-naming-conventions.md)\n5. \u8bbe\u8ba1\u6a21\u5f0f :[\u8bbe\u8ba1\u6a21\u5f0f\u7cfb\u5217\u6587\u7ae0](docs/system-design/\u8bbe\u8ba1\u6a21\u5f0f.md)\n\n## \u7f51\u7edc\n\n1. [\u8ba1\u7b97\u673a\u7f51\u7edc\u5e38\u89c1\u9762\u8bd5\u9898](docs/network/\u8ba1\u7b97\u673a\u7f51\u7edc.md)\n2. [\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3](docs/network/\u5e72\u8d27\uff1a\u8ba1\u7b97\u673a\u7f51\u7edc\u77e5\u8bc6\u603b\u7ed3.md)\n3. [HTTPS\u4e2d\u7684TLS](docs/network/HTTPS\u4e2d\u7684TLS.md)\n\n## \u64cd\u4f5c\u7cfb\u7edf\n\n[\u6700\u786c\u6838\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e38\u89c1\u95ee\u9898\u603b\u7ed3\uff01](docs/operating-system/basis.md)\n\n### Linux\n\n* [\u540e\u7aef\u7a0b\u5e8f\u5458\u5fc5\u5907\u7684 Linux \u57fa\u7840\u77e5\u8bc6](docs/operating-system/linux.md)  \n* [Shell \u7f16\u7a0b\u5165\u95e8](docs/operating-system/Shell.md) \n* [\u5b8c\u5168\u4f7f\u7528GNU_Linux\u5b66\u4e60](docs/operating-system/\u5b8c\u5168\u4f7f\u7528GNU_Linux\u5b66\u4e60.md)\n\n## \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\n\n### \u6570\u636e\u7ed3\u6784\n\n- [\u4e0d\u4e86\u89e3\u5e03\u9686\u8fc7\u6ee4\u5668\uff1f\u4e00\u6587\u7ed9\u4f60\u6574\u7684\u660e\u660e\u767d\u767d\uff01](docs/dataStructures-algorithms/data-structure/bloom-filter.md)\n- [\u6570\u636e\u7ed3\u6784\u77e5\u8bc6\u5b66\u4e60\u4e0e\u9762\u8bd5](docs/dataStructures-algorithms/\u6570\u636e\u7ed3\u6784.md)\n\n### \u7b97\u6cd5\n\n- [\u786c\u6838\u7684\u7b97\u6cd5\u5b66\u4e60\u4e66\u7c4d+\u8d44\u6e90\u63a8\u8350](docs/dataStructures-algorithms/\u7b97\u6cd5\u5b66\u4e60\u8d44\u6e90\u63a8\u8350.md)  \n- \u5e38\u89c1\u7b97\u6cd5\u95ee\u9898\u603b\u7ed3\uff1a\n  - [\u51e0\u9053\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u7b97\u6cd5\u9898\u603b\u7ed3 ](docs/dataStructures-algorithms/\u51e0\u9053\u5e38\u89c1\u7684\u5b50\u7b26\u4e32\u7b97\u6cd5\u9898.md)\n  - [\u51e0\u9053\u5e38\u89c1\u7684\u94fe\u8868\u7b97\u6cd5\u9898\u603b\u7ed3 ](docs/dataStructures-algorithms/\u51e0\u9053\u5e38\u89c1\u7684\u94fe\u8868\u7b97\u6cd5\u9898.md)   \n  - [\u5251\u6307offer\u90e8\u5206\u7f16\u7a0b\u9898](docs/dataStructures-algorithms/\u5251\u6307offer\u90e8\u5206\u7f16\u7a0b\u9898.md)\n  - [\u516c\u53f8\u771f\u9898](docs/dataStructures-algorithms/\u516c\u53f8\u771f\u9898.md)\n  - [\u56de\u6eaf\u7b97\u6cd5\u7ecf\u5178\u6848\u4f8b\u4e4bN\u7687\u540e\u95ee\u9898](docs/dataStructures-algorithms/Backtracking-NQueens.md)\n\n## \u6570\u636e\u5e93\n\n### MySQL\n\n**\u603b\u7ed3\uff1a**\n\n1. **[\u3010\u63a8\u8350\u3011MySQL/\u6570\u636e\u5e93 \u77e5\u8bc6\u70b9\u603b\u7ed3](docs/database/MySQL.md)**\n2. **[\u963f\u91cc\u5df4\u5df4\u5f00\u53d1\u624b\u518c\u6570\u636e\u5e93\u90e8\u5206\u7684\u4e00\u4e9b\u6700\u4f73\u5b9e\u8df5](docs/database/\u963f\u91cc\u5df4\u5df4\u5f00\u53d1\u624b\u518c\u6570\u636e\u5e93\u90e8\u5206\u7684\u4e00\u4e9b\u6700\u4f73\u5b9e\u8df5.md)**\n3. **[\u4e00\u5343\u884cMySQL\u5b66\u4e60\u7b14\u8bb0](docs/database/\u4e00\u5343\u884cMySQL\u547d\u4ee4.md)**\n4. [MySQL\u9ad8\u6027\u80fd\u4f18\u5316\u89c4\u8303\u5efa\u8bae](docs/database/MySQL\u9ad8\u6027\u80fd\u4f18\u5316\u89c4\u8303\u5efa\u8bae.md)\n\n**\u91cd\u8981\u77e5\u8bc6\u70b9\uff1a**\n\n1. [\u6570\u636e\u5e93\u7d22\u5f15\u603b\u7ed31](docs/database/MySQL%20Index.md)\u3001[\u6570\u636e\u5e93\u7d22\u5f15\u603b\u7ed32](docs/database/\u6570\u636e\u5e93\u7d22\u5f15.md)\n2. [\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b(\u56fe\u6587\u8be6\u89e3)](docs/database/\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b(\u56fe\u6587\u8be6\u89e3).md)\n3. [\u4e00\u6761SQL\u8bed\u53e5\u5728MySQL\u4e2d\u5982\u4f55\u6267\u884c\u7684](docs/database/\u4e00\u6761sql\u8bed\u53e5\u5728mysql\u4e2d\u5982\u4f55\u6267\u884c\u7684.md)\n4. **[\u5173\u4e8e\u6570\u636e\u5e93\u4e2d\u5982\u4f55\u5b58\u50a8\u65f6\u95f4\u7684\u4e00\u70b9\u601d\u8003](docs/database/\u5173\u4e8e\u6570\u636e\u5e93\u5b58\u50a8\u65f6\u95f4\u7684\u4e00\u70b9\u601d\u8003.md)**\n\n### Redis\n\n* [Redis \u5e38\u89c1\u95ee\u9898\u603b\u7ed3](docs/database/Redis/Redis.md)\n* **Redis \u7cfb\u5217\u6587\u7ae0\u5408\u96c6\uff1a**\n  1. [5\u79cd\u57fa\u672c\u6570\u636e\u7ed3\u6784](docs/database/Redis/redis-collection/Redis(1)\u2014\u20145\u79cd\u57fa\u672c\u6570\u636e\u7ed3\u6784.md)\n  2. [\u8df3\u8dc3\u8868](docs/database/Redis/redis-collection/Redis(2)\u2014\u2014\u8df3\u8dc3\u8868.md)\n  3. [\u5206\u5e03\u5f0f\u9501\u6df1\u5165\u63a2\u7a76](docs/database/Redis/redis-collection/Redis(3)\u2014\u2014\u5206\u5e03\u5f0f\u9501\u6df1\u5165\u63a2\u7a76.md) \u3001 [Redlock\u5206\u5e03\u5f0f\u9501](docs/database/Redis/Redlock\u5206\u5e03\u5f0f\u9501.md) \u3001[\u5982\u4f55\u505a\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u9501\uff0cRedlock\u771f\u7684\u53ef\u884c\u4e48](docs/database/Redis/\u5982\u4f55\u505a\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u9501\uff0cRedlock\u771f\u7684\u53ef\u884c\u4e48.md)\n  4. [\u795e\u5947\u7684HyperLoglog\u89e3\u51b3\u7edf\u8ba1\u95ee\u9898](docs/database/Redis/redis-collection/Reids(4)\u2014\u2014\u795e\u5947\u7684HyperLoglog\u89e3\u51b3\u7edf\u8ba1\u95ee\u9898.md)\n  5. [\u4ebf\u7ea7\u6570\u636e\u8fc7\u6ee4\u548c\u5e03\u9686\u8fc7\u6ee4\u5668](docs/database/Redis/redis-collection/Redis(5)\u2014\u2014\u4ebf\u7ea7\u6570\u636e\u8fc7\u6ee4\u548c\u5e03\u9686\u8fc7\u6ee4\u5668.md)\n  6. [GeoHash\u67e5\u627e\u9644\u8fd1\u7684\u4eba](docs/database/Redis/redis-collection/Redis(6)\u2014\u2014GeoHash\u67e5\u627e\u9644\u8fd1\u7684\u4eba.md)\n  7. [\u6301\u4e45\u5316](docs/database/Redis/redis-collection/Redis(7)\u2014\u2014\u6301\u4e45\u5316.md)\n  8. [\u53d1\u5e03\u8ba2\u9605\u4e0eStream](docs/database/Redis/redis-collection/Redis(8)\u2014\u2014\u53d1\u5e03\u8ba2\u9605\u4e0eStream.md)\n  9. [\u53f2\u4e0a\u6700\u5f3a\u3010\u96c6\u7fa4\u3011\u5165\u95e8\u5b9e\u8df5\u6559\u7a0b](docs/database/Redis/redis-collection/Redis(9)\u2014\u2014\u96c6\u7fa4\u5165\u95e8\u5b9e\u8df5\u6559\u7a0b.md)\n  10. [Redis\u6570\u636e\u7c7b\u578b\u3001\u7f16\u7801\u3001\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u7684\u5173\u7cfb\u770b\u8fd9\u7bc7](docs/database/Redis/redis-collection/Redis(10)\u2014\u2014Redis\u6570\u636e\u7c7b\u578b\u3001\u7f16\u7801\u3001\u6570\u636e\u7ed3\u6784\u7684\u5173\u7cfb.md)\n\n## \u7cfb\u7edf\u8bbe\u8ba1\n\n### \u5fc5\u77e5\n\n1. **[RestFul API \u7b80\u660e\u6559\u7a0b](docs/system-design/restful-api.md)**\n\n### \u5e38\u7528\u6846\u67b6\n\n#### Spring/SpringBoot\n\n1. **[Spring \u5e38\u89c1\u95ee\u9898\u603b\u7ed3](docs/system-design/framework/spring/SpringInterviewQuestions.md)**\n3. **[SpringBoot \u6307\u5357/\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3](https://github.com/Snailclimb/springboot-guide)**\n3. **[Spring/Spring\u5e38\u7528\u6ce8\u89e3\u603b\u7ed3\uff01\u5b89\u6392\uff01](./docs/system-design/framework/spring/spring-annotations.md)**\n4. **[Spring\u4e8b\u52a1\u603b\u7ed3](docs/system-design/framework/spring/spring-transaction.md)**\n5. [Spring IoC \u548c AOP\u8be6\u89e3](https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247486938&idx=1&sn=c99ef0233f39a5ffc1b98c81e02dfcd4&chksm=cea24211f9d5cb07fa901183ba4d96187820713a72387788408040822ffb2ed575d28e953ce7&token=1666190828&lang=zh_CN#rd)\n6. [Spring\u4e2d Bean \u7684\u4f5c\u7528\u57df\u4e0e\u751f\u547d\u5468\u671f](docs/system-design/framework/spring/SpringBean.md)\n7. [SpringMVC \u5de5\u4f5c\u539f\u7406\u8be6\u89e3](docs/system-design/framework/spring/SpringMVC-Principle.md)\n8. [Spring\u4e2d\u90fd\u7528\u5230\u4e86\u90a3\u4e9b\u8bbe\u8ba1\u6a21\u5f0f?](docs/system-design/framework/spring/Spring-Design-Patterns.md)\n\n#### MyBatis\n\n- [MyBatis\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3](docs/system-design/framework/mybatis/mybatis-interview.md)\n\n### \u8ba4\u8bc1\u6388\u6743\n\n**[\u8ba4\u8bc1\u6388\u6743\u57fa\u7840:\u641e\u6e05Authentication,Authorization\u4ee5\u53caCookie\u3001Session\u3001Token\u3001OAuth 2\u3001SSO](docs/system-design/authority-certification/basis-of-authority-certification.md)**\n\n#### JWT\n\n- **[JWT \u4f18\u7f3a\u70b9\u5206\u6790\u4ee5\u53ca\u5e38\u89c1\u95ee\u9898\u89e3\u51b3\u65b9\u6848](docs/system-design/authority-certification/JWT-advantages-and-disadvantages.md)**\n- **[\u9002\u5408\u521d\u5b66\u8005\u5165\u95e8 Spring Security With JWT \u7684 Demo](https://github.com/Snailclimb/spring-security-jwt-guide)**\n\n#### SSO(\u5355\u70b9\u767b\u5f55)\n\nSSO(Single Sign On)\u5373\u5355\u70b9\u767b\u5f55\u8bf4\u7684\u662f\u7528\u6237\u767b\u9646\u591a\u4e2a\u5b50\u7cfb\u7edf\u7684\u5176\u4e2d\u4e00\u4e2a\u5c31\u6709\u6743\u8bbf\u95ee\u4e0e\u5176\u76f8\u5173\u7684\u5176\u4ed6\u7cfb\u7edf\u3002\u4e3e\u4e2a\u4f8b\u5b50\u6211\u4eec\u5728\u767b\u9646\u4e86\u4eac\u4e1c\u91d1\u878d\u4e4b\u540e\uff0c\u6211\u4eec\u540c\u65f6\u4e5f\u6210\u529f\u767b\u9646\u4eac\u4e1c\u7684\u4eac\u4e1c\u8d85\u5e02\u3001\u4eac\u4e1c\u5bb6\u7535\u7b49\u5b50\u7cfb\u7edf\u3002\u76f8\u5173\u9605\u8bfb\uff1a**[SSO \u5355\u70b9\u767b\u5f55\u770b\u8fd9\u7bc7\u5c31\u591f\u4e86\uff01](docs/system-design/authority-certification/sso.md)**\n\n### \u5206\u5e03\u5f0f\n\n[\u5206\u5e03\u5f0f\u76f8\u5173\u6982\u5ff5\u5165\u95e8](docs/system-design/website-architecture/\u5206\u5e03\u5f0f.md)\n\n#### Elasticsearch(\u5206\u5e03\u5f0f\u641c\u7d22\u5f15\u64ce)\n\n\u63d0\u9ad8\u641c\u7d22\u6548\u7387\u3002\u5e38\u89c1\u4e8e\u7535\u5546\u8d2d\u7269\u7f51\u7ad9\u7684\u5546\u54c1\u641c\u7d22\u4e8e\u5206\u7c7b\u3002\n\n\u4ee3\u529e......\n\n#### RPC\n\n\u8ba9\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u8c03\u7528\u50cf\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u90a3\u6837\u7b80\u5355\u3002\n\n- [Dubbo \u603b\u7ed3\uff1a\u5173\u4e8e Dubbo \u7684\u91cd\u8981\u77e5\u8bc6\u70b9](docs/system-design/data-communication/dubbo.md)\n- [\u670d\u52a1\u4e4b\u95f4\u7684\u8c03\u7528\u4e3a\u5565\u4e0d\u76f4\u63a5\u7528 HTTP \u800c\u7528 RPC\uff1f](docs/system-design/data-communication/why-use-rpc.md)\n\n#### \u6d88\u606f\u961f\u5217\n\n\u6d88\u606f\u961f\u5217\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u4e3b\u8981\u662f\u4e3a\u4e86\u63a5\u8026\u548c\u524a\u5cf0\u3002\u76f8\u5173\u9605\u8bfb\uff1a **[\u6d88\u606f\u961f\u5217\u603b\u7ed3](docs/system-design/data-communication/message-queue.md)** \u3002\n\n**RabbitMQ:**\n\n1. [RabbitMQ \u5165\u95e8](docs/system-design/data-communication/rabbitmq.md)\n\n**RocketMQ:**\n\n1. [RocketMQ \u5165\u95e8](docs/system-design/data-communication/RocketMQ.md)\n2. [RocketMQ\u7684\u51e0\u4e2a\u7b80\u5355\u95ee\u9898\u4e0e\u7b54\u6848](docs/system-design/data-communication/RocketMQ-Questions.md)\n\n**Kafka:**\n\n1. **[Kafka \u5165\u95e8+SpringBoot\u6574\u5408Kafka\u7cfb\u5217](https://github.com/Snailclimb/springboot-kafka)**\n2. **[Kafka \u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3](docs/system-design/data-communication/kafka-inverview.md)**\n3. [\u3010\u52a0\u9910\u3011Kafka\u5165\u95e8\u770b\u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86](docs/system-design/data-communication/Kafka\u5165\u95e8\u770b\u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86.md)\n\n#### API \u7f51\u5173\n\n\u7f51\u5173\u4e3b\u8981\u7528\u4e8e\u8bf7\u6c42\u8f6c\u53d1\u3001\u5b89\u5168\u8ba4\u8bc1\u3001\u534f\u8bae\u8f6c\u6362\u3001\u5bb9\u707e\u3002\n\n1. [\u4e3a\u4ec0\u4e48\u8981\u7f51\u5173\uff1f\u4f60\u77e5\u9053\u6709\u54ea\u4e9b\u5e38\u89c1\u7684\u7f51\u5173\u7cfb\u7edf\uff1f](docs/system-design/micro-service/api-gateway-intro.md)\n2. [\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u4ebf\u7ea7\u7f51\u5173(API Gateway)\uff1f](docs/system-design/micro-service/API\u7f51\u5173.md)\n\n#### \u5206\u5e03\u5f0fid\n\n1. [\u4e3a\u4ec0\u4e48\u8981\u5206\u5e03\u5f0f id \uff1f\u5206\u5e03\u5f0f id \u751f\u6210\u65b9\u6848\u6709\u54ea\u4e9b\uff1f](docs/system-design/micro-service/\u5206\u5e03\u5f0fid\u751f\u6210\u65b9\u6848\u603b\u7ed3.md)\n\n#### \u5206\u5e03\u5f0f\u9650\u6d41\n\n1. [\u9650\u6d41\u7b97\u6cd5\u6709\u54ea\u4e9b\uff1f](docs/system-design/micro-service/limit-request.md)\n\n#### \u5206\u5e03\u5f0f\u63a5\u53e3\u5e42\u7b49\u6027\n\n#### ZooKeeper\n\n> \u524d\u4e24\u7bc7\u6587\u7ae0\u53ef\u80fd\u6709\u5185\u5bb9\u91cd\u5408\u90e8\u5206\uff0c\u63a8\u8350\u90fd\u770b\u4e00\u904d\u3002\n\n1. [\u3010\u5165\u95e8\u3011ZooKeeper \u76f8\u5173\u6982\u5ff5\u603b\u7ed3](docs/system-design/framework/ZooKeeper.md)\n2. [\u3010\u8fdb\u9636\u3011Zookeeper \u539f\u7406\u7b80\u5355\u5165\u95e8\uff01](docs/system-design/framework/ZooKeeper-plus.md)\n3. [\u3010\u62d3\u5c55\u3011ZooKeeper \u6570\u636e\u6a21\u578b\u548c\u5e38\u89c1\u547d\u4ee4](docs/system-design/framework/ZooKeeper\u6570\u636e\u6a21\u578b\u548c\u5e38\u89c1\u547d\u4ee4.md)\n\n#### \u5176\u4ed6\n\n- \u63a5\u53e3\u5e42\u7b49\u6027\uff08\u4ee3\u529e\uff09\uff1a\u5206\u5e03\u5f0f\u7cfb\u7edf\u5fc5\u987b\u8981\u8003\u8651\u63a5\u53e3\u7684\u5e42\u7b49\u6027\u3002\n\n#### \u6570\u636e\u5e93\u6269\u5c55\n\n\u8bfb\u5199\u5206\u79bb\u3001\u5206\u5e93\u5206\u8868\u3002\n\n\u4ee3\u529e.....\n\n### \u5927\u578b\u7f51\u7ad9\u67b6\u6784\n\n- [8 \u5f20\u56fe\u8bfb\u61c2\u5927\u578b\u7f51\u7ad9\u6280\u672f\u67b6\u6784](docs/system-design/website-architecture/8%20\u5f20\u56fe\u8bfb\u61c2\u5927\u578b\u7f51\u7ad9\u6280\u672f\u67b6\u6784.md)\n- [\u5173\u4e8e\u5927\u578b\u7f51\u7ad9\u7cfb\u7edf\u67b6\u6784\u4f60\u4e0d\u5f97\u4e0d\u61c2\u768410\u4e2a\u95ee\u9898](docs/system-design/website-architecture/\u5173\u4e8e\u5927\u578b\u7f51\u7ad9\u7cfb\u7edf\u67b6\u6784\u4f60\u4e0d\u5f97\u4e0d\u61c2\u768410\u4e2a\u95ee\u9898.md)\n\n#### \u6027\u80fd\u6d4b\u8bd5\n\n- [\u540e\u7aef\u7a0b\u5e8f\u5458\u4e5f\u8981\u61c2\u7684\u6027\u80fd\u6d4b\u8bd5\u77e5\u8bc6](https://articles.zsxq.com/id_lwl39teglv3d.html) \uff08\u77e5\u8bc6\u661f\u7403\uff09\n\n#### \u9ad8\u5e76\u53d1\n\n\u5f85\u529e......\n\n#### \u9ad8\u53ef\u7528\n\n\u9ad8\u53ef\u7528\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u7cfb\u7edf\u5728\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u662f\u53ef\u7528\u7684\uff0c\u53ef\u4ee5\u4e3a\u6211\u4eec\u63d0\u4f9b\u670d\u52a1\u7684\u3002\u9ad8\u53ef\u7528\u4ee3\u8868\u7cfb\u7edf\u5373\u4f7f\u5728\u53d1\u751f\u786c\u4ef6\u6545\u969c\u6216\u8005\u7cfb\u7edf\u5347\u7ea7\u7684\u65f6\u5019\uff0c\u670d\u52a1\u4ecd\u7136\u662f\u53ef\u7528\u7684 \u3002\u76f8\u5173\u9605\u8bfb\uff1a **\u300a[\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u9ad8\u53ef\u7528\u7cfb\u7edf\uff1f\u8981\u8003\u8651\u54ea\u4e9b\u5730\u65b9\uff1f](docs/system-design/website-architecture/\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u9ad8\u53ef\u7528\u7cfb\u7edf\uff1f\u8981\u8003\u8651\u54ea\u4e9b\u5730\u65b9\uff1f.md)\u300b** \u3002\n\n### \u5fae\u670d\u52a1\n\n#### Spring Cloud\n\n- [ \u5927\u767d\u8bdd\u5165\u95e8 Spring Cloud](docs/system-design/micro-service/spring-cloud.md)\n\n## \u5fc5\u4f1a\u5de5\u5177\n\n### Git\n\n* [Git\u5165\u95e8](docs/tools/Git.md)\n\n### Docker\n\n1. [Docker \u57fa\u672c\u6982\u5ff5\u89e3\u8bfb](docs/tools/Docker.md)\n2. [\u4e00\u6587\u641e\u61c2 Docker \u955c\u50cf\u7684\u5e38\u7528\u64cd\u4f5c\uff01](docs/tools/Docker-Image.md )\n\n### \u5176\u4ed6\n\n- [\u3010\u539f\u521b\u3011\u5982\u4f55\u4f7f\u7528\u4e91\u670d\u52a1\u5668\uff1f\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u591f\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01](https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247485738&idx=1&sn=f97e91a50e444944076c30b0717b303a&chksm=cea246e1f9d5cff73faf6a778b147ea85162d1f3ed55ca90473c6ebae1e2c4d13e89282aeb24&token=406194678&lang=zh_CN#rd)\n\n## \u9762\u8bd5\u6307\u5357\n\n> \u8fd9\u90e8\u5206\u5f88\u591a\u5185\u5bb9\u6bd4\u5982\u5927\u5382\u9762\u7ecf\u3001\u771f\u5b9e\u9762\u7ecf\u5206\u6790\u88ab\u79fb\u9664\uff0c\u8be6\u89c1[\u5b8c\u7ed3\u6492\u82b1\uff01JavaGuide\u9762\u8bd5\u7a81\u51fb\u7248\u6765\u5566\uff01](./docs/javaguide\u9762\u8bd5\u7a81\u51fb\u7248.md)\u3002\n\n1. **[\u3010\u5907\u6218\u9762\u8bd51\u3011\u7a0b\u5e8f\u5458\u7684\u7b80\u5386\u5c31\u8be5\u8fd9\u6837\u5199](docs/essential-content-for-interview/PreparingForInterview/\u7a0b\u5e8f\u5458\u7684\u7b80\u5386\u4e4b\u9053.md)**\n2. **[\u3010\u5907\u6218\u9762\u8bd52\u3011\u521d\u51fa\u8305\u5e90\u7684\u7a0b\u5e8f\u5458\u8be5\u5982\u4f55\u51c6\u5907\u9762\u8bd5\uff1f](docs/essential-content-for-interview/PreparingForInterview/interviewPrepare.md)**\n3. **[\u3010\u5907\u6218\u9762\u8bd53\u30117\u4e2a\u5927\u90e8\u5206\u7a0b\u5e8f\u5458\u5728\u9762\u8bd5\u524d\u5f88\u5173\u5fc3\u7684\u95ee\u9898](docs/essential-content-for-interview/PreparingForInterview/JavaProgrammerNeedKnow.md)**\n4. **[\u3010\u5907\u6218\u9762\u8bd54\u3011Github\u4e0a\u5f00\u6e90\u7684Java\u9762\u8bd5/\u5b66\u4e60\u76f8\u5173\u7684\u4ed3\u5e93\u63a8\u8350](docs/essential-content-for-interview/PreparingForInterview/JavaInterviewLibrary.md)**\n5. **[\u3010\u5907\u6218\u9762\u8bd55\u3011\u5982\u679c\u9762\u8bd5\u5b98\u95ee\u4f60\u201c\u4f60\u6709\u4ec0\u4e48\u95ee\u9898\u95ee\u6211\u5417\uff1f\u201d\u65f6\uff0c\u4f60\u8be5\u5982\u4f55\u56de\u7b54](docs/essential-content-for-interview/PreparingForInterview/\u9762\u8bd5\u5b98-\u4f60\u6709\u4ec0\u4e48\u95ee\u9898\u8981\u95ee\u6211.md)**\n6. [\u3010\u5907\u6218\u9762\u8bd56\u3011\u5e94\u5c4a\u751f\u9762\u8bd5\u6700\u7231\u95ee\u7684\u51e0\u9053 Java \u57fa\u7840\u95ee\u9898](docs/essential-content-for-interview/PreparingForInterview/\u5e94\u5c4a\u751f\u9762\u8bd5\u6700\u7231\u95ee\u7684\u51e0\u9053Java\u57fa\u7840\u95ee\u9898.md)\n7. **[\u3010\u5907\u6218\u9762\u8bd56\u3011\u7f8e\u56e2\u9762\u8bd5\u5e38\u89c1\u95ee\u9898\u603b\u7ed3(\u9644\u8be6\u89e3\u7b54\u6848)](docs/essential-content-for-interview/PreparingForInterview/\u7f8e\u56e2\u9762\u8bd5\u5e38\u89c1\u95ee\u9898\u603b\u7ed3.md)**\n\n## Java\u5b66\u4e60\u5e38\u89c1\u95ee\u9898\u6c47\u603b\n\n1. [Java\u5b66\u4e60\u8def\u7ebf\u548c\u65b9\u6cd5\u63a8\u8350](docs/questions/java-learning-path-and-methods.md)\n2. [Java\u57f9\u8bad\u56db\u4e2a\u6708\u80fd\u5b66\u4f1a\u5417\uff1f](docs/questions/java-training-4-month.md)\n3. [\u65b0\u624b\u5b66\u4e60Java\uff0c\u6709\u54ea\u4e9bJava\u76f8\u5173\u7684\u535a\u5ba2\uff0c\u4e13\u680f\uff0c\u548c\u6280\u672f\u5b66\u4e60\u7f51\u7ad9\u63a8\u8350\uff1f](docs/questions/java-learning-website-blog.md)\n4. [Java \u8fd8\u662f\u5927\u6570\u636e\uff0c\u4f60\u9700\u8981\u4e86\u89e3\u8fd9\u4e9b\u4e1c\u897f\uff01](docs/questions/java-big-data)\n5. [Java \u540e\u53f0\u5f00\u53d1/\u5927\u6570\u636e\uff1f\u4f60\u9700\u8981\u4e86\u89e3\u8fd9\u4e9b\u4e1c\u897f\uff01](https://articles.zsxq.com/id_wto1iwd5g72o.html)\uff08\u77e5\u8bc6\u661f\u7403\uff09\n\n## \u8d44\u6e90\n\n### \u4e66\u5355\u63a8\u8350\n\n- **[Java\u7a0b\u5e8f\u5458\u5fc5\u5907\u4e66\u5355](docs/books/java.md)**\n\n### \u5b9e\u6218\u9879\u76ee\u63a8\u8350\n\n- **[Java\u3001SpringBoot\u5b9e\u6218\u9879\u76ee\u63a8\u8350](https://github.com/Snailclimb/awesome-java#\u5b9e\u6218\u9879\u76ee)**\n\n### Github\n\n- [Github \u4e0a\u975e\u5e38\u68d2\u7684 Java \u5f00\u6e90\u9879\u76ee\u96c6\u5408](https://github.com/Snailclimb/awesome-java) \n- [Github \u4e0a Star \u6570\u6700\u591a\u7684 10 \u4e2a\u9879\u76ee\uff0c\u770b\u5b8c\u4e4b\u540e\u5f88\u610f\u5916!](docs/tools/github/github-star-ranking.md)\n- [\u5e74\u672b\u5c06\u81f3\uff0c\u503c\u5f97\u4f60\u5173\u6ce8\u768416\u4e2aJava \u5f00\u6e90\u9879\u76ee\uff01](docs/github-trending/2019-12.md)\n- [Java \u9879\u76ee\u5386\u53f2\u6708\u699c\u5355](docs/github-trending/JavaGithubTrending.md)\n\n***\n\n## \u5f85\u529e\n\n- [ ] Netty \u603b\u7ed3(---\u6b63\u5728\u8fdb\u884c\u4e2d---)\n- [ ] \u6570\u636e\u7ed3\u6784\u603b\u7ed3\u91cd\u6784(---\u6b63\u5728\u8fdb\u884c\u4e2d---)\n\n## \u8bf4\u660e\n\n\u5f00\u6e90\u9879\u76ee\u5728\u4e8e\u5927\u5bb6\u7684\u53c2\u4e0e\uff0c\u8fd9\u624d\u4f7f\u5f97\u5b83\u7684\u4ef7\u503c\u5f97\u5230\u63d0\u5347\u3002\u611f\u8c22\ud83d\ude4f\u6709\u4f60\uff01\n\n### JavaGuide\u4ecb\u7ecd\n\n\u5f00\u6e90 JavaGuide \u521d\u59cb\u60f3\u6cd5\u6e90\u4e8e\u81ea\u5df1\u7684\u4e2a\u4eba\u90a3\u4e00\u6bb5\u6bd4\u8f83\u8ff7\u832b\u7684\u5b66\u4e60\u7ecf\u5386\u3002\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u901a\u8fc7\u8fd9\u4e2a\u5f00\u6e90\u5e73\u53f0\u6765\u5e2e\u52a9\u4e00\u4e9b\u5728\u5b66\u4e60 Java \u6216\u8005\u9762\u8bd5\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\u7684\u5c0f\u4f19\u4f34\u3002\n\n*  **\u5bf9\u4e8e Java \u521d\u5b66\u8005\u6765\u8bf4\uff1a** \u672c\u6587\u6863\u503e\u5411\u4e8e\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u8be6\u7ec6\u7684\u5b66\u4e60\u8def\u5f84\uff0c\u8ba9\u4f60\u5bf9\u4e8eJava\u6574\u4f53\u7684\u77e5\u8bc6\u4f53\u7cfb\u6709\u4e00\u4e2a\u521d\u6b65\u8ba4\u8bc6\u3002\u53e6\u5916\uff0c\u672c\u6587\u7684\u4e00\u4e9b\u6587\u7ae0\n\u4e5f\u662f\u4f60\u5b66\u4e60\u548c\u590d\u4e60 Java \u77e5\u8bc6\u4e0d\u9519\u7684\u5b9e\u8df5\uff1b\n*  **\u5bf9\u4e8e\u975e Java \u521d\u5b66\u8005\u6765\u8bf4\uff1a** \u672c\u6587\u6863\u66f4\u9002\u5408\u56de\u987e\u77e5\u8bc6\uff0c\u51c6\u5907\u9762\u8bd5\uff0c\u641e\u6e05\u9762\u8bd5\u5e94\u8be5\u628a\u91cd\u5fc3\u653e\u5728\u90a3\u4e9b\u95ee\u9898\u4e0a\u3002\u8981\u641e\u6e05\u695a\u8fd9\u4e2a\u9053\u7406\uff1a\u63d0\u524d\u77e5\u9053\u90a3\u4e9b\u9762\u8bd5\u5e38\u89c1\uff0c\u4e0d\u662f\u4e3a\u4e86\u80cc\u4e0b\u6765\u5e94\u4ed8\u9762\u8bd5\uff0c\u800c\u662f\u4e3a\u4e86\u8ba9\u4f60\u53ef\u4ee5\u66f4\u6709\u9488\u5bf9\u7684\u5b66\u4e60\u91cd\u70b9\u3002\n\nMarkdown \u683c\u5f0f\u53c2\u8003\uff1a[Github Markdown\u683c\u5f0f](https://guides.github.com/features/mastering-markdown/)\uff0c\u8868\u60c5\u7d20\u6750\u6765\u81ea\uff1a[EMOJI CHEAT SHEET](https://www.webpagefx.com/tools/emoji-cheat-sheet/)\u3002\n\n\u5229\u7528 docsify \u751f\u6210\u6587\u6863\u90e8\u7f72\u5728 Github pages: [docsify \u5b98\u7f51\u4ecb\u7ecd](https://docsify.js.org/#/) \uff0c\u53e6\u89c1[\u300aGuide\u54e5\u624b\u628a\u624b\u6559\u4f60\u642d\u5efa\u4e00\u4e2a\u6587\u6863\u7c7b\u578b\u7684\u7f51\u7ad9!\u514d\u8d39\u4e14\u9ad8\u901f\uff01\u300b](https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247486555&idx=2&sn=8486026ee9f9ba645ff0363df6036184&chksm=cea24390f9d5ca86ff4177c0aca5e719de17dc89e918212513ee661dd56f17ca8269f4a6e303&token=298703358&lang=zh_CN#rd) \u3002\n\n### \u5173\u4e8e\u8f6c\u8f7d\n\n\u5982\u679c\u4f60\u9700\u8981\u8f6c\u8f7d\u672c\u4ed3\u5e93\u7684\u4e00\u4e9b\u6587\u7ae0\u5230\u81ea\u5df1\u7684\u535a\u5ba2\u7684\u8bdd\uff0c\u8bb0\u5f97\u6ce8\u660e\u539f\u6587\u5730\u5740\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u5982\u4f55\u5bf9\u8be5\u5f00\u6e90\u6587\u6863\u8fdb\u884c\u8d21\u732e\n\n1. \u7b14\u8bb0\u5185\u5bb9\u5927\u591a\u662f\u624b\u6572\uff0c\u6240\u4ee5\u96be\u514d\u4f1a\u6709\u7b14\u8bef\uff0c\u4f60\u53ef\u4ee5\u5e2e\u6211\u627e\u9519\u522b\u5b57\u3002\n2. \u5f88\u591a\u77e5\u8bc6\u70b9\u6211\u53ef\u80fd\u6ca1\u6709\u6d89\u53ca\u5230\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5bf9\u5176\u4ed6\u77e5\u8bc6\u70b9\u8fdb\u884c\u8865\u5145\u3002\n3. \u73b0\u6709\u7684\u77e5\u8bc6\u70b9\u96be\u514d\u5b58\u5728\u4e0d\u5b8c\u5584\u6216\u8005\u9519\u8bef\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5bf9\u5df2\u6709\u77e5\u8bc6\u70b9\u8fdb\u884c\u4fee\u6539/\u8865\u5145\u3002\n\n### \u8054\u7cfb\u6211\n\n![\u4e2a\u4eba\u5fae\u4fe1](https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-7/wechat3.jpeg)\n\n### Contributor\n\n\u4e0b\u9762\u662f\u7b14\u4e3b\u6536\u96c6\u7684\u4e00\u4e9b\u5bf9\u672c\u4ed3\u5e93\u63d0\u8fc7\u6709\u4ef7\u503c\u7684pr\u6216\u8005issue\u7684\u670b\u53cb\uff0c\u4eba\u6570\u8f83\u591a\uff0c\u5982\u679c\u4f60\u4e5f\u5bf9\u672c\u4ed3\u5e93\u63d0\u8fc7\u4e0d\u9519\u7684pr\u6216\u8005issue\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u52a0\u6211\u7684\u5fae\u4fe1\u4e0e\u6211\u8054\u7cfb\u3002\u4e0b\u9762\u7684\u6392\u540d\u4e0d\u5206\u5148\u540e\uff01\n\n<a href=\"https://github.com/LiWenGu\">\n    <img src=\"https://avatars0.githubusercontent.com/u/15909210?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/fanofxiaofeng\">\n    <img src=\"https://avatars0.githubusercontent.com/u/3983683?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/fanchenggang\">  \n    <img src=\"https://avatars2.githubusercontent.com/u/8225921?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/Rustin-Liu\">  \n    <img src=\"https://avatars2.githubusercontent.com/u/29879298?s=400&v=4\" width=\"45px\">\n</a>\n\n<a href=\"https://github.com/ipofss\">\n    <img src=\"https://avatars1.githubusercontent.com/u/5917359?s=460&v=4\" width=\"45px\"></a>\n<a href=\"https://github.com/Gene1994\">\n    <img src=\"https://avatars3.githubusercontent.com/u/24930369?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/spikesp\">\n    <img src=\"https://avatars0.githubusercontent.com/u/12581996?s=460&v=4\" width=\"45px\"></a>\n<a href=\"https://github.com/illusorycloud\">\n    <img src=\"https://avatars3.githubusercontent.com/u/31980412?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/kinglaw1204\">\n    <img src=\"https://avatars1.githubusercontent.com/u/20039931?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/jun1st\">\n    <img src=\"https://avatars2.githubusercontent.com/u/14312378?s=460&v=4\" width=\"45px\">\n</a>\"\n<a href=\"https://github.com/fantasygg\">  \n    <img src=\"https://avatars3.githubusercontent.com/u/13445354?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/debugjoker\">  \n    <img src=\"https://avatars3.githubusercontent.com/u/26218005?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/zhyank\">  \n    <img src=\"https://avatars0.githubusercontent.com/u/17696240?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/Goose9527\">  \n    <img src=\"https://avatars2.githubusercontent.com/u/43314997?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/yuechuanx\">  \n    <img src=\"https://avatars3.githubusercontent.com/u/19339293?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/cnLGMing\">  \n    <img src=\"https://avatars2.githubusercontent.com/u/15910705?s=460&v=4\" width=\"45px\">\n</a>\n<a href=\"https://github.com/fanchenggang\">  \n    <img src=\"https://avatars0.githubusercontent.com/u/20358122?s=460&v=4\" width=\"45px\">\n</a>\n\n### \u516c\u4f17\u53f7\n\n\u5982\u679c\u5927\u5bb6\u60f3\u8981\u5b9e\u65f6\u5173\u6ce8\u6211\u66f4\u65b0\u7684\u6587\u7ae0\u4ee5\u53ca\u5206\u4eab\u7684\u5e72\u8d27\u7684\u8bdd\uff0c\u53ef\u4ee5\u5173\u6ce8\u6211\u7684\u516c\u4f17\u53f7\u3002\n\n**\u300aJava\u9762\u8bd5\u7a81\u51fb\u300b:** \u7531\u672c\u6587\u6863\u884d\u751f\u7684\u4e13\u4e3a\u9762\u8bd5\u800c\u751f\u7684\u300aJava\u9762\u8bd5\u7a81\u51fb\u300bV2.0 PDF \u7248\u672c[\u516c\u4f17\u53f7](#\u516c\u4f17\u53f7)\u540e\u53f0\u56de\u590d **\"Java\u9762\u8bd5\u7a81\u51fb\"** \u5373\u53ef\u514d\u8d39\u9886\u53d6\uff01\n\n**Java\u5de5\u7a0b\u5e08\u5fc5\u5907\u5b66\u4e60\u8d44\u6e90:** \u4e00\u4e9bJava\u5de5\u7a0b\u5e08\u5e38\u7528\u5b66\u4e60\u8d44\u6e90\u516c\u4f17\u53f7\u540e\u53f0\u56de\u590d\u5173\u952e\u5b57 **\u201c1\u201d** \u5373\u53ef\u514d\u8d39\u65e0\u5957\u8def\u83b7\u53d6\u3002 \n\n![\u6211\u7684\u516c\u4f17\u53f7](https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-6/167598cd2e17b8ec.png)\n\n\n"
 },
 {
  "repo": "firstcontributions/first-contributions",
  "language": null,
  "readme_contents": "[![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://github.com/ellerbrock/open-source-badges/)\n[<img align=\"right\" width=\"150\" src=\"assets/join-slack-team.png\">](https://join.slack.com/t/firstcontributors/shared_invite/enQtNjkxNzQwNzA2MTMwLTVhMWJjNjg2ODRlNWZhNjIzYjgwNDIyZWYwZjhjYTQ4OTBjMWM0MmFhZDUxNzBiYzczMGNiYzcxNjkzZDZlMDM)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)\n[![Open Source Helpers](https://www.codetriage.com/roshanjossey/first-contributions/badges/users.svg)](https://www.codetriage.com/roshanjossey/first-contributions)\n\n\n# First Contributions\n\nIt's hard. It's always hard the first time you do something. Especially when you are collaborating, making mistakes isn't a comfortable thing. We wanted to simplify the way new open-source contributors learn & contribute for the first time.\n\nReading articles & watching tutorials can help, but what's better than actually doing the stuff in a practice environment? This project aims at providing guidance & simplifying the way beginners make their first contribution. If you are looking to make your first contribution, follow the steps below.\n\n#### *If you're not comfortable with command line, [here are tutorials using GUI tools.]( #tutorials-using-other-tools )*\n\n#### *Read this in [other languages](translations/Translations.md).*\n\n[:bangladesh:](translations/README.bn.md)\n[\ud83c\udde7\ud83c\uddec](translations/README.bg.md)\n[\ud83c\udde7\ud83c\uddf7](translations/README.pt_br.md)\n[<img src=\"assets/catalan1.png\" width=\"22\">](translations/README.ca.md)\n[\ud83c\udde8\ud83c\uddf3](translations/README.chs.md)\n[\ud83c\udde8\ud83c\uddff](translations/README.cs.md)\n[\ud83c\udde9\ud83c\uddea](translations/README.de.md)\n[\ud83c\udde9\ud83c\uddf0](translations/README.da.md)\n[\ud83c\uddea\ud83c\uddec](translations/README.eg.md)\n[\ud83c\uddea\ud83c\uddf8](translations/README.es.md)\n[\ud83c\uddeb\ud83c\uddf7](translations/README.fr.md)\n[\ud83c\udff4](translations/README.gl.md)\n[\ud83c\uddec\ud83c\uddf7](translations/README.gr.md)\n[\ud83c\udded\ud83c\uddfa](translations/README.hu.md)\n[\ud83c\uddee\ud83c\udde9](translations/README.id.md)\n[\ud83c\uddee\ud83c\uddf1](translations/README.hb.md)\n[\ud83c\uddee\ud83c\uddf3](translations/Translations.md)\n[\ud83c\uddee\ud83c\uddf7](translations/README.fa.md)\n[\ud83c\uddee\ud83c\uddf7](translations/README.fa.en.md)\n[\ud83c\uddee\ud83c\uddf9](translations/README.it.md)\n[\ud83c\uddef\ud83c\uddf5](translations/README.ja.md)\n[\ud83c\uddf0\ud83c\uddea](translations/README.kws.md)\n[\ud83c\uddf0\ud83c\uddf7 \ud83c\uddf0\ud83c\uddf5](translations/README.ko.md)\n[\ud83c\uddf1\ud83c\uddf9](translations/README.lt.md)\n[\ud83c\uddf2\ud83c\udde9 \ud83c\uddf7\ud83c\uddf4](translations/README.ro.md)\n[\ud83c\uddf2\ud83c\uddf2](translations/README.mm_unicode.md)\n[\ud83c\uddf2\ud83c\uddf0](translations/README.mk.md)\n[\ud83c\uddf2\ud83c\uddfd](translations/README.mx.md)\n[\ud83c\uddf2\ud83c\uddfe](translations/README.my.md)\n[\ud83c\uddf3\ud83c\uddf1](translations/README.nl.md)\n[\ud83c\uddf3\ud83c\uddec](translations/README.igb.md)\n[\ud83c\uddf3\ud83c\uddf4](translations/README.no.md)\n[\ud83c\uddf3\ud83c\uddf5](translations/README.np.md)\n[\ud83c\uddf5\ud83c\udded](translations/README.tl.md)\n[<img src=\"assets/pirate.png\" width=\"22\">](translations/README.en-pirate.md)\n[\ud83c\uddf5\ud83c\uddf0](translations/README.ur.md)\n[\ud83c\uddf5\ud83c\uddf1](translations/README.pl.md)\n[\ud83c\uddf5\ud83c\uddf9](translations/README.pt-pt.md)\n[\ud83c\uddf7\ud83c\uddfa](translations/README.ru.md)\n[\ud83c\uddf8\ud83c\udde6](translations/README.ar.md)\n[\ud83c\uddf8\ud83c\uddea](translations/README.se.md)\n[:slovakia:](translations/README.slk.md)\n[:slovenia:](translations/README.sl.md)\n[\ud83c\uddf9\ud83c\udded](translations/README.th.md)\n[\ud83c\uddf9\ud83c\uddf7](translations/README.tr.md)\n[\ud83c\uddf9\ud83c\uddfc](translations/README.cht.md)\n[\ud83c\uddfa\ud83c\udde6](translations/README.ua.md)\n[\ud83c\uddfb\ud83c\uddf3](translations/README.vn.md)\n[\ud83c\uddff\ud83c\udde6](translations/README.zul.md)\n[\ud83c\uddff\ud83c\udde6](translations/README.afk.md)\n[\ud83c\uddf0\ud83c\uddea](translations/README.kws.md)\n[\ud83c\uddf3\ud83c\uddec](translations/README.igb.md)\n[\ud83c\uddf1\ud83c\uddfb](translations/README.lv.md)\n[\ud83c\uddeb\ud83c\uddee](translations/README.fi.md)\n\n\n\n<img align=\"right\" width=\"300\" src=\"assets/fork.png\" alt=\"fork this repository\" />\n\nIf you don't have git on your machine, [install it]( https://help.github.com/articles/set-up-git/).\n\n## Fork this repository\n\nFork this repository by clicking on the fork button on the top of this page.\nThis will create a copy of this repository in your account.\n\n## Clone the repository\n\n<img align=\"right\" width=\"300\" src=\"assets/clone.png\" alt=\"clone this repository\" />\n\nNow clone the forked repository to your machine. Go to your GitHub account, open the forked repository, click on the clone button and then click the *copy to clipboard* icon.\n\nOpen a terminal and run the following git command:\n\n```\ngit clone \"url you just copied\"\n```\nwhere \"url you just copied\" (without the quotation marks) is the url to this repository (your fork of this project). See the previous steps to obtain the url.\n\n<img align=\"right\" width=\"300\" src=\"assets/copy-to-clipboard.png\" alt=\"copy URL to clipboard\" />\n\nFor example:\n```\ngit clone https://github.com/this-is-you/first-contributions.git\n```\nwhere `this-is-you` is your GitHub username. Here you're copying the contents of the first-contributions repository on GitHub to your computer.\n\n## Create a branch\n\nChange to the repository directory on your computer (if you are not already there):\n\n```\ncd first-contributions\n```\nNow create a branch using the `git checkout` command:\n```\ngit checkout -b <add-your-new-branch-name>\n```\n\nFor example:\n```\ngit checkout -b add-alonzo-church\n```\n(The name of the branch does not need to have the word *add* in it, but it's a reasonable thing to include because the purpose of this branch is to add your name to a list.)\n\n## Make necessary changes and commit those changes\n\nNow open `Contributors.md` file in a text editor, add your name to it. Don't add it at the beginning or end of the file. Put it anywhere in between. Now, save the file.\n\n<img align=\"right\" width=\"450\" src=\"assets/git-status.png\" alt=\"git status\" />\n\n\nIf you go to the project directory and execute the command `git status`, you'll see there are changes.\n\n\nAdd those changes to the branch you just created using the `git add` command:\n\n```\ngit add Contributors.md\n```\n\nNow commit those changes using the `git commit` command:\n```\ngit commit -m \"Add <your-name> to Contributors list\"\n```\nreplacing `<your-name>` with your name.\n\n## Push changes to GitHub\n\nPush your changes using the command `git push`:\n```\ngit push origin <add-your-branch-name>\n```\nreplacing `<add-your-branch-name>` with the name of the branch you created earlier.\n\n## Submit your changes for review\n\nIf you go to your repository on GitHub, you'll see a  `Compare & pull request` button. Click on that button.\n\n<img style=\"float: right;\" src=\"assets/compare-and-pull.png\" alt=\"create a pull request\" />\n\nNow submit the pull request.\n\n<img style=\"float: right;\" src=\"assets/submit-pull-request.png\" alt=\"submit pull request\" />\n\nSoon I'll be merging all your changes into the master branch of this project. You will get a notification email once the changes have been merged.\n\n## Where to go from here?\n\nCongrats!  You just completed the standard _fork -> clone -> edit -> PR_ workflow that you'll encounter often as a contributor!\n\nCelebrate your contribution and share it with your friends and followers by going to [web app](https://firstcontributions.github.io/#social-share).\n\nYou could join our slack team in case you need any help or have any questions. [Join slack team](https://join.slack.com/t/firstcontributors/shared_invite/enQtNjkxNzQwNzA2MTMwLTVhMWJjNjg2ODRlNWZhNjIzYjgwNDIyZWYwZjhjYTQ4OTBjMWM0MmFhZDUxNzBiYzczMGNiYzcxNjkzZDZlMDM).\n\nNow let's get you started with contributing to other projects. We've compiled a list of projects with easy issues you can get started on. Check out [the list of projects in the web app](https://firstcontributions.github.io/#project-list).\n\n### [Additional material](additional-material/git_workflow_scenarios/additional-material.md)\n\n\n## Tutorials Using Other Tools\n\n| <a href=\"github-desktop-tutorial.md\"><img alt=\"GitHub Desktop\" src=\"https://desktop.github.com/images/desktop-icon.svg\" width=\"100\"></a> | <a href=\"github-windows-vs2017-tutorial.md\"><img alt=\"Visual Studio 2017\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/cd/Visual_Studio_2017_Logo.svg\" width=\"100\"></a> | <a href=\"gitkraken-tutorial.md\"><img alt=\"GitKraken\" src=\"./assets/gk-icon.png\" width=\"100\"></a> | <a href=\"github-windows-vs-code-tutorial.md\"><img alt=\"VS Code\" src=\"https://upload.wikimedia.org/wikipedia/commons/2/2d/Visual_Studio_Code_1.18_icon.svg\" width=100></a> | <a href=\"sourcetree-macos-tutorial.md\"><img alt=\"Sourcetree App\" src=\"https://wac-cdn.atlassian.com/dam/jcr:81b15cde-be2e-4f4a-8af7-9436f4a1b431/Sourcetree-icon-blue.svg\" width=100></a> | <a href=\"github-windows-intellij-tutorial.md\"><img alt=\"IntelliJ IDEA\" src=\"https://upload.wikimedia.org/wikipedia/commons/d/d5/IntelliJ_IDEA_Logo.svg\" width=100></a> |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| [GitHub Desktop](github-desktop-tutorial.md)                 | [Visual Studio 2017](github-windows-vs2017-tutorial.md)      | [GitKraken](gitkraken-tutorial.md)                           | [Visual Studio Code](github-windows-vs-code-tutorial.md)     | [Atlassian Sourcetree](sourcetree-macos-tutorial.md)         | [IntelliJ IDEA](github-windows-intellij-tutorial.md)         |\n"
 },
 {
  "repo": "bitcoin/bitcoin",
  "language": "C++",
  "readme_contents": "Bitcoin Core integration/staging tree\n=====================================\n\nhttps://bitcoincore.org\n\nWhat is Bitcoin?\n----------------\n\nBitcoin is an experimental digital currency that enables instant payments to\nanyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\nwith no central authority: managing transactions and issuing money are carried\nout collectively by the network. Bitcoin Core is the name of open source\nsoftware which enables the use of this currency.\n\nFor more information, as well as an immediately usable, binary version of\nthe Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n\nLicense\n-------\n\nBitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\ninformation or see https://opensource.org/licenses/MIT.\n\nDevelopment Process\n-------------------\n\nThe `master` branch is regularly built (see doc/build-*.md for instructions) and tested, but is not guaranteed to be\ncompletely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\nregularly to indicate new official, stable release versions of Bitcoin Core.\n\nThe contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md)\nand useful hints for developers can be found in [doc/developer-notes.md](doc/developer-notes.md).\n\nTesting\n-------\n\nTesting and code review is the bottleneck for development; we get more pull\nrequests than we can review and test on short notice. Please be patient and help out by testing\nother people's pull requests, and remember this is a security-critical project where any mistake might cost people\nlots of money.\n\n### Automated Testing\n\nDevelopers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\nsubmit new unit tests for old code. Unit tests can be compiled and run\n(assuming they weren't disabled in configure) with: `make check`. Further details on running\nand extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n\nThere are also [regression and integration tests](/test), written\nin Python, that are run automatically on the build server.\nThese tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n\nThe Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\n\n### Manual Quality Assurance (QA) Testing\n\nChanges should be tested by somebody other than the developer who wrote the\ncode. This is especially important for large or high-risk changes. It is useful\nto add a test plan to the pull request description if testing the changes is\nnot straightforward.\n\nTranslations\n------------\n\nChanges to translations as well as new translations can be submitted to\n[Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).\n\nTranslations are periodically pulled from Transifex and merged into the git repository. See the\n[translation process](doc/translation_process.md) for details on how this works.\n\n**Important**: We do not accept translation changes as GitHub pull requests because the next\npull from Transifex would automatically overwrite them again.\n\nTranslators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n"
 },
 {
  "repo": "spring-projects/spring-framework",
  "language": "Java",
  "readme_contents": "# <img src=\"src/docs/spring-framework.png\" width=\"80\" height=\"80\"> Spring Framework [![Build Status](https://ci.spring.io/api/v1/teams/spring-framework/pipelines/spring-framework-5.3.x/jobs/build/badge)](https://ci.spring.io/teams/spring-framework/pipelines/spring-framework-5.3.x?groups=Build\")\n\nThis is the home of the Spring Framework: the foundation for all [Spring projects](https://spring.io/projects). Collectively the Spring Framework and the family of Spring projects are often referred to simply as \"Spring\". \n\nSpring provides everything required beyond the Java programming language for creating enterprise applications for a wide range of scenarios and architectures. Please read the [Overview](https://docs.spring.io/spring/docs/current/spring-framework-reference/overview.html#spring-introduction) section as reference for a more complete introduction.\n\n## Code of Conduct\n\nThis project is governed by the [Spring Code of Conduct](CODE_OF_CONDUCT.adoc). By participating, you are expected to uphold this code of conduct. Please report unacceptable behavior to spring-code-of-conduct@pivotal.io.\n\n## Access to Binaries\n\nFor access to artifacts or a distribution zip, see the [Spring Framework Artifacts](https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Artifacts) wiki page.\n\n## Documentation\n\nThe Spring Framework maintains reference documentation ([published](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/) and [source](src/docs/asciidoc)), Github [wiki pages](https://github.com/spring-projects/spring-framework/wiki), and an\n[API reference](https://docs.spring.io/spring-framework/docs/current/javadoc-api/). There are also [guides and tutorials](https://spring.io/guides) across Spring projects.\n\n## Micro-Benchmarks\n\nSee the [Micro-Benchmarks](https://github.com/spring-projects/spring-framework/wiki/Micro-Benchmarks) Wiki page.\n\n## Build from Source\n\nSee the [Build from Source](https://github.com/spring-projects/spring-framework/wiki/Build-from-Source) Wiki page and the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n\n## Stay in Touch\n\nFollow [@SpringCentral](https://twitter.com/springcentral), [@SpringFramework](https://twitter.com/springframework), and its [team members](https://twitter.com/springframework/lists/team/members) on Twitter. In-depth articles can be found at [The Spring Blog](https://spring.io/blog/), and releases are announced via our [news feed](https://spring.io/blog/category/news).\n\n## License\n\nThe Spring Framework is released under version 2.0 of the [Apache License](https://www.apache.org/licenses/LICENSE-2.0).\n"
 },
 {
  "repo": "vuejs/vue",
  "language": "JavaScript",
  "readme_contents": "<p align=\"center\"><a href=\"https://vuejs.org\" target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"100\" src=\"https://vuejs.org/images/logo.png\" alt=\"Vue logo\"></a></p>\n\n<p align=\"center\">\n  <a href=\"https://circleci.com/gh/vuejs/vue/tree/dev\"><img src=\"https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg?sanitize=true\" alt=\"Build Status\"></a>\n  <a href=\"https://codecov.io/github/vuejs/vue?branch=dev\"><img src=\"https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg?sanitize=true\" alt=\"Coverage Status\"></a>\n  <a href=\"https://npmcharts.com/compare/vue?minimal=true\"><img src=\"https://img.shields.io/npm/dm/vue.svg?sanitize=true\" alt=\"Downloads\"></a>\n  <a href=\"https://www.npmjs.com/package/vue\"><img src=\"https://img.shields.io/npm/v/vue.svg?sanitize=true\" alt=\"Version\"></a>\n  <a href=\"https://www.npmjs.com/package/vue\"><img src=\"https://img.shields.io/npm/l/vue.svg?sanitize=true\" alt=\"License\"></a>\n  <a href=\"https://chat.vuejs.org/\"><img src=\"https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true\" alt=\"Chat\"></a>\n  <br>\n  <a href=\"https://app.saucelabs.com/builds/50f8372d79f743a3b25fb6ca4851ca4c\"><img src=\"https://app.saucelabs.com/buildstatus/vuejs\" alt=\"Build Status\"></a>\n</p>\n\n<h2 align=\"center\">Supporting Vue.js</h2>\n\nVue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome [backers](https://github.com/vuejs/vue/blob/dev/BACKERS.md). If you'd like to join them, please consider:\n\n- [Become a backer or sponsor on Patreon](https://www.patreon.com/evanyou).\n- [Become a backer or sponsor on Open Collective](https://opencollective.com/vuejs).\n- [One-time donation via PayPal or crypto-currencies.](https://vuejs.org/support-vuejs/#One-time-Donations)\n\n#### What's the difference between Patreon and OpenCollective?\n\nFunds donated via Patreon go directly to support Evan You's full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.\n\n<h3 align=\"center\">Special Sponsors</h3>\n<!--special start-->\n\n<p align=\"center\">\n  <a href=\"https://autocode.com\" target=\"_blank\">\n    <img width=\"260px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/autocode.svg?sanitize=true\">\n  </a>\n</p>\n  \n<!--special end-->\n\n<h3 align=\"center\">Platinum Sponsors</h3>\n\n<!--platinum start-->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://vueschool.io/?utm_source=Vuejs.org&utm_medium=Banner&utm_campaign=Sponsored%20Banner&utm_content=V1\" target=\"_blank\">\n          <img width=\"222px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vueschool.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://vehikl.com/\" target=\"_blank\">\n          <img width=\"222px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vehikl.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://retool.com/?utm_source=sponsor&utm_campaign=vue\" target=\"_blank\">\n          <img width=\"222px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/retool.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://passionatepeople.io/\" target=\"_blank\">\n          <img width=\"222px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/passionate_people.png\">\n        </a>\n      </td>\n    </tr><tr></tr>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.storyblok.com\" target=\"_blank\">\n          <img width=\"222px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/storyblok.png\">\n        </a>\n      </td>\n    </tr><tr></tr>\n  </tbody>\n</table>\n<!--platinum end-->\n\n<!--special-china start-->\n<h3 align=\"center\">Platinum Sponsors (China)</h3>\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"http://www.dcloud.io/?hmsr=vuejsorg&hmpl=&hmcu=&hmkw=&hmci=\" target=\"_blank\">\n          <img width=\"177px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/dcloud.gif\">\n        </a>\n      </td>\n    </tr><tr></tr>\n  </tbody>\n</table>\n<!--special-china end-->\n\n<h3 align=\"center\">Gold Sponsors</h3>\n\n<!--gold start-->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.vuemastery.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vuemastery.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://laravel.com\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/laravel.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://htmlburger.com\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/html_burger.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.frontenddeveloperlove.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/frontendlove.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://onsen.io/vue/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/onsen_ui.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://neds.com.au/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/neds.png\">\n        </a>\n      </td>\n    </tr><tr></tr>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://icons8.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/icons_8.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://vuejobs.com/?ref=vuejs\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vuejobs.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://tidelift.com/subscription/npm/vue\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/tidelift.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.firesticktricks.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/firestick_tricks.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://intygrate.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/intygrate.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"http://en.shopware.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/shopware_ag.png\">\n        </a>\n      </td>\n    </tr><tr></tr>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.vpnranks.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vpnranks.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.bestvpn.co/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/bestvpn_co.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.y8.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/y8.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://js.devexpress.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/devexpress.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://fastcoding.jp/javascript/ \" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/fastcoding_inc.svg?sanitize=true\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://usave.co.uk/utilities/broadband\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/usave.png\">\n        </a>\n      </td>\n    </tr><tr></tr>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"http://www.pullrequest.com\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/pullrequest.svg?sanitize=true\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://unicorn.io/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/unicorn_io.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.vuescreencasts.com/\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/happy_programmer_llc.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.primefaces.org/primevue\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/primevue.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://cooltechzone.com/netflix-vpn\" target=\"_blank\">\n          <img width=\"148px\" src=\"https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/netflix_vpn.png\">\n        </a>\n      </td>\n    </tr><tr></tr>\n  </tbody>\n</table>\n<!--gold end-->\n\n<h3 align=\"center\">Sponsors via <a href=\"https://opencollective.com/vuejs\">Open Collective</a></h3>\n\n<h4 align=\"center\">Platinum</h4>\n\n<a href=\"https://opencollective.com/vuejs/tiers/platinum-sponsors/0/website\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/vuejs/tiers/platinum-sponsors/0/avatar.svg?sanitize=true\"></a>\n<a href=\"https://opencollective.com/vuejs/tiers/platinum-sponsors/1/website\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/vuejs/tiers/platinum-sponsors/1/avatar.svg?sanitize=true\"></a>\n\n<h4 align=\"center\">Gold</h4>\n\n<a href=\"https://opencollective.com/vuejs/tiers/gold-sponsors/0/website\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/vuejs/tiers/gold-sponsors/0/avatar.svg?sanitize=true\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/vuejs/tiers/gold-sponsors/1/website\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/vuejs/tiers/gold-sponsors/1/avatar.svg?sanitize=true\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/vuejs/tiers/gold-sponsors/2/website\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/vuejs/tiers/gold-sponsors/2/avatar.svg?sanitize=true\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/vuejs/tiers/gold-sponsors/3/website\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/vuejs/tiers/gold-sponsors/3/avatar.svg?sanitize=true\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/vuejs/tiers/gold-sponsors/4/website\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/vuejs/tiers/gold-sponsors/4/avatar.svg?sanitize=true\" height=\"60px\"></a>\n\n---\n\n## Introduction\n\nVue (pronounced `/vju\u02d0/`, like view) is a **progressive framework** for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.\n\n#### Browser Compatibility\n\nVue.js supports all browsers that are [ES5-compliant](http://kangax.github.io/compat-table/es5/) (IE8 and below are not supported).\n\n## Ecosystem\n\n| Project | Status | Description |\n|---------|--------|-------------|\n| [vue-router]          | [![vue-router-status]][vue-router-package] | Single-page application routing |\n| [vuex]                | [![vuex-status]][vuex-package] | Large-scale state management |\n| [vue-cli]             | [![vue-cli-status]][vue-cli-package] | Project scaffolding |\n| [vue-loader]          | [![vue-loader-status]][vue-loader-package] | Single File Component (`*.vue` file) loader for webpack |\n| [vue-server-renderer] | [![vue-server-renderer-status]][vue-server-renderer-package] | Server-side rendering support |\n| [vue-class-component] | [![vue-class-component-status]][vue-class-component-package] | TypeScript decorator for a class-based API |\n| [vue-rx]              | [![vue-rx-status]][vue-rx-package] | RxJS integration |\n| [vue-devtools]        | [![vue-devtools-status]][vue-devtools-package] | Browser DevTools extension |\n\n[vue-router]: https://github.com/vuejs/vue-router\n[vuex]: https://github.com/vuejs/vuex\n[vue-cli]: https://github.com/vuejs/vue-cli\n[vue-loader]: https://github.com/vuejs/vue-loader\n[vue-server-renderer]: https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer\n[vue-class-component]: https://github.com/vuejs/vue-class-component\n[vue-rx]: https://github.com/vuejs/vue-rx\n[vue-devtools]:  https://github.com/vuejs/vue-devtools\n\n[vue-router-status]: https://img.shields.io/npm/v/vue-router.svg\n[vuex-status]: https://img.shields.io/npm/v/vuex.svg\n[vue-cli-status]: https://img.shields.io/npm/v/@vue/cli.svg\n[vue-loader-status]: https://img.shields.io/npm/v/vue-loader.svg\n[vue-server-renderer-status]: https://img.shields.io/npm/v/vue-server-renderer.svg\n[vue-class-component-status]: https://img.shields.io/npm/v/vue-class-component.svg\n[vue-rx-status]: https://img.shields.io/npm/v/vue-rx.svg\n[vue-devtools-status]: https://img.shields.io/chrome-web-store/v/nhdogjmejiglipccpnnnanhbledajbpd.svg\n\n[vue-router-package]: https://npmjs.com/package/vue-router\n[vuex-package]: https://npmjs.com/package/vuex\n[vue-cli-package]: https://npmjs.com/package/@vue/cli\n[vue-loader-package]: https://npmjs.com/package/vue-loader\n[vue-server-renderer-package]: https://npmjs.com/package/vue-server-renderer\n[vue-class-component-package]: https://npmjs.com/package/vue-class-component\n[vue-rx-package]: https://npmjs.com/package/vue-rx\n[vue-devtools-package]: https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd\n\n## Documentation\n\nTo check out [live examples](https://vuejs.org/v2/examples/) and docs, visit [vuejs.org](https://vuejs.org).\n\n## Questions\n\nFor questions and support please use [the official forum](http://forum.vuejs.org) or [community chat](https://chat.vuejs.org/). The issue list of this repo is **exclusively** for bug reports and feature requests.\n\n## Issues\n\nPlease make sure to read the [Issue Reporting Checklist](https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines) before opening an issue. Issues not conforming to the guidelines may be closed immediately.\n\n## Changelog\n\nDetailed changes for each release are documented in the [release notes](https://github.com/vuejs/vue/releases).\n\n## Stay In Touch\n\n- [Twitter](https://twitter.com/vuejs)\n- [Blog](https://medium.com/the-vue-point)\n- [Job Board](https://vuejobs.com/?ref=vuejs)\n\n## Contribution\n\nPlease make sure to read the [Contributing Guide](https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md) before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to [this curated list](https://github.com/vuejs/awesome-vue)!\n\nThank you to all the people who already contributed to Vue!\n\n<a href=\"https://github.com/vuejs/vue/graphs/contributors\"><img src=\"https://opencollective.com/vuejs/contributors.svg?width=890\" /></a>\n\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2013-present, Yuxi (Evan) You\n"
 },
 {
  "repo": "getify/You-Dont-Know-JS",
  "language": null,
  "readme_contents": "# You Don't Know JS Yet (book series) - 2nd Edition\n\nThis is a series of books diving deep into the core mechanisms of the JavaScript language. This is the **second edition** of the book series:\n\n<a href=\"https://leanpub.com/ydkjsy-get-started\"><img src=\"get-started/images/cover.png\" width=\"75\"></a>&nbsp;&nbsp;\n<a href=\"https://leanpub.com/ydkjsy-scope-closures\"><img src=\"scope-closures/images/cover.png\" width=\"75\"></a>&nbsp;&nbsp;...\n\n**To read more about the motivations and perspective behind this book series, check out the [Preface](preface.md).**\n\nIf you're looking for the previous **first edition** books, [they can be found here](https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/README.md).\n\n## Premier Sponsor\n\nThis edition of the **YDKJS** book series is exclusively sponsored by [Frontend Masters](https://frontendmasters.com).\n\nFrontend Masters is the gold standard for top-of-the-line expert training material in frontend-oriented software development. With over 150 courses on all things frontend, this should be your first and only stop for quality video training on HTML, CSS, JS, and related technologies.\n\n----\n\nI teach [all my workshops](https://frontendmasters.com/kyle-simpson) exclusively through Frontend Masters. If you like this book content, please check out my video training courses.\n\nI want to extend a warm and deep thanks to Marc Grabanski and the entire Frontend Masters team, not only for their excellent work with the video training platform, but for their unwavering support of me and of the \"You Don't Know JS\" books!\n\n----\n\n## Titles\n\nI recommend reading the **second edition** books in this order:\n\n* [Get Started](get-started/README.md) | [Buy on Leanpub](https://leanpub.com/ydkjsy-get-started) | [Buy on Amazon](https://www.amazon.com/dp/B084BNMN7T)\n* [Scope & Closures](scope-closures/README.md) | [Buy on Leanpub](https://leanpub.com/ydkjsy-scope-closures) | [Buy on Amazon](https://www.amazon.com/dp/B08634PZ3N)\n* Objects & Classes (not yet started)\n* Types & Grammar (not yet started)\n* Sync & Async (not yet started)\n* ES.Next & Beyond (not yet started)\n\nIf you're looking for the previous **first edition** books, [they can be found here](https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/README.md).\n\n## Publishing\n\nAs always, you'll be able to read these books online here entirely for free.\n\nThis edition of the books is being self-published through [GetiPub](https://geti.pub) publishing. The published books will be made available for sale through normal book retail sources.\n\nIf you'd like to contribute financially towards the effort (or any of my other OSS efforts) aside from purchasing the published books, please consider these options:\n\n* [Github Sponsorship](https://github.com/users/getify/sponsorship)\n* [Patreon](https://www.patreon.com/getify)\n* [Paypal](https://www.paypal.me/getify)\n\n## Contributions\n\nPlease feel free to contribute to the quality of this content by submitting PRs for improvements to code snippets, explanations, etc. While typo fixes are welcomed, they will likely be caught through normal editing/publishing processes, **so please don't worry about them right now.**\n\nAny contributions you make to this effort **are of course greatly appreciated**.\n\nBut **PLEASE** read the [Contributions Guidelines](CONTRIBUTING.md) carefully before submitting a PR.\n\n## License & Copyright\n\nThe materials herein are all &copy; 2019-2020 Kyle Simpson.\n\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">Creative Commons Attribution-NonCommercial-NoDerivs 4.0 Unported License</a>.\n"
 },
 {
  "repo": "freeCodeCamp/freeCodeCamp",
  "language": "JavaScript",
  "readme_contents": "![freeCodeCamp.org Social Banner](https://s3.amazonaws.com/freecodecamp/wide-social-banner.png)\n\n[![Pull Requests Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](http://makeapullrequest.com)\n[![first-timers-only Friendly](https://img.shields.io/badge/first--timers--only-friendly-blue.svg)](http://www.firsttimersonly.com/)\n[![Open Source Helpers](https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg)](https://www.codetriage.com/freecodecamp/freecodecamp)\n[![Setup Automated](https://img.shields.io/badge/setup-automated-blue?logo=gitpod)](https://gitpod.io/from-referrer/)\n\n## freeCodeCamp.org's open-source codebase and curriculum\n\n[freeCodeCamp.org](https://www.freecodecamp.org) is a friendly community where you can learn to code for free. It is run by a [donor-supported 501(c)(3) nonprofit](https://donate.freecodecamp.org) to help millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.\n\nOur full-stack web development curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.\n\n## Table of Contents\n\n- [Certifications](#certifications)\n- [The Learning Platform](#the-learning-platform)\n- [Reporting Bugs and Issues](#reporting-bugs-and-issues)\n- [Reporting Security Issues and Responsible Disclosure](#reporting-security-issues-and-responsible-disclosure)\n- [Contributing](#contributing)\n- [Platform, Build and Deployment Status](#platform-build-and-deployment-status)\n- [License](#license)\n\n### Certifications\n\nfreeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.\n\nEach of these 30 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.\n\nYou can pull in these test suites through [freeCodeCamp's CDN](https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js). This means you can build these projects on websites like CodePen and Glitch - or even on your local computer's development environment.\n\nOnce you\u2019ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or r\u00e9sum\u00e9. And when your prospective employers or freelance clients click that link, they\u2019ll see a verified certification specific to you.\n\nThe one exception to this is if we discover violations of our [Academic Honesty Policy](https://www.freecodecamp.org/academic-honesty). When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.\n\nHere are our six core certifications:\n\n#### 1. Responsive Web Design Certification\n\n- [Basic HTML and HTML5](https://learn.freecodecamp.org/responsive-web-design/basic-html-and-html5)\n- [Basic CSS](https://learn.freecodecamp.org/responsive-web-design/basic-css)\n- [Applied Visual Design](https://learn.freecodecamp.org/responsive-web-design/applied-visual-design)\n- [Applied Accessibility](https://learn.freecodecamp.org/responsive-web-design/applied-accessibility)\n- [Responsive Web Design Principles](https://learn.freecodecamp.org/responsive-web-design/responsive-web-design-principles)\n- [CSS Flexbox](https://learn.freecodecamp.org/responsive-web-design/css-flexbox)\n- [CSS Grid](https://learn.freecodecamp.org/responsive-web-design/css-grid)\n  <br />\n  <br />\n  **Projects**: Tribute Page, Survey Form, Product Landing Page, Technical Documentation Page, Personal Portfolio Webpage\n\n#### 2. JavaScript Algorithms and Data Structures Certification\n\n- [Basic JavaScript](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/basic-javascript)\n- [ES6](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/es6)\n- [Regular Expressions](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/regular-expressions)\n- [Debugging](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/debugging)\n- [Basic Data Structures](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/basic-data-structures)\n- [Algorithm Scripting](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/basic-algorithm-scripting)\n- [Object-Oriented Programming](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/object-oriented-programming)\n- [Functional Programming](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/functional-programming)\n- [Intermediate Algorithm Scripting](https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting)\n  <br />\n  <br />\n  **Projects**: Palindrome Checker, Roman Numeral Converter, Caesar's Cipher, Telephone Number Validator, Cash Register\n\n#### 3. Front End Libraries Certification\n\n- [Bootstrap](https://learn.freecodecamp.org/front-end-libraries/bootstrap)\n- [jQuery](https://learn.freecodecamp.org/front-end-libraries/jquery)\n- [Sass](https://learn.freecodecamp.org/front-end-libraries/sass)\n- [React](https://learn.freecodecamp.org/front-end-libraries/react)\n- [Redux](https://learn.freecodecamp.org/front-end-libraries/redux)\n- [React and Redux](https://learn.freecodecamp.org/front-end-libraries/react-and-redux)\n  <br />\n  <br />\n  **Projects**: Random Quote Machine, Markdown Previewer, Drum Machine, JavaScript Calculator, Pomodoro Clock\n\n#### 4. Data Visualization Certification\n\n- [Data Visualization with D3](https://learn.freecodecamp.org/data-visualization/data-visualization-with-d3)\n- [JSON APIs and Ajax](https://learn.freecodecamp.org/data-visualization/json-apis-and-ajax)\n  <br />\n  <br />\n  **Projects**: Bar Chart, Scatterplot Graph, Heat Map, Choropleth Map, Treemap Diagram\n\n#### 5. APIs and Microservices Certification\n\n- [Managing Packages with Npm](https://learn.freecodecamp.org/apis-and-microservices/managing-packages-with-npm)\n- [Basic Node and Express](https://learn.freecodecamp.org/apis-and-microservices/basic-node-and-express)\n- [MongoDB and Mongoose](https://learn.freecodecamp.org/apis-and-microservices/mongodb-and-mongoose)\n  <br />\n  <br />\n  **Projects**: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice\n\n#### 6. Information Security and Quality Assurance Certification\n\n- [Information Security with HelmetJS](https://learn.freecodecamp.org/information-security-and-quality-assurance/information-security-with-helmetjs)\n- [Quality Assurance and Testing with Chai](https://learn.freecodecamp.org/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai)\n- [Advanced Node and Express](https://learn.freecodecamp.org/information-security-and-quality-assurance/advanced-node-and-express)\n  <br />\n  <br />\n  **Projects**: Metric-Imperial Converter, Issue Tracker, Personal Library, Stock Price Checker, Anonymous Message Board\n\n#### Full Stack Development Certification\n\nOnce you have earned all 6 of these certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This final distinction signifies that you\u2019ve completed around 1,800 hours of coding with a wide range of web development tools.\n\n#### Legacy Certifications\n\nWe also have 4 legacy certifications dating back to our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.\n\n- Legacy Front End Development Certification\n- Legacy Data Visualization Certification\n- Legacy Back End Development Certification\n- Legacy Information Security and Quality Assurance Certification\n\n### The Learning Platform\n\nThis code is running live at [freeCodeCamp.org](https://www.freecodecamp.org).\n\nOur community also has:\n\n- A [forum](https://www.freecodecamp.org/forum) where you can usually get programming help or project feedback within hours.\n- A [YouTube channel](https://youtube.com/freecodecamp) with free courses on Python, SQL, Android, and a wide variety of other technologies.\n- A [podcast](https://podcast.freecodecamp.org/) with technology insights and inspiring stories from developers.\n- A [Developer News](https://www.freecodecamp.org/news) publication, a free, open source, no-ads place to cross-post your blog articles.\n\n> #### [Join our community here](https://www.freecodecamp.org/signin).\n\n### Reporting Bugs and Issues\n\nIf you think you've found a bug, first read the [how to report a bug](https://www.freecodecamp.org/forum/t/how-to-report-a-bug/19543) article and follow its instructions.\n\nIf you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.\n\n### Reporting Security Issues and Responsible Disclosure\n\nIf you think you have found a vulnerability, _please report responsibly_. Don't create GitHub issues for security issues. Instead, please send an email to `security@freecodecamp.org` and we'll look into it immediately.\n\nWe appreciate any responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users. While we do not offer any bounties or swags at the moment, we'll be happy to list your name in our [Hall of Fame](HoF.md) for security researchers.\n\n### Contributing\n\nThe freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome any and all contributions to the community and are excited to welcome you aboard.\n\n> #### [Please follow these steps to contribute](https://contribute.freecodecamp.org).\n\n### Platform, Build and Deployment Status\n\nThe general platform status for all our applications is available at [`status.freecodecamp.org`](https://status.freecodecamp.org). The build and deployment status for the code is available in [our DevOps Guide](/docs/devops.md).\n\n### License\n\nCopyright \u00a9 2020 freeCodeCamp.org\n\nThe content of this repository is bound by the following licenses:\n\n- The computer software is licensed under the [BSD-3-Clause](LICENSE.md) license.\n- The learning resources in the [`/curriculum`](/curriculum) directory including their subdirectories thereon are licensed under the [CC-BY-SA-4.0](/curriculum/LICENSE.md) license.\n"
 },
 {
  "repo": "kubernetes/kubernetes",
  "language": "Go",
  "readme_contents": "# Kubernetes\n\n[![GoDoc Widget]][GoDoc] [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/569/badge)](https://bestpractices.coreinfrastructure.org/projects/569)\n\n<img src=\"https://github.com/kubernetes/kubernetes/raw/master/logo/logo.png\" width=\"100\">\n\n----\n\nKubernetes is an open source system for managing [containerized applications]\nacross multiple hosts. It provides basic mechanisms for deployment, maintenance,\nand scaling of applications.\n\nKubernetes builds upon a decade and a half of experience at Google running\nproduction workloads at scale using a system called [Borg],\ncombined with best-of-breed ideas and practices from the community.\n\nKubernetes is hosted by the Cloud Native Computing Foundation ([CNCF]).\nIf your company wants to help shape the evolution of\ntechnologies that are container-packaged, dynamically scheduled,\nand microservices-oriented, consider joining the CNCF.\nFor details about who's involved and how Kubernetes plays a role,\nread the CNCF [announcement].\n\n----\n\n## To start using Kubernetes\n\nSee our documentation on [kubernetes.io].\n\nTry our [interactive tutorial].\n\nTake a free course on [Scalable Microservices with Kubernetes].\n\nTo use Kubernetes code as a library in other applications, see the [list of published components](https://git.k8s.io/kubernetes/staging/README.md).\nUse of the `k8s.io/kubernetes` module or `k8s.io/kubernetes/...` packages as libraries is not supported.\n\n## To start developing Kubernetes\n\nThe [community repository] hosts all information about\nbuilding Kubernetes from source, how to contribute code\nand documentation, who to contact about what, etc.\n\nIf you want to build Kubernetes right away there are two options:\n\n##### You have a working [Go environment].\n\n```\nmkdir -p $GOPATH/src/k8s.io\ncd $GOPATH/src/k8s.io\ngit clone https://github.com/kubernetes/kubernetes\ncd kubernetes\nmake\n```\n\n##### You have a working [Docker environment].\n\n```\ngit clone https://github.com/kubernetes/kubernetes\ncd kubernetes\nmake quick-release\n```\n\nFor the full story, head over to the [developer's documentation].\n\n## Support\n\nIf you need support, start with the [troubleshooting guide],\nand work your way through the process that we've outlined.\n\nThat said, if you have questions, reach out to us\n[one way or another][communication].\n\n[announcement]: https://cncf.io/news/announcement/2015/07/new-cloud-native-computing-foundation-drive-alignment-among-container\n[Borg]: https://research.google.com/pubs/pub43438.html\n[CNCF]: https://www.cncf.io/about\n[communication]: https://git.k8s.io/community/communication\n[community repository]: https://git.k8s.io/community\n[containerized applications]: https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/\n[developer's documentation]: https://git.k8s.io/community/contributors/devel#readme\n[Docker environment]: https://docs.docker.com/engine\n[Go environment]: https://golang.org/doc/install\n[GoDoc]: https://godoc.org/k8s.io/kubernetes\n[GoDoc Widget]: https://godoc.org/k8s.io/kubernetes?status.svg\n[interactive tutorial]: https://kubernetes.io/docs/tutorials/kubernetes-basics\n[kubernetes.io]: https://kubernetes.io\n[Scalable Microservices with Kubernetes]: https://www.udacity.com/course/scalable-microservices-with-kubernetes--ud615\n[troubleshooting guide]: https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/\n\n[![Analytics](https://kubernetes-site.appspot.com/UA-36037335-10/GitHub/README.md?pixel)]()\n"
 },
 {
  "repo": "udacity/frontend-nanodegree-resume",
  "language": "JavaScript",
  "readme_contents": "# Project Details\n## How do I complete this project?\nReview the Online Resume [Project Rubric](https://review.udacity.com/?_ga=1.189245867.12280332.1465333852#!/projects/2962818615/rubric).\n\n1. In this project you will store your resume data in four javaScript objects according to the schema given below. As is often the case when leveraging an API, the objects must follow the schema exactly. All properties must be present and have real or fake values. The names must match those in the schema (note that object and property names are case-sensitive). All property values should be of the data-type given for the property in the schema. For example if the data-type is given as an array, it is not acceptable to use a string as a value for that property.\n2. Once you've created your javaScript objects, you will write the code needed to display all of the resume data contained within these objects in your resume.\n3. All of the HTML code needed to build the resume is stored in **js/helper.js** variables. The variable names indicate their function. You will replace substrings in these variable string values such as **%data%** and **#** with the data in your javaScript objects, and append or prepend the formatted result to your resume in the appropriate location.\n4. If you need a refresher on JavaScript syntax, go to the [Javascript Basics](https://classroom.udacity.com/nanodegrees/nd001/parts/0011345406/modules/296281861575460/lessons/1946788554/concepts/25505685350923) course; if you would like to understand how this project is manipulating and traversing the DOM, check out [Intro to jQuery](https://classroom.udacity.com/nanodegrees/nd001/parts/0011345406/modules/296281861575461/lessons/3314378535/concepts/33166386820923).\n5. Go through the videos and assignments in this course to learn the JavaScript necessary to build your resume.\n6. Fork the project repo from [Github](https://github.com/udacity/frontend-nanodegree-resume) and begin building you resume.\n7. If you are prompted to do so, you may want to get a [Google Maps API key](https://developers.google.com/maps/documentation/javascript/get-api-key), and include it as the value of the `key` parameter when loading the Google Maps API in **index.html**:\n```<script  src=\"http://maps.googleapis.com/maps/api/js?libraries=places&key=[YOUR_API_KEY]\"></script> ``` You may have some initial concerns with placing your API key directly within your JavaScript source files, but rest assured this is perfectly safe. All client-side code must be downloaded by the client; therefore, the client must download this API key - it is not intended to be secret. Google has security measures in place to ensure your key is not abused. **It is not technically possible to make anything secret on the client-side.**\n8. Check your work against the [Project Rubric](https://review.udacity.com/?_ga=1.189245867.12280332.1465333852#!/projects/2962818615/rubric).\n9. When you are satisfied with your project, submit it according to the Submission Instructions below.\n\n### By the end:\nYour resume will look something like this\n![](http://i.imgur.com/pWU1Xbl.png)\n\nAnd your repository will include the following files:\n\n* **index.html**: The main HTML document. Contains links to all of the CSS and JS resources needed to render the resume, including resumeBuilder.js.\n* **js/helper.js**: Contains helper code needed to format the resume and build the map. It also has a few function shells for additional functionality. More on helper.js further down.\n* **js/resumeBuilder.js**: This file is empty. You should write your code here.\n* **js/jQuery.js**: The jQuery library.\n* **css/style.css**: Contains all of the CSS needed to style the page.\n* **README.md**:\nThe GitHub readme file.\n* and some images in the images directory.\n\n## Your starting point...\n### js/helper.js\nWithin helper.js, you\u2019ll find a large collection of strings containing snippets of HTML. Within many snippets, you\u2019ll find placeholder data in the form of `%data%` or `%contact%`.\n\nEach string has a title that describes how it should be used. For instance, `HTMLworkStart` should be the first `<div>` in the Work section of the resume. `HTMLschoolLocation` contains a `%data%` placeholder which should be replaced with the location of one of your schools.\n\n### Your process:\nThe resume has four distinct sections: work, education, projects and a header with biographical information. You\u2019ll need to:\n\n1. Build four JavaScript objects, each one representing a different resume section. The objects that you create (including property names and the data types of their values) need to follow the schema below exactly. All properties should be included and contain a value of the type specified unless the property is marked 'optional'. Property values may contain real or fake data. Property names are case-sensitive. Make sure your javaScript objects are formatted correctly using [jshint.com](http://jshint.com/).\n\n  * `bio` contains:\n\n            name : string\n            role : string\n            contacts : an object with\n                  mobile: string\n                  email: string\n                  github: string\n                  twitter: string (optional)\n                  location: string\n            welcomeMessage: string\n            skills: array of strings\n            biopic: string url\n            display: function taking no parameters\n\n  * `education` contains:\n\n            schools: array of objects with\n                 name: string\n                 location: string\n                 degree: string\n                 majors: array of strings\n                 dates: string (works with a hyphen between them)\n                 url: string (optional)\n            onlineCourses: array of objects with\n                 title: string\n                 school: string\n                 dates: string (works with a hyphen between them)\n                 url: string\n            display: function taking no parameters\n\n  * `work` contains\n\n            jobs: array of objects with\n                 employer: string\n                 title: string\n                 location: string\n                 dates: string (Can be 'in progress')\n                 description: string\n            display: function taking no parameters\n\n  * `projects` contains:\n\n            projects: array of objects with\n                  title: string\n                  dates: string (works with a hyphen between them)\n                  description: string\n                  images: array with string urls\n            display: function taking no parameters\n\n2. Iterate through each javaScript object and append its information to index.html in the correct section.\n  * First off, you\u2019ll be using jQuery\u2019s `selector.append()` and `selector.prepend()` functions to modify index.html. `selector.append()` makes an element appear at the end of a selected section. `selector.prepend()` makes an element appear at the beginning of a selected section.\n    * Pay close attention to the ids of the `<div>`s in index.html and the HTML snippets in helper.js. They\u2019ll be very useful as jQuery selectors for `selector.append()` and `selector.prepend()`\n  * You\u2019ll also be using the JavaScript method `string.replace(old, new)` to swap out all the placeholder text (e.g. `%data%`) for data from your resume JSON objects.\n  * Here\u2019s an example of some code that would add the location of one of your companies to the page:\n    * `var formattedLocation = HTMLworkLocation.replace(\"%data%\", work.jobs[job].location);`\n    * `$(\".work-entry:last\").append(formattedLocation);`\n  * Use the mockup at the page of this document as a guide for the order in which you should append elements to the page.\n3. The resume includes an interactive map. Do the following to add it.\n  * In resumeBuilder.js, append the googleMap string to `<div id=\u201dmapDiv\u201d>`.\n  * In index.html, uncomment the Google script element: `<script type=\"text/javascript\" src=\"http://maps.googleapis.com/maps/api/js?libraries=places\"></script>`\n  * In helper.js, at the bottom of the file, uncomment code to initialize map and set fitBounds.\n4. All of your code for adding elements to the resume should be contained within functions.\n5. As described in the javaScript object schema, each 'display' function should be encapsulated within the javaScript object it displays in the resume. For instance, your 'display' function for appending 'work' experience data to the resume should be encapsulated within the 'work' javaScript object. The 'display' function can be encapsulated within the 'work' javaScript object definition in the same way other properties are defined there, or it can be encapsulated later in the file using dot notation. For example: `work.display =`\n6. It\u2019s possible to make additional information show up when you click on the pins in the map. Check out line 174 in helper.js and the Google Maps API to get started.\n"
 },
 {
  "repo": "mrdoob/three.js",
  "language": "JavaScript",
  "readme_contents": "three.js\n========\n\n[![NPM Package][npm]][npm-url]\n[![Build Size][build-size]][build-size-url]\n[![NPM Downloads][npm-downloads]][npmtrends-url]\n[![Dev Dependencies][dev-dependencies]][dev-dependencies-url]\n[![Language Grade][lgtm]][lgtm-url]\n\n#### JavaScript 3D library ####\n\nThe aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.\n\n[Examples](http://threejs.org/examples/) &mdash;\n[Documentation](http://threejs.org/docs/) &mdash;\n[Wiki](https://github.com/mrdoob/three.js/wiki) &mdash;\n[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &mdash;\n[Questions](http://stackoverflow.com/questions/tagged/three.js) &mdash;\n[Forum](https://discourse.threejs.org/) &mdash;\n[Slack](https://join.slack.com/t/threejs/shared_invite/enQtMzYxMzczODM2OTgxLTQ1YmY4YTQxOTFjNDAzYmQ4NjU2YzRhNzliY2RiNDEyYjU2MjhhODgyYWQ5Y2MyZTU3MWNkOGVmOGRhOTQzYTk) &mdash;\n[Discord](https://discordapp.com/invite/HF4UdyF)\n\n### Usage ###\n\nThis code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.\n\n```javascript\nimport * as THREE from 'js/three.module.js';\n\nvar camera, scene, renderer;\nvar geometry, material, mesh;\n\ninit();\nanimate();\n\nfunction init() {\n\n\tcamera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );\n\tcamera.position.z = 1;\n\n\tscene = new THREE.Scene();\n\n\tgeometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );\n\tmaterial = new THREE.MeshNormalMaterial();\n\n\tmesh = new THREE.Mesh( geometry, material );\n\tscene.add( mesh );\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tdocument.body.appendChild( renderer.domElement );\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tmesh.rotation.x += 0.01;\n\tmesh.rotation.y += 0.02;\n\n\trenderer.render( scene, camera );\n\n}\n```\n\nIf everything went well, you should see [this](https://jsfiddle.net/8kubjpL5/).\n\n### Cloning this repository ###\n\nCloning the repo with all its history results in a ~2GB download. If you don't need the whole history you can use the `depth` parameter to significantly reduce download size.\n\n```sh\ngit clone --depth=1 https://github.com/mrdoob/three.js.git\n```\n\n### Change log ###\n\n[Releases](https://github.com/mrdoob/three.js/releases)\n\n\n[npm]: https://img.shields.io/npm/v/three\n[npm-url]: https://www.npmjs.com/package/three\n[build-size]: https://badgen.net/bundlephobia/minzip/three\n[build-size-url]: https://bundlephobia.com/result?p=three\n[npm-downloads]: https://img.shields.io/npm/dw/three\n[npmtrends-url]: https://www.npmtrends.com/three\n[dev-dependencies]: https://img.shields.io/david/dev/mrdoob/three.js\n[dev-dependencies-url]: https://david-dm.org/mrdoob/three.js#info=devDependencies\n[lgtm]: https://img.shields.io/lgtm/alerts/github/mrdoob/three.js\n[lgtm-url]: https://lgtm.com/projects/g/mrdoob/three.js/\n"
 },
 {
  "repo": "TheAlgorithms/Python",
  "language": "Python",
  "readme_contents": "# The Algorithms - Python\n[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/TheAlgorithms/Python) \n[![Gitter chat](https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&logo=gitter&style=flat-square)](https://gitter.im/TheAlgorithms)&nbsp;\n[![Build Status](https://img.shields.io/travis/TheAlgorithms/Python.svg?label=Travis%20CI&logo=travis&style=flat-square)](https://travis-ci.com/TheAlgorithms/Python)&nbsp;\n[![LGTM](https://img.shields.io/lgtm/alerts/github/TheAlgorithms/Python.svg?label=LGTM&logo=LGTM&style=flat-square)](https://lgtm.com/projects/g/TheAlgorithms/Python/alerts)&nbsp;\n[![contributions welcome](https://img.shields.io/static/v1.svg?label=Contributions&message=Welcome&color=0059b3&style=flat-square)](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md)&nbsp;\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg?logo=paypal&style=flat-square)](https://www.paypal.me/TheAlgorithms/100)&nbsp;\n![](https://img.shields.io/github/repo-size/TheAlgorithms/Python.svg?label=Repo%20size&style=flat-square)&nbsp;\n<!--[![Tested on Python 3.7](https://img.shields.io/badge/Tested%20-Python%203.7-blue.svg?logo=python&style=flat-square)]( https://www.python.org/downloads) &nbsp;-->\n\n### All algorithms implemented in Python (for education)\n\nThese implementations are for learning purposes. They may be less efficient than the implementations in the Python standard library.\n\n## Contribution Guidelines\n\nRead our [Contribution Guidelines](CONTRIBUTING.md) before you contribute.\n\n## Community Channel\n\nWe're on [Gitter](https://gitter.im/TheAlgorithms)!  Please join us.\n\n## List of Algorithms\n\nSee our [directory](DIRECTORY.md).\n"
 },
 {
  "repo": "LarryMad/recipes",
  "language": null,
  "readme_contents": "# Recipes\n\nThis repository contains recipes for some foods I like.\n\nThis repository is used in [Udacity's Git & GitHub course](https://www.udacity.com/course/how-to-use-git-and-github--ud775)\nCheck out this and other courses here: https://www.udacity.com/courses/all\n"
 },
 {
  "repo": "ant-design/ant-design",
  "language": "TypeScript",
  "readme_contents": "<p align=\"center\">\n  <a href=\"https://ant.design\">\n    <img width=\"200\" src=\"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg\">\n  </a>\n</p>\n\n<h1 align=\"center\">Ant Design</h1>\n\n<div align=\"center\">\n\nUma solu\u00e7\u00e3o empresarial de design e biblioteca UI para React.\n\n[![CircleCI status][circleci-image]][circleci-url] [![CI status][github-action-image]][github-action-url] [![codecov][codecov-image]][codecov-url] [![NPM version][npm-image]][npm-url] [![NPM downloads][download-image]][download-url]\n\n[![david deps][david-image]][david-url] [![david devDeps][david-dev-image]][david-dev-url] [![Total alerts][lgtm-image]][lgtm-url] [![FOSSA Status][fossa-image]][fossa-url] [![Issues need help][help-wanted-image]][help-wanted-url]\n\n[![Follow Twitter][twitter-image]][twitter-url] [![Gitter][gitter-english-image]][gitter-english-url] [![Gitter][gitter-chinese-image]][gitter-chinese-url] [![[SemVer stability]][semver-stability-image]][semver-stability-url]\n\n[npm-image]: http://img.shields.io/npm/v/antd.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/antd\n[circleci-image]: https://img.shields.io/travis/com/ant-design/ant-design.svg?style=flat-square\n[circleci-url]: https://travis-ci.com/ant-design/ant-design\n[github-action-image]: https://github.com/ant-design/ant-design/workflows/test/badge.svg\n[github-action-url]: https://github.com/ant-design/ant-design/actions?query=workflow%3Atest\n[codecov-image]: https://img.shields.io/codecov/c/github/ant-design/ant-design/master.svg?style=flat-square\n[codecov-url]: https://codecov.io/gh/ant-design/ant-design/branch/master\n[david-image]: https://img.shields.io/david/ant-design/ant-design?style=flat-square\n[david-dev-url]: https://david-dm.org/ant-design/ant-design?type=dev\n[david-dev-image]: https://img.shields.io/david/dev/ant-design/ant-design?style=flat-square\n[david-url]: https://david-dm.org/ant-design/ant-design\n[download-image]: https://img.shields.io/npm/dm/antd.svg?style=flat-square\n[download-url]: https://npmjs.org/package/antd\n[lgtm-image]: https://flat.badgen.net/lgtm/alerts/g/ant-design/ant-design\n[lgtm-url]: https://lgtm.com/projects/g/ant-design/ant-design/alerts/\n[fossa-image]: https://app.fossa.io/api/projects/git%2Bgithub.com%2Fant-design%2Fant-design.svg?type=shield\n[fossa-url]: https://app.fossa.io/projects/git%2Bgithub.com%2Fant-design%2Fant-design?ref=badge_shield\n[help-wanted-image]: https://flat.badgen.net/github/label-issues/ant-design/ant-design/help%20wanted/open\n[help-wanted-url]: https://github.com/ant-design/ant-design/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22\n[twitter-image]: https://img.shields.io/twitter/follow/AntDesignUI.svg?label=Ant%20Design&style=social\n[twitter-url]: https://twitter.com/AntDesignUI\n[gitter-english-image]: https://img.shields.io/gitter/room/ant-design/ant-design-english.svg?style=flat-square&logoWidth=18&logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgd2lkdGg9IjEyMzUiIGhlaWdodD0iNjUwIiB2aWV3Qm94PSIwIDAgNzQxMCAzOTAwIj4NCjxyZWN0IHdpZHRoPSI3NDEwIiBoZWlnaHQ9IjM5MDAiIGZpbGw9IiNiMjIyMzQiLz4NCjxwYXRoIGQ9Ik0wLDQ1MEg3NDEwbTAsNjAwSDBtMCw2MDBINzQxMG0wLDYwMEgwbTAsNjAwSDc0MTBtMCw2MDBIMCIgc3Ryb2tlPSIjZmZmIiBzdHJva2Utd2lkdGg9IjMwMCIvPg0KPHJlY3Qgd2lkdGg9IjI5NjQiIGhlaWdodD0iMjEwMCIgZmlsbD0iIzNjM2I2ZSIvPg0KPGcgZmlsbD0iI2ZmZiI%2BDQo8ZyBpZD0iczE4Ij4NCjxnIGlkPSJzOSI%2BDQo8ZyBpZD0iczUiPg0KPGcgaWQ9InM0Ij4NCjxwYXRoIGlkPSJzIiBkPSJNMjQ3LDkwIDMxNy41MzQyMzAsMzA3LjA4MjAzOSAxMzIuODczMjE4LDE3Mi45MTc5NjFIMzYxLjEyNjc4MkwxNzYuNDY1NzcwLDMwNy4wODIwMzl6Ii8%2BDQo8dXNlIHhsaW5rOmhyZWY9IiNzIiB5PSI0MjAiLz4NCjx1c2UgeGxpbms6aHJlZj0iI3MiIHk9Ijg0MCIvPg0KPHVzZSB4bGluazpocmVmPSIjcyIgeT0iMTI2MCIvPg0KPC9nPg0KPHVzZSB4bGluazpocmVmPSIjcyIgeT0iMTY4MCIvPg0KPC9nPg0KPHVzZSB4bGluazpocmVmPSIjczQiIHg9IjI0NyIgeT0iMjEwIi8%2BDQo8L2c%2BDQo8dXNlIHhsaW5rOmhyZWY9IiNzOSIgeD0iNDk0Ii8%2BDQo8L2c%2BDQo8dXNlIHhsaW5rOmhyZWY9IiNzMTgiIHg9Ijk4OCIvPg0KPHVzZSB4bGluazpocmVmPSIjczkiIHg9IjE5NzYiLz4NCjx1c2UgeGxpbms6aHJlZj0iI3M1IiB4PSIyNDcwIi8%2BDQo8L2c%2BDQo8L3N2Zz4%3D\n[gitter-english-url]: https://gitter.im/ant-design/ant-design-english?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\n[gitter-chinese-image]: https://img.shields.io/gitter/room/ant-design/ant-design.svg?style=flat-square&logoWidth=18&logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgd2lkdGg9IjkwMCIgaGVpZ2h0PSI2MDAiIHZpZXdCb3g9IjAgMCAzMCAyMCI%2BDQo8ZGVmcz4NCjxwYXRoIGlkPSJzIiBkPSJNMCwtMSAwLjU4Nzc4NSwwLjgwOTAxNyAtMC45NTEwNTcsLTAuMzA5MDE3SDAuOTUxMDU3TC0wLjU4Nzc4NSwwLjgwOTAxN3oiIGZpbGw9IiNmZmRlMDAiLz4NCjwvZGVmcz4NCjxyZWN0IHdpZHRoPSIzMCIgaGVpZ2h0PSIyMCIgZmlsbD0iI2RlMjkxMCIvPg0KPHVzZSB4bGluazpocmVmPSIjcyIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoNSw1KSBzY2FsZSgzKSIvPg0KPHVzZSB4bGluazpocmVmPSIjcyIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTAsMikgcm90YXRlKDIzLjAzNjI0MykiLz4NCjx1c2UgeGxpbms6aHJlZj0iI3MiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDEyLDQpIHJvdGF0ZSg0NS44Njk4OTgpIi8%2BDQo8dXNlIHhsaW5rOmhyZWY9IiNzIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMiw3KSByb3RhdGUoNjkuOTQ1Mzk2KSIvPg0KPHVzZSB4bGluazpocmVmPSIjcyIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTAsOSkgcm90YXRlKDIwLjY1OTgwOCkiLz4NCjwvc3ZnPg%3D%3D\n[gitter-chinese-url]: https://gitter.im/ant-design/ant-design?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[semver-stability-url]: https://dependabot.com/compatibility-score.html/?dependency-name=antd&package-manager=npm_and_yarn&new-version=latest\n[semver-stability-image]: https://api.dependabot.com/badges/compatibility_score?dependency-name=antd&package-manager=npm_and_yarn&target-version=latest&version-scheme=semver\n\n</div>\n\n[![](https://gw.alipayobjects.com/mdn/rms_08e378/afts/img/A*Yl83RJhUE7kAAAAAAAAAAABkARQnAQ)](https://ant.design)\n\n[English](./README.md) | Portugu\u00eas | [\u7b80\u4f53\u4e2d\u6587](./README-zh_CN.md)\n\n## \u2728 Funcionalidades\n\n- \ud83c\udf08 Design empresarial de interface para aplica\u00e7\u00f5es web.\n- \ud83d\udce6 Um conjunto de alta qualidade, componentes React prontos para uso.\n- \ud83d\udee1 Escrito em TypeScript com tipos previs\u00edveis.\n- \u2699\ufe0f Pacote completo de recursos de design e ferramentas de desenvolvimento.\n- \ud83c\udf0d Suporte de internacionaliza\u00e7\u00e3o para dezenas de idiomas.\n- \ud83c\udfa8 Personaliza\u00e7\u00e3o poderosa do tema em todos os detalhes.\n\n## \ud83d\udda5 Suporte aos ambientes\n\n- Navegadores modernos e Internet Explorer 11 (com [polyfills](https://ant.design/docs/react/getting-started#Compatibility))\n- Renderiza\u00e7\u00e3o no lado do servidor (server-side)\n- [Electron](https://www.electronjs.org/)\n\n| [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png\" alt=\"IE / Edge\" width=\"24px\" height=\"24px\" />](http://godban.github.io/browsers-support-badges/)</br>IE / Edge | [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png\" alt=\"Firefox\" width=\"24px\" height=\"24px\" />](http://godban.github.io/browsers-support-badges/)</br>Firefox | [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png\" alt=\"Chrome\" width=\"24px\" height=\"24px\" />](http://godban.github.io/browsers-support-badges/)</br>Chrome | [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png\" alt=\"Safari\" width=\"24px\" height=\"24px\" />](http://godban.github.io/browsers-support-badges/)</br>Safari | [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/opera/opera_48x48.png\" alt=\"Opera\" width=\"24px\" height=\"24px\" />](http://godban.github.io/browsers-support-badges/)</br>Opera | [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/electron/electron_48x48.png\" alt=\"Electron\" width=\"24px\" height=\"24px\" />](http://godban.github.io/browsers-support-badges/)</br>Electron |\n| --- | --- | --- | --- | --- | --- |\n| IE11, Edge | \u00faltimas 2 vers\u00f5es | \u00faltimas 2 vers\u00f5es | \u00faltimas 2 vers\u00f5es | \u00faltimas 2 vers\u00f5es | \u00faltimas 2 vers\u00f5es |\n\n## \ud83d\udce6 Instala\u00e7\u00e3o\n\n```bash\nnpm install antd\n```\n\n```bash\nyarn add antd\n```\n\n## \ud83d\udd28 Uso\n\n```jsx\nimport { Button, DatePicker } from 'antd';\n\nconst App = () => (\n  <>\n    <Button type=\"primary\">PRESS ME</Button>\n    <DatePicker />\n  </>\n);\n```\n\nImporte o estilo manualmente:\n\n```jsx\nimport 'antd/dist/antd.css'; // ou 'antd/dist/antd.less'\n```\n\n### TypeScript\n\nVeja [Uso no Typescript](https://ant.design/docs/react/use-in-typescript).\n\n## \ud83c\udf0d Internacionaliza\u00e7\u00e3o\n\nVeja [i18n](https://ant.design/docs/react/i18n).\n\n## \ud83d\udd17 Links\n\n- [P\u00e1gina inicial](https://ant.design/)\n- [Componentes](https://ant.design/components/overview)\n- [Ant Design Pro](http://pro.ant.design/)\n- [Ant Design Charts](https://charts.ant.design)\n- [Change Log](CHANGELOG.en-US.md)\n- [rc-components](http://react-component.github.io/)\n- [Mobile UI](http://mobile.ant.design)\n- [Ant Design Icones](https://github.com/ant-design/ant-design-icons)\n- [Ant Design Cores](https://github.com/ant-design/ant-design-colors)\n- [Ant Design Pro Layout](https://github.com/ant-design/ant-design-pro-layout)\n- [Ant Design Pro Blocks](https://github.com/ant-design/pro-blocks)\n- [Tema escuro](https://github.com/ant-design/ant-design-dark-theme)\n- [P\u00e1gina de aterrissagem](https://landing.ant.design)\n- [Motion](https://motion.ant.design)\n- [Mercado de p\u00e1ginas](http://scaffold.ant.design)\n- [Instru\u00e7\u00f5es ao desenvolvedor](https://github.com/ant-design/ant-design/wiki/Development)\n- [Versionando as notas de atualiza\u00e7\u00e3o](https://github.com/ant-design/ant-design/wiki/%E8%BD%AE%E5%80%BC%E8%A7%84%E5%88%99%E5%92%8C%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B)\n- [FAQ](https://ant.design/docs/react/faq)\n- [CodeSandbox Template](https://u.ant.design/codesandbox-repro) para relat\u00f3rio de erros\n- [Awesome Ant Design](https://github.com/websemantics/awesome-ant-design)\n- [Customize Theme](https://ant.design/docs/react/customize-theme)\n- [How to Apply for Being A Collaborator](https://github.com/ant-design/ant-design/wiki/Collaborators#how-to-apply-for-being-a-collaborator)\n\n## \u2328\ufe0f Desenvolvimento\n\nUse Gitpod, um ambiente de desenvolvimento online para GitHub.\n\n[![Abrir no Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/ant-design/ant-design)\n\nOu clone localmente:\n\n```bash\n$ git clone git@github.com:ant-design/ant-design.git\n$ cd ant-design\n$ npm install\n$ npm start\n```\n\nAbra seu navegador e visite http://127.0.0.1:8001, veja mais em [Desenvolvimento](https://github.com/ant-design/ant-design/wiki/Development).\n\n## \ud83e\udd1d Contribui\u00e7\u00e3o [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n\nLeia nosso [guia de contribu\u00e7\u00e3o](https://ant.design/docs/react/contributing) e vamos contruir um melhor antd juntos.\n\nN\u00f3s saudamos todas as contribui\u00e7\u00f5es. Por favor, leia nosso [CONTRIBUTING.md](https://github.com/ant-design/ant-design/blob/master/.github/CONTRIBUTING.md) primeiro. Voc\u00ea pode submeter todas as ideias como [Pull Requests](https://github.com/ant-design/ant-design/pulls) ou como [GitHub issues](https://github.com/ant-design/ant-design/issues). Se voc\u00ea quiser melhorar o c\u00f3digo, verifique [instru\u00e7\u00f5es ao desenvolvedor](https://github.com/ant-design/ant-design/wiki/Development) e divirta-se! :)\n\nSe voc\u00ea \u00e9 um colaborador, por favor siga nossa [Pull Request princ\u00edpio](https://github.com/ant-design/ant-design/wiki/PR-principle) para criar um Pull Request atrav\u00e9s do [template do colaborador](https://github.com/ant-design/ant-design/compare?expand=1&template=collaborator.md).\n\n[![Let's fund issues in this repository](https://issuehunt.io/static/embed/issuehunt-button-v1.svg)](https://issuehunt.io/repos/34526884)\n\n## \u2764\ufe0f Patrocionadores e Apoiadores [![](https://opencollective.com/ant-design/tiers/sponsors/badge.svg?label=Sponsors&color=brightgreen)](https://opencollective.com/ant-design#support) [![](https://opencollective.com/ant-design/tiers/backers/badge.svg?label=Backers&color=brightgreen)](https://opencollective.com/ant-design#support)\n\n[![](https://opencollective.com/ant-design/tiers/sponsors.svg?avatarHeight=36)](https://opencollective.com/ant-design#support)\n\n[![](https://opencollective.com/ant-design/tiers/backers.svg?avatarHeight=36)](https://opencollective.com/ant-design#support)\n"
 },
 {
  "repo": "d3/d3",
  "language": "JavaScript",
  "readme_contents": "# D3: Data-Driven Documents\n\n<a href=\"https://d3js.org\"><img src=\"https://d3js.org/logo.svg\" align=\"left\" hspace=\"10\" vspace=\"6\"></a>\n\n**D3** (or **D3.js**) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.\n\n## Resources\n\n* [Introduction](https://observablehq.com/@d3/learn-d3)\n* [API Reference](https://github.com/d3/d3/blob/master/API.md)\n* [Releases](https://github.com/d3/d3/releases)\n* [Examples](https://observablehq.com/@d3/gallery)\n* [Wiki](https://github.com/d3/d3/wiki)\n\n## Installing\n\nIf you use npm, `npm install d3`. Otherwise, download the [latest release](https://github.com/d3/d3/releases/latest). The released bundle supports anonymous AMD, CommonJS, and vanilla environments. You can load directly from [d3js.org](https://d3js.org), [CDNJS](https://cdnjs.com/libraries/d3), or [unpkg](https://unpkg.com/d3/). For example:\n\n```html\n<script src=\"https://d3js.org/d3.v5.js\"></script>\n```\n\nFor the minified version:\n\n```html\n<script src=\"https://d3js.org/d3.v5.min.js\"></script>\n```\n\nYou can also use the standalone D3 microlibraries. For example, [d3-selection](https://github.com/d3/d3-selection):\n\n```html\n<script src=\"https://d3js.org/d3-selection.v1.js\"></script>\n```\n\nD3 is written using [ES2015 modules](http://www.2ality.com/2014/09/es6-modules-final.html). Create a [custom bundle using Rollup](https://bl.ocks.org/mbostock/bb09af4c39c79cffcde4), Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:\n\n```js\nimport {scaleLinear} from \"d3-scale\";\n```\n\nOr import everything into a namespace (here, `d3`):\n\n```js\nimport * as d3 from \"d3\";\n```\n\nIn Node:\n\n```js\nvar d3 = require(\"d3\");\n```\n\nYou can also require individual modules and combine them into a `d3` object using [Object.assign](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign):\n\n```js\nvar d3 = Object.assign({}, require(\"d3-format\"), require(\"d3-geo\"), require(\"d3-geo-projection\"));\n```\n"
 },
 {
  "repo": "apache/spark",
  "language": "Scala",
  "readme_contents": "# Apache Spark\n\nSpark is a unified analytics engine for large-scale data processing. It provides\nhigh-level APIs in Scala, Java, Python, and R, and an optimized engine that\nsupports general computation graphs for data analysis. It also supports a\nrich set of higher-level tools including Spark SQL for SQL and DataFrames,\nMLlib for machine learning, GraphX for graph processing,\nand Structured Streaming for stream processing.\n\n<https://spark.apache.org/>\n\n[![Jenkins Build](https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-sbt-hadoop-2.7-hive-2.3/badge/icon)](https://amplab.cs.berkeley.edu/jenkins/job/spark-master-test-sbt-hadoop-2.7-hive-2.3)\n[![AppVeyor Build](https://img.shields.io/appveyor/ci/ApacheSoftwareFoundation/spark/master.svg?style=plastic&logo=appveyor)](https://ci.appveyor.com/project/ApacheSoftwareFoundation/spark)\n[![PySpark Coverage](https://img.shields.io/badge/dynamic/xml.svg?label=pyspark%20coverage&url=https%3A%2F%2Fspark-test.github.io%2Fpyspark-coverage-site&query=%2Fhtml%2Fbody%2Fdiv%5B1%5D%2Fdiv%2Fh1%2Fspan&colorB=brightgreen&style=plastic)](https://spark-test.github.io/pyspark-coverage-site)\n\n\n## Online Documentation\n\nYou can find the latest Spark documentation, including a programming\nguide, on the [project web page](https://spark.apache.org/documentation.html).\nThis README file only contains basic setup instructions.\n\n## Building Spark\n\nSpark is built using [Apache Maven](https://maven.apache.org/).\nTo build Spark and its example programs, run:\n\n    ./build/mvn -DskipTests clean package\n\n(You do not need to do this if you downloaded a pre-built package.)\n\nMore detailed documentation is available from the project site, at\n[\"Building Spark\"](https://spark.apache.org/docs/latest/building-spark.html).\n\nFor general development tips, including info on developing Spark using an IDE, see [\"Useful Developer Tools\"](https://spark.apache.org/developer-tools.html).\n\n## Interactive Scala Shell\n\nThe easiest way to start using Spark is through the Scala shell:\n\n    ./bin/spark-shell\n\nTry the following command, which should return 1,000,000,000:\n\n    scala> spark.range(1000 * 1000 * 1000).count()\n\n## Interactive Python Shell\n\nAlternatively, if you prefer Python, you can use the Python shell:\n\n    ./bin/pyspark\n\nAnd run the following command, which should also return 1,000,000,000:\n\n    >>> spark.range(1000 * 1000 * 1000).count()\n\n## Example Programs\n\nSpark also comes with several sample programs in the `examples` directory.\nTo run one of them, use `./bin/run-example <class> [params]`. For example:\n\n    ./bin/run-example SparkPi\n\nwill run the Pi example locally.\n\nYou can set the MASTER environment variable when running examples to submit\nexamples to a cluster. This can be a mesos:// or spark:// URL,\n\"yarn\" to run on YARN, and \"local\" to run\nlocally with one thread, or \"local[N]\" to run locally with N threads. You\ncan also use an abbreviated class name if the class is in the `examples`\npackage. For instance:\n\n    MASTER=spark://host:7077 ./bin/run-example SparkPi\n\nMany of the example programs print usage help if no params are given.\n\n## Running Tests\n\nTesting first requires [building Spark](#building-spark). Once Spark is built, tests\ncan be run using:\n\n    ./dev/run-tests\n\nPlease see the guidance on how to\n[run tests for a module, or individual tests](https://spark.apache.org/developer-tools.html#individual-tests).\n\nThere is also a Kubernetes integration test, see resource-managers/kubernetes/integration-tests/README.md\n\n## A Note About Hadoop Versions\n\nSpark uses the Hadoop core library to talk to HDFS and other Hadoop-supported\nstorage systems. Because the protocols have changed in different versions of\nHadoop, you must build Spark against the same version that your cluster runs.\n\nPlease refer to the build documentation at\n[\"Specifying the Hadoop Version and Enabling YARN\"](https://spark.apache.org/docs/latest/building-spark.html#specifying-the-hadoop-version-and-enabling-yarn)\nfor detailed guidance on building for a particular distribution of Hadoop, including\nbuilding for particular Hive and Hive Thriftserver distributions.\n\n## Configuration\n\nPlease refer to the [Configuration Guide](https://spark.apache.org/docs/latest/configuration.html)\nin the online documentation for an overview on how to configure Spark.\n\n## Contributing\n\nPlease review the [Contribution to Spark guide](https://spark.apache.org/contributing.html)\nfor information on how to get started contributing to the project.\n"
 },
 {
  "repo": "DefinitelyTyped/DefinitelyTyped",
  "language": "TypeScript",
  "readme_contents": "# Definitely Typed\n\n> \u8fd9\u662f\u4e00\u4e2a *\u9ad8\u8d28\u91cf* \u7684 TypeScript \u7c7b\u578b\u5b9a\u4e49\u7684\u4ed3\u5e93\u3002\n\n\u4e5f\u53ef\u4ee5\u53bb\u770b [definitelytyped.org](http://definitelytyped.org) \u8fd9\u4e2a\u7f51\u7ad9\uff0c\u5c3d\u7ba1\u8fd9\u4e2a README \u91cc\u7684\u4fe1\u606f\u66f4\u65b0\u3002\n\n*\u4f60\u53ef\u4ee5\u53bb\u770b\u5176\u4ed6\u8bed\u8a00\u7684 README\uff0c[\u82f1\u8bed](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md)\uff0c[\u897f\u73ed\u7259\u8bed](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.es.md)\uff0c[\u97e9\u8bed](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.ko.md)\uff0c[\u4fc4\u7f57\u65af\u8bed](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.ru.md)*\n\n*[\u7ba1\u7406\u5458\u624b\u518c](./docs/admin.md)*\n\n## \u76ee\u5f55\n\n* [\u5f53\u524d\u72b6\u6001](#\u5f53\u524d\u72b6\u6001)\n* [\u6211\u8be5\u5982\u4f55\u8d21\u732e\uff1f](#\u6211\u8be5\u5982\u4f55\u8d21\u732e)\n    * [\u6d4b\u8bd5](#\u6d4b\u8bd5)\n    * [\u53d1\u8d77\u4e00\u4e2a pull request](#\u53d1\u8d77\u4e00\u4e2a-pull-request)\n        * [\u7f16\u8f91\u4e00\u4e2a\u73b0\u6709\u5305](#\u7f16\u8f91\u4e00\u4e2a\u73b0\u6709\u5305)\n        * [\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5305](#\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5305)\n        * [\u5e38\u89c1\u9519\u8bef](#\u5e38\u89c1\u9519\u8bef)\n        * [\u5220\u9664\u4e00\u4e2a\u5305](#\u5220\u9664\u4e00\u4e2a\u5305)\n        * [Linter](#linter)\n* [FAQ](#faq)\n\n## \u5f53\u524d\u72b6\u6001\n\n\u8fd9\u4e2a\u90e8\u5206\u4f1a\u8ddf\u8e2a\u4ed3\u5e93\u548c\u53d1\u5e03\u8fc7\u7a0b\u7684\u8fd0\u884c\u72b6\u51b5\u3002\n\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u5728 PRs \u548c\u5305\u4e2d\u9047\u5230\u4efb\u4f55\u95ee\u9898\u7684\u8d21\u732e\u8005\u6709\u6240\u5e2e\u52a9\u3002\n\n* \u6700\u8fd1\u7684\u6784\u5efa\u90fd\u5177\u6709\u5b8c\u5584\u7684 [\u7c7b\u578b\u6807\u6ce8](https://github.com/Microsoft/dtslint)\uff1a[![Build Status](https://dev.azure.com/definitelytyped/DefinitelyTyped/_apis/build/status/DefinitelyTyped.DefinitelyTyped?branchName=master)](https://dev.azure.com/definitelytyped/DefinitelyTyped/_build/latest?definitionId=1&branchName=master)\n* \u6240\u6709\u7684\u5305\u57fa\u4e8e typescript@next \u7248\u672c\u90fd\u6709\u5b8c\u5584\u7684\u7c7b\u578b\u6807\u6ce8\uff1a[![Build Status](https://dev.azure.com/definitelytyped/DefinitelyTyped/_apis/build/status/DefinitelyTyped.dtslint-runner?branchName=master)](https://dev.azure.com/definitelytyped/DefinitelyTyped/_build/latest?definitionId=2&branchName=master)\n* \u6240\u6709\u7684\u5305\u90fd\u4f1a\u57281\u5c0f\u65f6\u5185 [\u53d1\u5e03\u5230 npm](https://github.com/Microsoft/types-publisher):  [![Publish Status](https://dev.azure.com/definitelytyped/DefinitelyTyped/_apis/build/status/DefinitelyTyped.types-publisher-watchdog?branchName=master)](https://dev.azure.com/definitelytyped/DefinitelyTyped/_build/latest?definitionId=5&branchName=master)\n* [typescript-bot](https://github.com/typescript-bot) \u5728 Definitely Typed \u4e00\u76f4\u5904\u4e8e\u6d3b\u8dc3\u72b6\u6001 [![Activity Status](https://dev.azure.com/definitelytyped/DefinitelyTyped/_apis/build/status/DefinitelyTyped.typescript-bot-watchdog?branchName=master)](https://dev.azure.com/definitelytyped/DefinitelyTyped/_build/latest?definitionId=6&branchName=master)\n\n\u5982\u679c\u8fd9\u91cc\u9762\u7684\u4efb\u4f55\u5185\u5bb9\u51fa\u73b0\u95ee\u9898\u6216\u8005\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u8bf7\u5728 [the Definitely Typed Gitter channel](https://gitter.im/DefinitelyTyped/DefinitelyTyped) \u63d0\u51fa\u95ee\u9898\u3002\n\n[![Join the chat at https://gitter.im/DefinitelyTyped/DefinitelyTyped](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/DefinitelyTyped/DefinitelyTyped?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## \u4ec0\u4e48\u662f\u58f0\u660e\u6587\u4ef6\uff1f\n\n\u53ef\u4ee5\u67e5\u770b [TypeScript \u624b\u518c](http://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html)\u3002\n\n## \u5982\u4f55\u53bb\u83b7\u53d6\u5b83\uff1f\n\n### npm\n\n\u8fd9\u662f\u9996\u9009\u65b9\u6cd5\u3002\u5b83\u4ec5\u9002\u7528\u4e8e TypeScript 2.0+ \u7684\u7528\u6237\u3002\u4f8b\u5982\uff1a\n\n```sh\nnpm install --save-dev @types/node\n```\n\n\u7f16\u8bd1\u5668\u4e2d\u4f1a\u81ea\u52a8\u5305\u542b\u8fd9\u4e9b\u7c7b\u578b\u3002\n\u53ef\u4ee5\u5728 [\u624b\u518c](http://www.typescriptlang.org/docs/handbook/declaration-files/consumption.html) \u4e2d\u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002\n\n\u5bf9\u4e8e NPM \u5305 \"foo\"\uff0c\u5b83\u7684\u7c7b\u578b\u5c06\u662f \"@types/foo\"\u3002\n\u5982\u679c\u6ca1\u6709\u627e\u5230\u4f60\u7684\u5305\uff0c\u8bf7\u5728 [TypeSearch](https://microsoft.github.io/TypeSearch/) \u67e5\u8be2\u3002\n\n\u5982\u679c\u4f60\u4ecd\u7136\u6ca1\u6709\u627e\u5230\u5b83\uff0c\u8bf7\u68c0\u67e5\u5b83\u662f\u5426 [\u6346\u7ed1](http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html) \u4e86\u81ea\u5df1\u7684\u7c7b\u578b\u3002\n\u8fd9\u901a\u5e38\u4f1a\u5728 `package.json` \u6587\u4ef6\u4e2d\u7684 `\"types\"` \u6216 `\"typings\"` \u5b57\u6bb5\u4e2d\u63d0\u4f9b\uff0c\n\u6216\u8005\u53ef\u4ee5\u53ea\u67e5\u627e\u5305\u4e2d\u7684\u4efb\u4f55 \".d.ts\" \u6587\u4ef6\u5e76\u624b\u52a8\u5c06\u5b83\u4eec\u5305\u542b\u5728 `/// <reference path=\"\" />`.\n\n#### \u65e7\u7248\u672c\u7684 TypeScript\uff082.9 \u548c\u66f4\u65e9\u7248\u672c\uff09\n\nDefinitely Typed \u4ec5\u5728\u5c0f\u4e8e 2 \u5e74\u7684 TypeScript \u7248\u672c\u4e0a\u6d4b\u8bd5\u8f6f\u4ef6\u5305\u3002\u5f53\u524d\u5df2\u6d4b\u8bd5 3.0 \u53ca\u66f4\u9ad8\u7248\u672c\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f TypeScript 2.0 \u5230 2.9\uff0c\u4ecd\u7136\u53ef\u4ee5\u5c1d\u8bd5\u5b89\u88c5 @types \u8f6f\u4ef6\u5305\uff0c\u5927\u591a\u6570\u8f6f\u4ef6\u5305\u90fd\u4e0d\u4f7f\u7528 TypeScript \u7684\u65b0\u7279\u6027\u3002\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u4eec\u4f1a\u8d77\u4f5c\u7528\uff0c\u8fd9\u662f\u652f\u6301\u7a97\u53e3\uff1a\n\nVersion | Released | End of Support\n-- | -- | --\n2.8 | March 2018 | March 2020\n2.9 | May 2018 | May 2020\n3.0 | July 2018 | July 2020\n3.1 | September 2018 | September 2020\n3.2 | November 2018 | November 2020\n3.3 | January 2019 | January 2021\n3.4 | March 2019 | March 2021\n3.5 | May 2019 | May 2021\n3.6 | August 2019 | August 2021\n3.7 | November 2019 | November 2021\n3.8 | February 2020 | February 2022\n3.9 | May 2020 | May 2022\n\n`@types` \u8f6f\u4ef6\u5305\u5177\u6709\u5b83\u4eec\u660e\u786e\u652f\u6301\u7684 TypeScript \u7248\u672c\u7684\u6807\u8bb0\uff0c\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u83b7\u53d6\u65e9\u4e8e 2 \u5e74\u7a97\u53e3\u7684\u8f83\u65e9\u7248\u672c\u7684\u8f6f\u4ef6\u5305\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8fd0\u884c `npm dist-tags @types/react`\uff0c\u60a8\u5c06\u770b\u5230 TypeScript 2.5 \u53ef\u4ee5\u5c06\u7c7b\u578b\u7528\u4e8e react@16.0\uff0c\u800c TypeScript 2.6 \u548c 2.7 \u53ef\u4ee5\u5c06\u7c7b\u578b\u7528\u4e8e react@16.4\uff1a\n\n|Tag | Version|\n|----|---------|\n|latest| 16.9.23|\n|ts2.0| 15.0.1|\n| ... | ... |\n|ts2.5| 16.0.36|\n|ts2.6| 16.4.7|\n|ts2.7| 16.4.7|\n| ... | ... |\n\n#### TypeScript 1.*\n\n\u8fd9\u4e9b\u53ef\u4ee5\u88ab TypeScript 1.0 \u4f7f\u7528\u3002\n\n* \u4ece\u8be5\u4ed3\u5e93\u7684 `master` \u5206\u652f\u624b\u52a8\u4e0b\u8f7d\u5e76\u5c06\u5176\u653e\u5165\u60a8\u7684\u9879\u76ee\u4e2d\n* ~~[Typings](https://github.com/typings/typings)~~ (\u4f7f\u7528\u9996\u9009\u66ff\u4ee3\u65b9\u6848\uff0ctypings \u5df2\u7ecf\u88ab\u5f03\u7528)\n* ~~[NuGet](http://nuget.org/packages?q=DefinitelyTyped)~~ (\u4f7f\u7528\u9996\u9009\u66ff\u4ee3\u65b9\u6848, nuget DT \u7c7b\u578b\u53d1\u5e03\u5df2\u5173\u95ed)\n\n\u4f60\u53ef\u80fd\u9700\u8981\u624b\u52a8\u6dfb\u52a0 [\u5f15\u7528](http://www.typescriptlang.org/docs/handbook/triple-slash-directives.html)\u3002\n\n## \u6211\u8be5\u5982\u4f55\u8d21\u732e\uff1f\n\n\u53ea\u6709\u50cf\u4f60\u4e00\u6837\u7684\u7528\u6237\u7684\u8d21\u732e\uff0cDefinitely Typed \u624d\u80fd\u53d1\u6325\u4f5c\u7528\n\n### \u6d4b\u8bd5\n\n\u5728\u4f60\u5206\u4eab\u4f60\u7684\u6210\u679c\u524d\uff0c\u8bf7\u52a1\u5fc5\u81ea\u5df1\u8bd5\u7528\u4e00\u4e0b\u3002\n\n#### \u6d4b\u8bd5\u7f16\u8f91\u73b0\u6709\u7684\u5305\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528 [module augmentation](http://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation) \u6dfb\u52a0\u65b0\u529f\u80fd\u3002\n\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728 `node_modules/@types/foo/index.d.ts` \u7f16\u8f91\u7c7b\u578b\uff0c\u6216\u8005\u4ece\u90a3\u91cc\u590d\u5236\u5b83\u4eec\u5e76\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\u3002\n\n#### \u6d4b\u8bd5\u65b0\u7684\u5305\n\n\u6dfb\u52a0\u5230\u4f60\u7684 `tsconfig.json`:\n\n```json\n\"baseUrl\": \"types\",\n\"typeRoots\": [\"types\"],\n```\n\n(\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 `src/types`.)\n\u521b\u5efa\u5305\u542b\u6a21\u5757 \"foo\" \u58f0\u660e\u7684 `types/foo/index.d.ts`.\n\u4f60\u73b0\u5728\u5e94\u8be5\u5c06 `\"foo\"` \u5bfc\u5165\u5230\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u5b83\u4f1a\u4f7f\u7528\u65b0\u7684\u7c7b\u578b\u58f0\u660e\u3002\n\u7136\u540e\u6784\u5efa\u5e76\u8fd0\u884c\u4ee3\u7801\u786e\u4fdd\u4f60\u7684\u7c7b\u578b\u5b9a\u4e49\u4e0e\u5b9e\u9645\u4e0a\u53d1\u751f\u7684\u60c5\u51b5\u4e00\u81f4\u3002\n\u4e00\u65e6\u4f60\u7684\u771f\u5b9e\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u5b9a\u4e49\u901a\u8fc7\u6d4b\u8bd5\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u8d77\u4e00\u4e2a [PR](#make-a-pull-request)\uff0c\n\u7136\u540e\u6309\u7167\u4e0b\u9762\u7684\u8bf4\u660e\u53bb [\u7f16\u8f91\u4e00\u4e2a\u73b0\u6709\u5305](#edit-an-existing-package) \u6216\n[\u521b\u5efa\u4e00\u4e2a\u65b0\u5305](#create-a-new-package)\u3002\n\n### \u53d1\u8d77\u4e00\u4e2a pull request\n\n\u4e00\u65e6\u4f60\u7684\u5305\u6d4b\u8bd5\u901a\u8fc7\uff0c\u4f60\u53ef\u4ee5\u5728 Definitely Typed \u5206\u4eab\u5b83\u3002\n\n\u9996\u5148\uff0c[fork](https://guides.github.com/activities/forking/) \u8fd9\u4e2a\u4ed3\u5e93\uff0c\u7136\u540e\u5b89\u88c5 [node](https://nodejs.org/)\uff0c\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4 `npm install`.\n\n#### \u7f16\u8f91\u4e00\u4e2a\u73b0\u6709\u5305\n\n* `cd types/my-package-to-edit`\n* \u4f5c\u51fa\u4fee\u6539\u4e4b\u540e\uff0c\u8bb0\u5f97\u65b0\u589e\u6d4b\u8bd5\u3002\n  \u5982\u679c\u4f60\u8fdb\u884c\u4e86\u91cd\u5927\u4fee\u6539\uff0c\u4e0d\u8981\u5fd8\u8bb0 [\u66f4\u65b0\u4e3b\u7248\u672c](#if-a-library-is-updated-to-a-new-major-version-with-breaking-changes-how-should-i-update-its-type-declaration-package)\n* \u4f60\u53ef\u80fd\u8fd8\u60f3\u5c06\u81ea\u5df1\u6dfb\u52a0\u5230\u5305\u5934\u90e8\u7684 \"Definitions by\" \u90e8\u5206\u3002\n  - \u8fd9\u4f1a\u5bfc\u81f4\u4e00\u65e6\u6709\u4eba\u5bf9\u8be5\u5305\u53d1\u8d77 PR \u6216\u8005 issue\uff0c\u90fd\u4f1a\u901a\u77e5\u4f60\uff08\u901a\u8fc7\u4f60\u7684 GitHub \u7528\u6237\u540d\uff09\u3002\n  - \u901a\u8fc7\u5c06\u60a8\u7684\u540d\u5b57\u6dfb\u52a0\u5230\u884c\u5c3e\u6765\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u6bd4\u5982 `// Definitions by: Alice <https://github.com/alice>, Bob <https://github.com/bob>`.\n  - \u6216\u8005\u5982\u679c\u6709\u591a\u4eba\uff0c\u5b83\u4e5f\u53ef\u4ee5\u662f\u591a\u884c\u7684\n  ```typescript\n  // Definitions by: Alice <https://github.com/alice>\n  //                 Bob <https://github.com/bob>\n  //                 Steve <https://github.com/steve>\n  //                 John <https://github.com/john>\n  ```\n* \u5982\u679c\u8fd9\u91cc\u6709 `tslint.json` \u6587\u4ef6\uff0c\u5c31\u8fd0\u884c `npm run lint package-name`\u3002\u5426\u5219\uff0c\u5728\u5305\u76ee\u5f55\u91cc\u8fd0\u884c `tsc`.\n\n\u5f53\u4f60\u5bf9\u73b0\u6709\u7684\u5305\u53d1\u8d77 PR \u7684\u65f6\u5019\uff0c\u8bf7\u786e\u4fdd `dt-bot` \u4f1a\u901a\u77e5\u4ee5\u524d\u7684\u4f5c\u8005\u3002\n\u5982\u679c\u6ca1\u6709\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0e PR \u5173\u8054\u7684\u8bc4\u8bba\u4e2d\u624b\u52a8\u53bb @ \u4ed6\u4eec\u3002\n\n#### \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5305\n\n\u5982\u679c\u4f60\u662f\u5e93\u4f5c\u8005\u5e76\u4e14\u4f60\u7684\u5305\u662f\u7528 TypeScript \u7f16\u5199\u7684\uff0c\u90a3\u4e48\u8bf7\u5728\u4f60\u7684\u5305\u91cc [\u6346\u7ed1\u81ea\u52a8\u751f\u6210\u7684\u58f0\u660e\u6587\u4ef6](http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html) \u800c\u4e0d\u662f\u53d1\u5e03\u5230 Definitely Typed.\n\n\u5982\u679c\u4f60\u8981\u4e3a NPM \u5305\u6dfb\u52a0\u7c7b\u578b\uff0c\u8bf7\u521b\u5efa\u5177\u6709\u76f8\u540c\u540d\u5b57\u7684\u76ee\u5f55\u3002\n\u5982\u679c\u4f60\u8981\u6dfb\u52a0\u7c7b\u578b\u7684\u5305\u4e0d\u518d NPM \u4e0a\uff0c\u8bf7\u786e\u4fdd\u4e3a\u5b83\u9009\u62e9\u7684\u540d\u5b57\u4e0d\u4f1a\u4e0e NPM \u4e0a\u9762\u7684\u5305\u540d\u51b2\u7a81\u3002\n(\u4f60\u53ef\u4ee5\u4f7f\u7528 `npm info foo` \u6765\u68c0\u67e5 `foo` \u5305\u662f\u5426\u5b58\u5728\u3002)\n\n\u4f60\u7684\u5305\u5e94\u8be5\u5177\u6709\u8fd9\u6837\u7684\u7ed3\u6784\uff1a\n\n| \u6587\u4ef6\u540d | \u76ee\u7684 |\n| --- | --- |\n| index.d.ts | \u8fd9\u91cc\u5305\u542b\u4e86\u5305\u7684\u7c7b\u578b\u58f0\u660e\u3002 |\n| foo-tests.ts | \u8fd9\u91cc\u5305\u542b\u4e86\u6d4b\u8bd5\u7c7b\u578b\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u6b64\u4ee3\u7801 **\u4e0d\u4f1a** \u8fd0\u884c\uff0c\u4f46\u662f\u5b83\u9700\u8981\u901a\u8fc7\u7c7b\u578b\u68c0\u67e5\u3002 |\n| tsconfig.json | \u8fd9\u91cc\u5141\u8bb8\u4f60\u5728\u5305\u91cc\u8fd0\u884c `tsc`. |\n| tslint.json | \u542f\u7528 linting. |\n\n\u5982\u679c\u4f60\u7684 npm \u2265 5.2.0\uff0c\u8fd0\u884c `npx dts-gen --dt --name my-package-name --template module` \u6765\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6\uff0c\u5426\u5219\u5c31\u8fd0\u884c `npm install -g dts-gen` \u548c `dts-gen --dt --name my-package-name --template module`.\n\u53ef\u4ee5\u5728 [dts-gen](https://github.com/Microsoft/dts-gen) \u67e5\u770b\u6240\u6709\u7684\u9009\u9879\u3002\n\n\u4f60\u53ef\u4ee5\u7f16\u8f91 `tsconfig.json` \u6765\u589e\u52a0\u65b0\u6587\u4ef6\uff0c\u589e\u52a0 `\"target\": \"es6\"` (\u5f02\u6b65\u51fd\u6570\u9700\u8981)\uff0c\u53bb\u589e\u52a0 `\"lib\"`\uff0c\u6216\u8005\u589e\u52a0 `\"jsx\"` \u7f16\u8bd1\u9009\u9879\u3002\n\nDefinitely Typed \u7684\u6210\u5458\u4f1a\u5b9a\u671f\u67e5\u770b\u65b0\u7684 PRs\uff0c\u4f46\u662f\u8bf7\u8bb0\u4f4f\u5f53\u6709\u8bb8\u591a\u5176\u4ed6 PRs \u7684\u65f6\u5019\uff0c\u68c0\u67e5\u4f1a\u53d8\u6162\u3002\n\n[base64-js](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/base64-js) \u662f\u4e2a\u5f88\u597d\u7684\u793a\u4f8b\u3002\n\n#### \u5e38\u89c1\u9519\u8bef\n\n* \u9996\u5148\uff0c\u8bf7\u9075\u5faa [\u624b\u518c](http://www.typescriptlang.org/docs/handbook/declaration-files/do-s-and-don-ts.html) \u7684\u5efa\u8bae\u3002\n* \u683c\u5f0f\u5316\uff1a\u4f7f\u75284\u4e2a\u7a7a\u683c\u3002 \u8be5\u4ed3\u5e93\u5df2\u7ecf\u8bbe\u7f6e\u4e86 prettier\uff0c\u56e0\u6b64\u4f60\u53ea\u9700\u8981\u8fd0\u884c `npm run prettier -- --write path/to/package/**/*.ts`. [\u4f7f\u7528\u65ad\u8a00\u65f6](https://github.com/SamVerschueren/tsd#assertions)\uff0c\u6dfb\u52a0 `// prettier-ignore` \u5c06\u8fd9\u51e0\u884c\u6807\u8bb0\u4e3a\u4e0d\u9700\u8981\u683c\u5f0f\u5316\u7684\u4ee3\u7801\uff1a\n    ```tsx\n    // prettier-ignore\n    const incompleteThemeColorModes: Theme = { colors: { modes: { papaya: { // $ExpectError\n    ```\n* `function sum(nums: number[]): number`: \u5982\u679c\u51fd\u6570\u6ca1\u6709\u5199\u5165\u7684\u53c2\u6570\uff0c\u8bf7\u4f7f\u7528 `ReadonlyArray`.\n* `interface Foo { new(): Foo; }`:\n    \u8fd9\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u5b9e\u4f8b\u5316\u7684\u7c7b\u578b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u7684\u662f `declare class Foo { constructor(); }`.\n* `const Class: { new(): IClass; }`:\n    \u66f4\u63a8\u8350\u4f7f\u7528\u7c7b\u58f0\u660e `class Class { constructor(); }`\uff0c\u800c\u4e0d\u662f\u751f\u6210\u4e00\u4e2a\u53ef\u5b9e\u4f8b\u5316\u7684\u7c7b\u578b\u3002\n* `getMeAT<T>(): T`:\n    \u5982\u679c\u7c7b\u578b\u53c2\u6570\u6ca1\u6709\u51fa\u73b0\u5728\u51fd\u6570\u7684\u53c2\u6570\u4e2d\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u4f60\u4e0d\u9700\u8981\u8fd9\u4e2a\u6cdb\u578b\u51fd\u6570\uff0c\u4f60\u53ea\u662f\u7528\u4e86\u4e00\u4e2a\u4f2a\u88c5\u7684\u7c7b\u578b\u65ad\u8a00\u3002\n    \u8fd9\u79cd\u60c5\u51b5\u4e0b\u6700\u597d\u4f7f\u7528\u771f\u5b9e\u7684\u7c7b\u578b\u65ad\u8a00\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff0c`getMeAT() as number`.\n    \u7c7b\u578b\u53c2\u6570\u53ef\u63a5\u53d7\u7684\u793a\u4f8b\uff1a`function id<T>(value: T): T;`.\n    \u7c7b\u578b\u53c2\u6570\u4e0d\u53ef\u63a5\u53d7\u7684\u793a\u4f8b\uff1a`function parseJson<T>(json: string): T;`.\n    \u6709\u4e00\u4e2a\u4f8b\u5916\uff1a`new Map<string, number>()` \u662f OK \u7684\u3002\n* \u4f7f\u7528 `Function` \u548c `Object` \u7684\u7c7b\u578b\u57fa\u672c\u4e0a\u4e0d\u662f\u4e00\u4e2a\u597d\u65b9\u6cd5\u3002\u5728 99% \u7684\u60c5\u51b5\u4f60\u53ef\u4ee5\u53bb\u6307\u5b9a\u4e00\u4e2a\u66f4\u5177\u4f53\u7684\u7c7b\u578b\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e [Function](http://www.typescriptlang.org/docs/handbook/functions.html#function-types)\uff0c\u53ef\u4ee5\u4f7f\u7528 `(x: number) => number`\uff0c\u5bf9\u4e8e `Object` \u53ef\u4ee5\u4f7f\u7528 `{ x: number, y: number }`. \u5bf9\u4e8e\u4e0d\u786e\u5b9a\u7684\u7c7b\u578b\uff0c\u4f60\u9700\u8981\u4f7f\u7528 [`any`](http://www.typescriptlang.org/docs/handbook/basic-types.html#any) \u800c\u4e0d\u662f `Object`. \u53ea\u6709\u5f53\u5b83\u7c7b\u578b\u786e\u5b9a\u4e14\u662f\u67d0\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f7f\u7528 [`object`](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#object-type), \u800c\u4e0d\u662f `Object` \u6216 `{ [key: string]: any }`.\n* `var foo: string | any`:\n    \u5982\u679c\u5728\u8054\u5408\u7c7b\u578b\u4e2d\u4f7f\u7528 `any`, \u5219\u7ed3\u679c\u59cb\u7ec8\u4e3a `any`. \u56e0\u6b64\uff0c\u5373\u4fbf\u7c7b\u578b\u4e2d\u7684 `string` \u90e8\u5206\u770b\u8d77\u6765\u5f88\u6709\u7528\uff0c\u4f46\u5b9e\u9645\u4e0a\u5728\u7c7b\u578b\u68c0\u67e5\u65b9\u9762\u4e0e `any` \u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u6839\u636e\u4f60\u7684\u610f\u56fe\uff0c\u53ef\u4ee5\u9009\u62e9 `any`, `string`, \u6216 `string | object`.\n\n#### \u5220\u9664\u4e00\u4e2a\u5305\n\n\u5f53\u4e00\u4e2a\u5305 [\u6346\u7ed1](http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html) \u4e86\u81ea\u5df1\u7684\u7c7b\u578b\u65f6\uff0c\u5e94\u8be5\u4ece Definitely Typed \u4e2d\u5220\u9664\u7c7b\u578b\u907f\u514d\u88ab\u6df7\u6dc6\u3002\n\n\u4f60\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u5220\u9664\u5b83 `npm run not-needed -- typingsPackageName asOfVersion sourceRepoURL [libraryName]`.\n- `typingsPackageName`: \u8fd9\u662f\u4f60\u8981\u5220\u9664\u7684\u76ee\u5f55\u540d\u5b57.\n- `asOfVersion`: \u5c06\u4f7f\u7528\u6b64\u7248\u672c\u5c06\u5b58\u6839\u53d1\u5e03\u5230 `@types/foo`. \u7248\u672c\u53f7\u5e94\u8be5\u9ad8\u4e8e\u5f53\u524d\u53d1\u5e03\u7684\u4efb\u4f55\u7248\u672c\uff0c\u5e76\u4e14\u5e94\u8be5\u662f npm \u4e0a\u7684 `foo` \u7248\u672c\u3002\n- `libraryName`: \u66ff\u6362 Definitely Typed \u4e2d\u7c7b\u578b\u7684 npm \u7684\u5305\u540d\u3002\u901a\u5e38\u8fd9\u4e0e \"typingsPackageName\" \u76f8\u540c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f60\u53ef\u4ee5\u5ffd\u7565\u5b83\u3002\n\nDefinitely Typed \u4e2d\u5176\u4ed6\u5f15\u7528\u4e86\u5220\u9664\u5305\u7684\u4efb\u4f55\u5305\uff0c\u90fd\u9700\u8981\u53bb\u66f4\u65b0\u53bb\u5f15\u7528\u65b0\u7684\u6346\u7ed1\u7c7b\u578b\u3002\n\u4f60\u53ef\u4ee5\u67e5\u770b `npm run test` \u4e2d\u7684\u9519\u8bef\u6765\u83b7\u5f97\u6b64\u5217\u8868\u3002\n\u6dfb\u52a0\u4e00\u4e2a\u5e26\u6709 `\"dependencies\": { \"foo\": \"x.y.z\" }` \u7684 `package.json` \u6587\u4ef6\uff0c\u53bb\u4fee\u590d\u8fd9\u4e9b\u9519\u8bef\u3002\n\u6bd4\u5982\uff1a\n\n```json\n{\n  \"private\": true,\n  \"dependencies\": {\n    \"foo\": \"^2.6.0\"\n  }\n}\n```\n\n\u5f53\u4f60\u5c06 `package.json` \u6dfb\u52a0\u5230 `foo` \u4f9d\u8d56\u7684\u65f6\u5019\uff0c\u4f60\u8fd8\u9700\u8981\u53d1\u8d77\u4e00\u4e2a PR, \u5c06 `foo` \u6dfb\u52a0\u5230 [\"types-publisher\" \u4e2d\u7684 \"dependenciesWhitelist.txt\"](https://github.com/Microsoft/types-publisher/blob/master/dependenciesWhitelist.txt).\n\n\u5982\u679c\u8fd9\u4e2a\u5305\u4ece\u672a\u53d1\u5e03\u5230 Definitely Typed \u8fc7\uff0c\u5219\u4e0d\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230 `notNeededPackages.json`.\n\n#### Linter\n\n\u6240\u6709\u65b0\u7684\u5305\u90fd\u5fc5\u987b\u901a\u8fc7 lint. \u9700\u8981\u6dfb\u52a0 `tslint.json` \u6587\u4ef6\u53bb lint \u8fd9\u4e2a\u5305\u3002\n```js\n{\n    \"extends\": \"dtslint/dt.json\"\n}\n```\n\n\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u5df2\u5b8c\u6210\u9879\u76ee\u91cc `tslint.json` \u6587\u4ef6\u7684\u552f\u4e00\u5185\u5bb9\u3002\u5982\u679c\u8fd9\u4e2a\u6587\u4ef6\u5173\u95ed\u4e86\u67d0\u4e9b\u89c4\u5219\uff0c\u662f\u56e0\u4e3a\u5b83\u8fd8\u672a\u5b8c\u5168\u4fee\u590d\u3002\u4f8b\u5982\uff1a\n```js\n{\n    \"extends\": \"dtslint/dt.json\",\n    \"rules\": {\n        // This package uses the Function type, and it will take effort to fix.\n        \"ban-types\": false\n    }\n}\n```\n\n(\u82e5\u8981\u4f7f\u67d0\u4e2a lint \u89c4\u5219\u4e0d\u751f\u6548\uff0c\u53ef\u4ee5\u4f7f\u7528 `// tslint:disable rule-name`\uff0c\u5f53\u7136\u4f7f\u7528 `//tslint:disable-next-line rule-name` \u66f4\u597d\u3002)\n\n\u82e5\u8981\u58f0\u660e\u7684\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u7ed9\u5b9a\u7c7b\u578b\uff0c\u8bf7\u4f7f\u7528 `$ExpectType`. \u82e5\u8981\u58f0\u660e\u7684\u8868\u8fbe\u5f0f\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\uff0c\u8bf7\u4f7f\u7528 `$ExpectError`.\n\n```js\n// $ExpectType void\nf(1);\n\n// $ExpectError\nf(\"one\");\n```\n\n\u4f60\u53ef\u4ee5\u67e5\u9605 [dtslint](https://github.com/Microsoft/dtslint#write-tests) \u7684 readme \u53bb\u770b\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\n\n## \u9a8c\u8bc1\n\n\u901a\u8fc7\u8fd0\u884c `npm run lint package-name` \u53bb\u6d4b\u8bd5\u4f60\u7684\u6539\u52a8\uff0c\u5176\u4e2d `package-name` \u662f\u4f60\u7684\u5305\u540d\u3002\n\u8fd9\u4e2a\u811a\u672c\u4f7f\u7528\u4e86 [dtslint](https://github.com/Microsoft/dtslint).\n\n\n## FAQ\n\n#### \u8fd9\u4e2a\u4ed3\u5e93\u548c NPM \u4e0a\u7684 `@types` \u5305\u7a76\u7adf\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\n\n`master` \u5206\u652f\u4f1a\u901a\u8fc7 [types-publisher](https://github.com/Microsoft/types-publisher) \u81ea\u52a8\u53d1\u5e03\u5230 NPM \u4e0a\u7684 `@types`.\n\n#### \u6211\u5df2\u7ecf\u53d1\u8d77\u4e86 PR, \u5b83\u591a\u4e45\u4f1a\u88ab\u5408\u5e76\uff1f\n\n\u8fd9\u5f97\u770b\u60c5\u51b5\uff0c\u4f46\u662f\u5927\u591a\u6570\u7684 PR \u4f1a\u5728\u4e00\u5468\u5185\u88ab\u5408\u5e76\u3002\u5df2\u7ecf\u7531\u5b9a\u4e49\u5305\u5934\u90e8\u4e2d\u7684\u4f5c\u8005\u540c\u610f\u7684 PR \u901a\u5e38\u4f1a\u66f4\u5feb\u88ab\u5408\u5e76\u3002\u65b0\u5b9a\u4e49\u7c7b\u578b\u7684 PR \u9700\u8981\u66f4\u591a\u65f6\u95f4\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u7ef4\u62a4\u4eba\u5458\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u53bb\u5ba1\u6838\u3002\u6bcf\u4e00\u4e2a PR \u5728\u5408\u5e76\u4e4b\u524d\u90fd\u4f1a\u7531 TypeScript \u6216 Definitely Typed \u7684\u56e2\u961f\u6210\u5458\u8fdb\u884c\u5ba1\u6838\uff0c\u6240\u4ee5\u8bf7\u8010\u5fc3\u7b49\u5f85\u8fd9\u4e9b\u56e0\u4e3a\u4eba\u4e3a\u56e0\u7d20\u5bfc\u81f4\u7684\u5ef6\u8fdf\u3002\u901a\u8fc7\u67e5\u770b [New Pull Request Status Board](https://github.com/DefinitelyTyped/DefinitelyTyped/projects/5)\uff0c\u53ef\u4ee5\u770b\u5230\u7ef4\u62a4\u4eba\u5458\u5728\u5f00\u653e PRs \u7684\u5de5\u4f5c\u8fdb\u5ea6\u3002\n\n#### \u6211\u7684 PR \u88ab\u5408\u5e76\u4e86\uff0c\u4ec0\u4e48\u65f6\u5019 `@types` \u7684 NPM \u5305\u4f1a\u88ab\u66f4\u65b0\uff1f\n\nNPM \u5305\u5e94\u8be5\u4f1a\u5728\u51e0\u5206\u949f\u5185\u66f4\u65b0\u3002\u5982\u679c\u5df2\u7ecf\u8d85\u8fc7\u4e86\u4e00\u5c0f\u65f6\uff0c\u8bf7\u5728 [the Definitely Typed Gitter channel](https://gitter.im/DefinitelyTyped/DefinitelyTyped) \u4e0a\u63d0\u53ca PR \u7684\u7f16\u53f7\uff0c\u5f53\u524d\u7ef4\u62a4\u8005\u4f1a\u8ba9\u56e2\u961f\u6210\u5458\u53bb\u8c03\u67e5\u3002\n\n#### \u6211\u6b63\u5728\u7f16\u5199\u4e00\u4e2a\u4f9d\u8d56\u5176\u4ed6\u7c7b\u578b\u5b9a\u4e49\u7684\u7c7b\u578b\u5b9a\u4e49\u3002\u6211\u5e94\u8be5\u4f7f\u7528 `<reference types=\"\" />` \u8fd8\u662f\u5bfc\u5165\uff1f\n\n\u5982\u679c\u4f60\u5f15\u7528\u7684\u5916\u90e8\u6a21\u5757\uff08\u4f7f\u7528 `export`\uff09\uff0c\u90a3\u4e48\u8bf7\u4f7f\u7528\u5bfc\u5165\u3002\n\u5982\u679c\u4f60\u5f15\u7528\u7684\u662f\u73af\u5883\u6a21\u5757\uff08\u4f7f\u7528 `declare module`, \u6216\u8005\u53ea\u58f0\u660e\u5168\u5c40\u53d8\u91cf\uff09\uff0c\u90a3\u4e48\u8bf7\u4f7f\u7528 `<reference types=\"\" />`.\n\n#### \u6211\u6ce8\u610f\u5e26\u8fd9\u91cc\u6709\u4e00\u4e9b\u5305\u542b `package.json` \u7684\u5305\u3002\n\n\u901a\u5e38\u4f60\u4e0d\u9700\u8981\u5b83\u3002\nDefinitely Typed \u5305\u7684\u53d1\u5e03\u8005\u4f1a\u4e3a\u5728 Definitely Typed \u4e4b\u5916\u6ca1\u6709\u4f9d\u8d56\u7684\u5305\u521b\u5efa\u4e00\u4e2a `package.json` \u6587\u4ef6\u3002\n`package.json` \u5305\u542b\u4e86\u6307\u5b9a\u7684\u800c\u4e0d\u662f\u5176\u4ed6 `@types` \u5305\u7684\u4f9d\u8d56\u3002\n\u5f53\u4f60\u53d1\u5e03\u5305\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a `package.json` \u7684\u6587\u4ef6\u3002\n[Pikaday \u662f\u4e00\u4e2a\u597d\u7684\u4f8b\u5b50](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/pikaday/package.json)\u3002\n\u5305\u542b `package.json` \u4ee5\u4fbf\u89e3\u6790\u4f9d\u8d56\u3002\u8fd9\u6709\u4e2a [\u793a\u4f8b](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/pikaday/package.json)\u3002\n\u4f60\u8fd8\u9700\u8981\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230[\u5141\u8bb8\u7684\u5305\u5217\u8868](https://github.com/microsoft/types-publisher/blob/master/dependenciesWhitelist.txt)\u3002\n\u5373\u4f7f\u4f60\u7f16\u5199\u81ea\u5df1\u7684 `package.json` \u6587\u4ef6\uff0c\u4e5f\u53ea\u80fd\u6307\u5b9a\u4f9d\u8d56\u9879\u3002\u4e0d\u5141\u8bb8\u4f7f\u7528\u5176\u4ed6\u5b57\u6bb5\uff0c\u4f8b\u5982 `\"description\"`.\n\u8be5\u5217\u8868\u662f\u4eba\u4e3a\u66f4\u65b0\uff0c\u8fd9\u8ba9\u6211\u4eec\u786e\u4fdd\u4e86 `@types` \u5305\u4e0d\u4f1a\u4f9d\u8d56\u6076\u610f\u5305\u3002\n\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c`@types` \u5305\u4f1a\u88ab\u5220\u9664\uff0c\u800c\u4e0d\u662f\u6e90\u7801\u5305\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u4f60\u9700\u8981\u4f9d\u8d56\u65e7\u7684\u5df2\u7ecf\u5220\u9664\u7684 `@types` \u5305\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0\u5bf9 `@types` \u5305\u7684\u4f9d\u8d56\u3002\n\u518d\u6dfb\u52a0\u5230\u5141\u8bb8\u7684\u5305\u5217\u8868\u4e2d\u65f6\uff0c\u8bf7\u786e\u4fdd\u4f5c\u51fa\u89e3\u91ca\uff0c\u4ee5\u4fbf\u8ba9\u4eba\u5de5\u7ef4\u62a4\u8005\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\n#### \u6709\u4e9b\u5305\u6ca1\u6709 `tslint.json` \u6587\u4ef6\uff0c\u6709\u4e9b `tsconfig.json` \u6587\u4ef6\u7f3a\u5c11 `\"noImplicitAny\": true`, `\"noImplicitThis\": true`, \u6216 `\"strictNullChecks\": true`.\n\n\u5f53\u7136\u5b83\u4eec\u662f\u9519\u8bef\u7684\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u53d1\u8d77 PR \u6765\u4fee\u590d\u5b83\u4eec\u3002\n\n#### \u6211\u53ef\u4ee5\u8bf7\u6c42\u7c7b\u578b\u5b9a\u4e49\u5417\uff1f\n\n\u8fd9\u91cc\u662f [\u5f53\u524d\u5728\u8bf7\u6c42\u7684\u7c7b\u578b\u5b9a\u4e49](https://github.com/DefinitelyTyped/DefinitelyTyped/labels/Definition%3ARequest)\u3002\n\n#### DOM \u4e0a\u7684\u7c7b\u578b\u5b9a\u4e49\u662f\u4ec0\u4e48\uff1f\n\n\u5982\u679c\u7c7b\u578b\u662f Web \u6807\u51c6\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4eec\u5e94\u8be5\u88ab\u8d21\u732e\u7ed9 [TSJS-lib-generator](https://github.com/Microsoft/TSJS-lib-generator), \u4ee5\u4fbf\u5b83\u4eec\u6210\u4e3a\u9ed8\u8ba4 `lib.dom.d.ts` \u7684\u4e00\u90e8\u5206\u3002\n\n#### \u5982\u679c\u4e00\u4e2a\u5305\u4e0d\u5bfc\u51fa\u6a21\u5757\uff0c\u90a3\u4e48\u4e3a\u4e86\u80fd\u4f7f\u7528 ES6 \u98ce\u683c\uff0c\u6211\u662f\u5426\u5e94\u8be5\u4f7f\u7528\u7a7a\u7684\u547d\u540d\u7a7a\u95f4\uff1f\n\n\u6709\u4e9b\u5305\uff0c\u6bd4\u5982 [chai-http](https://github.com/chaijs/chai-http), \u5bfc\u51fa\u4e00\u4e2a\u51fd\u6570\u3002\n\n\u4f7f\u7528 ES6 \u98ce\u683c\u5bfc\u5165\u6b64\u6a21\u5757\u7684\u5f62\u5f0f\u4e3a `import * as foo from \"foo\";`, \u4f1a\u62a5\u4e0b\u9762\u7684\u9519\u8bef\uff1a\n\n> error TS2497: Module 'foo' resolves to a non-module entity and cannot be imported using this construct\n\n\u901a\u8fc7\u5c06\u51fd\u6570\u58f0\u660e\u548c\u540c\u540d\u7684\u7a7a\u547d\u540d\u7a7a\u95f4\u5408\u5e76\u53ef\u4ee5\u6291\u5236\u6b64\u9519\u8bef\uff0c\u4f46\u4e0d\u9f13\u52b1\u8fd9\u79cd\u505a\u6cd5\u3002\n\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u8fd9\u662f\u5e38\u88ab\u5f15\u7528\u7684 [Stack Overflow \u7b54\u6848](https://stackoverflow.com/questions/39415661/what-does-resolves-to-a-non-module-entity-and-cannot-be-imported-using-this)\u3002\n\n\u4f7f\u7528 `import foo = require(\"foo\");` \u8bed\u6cd5\u5bfc\u5165\u6a21\u5757\u66f4\u5408\u9002\u3002\n\u4e0d\u8fc7\uff0c\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u50cf `import foo from \"foo\";` \u8fd9\u6837\u7684\u9ed8\u8ba4\u5bfc\u5165\uff0c\u4f60\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\n- \u4f60\u53ef\u4ee5\u4f7f\u7528 [`--allowSyntheticDefaultImports` \u7684\u7f16\u8bd1\u5668\u9009\u9879](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-1-8.html#support-for-default-import-interop-with-systemjs) \u53d6\u51b3\u4e8e\u4f60\u7684\u6a21\u5757\u8fd0\u884c\u662f\u652f\u6301 non-ECMAScript \u6a21\u5757\u7684\u4e92\u64cd\u4f5c\u65b9\u6848 \uff0c\u5373\u9ed8\u8ba4\u5bfc\u5165\u662f\u5426\u9002\u7528\u4e8e\u4f60\u7684\u73af\u5883\uff08\u4f8b\u5982 Webpack, SystemJS, esm\uff09\u3002\n- \u4f60\u53ef\u4ee5\u4f7f\u7528 [`--esModuleInterop` \u7684\u7f16\u8bd1\u5668\u9009\u9879](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#support-for-import-d-from-cjs-form-commonjs-modules-with---esmoduleinterop)\uff0c\u5982\u679c\u4f60\u60f3\u4f7f\u7528 TypeScript \u53bb\u5904\u7406 non-ECMAScript \u7684\u64cd\u4f5c\uff08\u4ece Typescript 2.7 \u7248\u672c\u5f00\u59cb\uff09\u3002\n\n#### \u4e00\u4e2a\u5305\u4f7f\u7528\u4e86 `export =`, \u4f46\u662f\u6211\u66f4\u559c\u6b22\u4f7f\u7528\u9ed8\u8ba4\u5bfc\u5165\u3002\u6211\u53ef\u4ee5\u5c06 `export =` \u6539\u4e3a `export default` \u5417\uff1f\n\n\u8ddf\u4e4b\u524d\u7684\u95ee\u9898\u4e00\u6837\uff0c\u53c2\u8003\u4f7f\u7528 [`--allowSyntheticDefaultImports`](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-1-8.html#support-for-default-import-interop-with-systemjs)\n\u6216 [`--esModuleInterop`](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#support-for-import-d-from-cjs-form-commonjs-modules-with---esmoduleinterop)\n\u7684\u7f16\u8bd1\u5668\u9009\u9879\u3002\n\n\u8bf7\u4e0d\u8981\u66f4\u6539\u51c6\u786e\u7684\u7c7b\u578b\u5b9a\u4e49\u3002\n\u5bf9\u4e8e\u4e00\u4e2a NPM \u5305\uff0c\u5982\u679c\u4f7f\u7528 `node -p 'require(\"foo\")'` \u53bb\u5bfc\u5165\u6a21\u5757\uff0c\u90a3\u4e48 `export =` \u662f\u51c6\u786e\u7684\u3002\u5982\u679c\u4f7f\u7528 `node -p 'require(\"foo\").default'` \u53bb\u5bfc\u5165\u6a21\u5757\uff0c\u90a3\u4e48 `export default` \u662f\u51c6\u786e\u7684\u3002\n\n#### \u6211\u60f3\u4f7f\u7528 TypeScript 3.1 \u6216\u66f4\u9ad8\u7248\u672c\u7684\u529f\u80fd\u3002\n\n\u90a3\u4e48\u4f60\u5fc5\u987b\u5728\u4f60\u7684\u5b9a\u4e49\u5934\u90e8\u7684\u6700\u540e\u4e00\u884c\u6dfb\u52a0\u6ce8\u91ca\uff08\u5728 `// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped` \u4e4b\u540e\uff09\uff1a`// TypeScript Version: 3.1`.\n\u4f46\u662f\uff0c\u5982\u679c\u4f60\u7684\u9879\u76ee\u5728\u7ef4\u62a4\u7c7b\u578b\u65f6\u9700\u8981\u5728\u517c\u5bb9 3.1 \u7248\u672c\u53ca\u4ee5\u4e0a\u7684\u540c\u65f6\u8fd8\u8981\u517c\u5bb9 3.0 \u53ca\u4ee5\u4e0b\u7684\u7248\u672c\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u53ea\u6709\u5728 TypeScript 3.1 \u53ca\u4ee5\u4e0a\u7248\u672c\u7684\u65b0\u7279\u6027 `typesVersions`.\n\u4f60\u53ef\u4ee5\u5728 [\u5b98\u65b9 TypeScript \u6587\u6863](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-1.html#version-selection-with-typesversions) \u4e2d\u627e\u5230\u6b64\u529f\u80fd\u7684\u8be6\u7ec6\u8bf4\u660e\u3002\n\n\u8fd9\u91cc\u662f\u4e2a\u7b80\u77ed\u7684\u8bf4\u660e\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5165\u95e8\uff1a\n\n1. \u4f60\u5fc5\u987b\u5728\u5305\u5b9a\u4e49\u4e2d\u6dfb\u52a0 `package.json` \u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n```json\n{\n    \"private\": true,\n    \"types\": \"index\",\n    \"typesVersions\": {\n        \">=3.1.0-0\": { \"*\": [\"ts3.1/*\"] }\n    }\n}\n```\n\n2. \u5728\u4f60\u7684\u7c7b\u578b\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u5728 `typesVersions` \u5b57\u6bb5\u4e2d\u63d0\u5230\u7684\u5b50\u76ee\u5f55\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a `ts3.1/`\uff09\uff0c\u5e76\u4e3a\u8fd9\u4e2a\u65b0\u7248\u672c\u6dfb\u52a0\u7279\u5b9a\u7684\u7c7b\u578b\u548c\u6d4b\u8bd5\u3002\u4f60\u4e0d\u9700\u8981\u5728 `ts3.1/` \u76ee\u5f55\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6587\u4ef6\u6dfb\u52a0\u4f20\u7edf\u7684\u5b9a\u4e49\u5934\u90e8\u3002\n\n3. \u5c06 `ts3.1/tsconfig.json` \u4e2d `baseUrl` \u548c `typeRoots` \u9009\u9879\u8bbe\u7f6e\u6210\u6b63\u786e\u7684\u8def\u5f84\uff0c\u5b83\u4eec\u5e94\u8be5\u5982\u4e0b\u6240\u793a\uff1a\n```json\n{\n    \"compilerOptions\": {\n        \"baseUrl\": \"../../\",\n        \"typeRoots\": [\"../../\"]\n    }\n}\n```\n\n\u4f60\u53ef\u4ee5\u5728 [\u8fd9\u91cc](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/debounce-promise) \u548c [\u8fd9\u91cc](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/create-html-element) \u67e5\u770b\u793a\u4f8b\u3002\n\n#### \u6211\u60f3\u53bb\u6dfb\u52a0\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u5b58\u5728\u4e8e TypeScript \u7684 DOM API.\n\n\u8fd9\u5c5e\u4e8e [TSJS-Lib-Generator](https://github.com/Microsoft/TSJS-lib-generator#readme). \u8bf7\u9605\u8bfb\u90a3\u91cc\u7684\u6307\u5357\u3002\n\u5982\u679c\u6807\u51c6\u4ecd\u7136\u662f\u8349\u6848\uff0c\u5219\u5b83\u5c5e\u4e8e\u8fd9\u91cc\u3002\n\u4f7f\u7528\u4ee5 `dom-` \u5f00\u5934\u7684\u540d\u79f0\uff0c\u5e76\u5728\u5934\u90e8\u4e2d\u5305\u542b\u6307\u5411\u6807\u51c6\u7684\u94fe\u63a5\u4f5c\u4e3a\u9879\u76ee\u7684\u94fe\u63a5\u3002\n\u5f53\u5b83\u7ed3\u675f\u8349\u6848\u6a21\u5f0f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4ece Definitely Typed \u5220\u9664\uff0c\u5e76\u5f03\u7528\u76f8\u5173\u7684 `@types`\u5305\u3002\n\n#### Definitely Typed \u5305\u7248\u672c\u53f7\u5982\u4f55\u4e0e\u5bf9\u5e94\u5e93\u7684\u7248\u672c\u53f7\u76f8\u5173\u8054\uff1f\n\n_\u6ce8\u610f\uff1a\u672c\u8282\u4e2d\u7684\u8ba8\u8bba\u5047\u5b9a\u4f60\u719f\u6089 [\u8bed\u4e49\u7248\u672c\u63a7\u5236](https://semver.org/)_\n\n\u6bcf\u4e2a Definitely Typed \u5305\u5728\u53d1\u5e03\u5230 NPM \u65f6\u90fd\u4f1a\u8fdb\u884c\u7248\u672c\u63a7\u5236\u3002\n[types-publisher](https://github.com/Microsoft/types-publisher) (\u5c06 `@types` \u5305\u53d1\u5e03\u5230 npm \u7684\u5de5\u5177) \u4f1a\u901a\u8fc7\u5c06 `major.minor` \u7248\u672c\u53f7\u5199\u5728 `index.d.ts` \u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u6765\u8bbe\u7f6e\u5b9a\u4e49\u5305\u7684\u7248\u672c\u53f7\u3002\n\u4f8b\u5982\uff0c\u4ee5\u4e0b\u662f `10.12.x` \u7248\u672c\u7684 [Node \u7684\u7c7b\u578b\u58f0\u660e](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/1253faabf5e0d2c5470db6ea87795d7f96fef7e2/types/node/index.d.ts) \u7684\u524d\u51e0\u884c\uff1a\n\n```js\n// Type definitions for Node.js 10.12\n// Project: http://nodejs.org/\n// Definitions by: Microsoft TypeScript <https://github.com/Microsoft>\n//                 Definitely Typed <https://github.com/DefinitelyTyped>\n//                 Alberto Schiabel <https://github.com/jkomyno>\n```\n\n\u56e0\u4e3a `10.12` \u5728\u7b2c\u4e00\u884c\u7684\u672b\u5c3e\uff0c\u6240\u4ee5 `@types/node` \u5305\u7684\u7248\u672c\u53f7\u4e5f\u662f `10.12.x`.\n\u6ce8\u610f\u5728 `index.d.ts` \u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u6ce8\u91ca\u4e2d\u5e94\u8be5\u53ea\u5305\u542b `major.minor` \u7684\u7248\u672c\u53f7\uff08\u6bd4\u5982 `10.12`\uff09\uff0c\u4e0d\u5e94\u8be5\u5305\u542b\u8865\u4e01\u7248\u672c\uff08\u4f8b\u5982 `10.12.4`\uff09\u3002\n\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u4e3b\u8981\u7248\u672c\u53f7\u548c\u6b21\u8981\u7248\u672c\u53f7\u5728\u5e93\u5305\u548c\u7c7b\u578b\u58f0\u660e\u5305\u4e4b\u95f4\u76f8\u5bf9\u9f50\u3002\n\u7c7b\u578b\u58f0\u660e\u5305\u7684\u8865\u4e01\u7248\u672c\u53f7\uff08\u6bd4\u5982 `10.12.0` \u4e2d\u7684 `.0`\uff09\u662f\u7531 Definitely Typed \u521d\u59cb\u5316\u4e3a 0\uff0c\u6bcf\u6b21\u5c06\u65b0\u7684 `@types/node` \u5305\u53d1\u5e03\u5230\u5bf9\u5e94\u5e93\u7684\u540c\u4e00\u4e3b/\u6b21\u7248\u672c\u7684 NPM \u662f\uff0c\u4ed6\u90fd\u4f1a\u9012\u589e\u3002\n\n\u6709\u65f6\u5019\uff0c\u7c7b\u578b\u58f0\u660e\u5305\u7684\u7248\u672c\u53f7\u548c\u5e93\u5305\u7684\u7248\u672c\u53f7\u53ef\u80fd\u4f1a\u4e0d\u540c\u6b65\u3002\n\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u539f\u56e0\uff0c\u662f\u6309\u7167\u7ed9\u5e93\u7684\u7528\u6237\u5e26\u6765\u4e0d\u4fbf\u7684\u987a\u5e8f\u6392\u5e8f\u7684\u3002\n\u53ea\u6709\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u901a\u5e38\u662f\u6709\u95ee\u9898\u7684\u3002\n\n* \u5982\u4e0a\u6240\u793a\uff0c\u7c7b\u578b\u5b9a\u4e49\u5305\u7684\u8865\u4e01\u7248\u672c\u4e0e\u5e93\u5305\u7684\u8865\u4e01\u7248\u672c\u662f\u65e0\u5173\u7684\u3002\u8fd9\u5141\u8bb8 Definitely Typed \u5b89\u5168\u5730\u66f4\u65b0\u540c\u4e00\u4e3b/\u6b21\u7248\u672c\u7684\u7c7b\u578b\u58f0\u660e\u3002\n* \u5982\u679c\u8981\u66f4\u65b0\u5305\u53bb\u83b7\u53d6\u65b0\u7684\u529f\u80fd\uff0c\u8bf7\u4e0d\u8981\u5fd8\u8bb0\u66f4\u65b0\u7248\u672c\u53f7\u4ee5\u4e0e\u8be5\u7248\u672c\u7684\u5e93\u5bf9\u9f50\u3002\n* \u7c7b\u578b\u5b9a\u4e49\u5305\u7684\u66f4\u65b0\u843d\u540e\u4e8e\u5e93\u7684\u539f\u56e0\u901a\u5e38\u662f\u56e0\u4e3a\u5e93\u7528\u6237\u800c\u4e0d\u662f\u7ef4\u62a4\u8005\uff0c\u4ed6\u4eec\u5728\u53d1\u5e03\u65b0\u7279\u6027\u4ece\u800c\u66f4\u65b0\u4e86\u5e93\u7684\u7248\u672c\u3002\u56e0\u6b64\uff0c\u5728\u613f\u610f\u5e2e\u5fd9\u7684\u793e\u533a\u6210\u5458\u53d1\u9001 PR \u53bb\u66f4\u65b0\u65b0\u7684\u5e93\u7248\u672c\u5bf9\u5e94\u7684\u7c7b\u578b\u58f0\u660e\u5305\u4e4b\u524d\uff0c\u53ef\u80fd\u4f1a\u6709\u51e0\u5929\uff0c\u51e0\u5468\u751a\u81f3\u51e0\u4e2a\u6708\u7684\u6ede\u540e\u3002\u5982\u679c\u4f60\u6df1\u53d7\u6b64\u5f71\u54cd\uff0c\u4f60\u53ef\u4ee5\u6210\u4e3a\u4f60\u60f3\u6539\u53d8\u7684\uff0c\u4f60\u53ef\u4ee5\u53bb\u6210\u4e3a\u4e50\u4e8e\u52a9\u4eba\u7684\u793e\u533a\u6210\u5458\uff01\n\n:exclamation: \u5982\u679c\u4f60\u60f3\u66f4\u65b0\u5e93\u7684\u7c7b\u578b\u58f0\u660e\uff0c\u8bf7\u8bb0\u4f4f\u59cb\u7ec8\u8981\u5728 `index.d.ts` \u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u8bbe\u7f6e `major.minor` \u7684\u7248\u672c\u53f7\u53bb\u5339\u914d\u4f60\u6b63\u5728\u8bb0\u5f55\u7684\u5e93\u7248\u672c\uff01 :exclamation:\n\n#### \u5982\u679c\u4e00\u4e2a\u5305\u505a\u4e86\u91cd\u5927\u7684\u4fee\u6539\u800c\u66f4\u65b0\u4e86\u4e3b\u8981\u7248\u672c\uff0c\u6211\u5e94\u8be5\u5982\u4f55\u66f4\u65b0\u5b83\u7684\u7c7b\u578b\u58f0\u660e\u5305\uff1f\n\n[\u8bed\u4e49\u7248\u672c\u63a7\u5236](https://semver.org/) \u8981\u6c42\u5177\u6709\u91cd\u5927\u4fee\u6539\u7684\u7248\u672c\u5fc5\u987b\u589e\u52a0\u4e3b\u7248\u672c\u53f7\u3002\n\u4f8b\u5982\uff0c\u4e00\u4e2a\u5e93\u5728 `3.5.8` \u7248\u672c\u4e4b\u540e\u5220\u9664\u4e86\u4e00\u4e2a\u516c\u6709\u7684\u5bfc\u51fa\u51fd\u6570\uff0c\u90a3\u4e48\u5b83\u7684\u4e0b\u4e00\u7248\u672c\u5fc5\u987b\u5347\u7ea7\u5230 `4.0.0`.\n\u6b64\u5916\uff0c\u5f53\u8be5\u5e93\u7684 `4.0.0` \u7248\u672c\u53d1\u5e03\u65f6\uff0c\u5b83\u7684\u7c7b\u578b\u58f0\u660e\u5305\u4e5f\u9700\u8981\u66f4\u65b0\u5230 `4.0.0`, \u5305\u62ec\u5bf9\u8be5\u5e93 API \u7684\u4efb\u4f55\u91cd\u5927\u4fee\u6539\u3002\n\n\u8bb8\u591a\u5e93\u90fd\u6709\u5927\u91cf\u7684\u5f00\u53d1\u4eba\u5458\uff08\u5305\u62ec\u4f7f\u7528\u8be5\u5e93\u4f5c\u4e3a\u4f9d\u8d56\u7684\u5176\u4ed6\u5305\u7684\u7ef4\u62a4\u8005\uff09\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u7acb\u5373\u8fc1\u79fb\u5230\u5177\u6709\u91cd\u5927\u6539\u53d8\u7684\u65b0\u7248\u672c\u3002\u56e0\u4e3a\u7ef4\u62a4\u4eba\u5458\u9700\u8981\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u53bb\u91cd\u5199\u4ee3\u7801\u4ee5\u9002\u5e94\u65b0\u7248\u672c\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u65e7\u7248\u672c\u5e93\u7684\u7528\u6237\u4ecd\u7136\u60f3\u53bb\u66f4\u65b0\u65e7\u7248\u672c\u7684\u7c7b\u578b\u58f0\u660e\u3002\n\n\u5982\u679c\u4f60\u6253\u7b97\u7ee7\u7eed\u66f4\u65b0\u65e7\u7248\u672c\u5e93\u7684\u7c7b\u578b\u58f0\u660e\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4ee5\u5f53\u524d\u7248\u672c\uff08\u5f88\u5feb\u5c31\u662f\u65e7\u7248\u672c\uff09\u547d\u540d\u7684\u65b0\u7684\u5b50\u6587\u4ef6\u5939\uff08\u6bd4\u5982 `/v2/`\uff09\uff0c\u5e76\u5c06\u73b0\u6709\u7248\u672c\u7684\u6587\u4ef6\u90fd\u62f7\u8d1d\u8fdb\u53bb\u3002\n\n\u56e0\u4e3a\u6839\u6587\u4ef6\u5939\u59cb\u7ec8\u5305\u542b\u6700\u65b0\u7248\u672c\u7684\u7c7b\u578b\u58f0\u660e\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u5bf9\u65e7\u7248\u672c\u5b50\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\uff0c\u4ee5\u786e\u4fdd\u76f8\u5bf9\u8def\u5f84\u7684\u5f15\u7528\u6307\u5411\u5b50\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u6839\u76ee\u5f55\u3002\n\n1. \u66f4\u65b0 `tsconfig.json` \u548c `tslint.json` \u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\u3002\n2. \u6dfb\u52a0\u8def\u5f84\u6620\u5c04\u89c4\u5219\u4ee5\u786e\u4fdd\u6d4b\u8bd5\u80fd\u591f\u9488\u5bf9\u9884\u671f\u7248\u672c\u8fd0\u884c\u3002\n\n\u4f8b\u5982\uff0c[`history`](https://github.com/ReactTraining/history/) \u5e93\u5728 `2.x` \u5230 `3.x` \u7248\u672c\u95f4\u5f15\u5165\u4e86\u91cd\u5927\u7684\u4fee\u6539\u3002\n\u56e0\u4e3a\u8bb8\u591a\u7528\u6237\u4ecd\u7136\u4f7f\u7528\u8f83\u8001\u7684 `2.x` \u7248\u672c\uff0c\u7ef4\u62a4\u4eba\u5458\u60f3\u8981\u5c06\u6b64\u5e93\u7684\u7c7b\u578b\u58f0\u660e\u66f4\u65b0\u5230 `3.x`, \u9700\u8981\u5728\u4ed3\u5e93\u91cc\u6dfb\u52a0 `v2` \u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b\u4e86\u65e7\u7248\u672c\u7684\u7c7b\u578b\u58f0\u660e\u3002\n\u5728\u7f16\u5199\u65f6\uff0c[history v2 `tsconfig.json`](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/1253faabf5e0d2c5470db6ea87795d7f96fef7e2/types/history/v2/tsconfig.json) \u5927\u81f4\u5982\u4e0b\uff1a\n\n```json\n{\n    \"compilerOptions\": {\n        \"baseUrl\": \"../../\",\n        \"typeRoots\": [\"../../\"],\n        \"paths\": {\n            \"history\": [ \"history/v2\" ]\n        },\n    },\n    \"files\": [\n        \"index.d.ts\",\n        \"history-tests.ts\"\n    ]\n}\n```\n\n\u5982\u679c Definitely Typed \u4e0a\u7684\u5176\u4ed6\u5305\u4e0e\u65b0\u7248\u672c\u4e0d\u517c\u5bb9\uff0c\u4f60\u9700\u8981\u5c06\u8def\u5f84\u6620\u5c04\u5230\u65e7\u7248\u672c\u3002\n\u5bf9\u4e8e\u4f9d\u8d56\u4e8e\u65e7\u7248\u672c\u7684\u5305\uff0c\u4f60\u8fd8\u9700\u8981\u9012\u5f52\u5730\u6267\u884c\u6b64\u64cd\u4f5c\u3002\n\n\u4f8b\u5982\uff0c`react-router` \u4f9d\u8d56 `history@2` \u5305\uff0c\u6240\u4ee5 [react-router `tsconfig.json`](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react-router/v2/tsconfig.json) \u6709\u4e00\u4e2a\u6620\u5c04\u5230 `\"history\": [ \"history/v2\" ]` \u7684\u8def\u5f84\u3002\n\u6240\u4ee5\uff0c`react-router-bootstrap`\uff08\u4f9d\u8d56 `react-router` \u5305\uff09\u5728\u5b83\u7684\u4f9d\u8d56 `react-router` \u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u4e4b\u524d\uff0c\u4e5f\u9700\u8981\u5728\u5b83\u7684 `tsconfig.json` \u91cc\u6dfb\u52a0\u76f8\u540c\u7684\u8def\u5f84\u6620\u5c04\uff08`\"history\": [ \"history/v2\" ]`\uff09\u3002\n\n\u6b64\u5916\uff0c`/// <reference types=\"..\" />` \u4e0d\u9002\u7528\u4e8e\u8def\u5f84\u6620\u5c04\uff0c\u56e0\u6b64\u4f9d\u8d56\u9700\u8981\u4f7f\u7528 `import`.\n\n#### \u5982\u4f55\u4e3a\u53ef\u4ee5\u5728\u5168\u5c40\u4f7f\u7528\u7684\u5305\u548c\u4f5c\u4e3a\u6a21\u5757\u7684\u5305\u7f16\u5199\u7c7b\u578b\u5b9a\u4e49\uff1f\n\nTypeScript \u624b\u518c\u5305\u542b\u4e86\u4f18\u79c0\u7684 [\u5173\u4e8e\u7f16\u5199\u7c7b\u578b\u5b9a\u4e49\u7684\u6982\u62ec\u4fe1\u606f](https://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html), \u4ee5\u53ca [\u6b64\u793a\u4f8b\u5b9a\u4e49\u6587\u4ef6](https://www.typescriptlang.org/docs/handbook/declaration-files/templates/global-modifying-module-d-ts.html)\uff0c\u5b83\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 ES6 \u6a21\u5757\u8bed\u6cd5\u521b\u5efa\u5b9a\u4e49\uff0c\u540c\u65f6\u8fd8\u6307\u5b9a\u4e86\u5168\u5c40\u8303\u56f4\u53ef\u7528\u7684\u5bf9\u8c61\u3002\u8fd9\u4e2a\u6280\u672f\u5728 [big.js \u7684\u5b9a\u4e49](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/big.js/index.d.ts) \u5f97\u5230\u4e86\u5b9e\u9645\u8bc1\u660e\u3002\u8be5\u5e93\u53ef\u4ee5\u901a\u8fc7\u7f51\u9875\u4e0a\u7684\u811a\u672c\u6807\u8bb0\u5168\u5c40\u52a0\u8f7d\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 require \u6216\u8005 ES6 \u98ce\u683c\u7684\u98ce\u683c\u5bfc\u5165\u3002\n\n\u8981\u6d4b\u8bd5\u4f60\u7684\u7c7b\u578b\u5b9a\u4e49\u662f\u5426\u80fd\u5168\u5c40\u5f15\u7528\u6216\u8005\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\uff0c\u6e05\u521b\u5efa\u4e00\u4e2a `test` \u6587\u4ef6\uff0c\u5e76\u5728\u5176\u4e2d\u653e\u7f6e\u4e24\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u3002\u4e00\u4e2a\u547d\u540d\u4e3a `YourLibraryName-global.test.ts`, \u53e6\u4e00\u4e2a\u4e3a `YourLibraryName-module.test.ts`. *\u5168\u5c40* \u6d4b\u8bd5\u6587\u4ef6\u5e94\u8be5\u6839\u636e\u5982\u4f55\u5728\u5168\u5c40\u8303\u56f4\u5185\u5e93\u53ef\u7528\u7684\u7f51\u9875\u4e0a\u52a0\u8f7d\u7684\u811a\u672c\u4e2d\u4f7f\u7528\u5b83\u6765\u6267\u884c\u5b9a\u4e49\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e0d\u5e94\u8be5\u5236\u5b9a import \u8bed\u53e5\u3002*\u6a21\u5757* \u6d4b\u8bd5\u6587\u4ef6\u5e94\u8be5\u6839\u636e\u5bfc\u5165\u65f6\u7684\u4f7f\u7528\u65b9\u5f0f\uff08\u5305\u62ec `import` \u8bed\u53e5\uff09\u6765\u6267\u884c\u5b9a\u4e49\u3002\u5982\u679c\u5728 `tsconfig.json` \u6587\u4ef6\u4e2d\u6307\u5b9a\u4e86 `files` \u5c5e\u6027\uff0c\u8bf7\u786e\u4fdd\u5305\u542b\u4e86\u4e24\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u3002big.js \u5b9a\u4e49\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a [\u5b9e\u9645\u4f8b\u5b50](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/big.js/test)\u3002\n\n\u8bf7\u6ce8\u610f\uff0c\u4e0d\u9700\u8981\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u5b8c\u5168\u6267\u884c\u5b9a\u4e49 - \u53ea\u9700\u8981\u5728\u5168\u5c40\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u6d4b\u8bd5\u5168\u5c40\u53ef\u8bbf\u95ee\u5143\u7d20\u5e76\u5728\u6a21\u5757\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u5b8c\u5168\u6267\u884c\u5b9a\u4e49\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n#### \u4ec0\u4e48\u662f\u4f5c\u7528\u57df\u5305\uff1f\n\n\u4f5c\u7528\u57df\u5305 `@foo/bar` \u7684\u7c7b\u578b\u5e94\u8be5\u653e\u5728 `types/foo__bar` \u4e2d\u3002\u8bf7\u6ce8\u610f\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u3002\n\n\u5f53\u4f7f\u7528 `dts-gen` \u53bb\u6784\u5efa\u4f5c\u7528\u57df\u5305\u65f6\uff0c\u5fc5\u987b\u5728\u751f\u6210\u7684 `tsconfig.json` \u4e2d\u624b\u52a8\u8c03\u6574 `paths` \u5c5e\u6027\u53bb\u6b63\u786e\u5f15\u7528\u4f5c\u7528\u57df\u5305\uff1a\n\n```json\n{\n    \"paths\":{\n      \"@foo/bar\": [\"foo__bar\"]\n    }\n}\n```\n\n#### GitHub \u4e2d\u7684\u6587\u4ef6\u8bb0\u5f55\u770b\u8d77\u6765\u4e0d\u5b8c\u6574\u3002\n\nGitHub \u4e0d [\u652f\u6301](http://stackoverflow.com/questions/5646174/how-to-make-github-follow-directory-history-after-renames) \u91cd\u547d\u540d\u6587\u4ef6\u7684\u5386\u53f2\u8bb0\u5f55\u3002\u8bf7\u4f7f\u7528 [`git log --follow`](https://www.git-scm.com/docs/git-log) \u547d\u4ee4\u4ee3\u66ff\u3002\n\n## \u8bb8\u53ef\u8bc1\n\n\u8be5\u9879\u76ee\u6839\u636e MIT \u8bb8\u53ef\u8bc1\u6388\u6743\u3002\n\n\u5b9a\u4e49\u6587\u4ef6\u7684\u7248\u6743\u5206\u522b\u5bf9\u5e94\u4e8e\u6bcf\u4e2a\u5b9a\u4e49\u6587\u4ef6\u5f00\u5934\u5217\u51fa\u7684\u6bcf\u4e2a\u8d21\u732e\u8005\u3002\n"
 },
 {
  "repo": "django/django",
  "language": "Python",
  "readme_contents": "======\nDjango\n======\n\nDjango is a high-level Python Web framework that encourages rapid development\nand clean, pragmatic design. Thanks for checking it out.\n\nAll documentation is in the \"``docs``\" directory and online at\nhttps://docs.djangoproject.com/en/stable/. If you're just getting started,\nhere's how we recommend you read the docs:\n\n* First, read ``docs/intro/install.txt`` for instructions on installing Django.\n\n* Next, work through the tutorials in order (``docs/intro/tutorial01.txt``,\n  ``docs/intro/tutorial02.txt``, etc.).\n\n* If you want to set up an actual deployment server, read\n  ``docs/howto/deployment/index.txt`` for instructions.\n\n* You'll probably want to read through the topical guides (in ``docs/topics``)\n  next; from there you can jump to the HOWTOs (in ``docs/howto``) for specific\n  problems, and check out the reference (``docs/ref``) for gory details.\n\n* See ``docs/README`` for instructions on building an HTML version of the docs.\n\nDocs are updated rigorously. If you find any problems in the docs, or think\nthey should be clarified in any way, please take 30 seconds to fill out a\nticket here: https://code.djangoproject.com/newticket\n\nTo get more help:\n\n* Join the ``#django`` channel on irc.freenode.net. Lots of helpful people hang\n  out there. See https://freenode.net/kb/answer/chat if you're new to IRC.\n\n* Join the django-users mailing list, or read the archives, at\n  https://groups.google.com/group/django-users.\n\nTo contribute to Django:\n\n* Check out https://docs.djangoproject.com/en/dev/internals/contributing/ for\n  information about getting involved.\n\nTo run Django's test suite:\n\n* Follow the instructions in the \"Unit tests\" section of\n  ``docs/internals/contributing/writing-code/unit-tests.txt``, published online at\n  https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests\n"
 },
 {
  "repo": "apache/dubbo",
  "language": "Java",
  "readme_contents": "# Apache Dubbo Project\n\n[![Build Status](https://travis-ci.org/apache/dubbo.svg?branch=master)](https://travis-ci.org/apache/dubbo)\n[![codecov](https://codecov.io/gh/apache/dubbo/branch/master/graph/badge.svg)](https://codecov.io/gh/apache/dubbo)\n![maven](https://img.shields.io/maven-central/v/org.apache.dubbo/dubbo.svg)\n![license](https://img.shields.io/github/license/alibaba/dubbo.svg)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/apache/dubbo.svg)](http://isitmaintained.com/project/apache/dubbo \"Average time to resolve an issue\")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/apache/dubbo.svg)](http://isitmaintained.com/project/apache/dubbo \"Percentage of issues still open\")\n[![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Apache%20Dubbo%20is%20a%20high-performance%2C%20java%20based%2C%20open%20source%20RPC%20framework.&url=http://dubbo.apache.org/&via=ApacheDubbo&hashtags=rpc,java,dubbo,micro-service)\n[![](https://img.shields.io/twitter/follow/ApacheDubbo.svg?label=Follow&style=social&logoWidth=0)](https://twitter.com/intent/follow?screen_name=ApacheDubbo)\n[![Gitter](https://badges.gitter.im/alibaba/dubbo.svg)](https://gitter.im/alibaba/dubbo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nApache Dubbo is a high-performance, Java based open source RPC framework. Please visit [official site](http://dubbo.apache.org) for quick start and documentations, as well as [Wiki](https://github.com/apache/dubbo/wiki) for news, FAQ, and release notes.\n\nWe are now collecting dubbo user info in order to help us to improve Dubbo better, pls. kindly help us by providing yours on [issue#1012: Wanted: who's using dubbo](https://github.com/apache/dubbo/issues/1012), thanks :)\n\n## Architecture\n\n![Architecture](http://dubbo.apache.org/img/architecture.png)\n\n## Features\n\n* Transparent interface based RPC\n* Intelligent load balancing\n* Automatic service registration and discovery\n* High extensibility\n* Runtime traffic routing\n* Visualized service governance\n\n## Getting started\n\nThe following code snippet comes from [Dubbo Samples](https://github.com/apache/dubbo-samples/tree/master/java/dubbo-samples-api). You may clone the sample project and step into `dubbo-samples-api` sub directory before read on.\n\n```bash\n# git clone https://github.com/apache/dubbo-samples.git\n# cd dubbo-samples/java/dubbo-samples-api\n```\n\nThere's a [README](https://github.com/apache/dubbo-samples/tree/master/java/dubbo-samples-api/README.md) file under `dubbo-samples-api` directory. Read it and try this sample out by following the instructions.\n\n### Maven dependency\n\n```xml\n<properties>\n    <dubbo.version>2.7.7</dubbo.version>\n</properties>\n    \n<dependencies>\n    <dependency>\n        <groupId>org.apache.dubbo</groupId>\n        <artifactId>dubbo</artifactId>\n        <version>${dubbo.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.dubbo</groupId>\n        <artifactId>dubbo-dependencies-zookeeper</artifactId>\n        <version>${dubbo.version}</version>\n        <type>pom</type>\n    </dependency>\n</dependencies>\n```\n\n### Define service interfaces\n\n```java\npackage org.apache.dubbo.samples.api;\n\npublic interface GreetingService {\n    String sayHi(String name);\n}\n```\n\n*See [api/GreetingService.java](https://github.com/apache/dubbo-samples/blob/master/java/dubbo-samples-api/src/main/java/org/apache/dubbo/samples/api/GreetingsService.java) on GitHub.*\n\n### Implement service interface for the provider\n\n```java\npackage org.apache.dubbo.samples.provider;\n\nimport org.apache.dubbo.samples.api.GreetingsService;\n\npublic class GreetingsServiceImpl implements GreetingsService {\n    @Override\n    public String sayHi(String name) {\n        return \"hi, \" + name;\n    }\n}\n```\n\n*See [provider/GreetingServiceImpl.java](https://github.com/apache/dubbo-samples/blob/master/java/dubbo-samples-api/src/main/java/org/apache/dubbo/samples/provider/GreetingsServiceImpl.java) on GitHub.*\n\n### Start service provider\n\n```java\npackage org.apache.dubbo.samples.provider;\n\n\nimport org.apache.dubbo.config.ApplicationConfig;\nimport org.apache.dubbo.config.RegistryConfig;\nimport org.apache.dubbo.config.ServiceConfig;\nimport org.apache.dubbo.samples.api.GreetingsService;\n\nimport java.util.concurrent.CountDownLatch;\n\npublic class Application {\n    private static String zookeeperHost = System.getProperty(\"zookeeper.address\", \"127.0.0.1\");\n\n    public static void main(String[] args) throws Exception {\n        ServiceConfig<GreetingsService> service = new ServiceConfig<>();\n        service.setApplication(new ApplicationConfig(\"first-dubbo-provider\"));\n        service.setRegistry(new RegistryConfig(\"zookeeper://\" + zookeeperHost + \":2181\"));\n        service.setInterface(GreetingsService.class);\n        service.setRef(new GreetingsServiceImpl());\n        service.export();\n\n        System.out.println(\"dubbo service started\");\n        new CountDownLatch(1).await();\n    }\n}\n```\n\n*See [provider/Application.java](https://github.com/apache/dubbo-samples/blob/master/java/dubbo-samples-api/src/main/java/org/apache/dubbo/samples/provider/Application.java) on GitHub.*\n\n### Build and run the provider\n\n```bash\n# mvn clean package\n# mvn -Djava.net.preferIPv4Stack=true -Dexec.mainClass=org.apache.dubbo.samples.provider.Application exec:java\n```\n\n### Call remote service in consumer\n\n```java\npackage org.apache.dubbo.samples.client;\n\n\nimport org.apache.dubbo.config.ApplicationConfig;\nimport org.apache.dubbo.config.ReferenceConfig;\nimport org.apache.dubbo.config.RegistryConfig;\nimport org.apache.dubbo.samples.api.GreetingsService;\n\npublic class Application {\n    private static String zookeeperHost = System.getProperty(\"zookeeper.address\", \"127.0.0.1\");\n\n    public static void main(String[] args) {\n        ReferenceConfig<GreetingsService> reference = new ReferenceConfig<>();\n        reference.setApplication(new ApplicationConfig(\"first-dubbo-consumer\"));\n        reference.setRegistry(new RegistryConfig(\"zookeeper://\" + zookeeperHost + \":2181\"));\n        reference.setInterface(GreetingsService.class);\n        GreetingsService service = reference.get();\n        String message = service.sayHi(\"dubbo\");\n        System.out.println(message);\n    }\n}\n```\n*See [consumer/Application.java](https://github.com/apache/dubbo-samples/blob/master/java/dubbo-samples-api/src/main/java/org/apache/dubbo/samples/client/Application.java) on GitHub.*\n\n### Build and run the consumer\n\n```bash\n# mvn clean package\n# mvn -Djava.net.preferIPv4Stack=true -Dexec.mainClass=org.apache.dubbo.samples.client.Application exec:java\n```\n\nThe consumer will print out `hi, dubbo` on the screen.\n\n\n### Next steps\n\n* [Your first Dubbo application](http://dubbo.apache.org/en-us/blog/dubbo-101.html) - A 101 tutorial to reveal more details, with the same code above.\n* [Dubbo user manual](http://dubbo.apache.org/en-us/docs/user/preface/background.html) - How to use Dubbo and all its features.\n* [Dubbo developer guide](http://dubbo.apache.org/en-us/docs/dev/build.html) - How to involve in Dubbo development.\n* [Dubbo admin manual](http://dubbo.apache.org/en-us/docs/admin/install/provider-demo.html) - How to admin and manage Dubbo services.\n\n## Building\n\nIf you want to try out the cutting-edge features, you can build with the following commands. (Java 1.8 is required to build the master branch)\n\n```\n  mvn clean install\n```\n\n## Contact\n\n* Mailing list: \n  * dev list: for dev/user discussion. [subscribe](mailto:dev-subscribe@dubbo.apache.org), [unsubscribe](mailto:dev-unsubscribe@dubbo.apache.org), [archive](https://lists.apache.org/list.html?dev@dubbo.apache.org),  [guide](https://github.com/apache/dubbo/wiki/Mailing-list-subscription-guide)\n  \n* Bugs: [Issues](https://github.com/apache/dubbo/issues/new?template=dubbo-issue-report-template.md)\n* Gitter: [Gitter channel](https://gitter.im/alibaba/dubbo) \n* Twitter: [@ApacheDubbo](https://twitter.com/ApacheDubbo)\n\n## Contributing\n\nSee\u00a0[CONTRIBUTING](https://github.com/apache/dubbo/blob/master/CONTRIBUTING.md)\u00a0for details on submitting patches and the contribution workflow.\n\n### How can I contribute?\n\n* Take a look at issues with tag called [`Good first issue`](https://github.com/apache/dubbo/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) or [`Help wanted`](https://github.com/apache/dubbo/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22).\n* Join the discussion on mailing list, subscription [guide](https://github.com/apache/dubbo/wiki/Mailing-list-subscription-guide).\n* Answer questions on [issues](https://github.com/apache/dubbo/issues).\n* Fix bugs reported on [issues](https://github.com/apache/dubbo/issues), and send us pull request.\n* Review the existing [pull request](https://github.com/apache/dubbo/pulls).\n* Improve the [website](https://github.com/apache/dubbo-website), typically we need\n  * blog post\n  * translation on documentation\n  * use cases about how Dubbo is being used in enterprise system.\n* Improve the [dubbo-admin/dubbo-monitor](https://github.com/apache/dubbo-admin).\n* Contribute to the projects listed in [ecosystem](https://github.com/dubbo).\n* Any form of contribution that is not mentioned above.\n* If you would like to contribute, please send an email to dev@dubbo.apache.org to let us know!\n\n## Reporting bugs\n\nPlease follow the [template](https://github.com/apache/dubbo/issues/new?template=dubbo-issue-report-template.md)\u00a0for reporting any issues.\n\n## Reporting a security vulnerability\n\nPlease report security vulnerability to [us](mailto:security@dubbo.apache.org) privately.\n\n## Dubbo ecosystem\n\n* [Dubbo Ecosystem Entry](https://github.com/apache?utf8=%E2%9C%93&q=dubbo&type=&language=) - A GitHub group `dubbo` to gather all Dubbo relevant projects not appropriate in [apache](https://github.com/apache) group yet\n* [Dubbo Website](https://github.com/apache/dubbo-website) - Apache Dubbo official website\n* [Dubbo Samples](https://github.com/apache/dubbo-samples) - samples for Apache Dubbo\n* [Dubbo Spring Boot](https://github.com/apache/dubbo-spring-boot-project) - Spring Boot Project for Dubbo\n* [Dubbo Admin](https://github.com/apache/dubbo-admin) - The reference implementation for Dubbo admin\n* [Dubbo Awesome](https://github.com/apache/dubbo-awesome) - Dubbo's slides and video links in Meetup\n\n#### Language\n\n* [Node.js](https://github.com/apache/dubbo-js)\n* [Python](https://github.com/dubbo/py-client-for-apache-dubbo)\n* [PHP](https://github.com/apache/dubbo-php-framework)\n* [Go](https://github.com/dubbo/dubbo-go)\n* [Erlang](https://github.com/apache/dubbo-erlang)\n\n## License\n\nApache Dubbo is under the Apache 2.0 license. See the\u00a0[LICENSE](https://github.com/apache/dubbo/blob/master/LICENSE)\u00a0file for details.\n"
 },
 {
  "repo": "996icu/996.ICU",
  "language": "Rust",
  "readme_contents": "[996.ICU](https://996.icu/#/en_US)\n=======\n**Please note that there exists NO other official account, app or merchandise except for the official domain and this repository.**\n\n* [\u4e2d\u6587\u7248](./README_CN.md)\n\nThe name `996.ICU` refers to **\"Work by '996', sick in ICU\"**, an ironic saying among Chinese developers, which means that by following the \"996\" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).\n\n[![Badge](https://img.shields.io/badge/link-996.icu-%23FF4D5B.svg?style=flat-square)](https://996.icu/#/en_US)\n[![LICENSE](https://img.shields.io/badge/license-Anti%20996-blue.svg?style=flat-square)](https://github.com/996icu/996.ICU/blob/master/LICENSE)\n[![Slack](https://img.shields.io/badge/slack-996icu-green.svg?style=flat-square)](https://join.slack.com/t/996icu/shared_invite/enQtNjI0MjEzMTUxNDI0LTkyMGViNmJiZjYwOWVlNzQ3NmQ4NTQyMDRiZTNmOWFkMzYxZWNmZGI0NDA4MWIwOGVhOThhMzc3NGQyMDBhZDc)\n[![HitCount](http://hits.dwyl.io/996icu/996.ICU.svg)](http://hits.dwyl.io/996icu/996.ICU)\n\n\nRelated press coverage:\n---\n* *RadiiChina:* [GitHub Protest Over Chinese Tech Companies\u2019 \u201c996\u201d Culture Goes Viral](https://radiichina.com/github-protest-chinese-tech-996/)\n* *Financial Times:*  [China tech worker protest against long working hours goes viral](https://www.ft.com/content/72754638-55d1-11e9-91f9-b6515a54c5b1)\n* *Wired:* [How github is helping overworked Chinese programmers](https://www.wired.com/story/how-github-helping-overworked-chinese-programmers/)\n\nSee a [full list of press](externals/news_EN.md)\n\n\n\nWhat is 996?\n---\n\nA \"996\" work schedule refers to an unofficial work schedule (9 a.m.&ndash;9 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the \"996\" work schedule usually means working for at least 60 hours per week.\nVisit [996 working hour system](https://en.wikipedia.org/wiki/996_working_hour_system) on Wikipedia for more details.\n\n\nWhat can I do?\n---\n\n- Update this [list](blacklist/README.md) with evidence to help every worker.  [Third party perfect list channel](https://www.996action.com/index.php/889799)\n- Add this [badge](externals/instruction.md) to your project to support 996.ICU.  \n- License your awesome projects with the [Anti 996 License](LICENSE).  \n- Add [proposals](proposal/README.md) to give advice about the development of 996.ICU.\n- Go home at 6 pm without feeling sorry.\n\n\nVoices\n---\n\n### State Media\n- [The 996 shall disappear](http://www.xinhuanet.com/politics/2019-04/15/c_1124370790.htm)\n\n\n### Capitalists\n- **Jack Ma, founder of Alibaba**: `It is a huge blessing to be able to '996'`.\n- **Richard Liu, founder of JD.com**: `We will never force our employee to work as '996'`.\n(However, as a result many anonymous employees claim that there is a **list** of departments which **ranked** them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when asking employees to work as '996'.)\n- **Bai Ya, founder of Youzan**: `This will definitely be a right decision when we look back in a few years.`\n\n### Developers\n- **Guido van Rossum, founder of Python**: [`The '996' working schedule is inhumane.`](https://twitter.com/gvanrossum/status/1111628076801236993)\n\n\nPrinciples and purposes\n---\n\n* 996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.\n\n* This is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.\n\n* It is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.\n\n* We are willing to hear all positive and constructive proposals and advocate mature and responsible speech.\n\n\nExpanding influence\n---\n\nPlease feel free to [translate 996.ICU's contents](i18n/README.md), adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.\n\nCommunity powers\n---\n\n - [955.WLB](https://github.com/formulahendry/955.WLB) is a repo that maintains a whitelist of 955 work-life balanced companies.\n - [996.LIST](https://github.com/fengT-T/996_list) is a repo of a rank list of 996 companies and 955 companies.\n - [996.law](https://github.com/CPdogson/996.law) This is a manual for workers who want to conduct labor arbitration and litigation on their own.\n - [996.YAOCL](https://github.com/boycott996/yaocl) Yet Another Overtime Corps List, current another anonymous voting list.\n - [996.Leave](https://github.com/623637646/996.Leave) encourages & introduces working overseas.\n - [996.RIP](https://996.rip) Old news never vanished.\n - [996.Petition](https://github.com/xokctah/996.petition) initiates petitions by sending open letters to relevant government departments.\n - [996.action](https://github.com/CPdogson/996action) Supporters are encouraged to participate in public supervision.\n - [996.avengers](https://github.com/996-icu-avengers/Natasha) adds `996ICU` and `955WLB` tags on recruitment websites.\n - [996.OD](https://github.com/zheolong/996.OD.git) occupational diseases are the forewarning of ICU.\n - [996.Q](https://github.com/alexddhuang/996.Q) A repository to collect mocks, jokes, or gags about 996. \n - [996.survey](https://github.com/0594mazhiyuan/996.survey) A survey of the status of 996.\n - [support.996.ICU](https://github.com/msworkers/support.996.ICU) Microsoft and GitHub Workers Support 996.ICU\n - [996.Blockchain](https://github.com/996BC/996.Blockchain) Blockchain for the 996 evidence\n - [996.Error](https://github.com/MagicLu550/996Error) Collect \"996\" exceptions written in various languages and can be used directly in the project.\n\nWhere are the issues?\n---\n\nEven with interaction limits on, the issues area was totally out of control.\nSo I **personally** decided to switch it off, not by GitHub or others.\n\n\nLicense\n---\n\n[Anti-996 License](LICENSE)\n\n - The purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working\n - See a [full list of projects](awesomelist/README.md) under Anti-996 License\n\n - This draft is adapted from the MIT license. For a more detailed explanation, please see [Wiki](https://github.com/kattgu7/996-License-Draft/wiki). This license is designed to be compatible with all major open source licenses.  \n - For law professionals or anyone who is willing to contribute to future version directly, please go to [Anti-996-License-1.0](https://github.com/kattgu7/996-License-Draft). Thank you.\n \nContact\n---\n\nYou can reach me by [E-mail](mailto:996icu.repo@gmail.com) if you need.\n"
 },
 {
  "repo": "justjavac/free-programming-books-zh_CN",
  "language": null,
  "readme_contents": "\u514d\u8d39\u7684\u7f16\u7a0b\u4e2d\u6587\u4e66\u7c4d\u7d22\u5f15\n============================\n\n[![](https://img.shields.io/github/issues/justjavac/free-programming-books-zh_CN.svg)](https://github.com/justjavac/free-programming-books-zh_CN/issues)  [![](https://img.shields.io/github/forks/justjavac/free-programming-books-zh_CN.svg)](https://github.com/justjavac/free-programming-books-zh_CN/network) [![](https://img.shields.io/github/stars/justjavac/free-programming-books-zh_CN.svg)](https://github.com/justjavac/free-programming-books-zh_CN/stargazers) [![](https://travis-ci.org/justjavac/free-programming-books-zh_CN.svg?branch=master)](https://travis-ci.org/justjavac/free-programming-books-zh_CN) [![](https://img.shields.io/github/release/justjavac/free-programming-books-zh_CN.svg)](https://github.com/justjavac/free-programming-books-zh_CN/releases)\n\n\u514d\u8d39\u7684\u7f16\u7a0b\u4e2d\u6587\u4e66\u7c4d\u7d22\u5f15\uff0c\u6b22\u8fce\u6295\u7a3f\u3002\n\n- \u56fd\u5916\u7a0b\u5e8f\u5458\u5728 [stackoverflow](http://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read/1713%231713) \u63a8\u8350\u7684\u7a0b\u5e8f\u5458\u5fc5\u8bfb\u4e66\u7c4d\uff0c[\u4e2d\u6587\u7248](http://justjavac.com/other/2012/05/15/qualified-programmer-should-read-what-books.html \"\u4e00\u4e2a\u5408\u683c\u7684\u7a0b\u5e8f\u5458\u5e94\u8be5\u8bfb\u8fc7\u54ea\u4e9b\u4e66\")\u3002\n- [stackoverflow](http://stackoverflow.com/questions/38210/what-non-programming-books-should-programmers-read) \u4e0a\u7684\u7a0b\u5e8f\u5458\u5e94\u8be5\u9605\u8bfb\u7684\u975e\u7f16\u7a0b\u7c7b\u4e66\u7c4d\u6709\u54ea\u4e9b\uff1f [\u4e2d\u6587\u7248](what-non-programming-books-should-programmers-read.md)\n- [github](https://github.com/vhf/free-programming-books) \u4e0a\u7684\u4e00\u4e2a\u6d41\u884c\u7684\u7f16\u7a0b\u4e66\u7c4d\u7d22\u5f15  [\u4e2d\u6587\u7248](https://github.com/vhf/free-programming-books/blob/master/free-programming-books-zh.md)\n\n\u5982\u679c\u8fd9\u4e2a\u4ed3\u5e93\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce star\u3002\u5982\u679c\u8fd9\u4e2a\u4ed3\u5e93\u5e2e\u4f60\u63d0\u5347\u4e86\u6280\u80fd\u627e\u5230\u4e86\u5de5\u4f5c\uff0c\u53ef\u4ee5\u8bf7\u6211\u559d\u676f\u5496\u5561\uff1a\n\n<p align=\"center\"><img src=\"https://cdn.devtips.cn/buy-me-a-coffee-wechat.png?imageView2/2/w/320/interlace/1\" width=\"320\" height=\"320\" alt=\"\" /></p>\n\n## \u53c2\u4e0e\u4ea4\u6d41\n\n\u6b22\u8fce\u5927\u5bb6\u5c06\u73cd\u85cf\u5df2\u4e45\u7684\u7ecf\u5178\u514d\u8d39\u4e66\u7c4d\u5171\u4eab\u51fa\u6765\uff0c\u60a8\u53ef\u4ee5\uff1a\n\n* \u4f7f\u7528 [Pull Request](https://github.com/justjavac/free-programming-books-zh_CN/pulls) \u63d0\u4ea4\n\n\u5982\u679c\u4f60\u53d1\u73b0\u4e86\u4e0d\u80fd\u8bbf\u95ee\u7684\u94fe\u63a5\uff0c\u4e5f\u53ef\u4ee5\u63d0 PR\uff0c\u5728\u65e0\u6cd5\u8bbf\u95ee\u94fe\u63a5\u7684\u540e\u9762\u589e\u52a0 `:worried:`\u3002\n\n\u8d21\u732e\u8005\u540d\u5355: https://github.com/justjavac/free-programming-books-zh_CN/graphs/contributors\n\n## \u76ee\u5f55\n\n* \u8bed\u8a00\u65e0\u5173\u7c7b\n  * [\u64cd\u4f5c\u7cfb\u7edf](#\u64cd\u4f5c\u7cfb\u7edf)\n  * [\u667a\u80fd\u7cfb\u7edf](#\u667a\u80fd\u7cfb\u7edf)\n  * [\u5206\u5e03\u5f0f\u7cfb\u7edf](#\u5206\u5e03\u5f0f\u7cfb\u7edf)\n  * [\u7f16\u8bd1\u539f\u7406](#\u7f16\u8bd1\u539f\u7406)\n  * [\u51fd\u6570\u5f0f\u6982\u5ff5](#\u51fd\u6570\u5f0f\u6982\u5ff5)\n  * [\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66](#\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66)\n  * [WEB\u670d\u52a1\u5668](#web\u670d\u52a1\u5668)\n  * [\u7248\u672c\u63a7\u5236](#\u7248\u672c\u63a7\u5236)\n  * [\u7f16\u8f91\u5668](#\u7f16\u8f91\u5668)\n  * [NoSQL](#nosql)\n  * [PostgreSQL](#postgresql)\n  * [MySQL](#mysql)\n  * [\u7ba1\u7406\u548c\u76d1\u63a7](#\u7ba1\u7406\u548c\u76d1\u63a7)\n  * [\u9879\u76ee\u76f8\u5173](#\u9879\u76ee\u76f8\u5173)\n  * [\u8bbe\u8ba1\u6a21\u5f0f](#\u8bbe\u8ba1\u6a21\u5f0f)\n  * [Web](#web)\n  * [\u5927\u6570\u636e](#\u5927\u6570\u636e)\n  * [\u7f16\u7a0b\u827a\u672f](#\u7f16\u7a0b\u827a\u672f)\n  * [\u5176\u5b83](#\u5176\u5b83)\n\n* \u8bed\u8a00\u76f8\u5173\u7c7b\n  * [Android](#android)\n  * [APP](#app)\n  * [AWK](#awk)\n  * [C/C++](#cc)\n  * [C#](#c)\n  * [Clojure](#clojure)\n  * [CSS/HTML](#csshtml)\n  * [Dart](#dart)\n  * [Elixir](#elixir)\n  * [Erlang](#erlang)\n  * [Fortran](#fortran)\n  * [Go](#go)\n  * [Groovy](#groovy)\n  * [Haskell](#haskell)\n  * [iOS](#ios)\n  * [Java](#java)\n  * [JavaScript](#javascript)\n  * [Kotlin](#kotlin)\n  * [LaTeX](#latex)\n  * [LISP](#lisp)\n  * [Lua](#lua)\n  * [OCaml](#OCaml)\n  * [Perl](#perl)\n  * [PHP](#php)\n  * [Prolog](#prolog)\n  * [Python](#python)\n  * [R](#r)\n  * [Ruby](#ruby)\n  * [Rust](#rust)\n  * [Scala](#scala)\n  * [Shell](#shell)\n  * [Swift](#swift)\n\n* [\u8bfb\u4e66\u7b14\u8bb0\u53ca\u5176\u5b83](#\u8bfb\u4e66\u7b14\u8bb0\u53ca\u5176\u5b83)\n* [\u6d4b\u8bd5\u76f8\u5173](#\u6d4b\u8bd5\u76f8\u5173)\n\n## \u7f6e\u9876\n\n- [[\u7b14\u8bb0]\u524d\u7aef\u5de5\u7a0b\u5e08\u7684\u5165\u95e8\u4e0e\u8fdb\u9636](https://shenbao.github.io/2017/04/22/justjavac-live/) :100:\n- [[\u5168\u6587]\u5982\u4f55\u6b63\u786e\u7684\u5b66\u4e60 Node.js](https://github.com/i5ting/How-to-learn-node-correctly) :100:\n\n## \u64cd\u4f5c\u7cfb\u7edf\n\n* [\u5f00\u6e90\u4e16\u754c\u65c5\u884c\u624b\u518c](http://i.linuxtoy.org/docs/guide/index.html)\n* [\u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc](http://linux.vbird.org/)\n* [The Linux Command Line](http://billie66.github.io/TLCL/index.html) (\u4e2d\u82f1\u6587\u7248)\n* [Linux \u8bbe\u5907\u9a71\u52a8](http://oss.org.cn/kernel-book/ldd3/index.html) (\u7b2c\u4e09\u7248)\n* [\u6df1\u5165\u5206\u6790Linux\u5185\u6838\u6e90\u7801](http://www.kerneltravel.net/kernel-book/%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90Linux%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81.html) :worried:\n* [UNIX TOOLBOX](http://cb.vu/unixtoolbox_zh_CN.xhtml)\n* [Docker\u4e2d\u6587\u6307\u5357](https://github.com/widuu/chinese_docker)\n* [Docker \u2014\u2014 \u4ece\u5165\u95e8\u5230\u5b9e\u8df5](https://github.com/yeasy/docker_practice)\n* [Docker\u5165\u95e8\u5b9e\u6218](http://yuedu.baidu.com/ebook/d817967416fc700abb68fca1)\n* [Docker Cheat Sheet](https://github.com/wsargent/docker-cheat-sheet/tree/master/zh-cn#docker-cheat-sheet)\n* [FreeRADIUS\u65b0\u624b\u5165\u95e8](http://freeradius.akagi201.org) :worried:\n* [Mac \u5f00\u53d1\u914d\u7f6e\u624b\u518c](https://aaaaaashu.gitbooks.io/mac-dev-setup/content/)\n* [FreeBSD \u4f7f\u7528\u624b\u518c](https://www.freebsd.org/doc/zh_CN/books/handbook/index.html)\n* [Linux \u547d\u4ee4\u884c(\u4e2d\u6587\u7248)](http://billie66.github.io/TLCL/book/)\n* [Linux \u6784\u5efa\u6307\u5357](http://works.jinbuguo.com/lfs/lfs62/index.html)\n* [Linux\u5de5\u5177\u5feb\u901f\u6559\u7a0b](https://github.com/me115/linuxtools_rst)\n* [Linux Documentation (\u4e2d\u6587\u7248)](https://www.gitbook.com/book/tinylab/linux-doc/details)\n* [\u5d4c\u5165\u5f0f Linux \u77e5\u8bc6\u5e93 (eLinux.org \u4e2d\u6587\u7248)](https://www.gitbook.com/book/tinylab/elinux/details)\n* [\u7406\u89e3Linux\u8fdb\u7a0b](https://github.com/tobegit3hub/understand_linux_process)\n* [\u547d\u4ee4\u884c\u7684\u827a\u672f](https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md)\n* [SystemTap\u65b0\u624b\u6307\u5357](https://spacewander.gitbooks.io/systemtapbeginnersguide_zh/content/index.html)\n* [\u64cd\u4f5c\u7cfb\u7edf\u601d\u8003](https://github.com/wizardforcel/think-os-zh)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u667a\u80fd\u7cfb\u7edf\n* [\u4e00\u6b65\u6b65\u642d\u5efa\u7269\u8054\u7f51\u7cfb\u7edf](https://github.com/phodal/designiot)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u5206\u5e03\u5f0f\u7cfb\u7edf\n* [\u8d70\u5411\u5206\u5e03\u5f0f](http://dcaoyuan.github.io/papers/pdfs/Scalability.pdf)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u7f16\u8bd1\u539f\u7406\n* [\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u7ed3\u6784\u548c\u89e3\u91ca\u300b\u516c\u5f00\u8bfe \u7ffb\u8bd1\u9879\u76ee](https://github.com/DeathKing/Learning-SICP)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u51fd\u6570\u5f0f\u6982\u5ff5\n* [\u50bb\u74dc\u51fd\u6570\u7f16\u7a0b](https://github.com/justinyhuang/Functional-Programming-For-The-Rest-of-Us-Cn)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\n* [OpenGL \u6559\u7a0b](https://github.com/zilongshanren/opengl-tutorials)\n* [WebGL\u81ea\u5b66\u7f51](http://html5.iii.org.tw/course/webgl/) :worried:\n* [\u300aReal-Time Rendering 3rd\u300b\u63d0\u70bc\u603b\u7ed3](https://github.com/QianMo/Real-Time-Rendering-3rd-Summary-Ebook)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## WEB\u670d\u52a1\u5668\n\n* [Nginx\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a](http://tengine.taobao.org/book/index.html) (\u6dd8\u5b9d\u56e2\u961f\u51fa\u54c1)\n* [Nginx\u6559\u7a0b\u4ece\u5165\u95e8\u5230\u7cbe\u901a](http://www.ttlsa.com/nginx/nginx-stu-pdf/)(PDF\u7248\u672c\uff0c\u8fd0\u7ef4\u751f\u5b58\u65f6\u95f4\u51fa\u54c1)\n* [OpenResty\u6700\u4f73\u5b9e\u8df5](https://www.gitbook.com/book/moonbingbing/openresty-best-practices/details)\n* [Apache \u4e2d\u6587\u624b\u518c](http://works.jinbuguo.com/apache/menu22/index.html)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u7248\u672c\u63a7\u5236\n\n* [Git\u6559\u7a0b](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000) \uff08\u672c\u6587\u7531 [\u5ed6\u96ea\u5cf0](http://www.liaoxuefeng.com) \u521b\u4f5c\uff0c\u5982\u679c\u89c9\u5f97\u672c\u6559\u7a0b\u5bf9\u60a8\u6709\u5e2e\u52a9\uff0c\u53ef\u4ee5\u53bb [iTunes](https://itunes.apple.com/cn/app/git-jiao-cheng/id876420437) \u8d2d\u4e70\uff09\n* [git - \u7b80\u6613\u6307\u5357](http://rogerdudler.github.io/git-guide/index.zh.html)\n* [\u7334\u5b50\u90fd\u80fd\u61c2\u7684GIT\u5165\u95e8](http://backlogtool.com/git-guide/cn/)\n* [Git \u53c2\u8003\u624b\u518c](http://gitref.justjavac.com)\n* [Pro Git](http://git-scm.com/book/zh/v2)\n* [Pro Git \u4e2d\u6587\u7248](https://www.gitbook.com/book/0532/progit/details) (\u6574\u7406\u5728gitbook\u4e0a)\n* [Git Magic](http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/)\n* [GotGitHub](http://www.worldhello.net/gotgithub/index.html)\n* [Git\u6743\u5a01\u6307\u5357](http://www.worldhello.net/gotgit/)\n* [Git Community Book \u4e2d\u6587\u7248](http://gitbook.liuhui998.com/index.html)\n* [Mercurial \u4f7f\u7528\u6559\u7a0b](https://www.mercurial-scm.org/wiki/ChineseTutorial)\n* [HgInit (\u4e2d\u6587\u7248)](http://bucunzai.net/hginit/)\n* [\u6c89\u6d78\u5f0f\u5b66 Git](http://igit.linuxtoy.org)\n* [Git-Cheat-Sheet](https://github.com/flyhigher139/Git-Cheat-Sheet) \uff08\u611f\u8c22 @flyhigher139 \u7ffb\u8bd1\u4e86\u4e2d\u6587\u7248\uff09\n* [GitHub\u79d8\u7c4d](https://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/index.html)\n* [GitHub\u5e2e\u52a9\u6587\u6863](https://github.com/waylau/github-help)\n* [git-flow \u5907\u5fd8\u6e05\u5355](http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html)\n* [svn \u624b\u518c](http://svnbook.red-bean.com/nightly/zh/index.html)\n* [GitHub\u6f2b\u6e38\u6307\u5357](https://github.com/phodal/github-roam)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u7f16\u8f91\u5668\n\n* [exvim--vim \u6539\u826f\u6210IDE\u9879\u76ee](http://exvim.github.io/docs-zh/intro/)\n* [\u7b28\u65b9\u6cd5\u5b66Vimscript \u4e2d\u8bd1\u672c](http://learnvimscriptthehardway.onefloweroneworld.com/) :worried:\n* [Vim\u4e2d\u6587\u6587\u6863](https://github.com/vimcn/vimcdoc)\n* [\u6240\u9700\u5373\u6240\u83b7\uff1a\u50cf IDE \u4e00\u6837\u4f7f\u7528 vim](https://github.com/yangyangwithgnu/use_vim_as_ide)\n* [vim \u5b9e\u64cd\u6559\u7a0b](https://github.com/dofy/learn-vim)\n* [Atom\u98de\u884c\u624b\u518c\u4e2d\u6587\u7248](https://github.com/wizardforcel/atom-flight-manual-zh-cn)\n* [Markdown\u00b7\u7b80\u5355\u7684\u4e16\u754c](https://github.com/wizardforcel/markdown-simple-world)\n* [\u4e00\u5e74\u6210\u4e3a Emacs \u9ad8\u624b](https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org)\n* [Emacs \u751f\u5b58\u6307\u5357](http://lifegoo.pluskid.org/upload/blog/152/Survive.in.Emacs.pdf)\n* [Atom\u5b98\u65b9\u624b\u518c](https://atom-china.org/t/atom/62)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## NoSQL\n\n* [NoSQL\u6570\u636e\u5e93\u7b14\u8c08](http://old.sebug.net/paper/databases/nosql/Nosql.html)\n* [Redis \u8bbe\u8ba1\u4e0e\u5b9e\u73b0](http://redisbook.com/)\n* [Redis \u547d\u4ee4\u53c2\u8003](http://redisdoc.com/)\n* [\u5e26\u6709\u8be6\u7ec6\u6ce8\u91ca\u7684 Redis 3.0 \u4ee3\u7801](https://github.com/huangz1990/redis-3.0-annotated)\n* [\u5e26\u6709\u8be6\u7ec6\u6ce8\u91ca\u7684 Redis 2.6 \u4ee3\u7801](https://github.com/huangz1990/annotated_redis_source)\n* [The Little MongoDB Book](https://github.com/justinyhuang/the-little-mongodb-book-cn/blob/master/mongodb.md)\n* [The Little Redis Book](https://github.com/JasonLai256/the-little-redis-book/blob/master/cn/redis.md)\n* [Neo4j \u7b80\u4f53\u4e2d\u6587\u624b\u518c v1.8](http://docs.neo4j.org.cn/)\n* [Neo4j .rb \u4e2d\u6587\u8cc7\u6e90](http://neo4j.tw/)\n* [Disque \u4f7f\u7528\u6559\u7a0b](http://disquebook.com)\n* [Apache Spark \u8bbe\u8ba1\u4e0e\u5b9e\u73b0](https://github.com/JerryLead/SparkInternals/tree/master/markdown)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## PostgreSQL\n\n* [PostgreSQL 8.2.3 \u4e2d\u6587\u6587\u6863](http://works.jinbuguo.com/postgresql/menu823/index.html)\n* [PostgreSQL 9.3.1 \u4e2d\u6587\u6587\u6863](http://www.postgres.cn/docs/9.3/index.html)\n* [PostgreSQL 9.5.3 \u4e2d\u6587\u6587\u6863](http://www.postgres.cn/docs/9.5/index.html)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## MySQL\n\n* [MySQL\u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ca\u7b97\u6cd5\u539f\u7406](http://blog.codinglabs.org/articles/theory-of-mysql-index.html)\n* [21\u5206\u949fMySQL\u5165\u95e8\u6559\u7a0b](http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u7ba1\u7406\u548c\u76d1\u63a7\n\n* [ELKstack \u4e2d\u6587\u6307\u5357](http://kibana.logstash.es)\n* [Mastering Elasticsearch(\u4e2d\u6587\u7248)](http://udn.yyuap.com/doc/mastering-elasticsearch/)\n* [ElasticSearch \u6743\u5a01\u6307\u5357](https://www.gitbook.com/book/fuxiaopang/learnelasticsearch/details)\n* [Elasticsearch \u6743\u5a01\u6307\u5357\uff08\u4e2d\u6587\u7248\uff09](http://es.xiaoleilu.com)\n* [Logstash \u6700\u4f73\u5b9e\u8df5](https://github.com/chenryn/logstash-best-practice-cn)\n* [Puppet 2.7 Cookbook \u4e2d\u6587\u7248](http://bbs.konotes.org/workdoc/puppet-27/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u9879\u76ee\u76f8\u5173\n\n* [\u6301\u7eed\u96c6\u6210\uff08\u7b2c\u4e8c\u7248\uff09](http://article.yeeyan.org/view/2251/94882) (\u8bd1\u8a00\u7f51)\n* [\u8ba9\u5f00\u53d1\u81ea\u52a8\u5316\u7cfb\u5217\u4e13\u680f](http://www.ibm.com/developerworks/cn/java/j-ap/)\n* [\u8ffd\u6c42\u4ee3\u7801\u8d28\u91cf](http://www.ibm.com/developerworks/cn/java/j-cq/)\n* [selenium \u4e2d\u6587\u6587\u6863](https://github.com/fool2fish/selenium-doc)\n* [Selenium Webdriver \u7b80\u6613\u6559\u7a0b](http://it-ebooks.flygon.net/selenium-simple-tutorial/)\n* [Joel\u8c08\u8f6f\u4ef6](http://local.joelonsoftware.com/wiki/Chinese_\\(Simplified\\))\n* [\u7d04\u8033\u8ac7\u8edf\u9ad4(Joel on Software)](http://local.joelonsoftware.com/wiki/%E9%A6%96%E9%A0%81)\n* [Gradle 2 \u7528\u6237\u6307\u5357](https://github.com/waylau/Gradle-2-User-Guide)\n* [Gradle \u4e2d\u6587\u4f7f\u7528\u6587\u6863](http://yuedu.baidu.com/ebook/f23af265998fcc22bcd10da2)\n* [\u7f16\u7801\u89c4\u8303](https://github.com/ecomfe/spec)\n* [\u5f00\u6e90\u8f6f\u4ef6\u67b6\u6784](http://www.ituring.com.cn/book/1143)\n* [GNU make \u6307\u5357](http://docs.huihoo.com/gnu/linux/gmake.html)\n* [GNU make \u4e2d\u6587\u624b\u518c](http://www.yayu.org/book/gnu_make/)\n* [The Twelve-Factor App](http://12factor.net/zh_cn/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u8bbe\u8ba1\u6a21\u5f0f\n\n* [\u56fe\u8bf4\u8bbe\u8ba1\u6a21\u5f0f](https://github.com/me115/design_patterns)\n* [\u53f2\u4e0a\u6700\u5168\u8bbe\u8ba1\u6a21\u5f0f\u5bfc\u5b66\u76ee\u5f55](http://blog.csdn.net/lovelion/article/details/17517213)\n* [design pattern \u5305\u6559\u4e0d\u5305\u4f1a](https://github.com/AlfredTheBest/Design-Pattern)\n* [\u8bbe\u8ba1\u6a21\u5f0f Java \u7248](https://quanke.gitbooks.io/design-pattern-java/content/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Web\n\n* [\u5173\u4e8e\u6d4f\u89c8\u5668\u548c\u7f51\u7edc\u7684 20 \u9879\u987b\u77e5](http://www.20thingsilearned.com/zh-CN/home)\n* [\u6d4f\u89c8\u5668\u5f00\u53d1\u5de5\u5177\u7684\u79d8\u5bc6](http://jinlong.github.io/2013/08/29/devtoolsecrets/)\n* [Chrome \u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u6587\u624b\u518c](https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools)\n* [Chrome\u6269\u5c55\u5f00\u53d1\u6587\u6863](http://open.chrome.360.cn/extension_dev/overview.html)\n* [Grunt\u4e2d\u6587\u6587\u6863](http://www.gruntjs.net/)\n* [gulp\u4e2d\u6587\u6587\u6863](http://www.gulpjs.com.cn/docs/)\n* [Gulp \u5165\u95e8\u6307\u5357](https://github.com/nimojs/gulp-book)\n* [\u79fb\u52a8Web\u524d\u7aef\u77e5\u8bc6\u5e93](https://github.com/AlloyTeam/Mars)\n* [\u6b63\u5219\u8868\u8fbe\u5f0f30\u5206\u949f\u5165\u95e8\u6559\u7a0b](http://deerchao.net/tutorials/regex/regex.htm)\n* [\u524d\u7aef\u5f00\u53d1\u4f53\u7cfb\u5efa\u8bbe\u65e5\u8bb0](https://github.com/fouber/blog/issues/2)\n* [\u79fb\u52a8\u524d\u7aef\u5f00\u53d1\u6536\u85cf\u5939](https://github.com/hoosin/mobile-web-favorites)\n* [JSON\u98ce\u683c\u6307\u5357](https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md)\n* [HTTP \u63a5\u53e3\u8bbe\u8ba1\u6307\u5317](https://github.com/bolasblack/http-api-guide)\n* [\u524d\u7aef\u8d44\u6e90\u5206\u4eab\uff08\u4e00\uff09](https://github.com/hacke2/hacke2.github.io/issues/1)\n* [\u524d\u7aef\u8d44\u6e90\u5206\u4eab\uff08\u4e8c\uff09](https://github.com/hacke2/hacke2.github.io/issues/3)\n* [\u524d\u7aef\u4ee3\u7801\u89c4\u8303 \u53ca \u6700\u4f73\u5b9e\u8df5](http://coderlmn.github.io/code-standards/)\n* [\u524d\u7aef\u5f00\u53d1\u8005\u624b\u518c](https://www.gitbook.com/book/dwqs/frontenddevhandbook/details)\n* [\u524d\u7aef\u5de5\u7a0b\u5e08\u624b\u518c](https://www.gitbook.com/book/leohxj/front-end-database/details)\n* [w3school\u6559\u7a0b\u6574\u7406](https://github.com/wizardforcel/w3school)\n* [Wireshark\u7528\u6237\u624b\u518c](http://man.lupaworld.com/content/network/wireshark/index.html)\n* [\u4e00\u7ad9\u5f0f\u5b66\u4e60Wireshark](https://community.emc.com/thread/194901)\n* [HTTP \u4e0b\u5348\u8336](https://ccbikai.gitbooks.io/http-book/content/)\n* [HTTP/2.0 \u4e2d\u6587\u7ffb\u8bd1](http://yuedu.baidu.com/ebook/478d1a62376baf1ffc4fad99?pn=1)\n* [RFC 7540 - HTTP/2 \u4e2d\u6587\u7ffb\u8bd1\u7248](https://github.com/abbshr/rfc7540-translation-zh_cn)\n* [http2\u8bb2\u89e3](https://www.gitbook.com/book/ye11ow/http2-explained/details)\n* [3 Web Designs in 3 Weeks](https://www.gitbook.com/book/juntao/3-web-designs-in-3-weeks/details)\n* [\u7ad9\u70b9\u53ef\u9760\u6027\u5de5\u7a0b](https://github.com/hellorocky/Site-Reliability-Engineering)\n* [Web\u5b89\u5168\u5b66\u4e60\u7b14\u8bb0](https://websec.readthedocs.io)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u5927\u6570\u636e\n\n* [\u5927\u6570\u636e/\u6570\u636e\u6316\u6398/\u63a8\u8350\u7cfb\u7edf/\u673a\u5668\u5b66\u4e60\u76f8\u5173\u8d44\u6e90](https://github.com/Flowerowl/Big-Data-Resources)\n* [\u9762\u5411\u7a0b\u5e8f\u5458\u7684\u6570\u636e\u6316\u6398\u6307\u5357](https://github.com/egrcc/guidetodatamining)\n* [\u5927\u578b\u96c6\u7fa4\u4e0a\u7684\u5feb\u901f\u548c\u901a\u7528\u6570\u636e\u5904\u7406\u67b6\u6784](https://code.csdn.net/CODE_Translation/spark_matei_phd)\n* [\u6570\u636e\u6316\u6398\u4e2d\u7ecf\u5178\u7684\u7b97\u6cd5\u5b9e\u73b0\u548c\u8be6\u7ec6\u7684\u6ce8\u91ca](https://github.com/linyiqun/DataMiningAlgorithm)\n* [Spark \u7f16\u7a0b\u6307\u5357\u7b80\u4f53\u4e2d\u6587\u7248](https://aiyanbo.gitbooks.io/spark-programming-guide-zh-cn/content/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u7f16\u7a0b\u827a\u672f\n\n* [\u7a0b\u5e8f\u5458\u7f16\u7a0b\u827a\u672f](https://github.com/julycoding/The-Art-Of-Programming-by-July)\n* [\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u4e86\u89e3\u7684\u5185\u5b58\u77e5\u8bc6(\u8bd1)](http://www.oschina.net/translate/what-every-programmer-should-know-about-memory-part1?print)\u3010\u7b2c\u4e00\u90e8\u5206\u3011\n* [\u53d6\u60a6\u7684\u5de5\u5e8f\uff1a\u5982\u4f55\u7406\u89e3\u6e38\u620f](http://read.douban.com/ebook/4972883/) (\u8c46\u74e3\u9605\u8bfb\uff0c\u514d\u8d39\u4e66\u7c4d)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u5176\u5b83\n\n* [OpenWrt\u667a\u80fd\u3001\u81ea\u52a8\u3001\u900f\u660e\u7ffb\u5899\u8def\u7531\u5668\u6559\u7a0b](https://www.gitbook.com/book/softwaredownload/openwrt-fanqiang/details)\n* [SAN \u7ba1\u7406\u5165\u95e8\u7cfb\u5217](https://community.emc.com/docs/DOC-16067)\n* [Sketch \u4e2d\u6587\u624b\u518c](http://sketchcn.com/sketch-chinese-user-manual.html#introduce)\n* [\u6df1\u5165\u7406\u89e3\u5e76\u884c\u7f16\u7a0b](http://ifeve.com/perfbook/)\n* [\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b](http://www.kancloud.cn/kancloud/a-programmer-prepares)\n* [Growth: \u5168\u6808\u589e\u957f\u5de5\u7a0b\u5e08\u6307\u5357](https://github.com/phodal/growth-ebook)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Android\n\n* [Android Design(\u4e2d\u6587\u7248)](http://www.apkbus.com/design/index.html)\n* Google Material Design \u6b63\u9ad4\u4e2d\u6587\u7248 ([\u8bd1\u672c\u4e00](https://wcc723.gitbooks.io/google_design_translate/content/style-icons.html) [\u8bd1\u672c\u4e8c](https://github.com/1sters/material_design_zh))\n* [Material Design \u4e2d\u6587\u7248](http://wiki.jikexueyuan.com/project/material-design/)\n* [Google Android\u5b98\u65b9\u57f9\u8bad\u8bfe\u7a0b\u4e2d\u6587\u7248](http://hukai.me/android-training-course-in-chinese/index.html)\n* [Android\u5b66\u4e60\u4e4b\u8def](http://www.stormzhang.com/android/2014/07/07/learn-android-from-rookie/)\n* [Android\u5f00\u53d1\u6280\u672f\u524d\u7ebf(android-tech-frontier)](https://github.com/bboyfeiyu/android-tech-frontier)\n* [Point-of-Android](https://github.com/FX-Max/Point-of-Android) Android \u4e00\u4e9b\u91cd\u8981\u77e5\u8bc6\u70b9\u89e3\u6790\u6574\u7406\n* [Android6.0\u65b0\u7279\u6027\u8be6\u89e3](http://leanote.com/blog/post/561658f938f41126b2000298)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## APP\n\n* [Apache Cordova \u5f00\u53d1\u6307\u5357](https://github.com/waylau/cordova-dev-guide)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## AWK\n\n* [awk\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00](https://github.com/wuzhouhui/awk)\n* [awk\u4e2d\u6587\u6307\u5357](http://awk.readthedocs.org/en/latest/index.html)\n* [awk\u5b9e\u6218\u6307\u5357](https://book.saubcy.com/AwkInAction/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## C/C++\n\n* [C/C++ \u4e2d\u6587\u53c2\u8003\u624b\u518c](http://zh.cppreference.com/) (\u6b22\u8fce\u5927\u5bb6\u53c2\u4e0e\u5728\u7ebf\u7ffb\u8bd1\u548c\u6821\u5bf9)\n* [C \u8bed\u8a00\u7f16\u7a0b\u900f\u89c6](https://www.gitbook.com/book/tinylab/cbook/details)\n* [C++ \u5e76\u53d1\u7f16\u7a0b\u6307\u5357](https://github.com/forhappy/Cplusplus-Concurrency-In-Practice)\n* [Linux C\u7f16\u7a0b\u4e00\u7ad9\u5f0f\u5b66\u4e60](http://akaedu.github.io/book/) (\u5b8b\u52b2\u6749, \u5317\u4eac\u4e9a\u5d4c\u6559\u80b2\u7814\u7a76\u4e2d\u5fc3)\n* [CGDB\u4e2d\u6587\u624b\u518c](https://github.com/leeyiw/cgdb-manual-in-chinese)\n* [100\u4e2agdb\u5c0f\u6280\u5de7](https://github.com/hellogcc/100-gdb-tips/blob/master/src/index.md)\n* [100\u4e2agcc\u5c0f\u6280\u5de7](https://github.com/hellogcc/100-gcc-tips/blob/master/src/index.md)\n* [ZMQ \u6307\u5357](https://github.com/anjuke/zguide-cn)\n* [How to Think Like a Computer Scientist](http://www.ituring.com.cn/book/1203) (\u4e2d\u82f1\u6587\u7248)\n* [\u8ddf\u6211\u4e00\u8d77\u5199 Makefile](https://github.com/seisman/how-to-write-makefile)\n* [GNU make\u4e2d\u6587\u624b\u518c](https://free-online-ebooks.appspot.com/tools/gnu-make-cn/) (\u9700\u79d1\u5b66\u4e0a\u7f51) ([PDF](https://hacker-yhj.github.io/resources/gun_make.pdf))\n* [GNU make \u6307\u5357](http://docs.huihoo.com/gnu/linux/gmake.html)\n* [Google C++ \u98ce\u683c\u6307\u5357](http://zh-google-styleguide.readthedocs.org/en/latest/google-cpp-styleguide/contents/)\n* [C/C++ Primer](https://github.com/andycai/cprimer) (by @andycai)\n* [\u7b80\u5355\u6613\u61c2\u7684C\u9b54\u6cd5](http://www.nowamagic.net/librarys/books/contents/c)\n* [C++ FAQ LITE(\u4e2d\u6587\u7248)](http://www.sunistudio.com/cppfaq/)\n* [C++ Primer 5th Answers](https://github.com/Mooophy/Cpp-Primer)\n* [C++ \u5e76\u53d1\u7f16\u7a0b(\u57fa\u4e8eC++11)](https://www.gitbook.com/book/chenxiaowei/cpp_concurrency_in_action/details)\n* [QT \u6559\u7a0b](http://www.kuqin.com/qtdocument/tutorial.html)\n* [DevBean\u7684\u300aQt\u5b66\u4e60\u4e4b\u8def2\u300b(Qt5)](http://www.devbean.net/category/qt-study-road-2/)\n* [\u4e2d\u6587\u7248\u300aQmlBook\u300b](https://github.com/cwc1987/QmlBook-In-Chinese)\n* [C++ Template \u8fdb\u9636\u6307\u5357](https://github.com/wuye9036/CppTemplateTutorial)\n* [libuv\u4e2d\u6587\u6559\u7a0b](https://github.com/luohaha/Chinese-uvbook)\n* [Boost \u5e93\u4e2d\u6587\u6559\u7a0b](http://zh.highscore.de/cpp/boost/)\n* [\u7b28\u529e\u6cd5\u5b66C](https://github.com/wizardforcel/lcthw-zh)\n* [\u9ad8\u901f\u4e0a\u624b C++11/14/17](https://github.com/changkun/modern-cpp-tutorial)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## C&#35;\n\n* [Microsoft Docs C# \u5b98\u65b9\u6587\u6863](https://docs.microsoft.com/zh-cn/dotnet/csharp/)\n* [ASP.NET MVC 5 \u5165\u95e8\u6307\u5357](http://www.cnblogs.com/powertoolsteam/p/aspnetmvc5-tutorials-grapecity.html)\n* [\u8d85\u5168\u9762\u7684 .NET GDI+ \u56fe\u5f62\u56fe\u50cf\u7f16\u7a0b\u6559\u7a0b](http://www.cnblogs.com/geeksss/p/4162318.html)\n* [.NET\u63a7\u4ef6\u5f00\u53d1\u57fa\u7840](https://github.com/JackWangCUMT/customcontrol)\n* [.NET\u5f00\u53d1\u8981\u70b9\u7cbe\u8bb2\uff08\u521d\u7a3f\uff09](https://github.com/sherlockchou86/-free-ebook-.NET-)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Clojure\n\n* [Clojure\u5165\u95e8\u6559\u7a0b](https://wizardforcel.gitbooks.io/clojure-fpftj/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n<h2 id=\"csshtml\">CSS/HTML</h2>\n\n* [\u5b66\u4e60CSS\u5e03\u5c40](http://zh.learnlayout.com/)\n* [\u901a\u7528 CSS \u7b14\u8bb0\u3001\u5efa\u8bae\u4e0e\u6307\u5bfc](https://github.com/chadluo/CSS-Guidelines/blob/master/README.md)\n* [CSS\u53c2\u8003\u624b\u518c](http://css.doyoe.com/)\n* [Emmet \u6587\u6863](http://yanxyz.github.io/emmet-docs/)\n* [\u524d\u7aef\u4ee3\u7801\u89c4\u8303](http://alloyteam.github.io/CodeGuide/) (\u817e\u8baf AlloyTeam \u56e2\u961f)\n* [HTML\u548cCSS\u7f16\u7801\u89c4\u8303](http://codeguide.bootcss.com/)\n* [Sass Guidelines \u4e2d\u6587](http://sass-guidelin.es/zh/)\n* [CSS3 Tutorial \u300aCSS3 \u6559\u7a0b\u300b](https://github.com/waylau/css3-tutorial)\n* [MDN HTML \u4e2d\u6587\u6587\u6863](https://developer.mozilla.org/zh-CN/docs/Web/HTML)\n* [MDN CSS \u4e2d\u6587\u6587\u6863](https://developer.mozilla.org/zh-CN/docs/Web/CSS)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Dart\n\n* [Dart \u8bed\u8a00\u5bfc\u89c8](http://dart.lidian.info/wiki/Language_Tour)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Elixir\n\n* [Elixir\u7f16\u7a0b\u5165\u95e8](https://github.com/straightdave/programming_elixir)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Erlang\n\n* [21\u5929\u5b66\u901aErlang](http://xn--21erlang-p00o82pmp3o.github.io/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Fortran\n\n* [Fortran77\u548c90/95\u7f16\u7a0b\u5165\u95e8](http://micro.ustc.edu.cn/Fortran/ZJDing/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Go\n\n* [Go\u7f16\u7a0b\u57fa\u7840](https://github.com/Unknwon/go-fundamental-programming)\n* [Go\u5165\u95e8\u6307\u5357](https://github.com/Unknwon/the-way-to-go_ZH_CN)\n* [\u5b66\u4e60Go\u8bed\u8a00](http://mikespook.com/learning-go/)\n* [Go Web \u7f16\u7a0b](https://github.com/astaxie/build-web-application-with-golang) (\u6b64\u4e66\u5df2\u7ecf\u51fa\u7248\uff0c\u5e0c\u671b\u5f00\u53d1\u8005\u4eec\u53bb\u8d2d\u4e70\uff0c\u652f\u6301\u4f5c\u8005\u7684\u521b\u4f5c)\n* [Go\u5b9e\u6218\u5f00\u53d1](https://github.com/astaxie/Go-in-Action) (\u5f53\u6211\u6536\u5f55\u6b64\u9879\u76ee\u65f6\uff0c\u4f5c\u8005\u5df2\u7ecf\u5199\u5b8c\u7b2c\u4e09\u7ae0\uff0c\u5982\u679c\u8bfb\u5b8c\u524d\u9762\u7ae0\u8282\u89c9\u5f97\u6709\u5e2e\u52a9\uff0c\u53ef\u4ee5\u7ed9\u4f5c\u8005[\u6350\u8d60](https://me.alipay.com/astaxie)\uff0c\u4ee5\u9f13\u52b1\u4f5c\u8005\u7684\u7ee7\u7eed\u521b\u4f5c)\n* [Network programming with Go \u4e2d\u6587\u7ffb\u8bd1\u7248\u672c](https://github.com/astaxie/NPWG_zh)\n* [Effective Go](http://www.hellogcc.org/effective_go.html)\n* [Go \u8bed\u8a00\u6807\u51c6\u5e93](https://github.com/polaris1119/The-Golang-Standard-Library-by-Example)\n* [Golang\u6807\u51c6\u5e93\u6587\u6863](http://godoc.ml/)\n* [Revel \u6846\u67b6\u624b\u518c](http://gorevel.cn/docs/manual/index.html)\n* [Java\u7a0b\u5e8f\u5458\u7684Golang\u5165\u95e8\u6307\u5357](http://blog.csdn.net/dc_726/article/details/46565241)\n* [Go\u547d\u4ee4\u6559\u7a0b](https://github.com/hyper-carrot/go_command_tutorial)\n* [Go\u8bed\u8a00\u535a\u5ba2\u5b9e\u8df5](https://github.com/achun/Go-Blog-In-Action)\n* [Go \u5b98\u65b9\u6587\u6863\u7ffb\u8bd1](https://github.com/golang-china/golangdoc.translations)\n* [\u6df1\u5165\u89e3\u6790Go](https://github.com/tiancaiamao/go-internals)\n* [Go\u8bed\u8a00\u5723\u7ecf(\u4e2d\u6587\u7248)](https://bitbucket.org/golang-china/gopl-zh/wiki/Home) ([GitBook](https://www.gitbook.com/book/wizardforcel/gopl-zh/details))\n* [golang runtime\u6e90\u7801\u5206\u6790](https://github.com/sheepbao/golang_runtime_reading)\n* [Go\u8bed\u8a00\u5b9e\u6218: \u7f16\u5199\u53ef\u7ef4\u62a4Go\u8bed\u8a00\u4ee3\u7801\u5efa\u8bae](https://github.com/llitfkitfk/go-best-practice)\n* [Golang \u7cfb\u5217\u6559\u7a0b(\u8bd1)](https://github.com/Tinywan/golang-tutorial)   \n* [Go RPC \u5f00\u53d1\u6307\u5357](https://github.com/smallnest/go-rpc-programming-guide)[GitBook](https://smallnest.gitbooks.io/go-rpc-programming-guide/)\n* [Go\u8bed\u8a00\u9ad8\u7ea7\u7f16\u7a0b](https://books.studygolang.com/advanced-go-programming-book/)   \n* [Go2\u7f16\u7a0b\u6307\u5357](https://chai2010.cn/go2-book/)   \n* [Go\u8bed\u8a00\u8bbe\u8ba1\u6a21\u5f0f](https://github.com/senghoo/golang-design-pattern)   \n* [Go\u8bed\u8a00\u56db\u5341\u4e8c\u7ae0\u7ecf](https://github.com/ffhelicopter/Go42)   \n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Groovy\n\n* [\u5b9e\u6218 Groovy \u7cfb\u5217](http://www.ibm.com/developerworks/cn/java/j-pg/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Haskell\n\n* [Real World Haskell \u4e2d\u6587\u7248](http://rwh.readthedocs.org/en/latest/)\n* [Haskell\u8da3\u5b66\u6307\u5357](https://learnyoua.haskell.sg/content/zh-cn/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## iOS\n\n* [iOS\u5f00\u53d160\u5206\u949f\u5165\u95e8](https://github.com/qinjx/30min_guides/blob/master/ios.md)\n* [iOS7\u4eba\u673a\u754c\u9762\u6307\u5357](http://isux.tencent.com/ios-human-interface-guidelines-ui-design-basics-ios7.html)\n* [Google Objective-C Style Guide \u4e2d\u6587\u7248](http://zh-google-styleguide.readthedocs.org/en/latest/google-objc-styleguide/)\n* [iPhone 6 \u5c4f\u5e55\u63ed\u79d8](http://wileam.com/iphone-6-screen-cn/)\n* [Apple Watch\u5f00\u53d1\u521d\u63a2](http://nilsun.github.io/apple-watch/)\n* [\u9a6c\u4e0a\u7740\u624b\u5f00\u53d1 iOS \u5e94\u7528\u7a0b\u5e8f](https://developer.apple.com/library/ios/referencelibrary/GettingStarted/RoadMapiOSCh/index.html)\n* [\u7f51\u6613\u65af\u5766\u798f\u5927\u5b66\u516c\u5f00\u8bfe\uff1aiOS 7\u5e94\u7528\u5f00\u53d1\u5b57\u5e55\u6587\u4ef6](https://github.com/jkyin/Subtitle)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Java\n\n* [Apache Shiro \u7528\u6237\u6307\u5357](https://github.com/waylau/apache-shiro-1.2.x-reference)\n* [Jersey 2.x \u7528\u6237\u6307\u5357](https://github.com/waylau/Jersey-2.x-User-Guide)\n* [Spring Framework 4.x\u53c2\u8003\u6587\u6863](https://github.com/waylau/spring-framework-4-reference)\n* [Spring Boot\u53c2\u8003\u6307\u5357](https://github.com/qibaoguang/Spring-Boot-Reference-Guide) (\u7ffb\u8bd1\u4e2d)\n* [MyBatis\u4e2d\u6587\u6587\u6863](http://mybatis.org/mybatis-3/zh/index.html)\n* [MyBatis Generator \u4e2d\u6587\u6587\u6863](http://mbg.cndocs.tk/)\n* [\u7528jersey\u6784\u5efaREST\u670d\u52a1](https://github.com/waylau/RestDemo)\n* [Activiti 5.x \u7528\u6237\u6307\u5357](https://github.com/waylau/activiti-5.x-user-guide)\n* [Google Java\u7f16\u7a0b\u98ce\u683c\u6307\u5357](http://www.hawstein.com/posts/google-java-style.html)\n* [Netty 4.x \u7528\u6237\u6307\u5357](https://github.com/waylau/netty-4-user-guide)\n* [Netty \u5b9e\u6218(\u7cbe\u9ad3)](https://github.com/waylau/essential-netty-in-action)\n* [REST \u5b9e\u6218](https://github.com/waylau/rest-in-action)\n* [Java \u7f16\u7801\u89c4\u8303](https://github.com/waylau/java-code-conventions)\n* [Apache MINA 2 \u7528\u6237\u6307\u5357](https://github.com/waylau/apache-mina-2.x-user-guide)\n* [H2 Database \u6559\u7a0b](https://github.com/waylau/h2-database-doc)\n* [Java Servlet 3.1 \u89c4\u8303](https://github.com/waylau/servlet-3.1-specification)\n* [JSSE \u53c2\u8003\u6307\u5357](https://github.com/waylau/jsse-reference-guide)\n* [Java\u5f00\u6e90\u5b9e\u73b0\u53ca\u6700\u4f73\u5b9e\u8df5](https://github.com/biezhi/jb)\n* [Java \u7f16\u7a0b\u8981\u70b9](https://github.com/waylau/essential-java)\n* [Think Java](http://www.ituring.com.cn/minibook/69)\n* [Java 8 \u7b80\u660e\u6559\u7a0b](https://github.com/wizardforcel/modern-java-zh)\n* [On Java 8 \u4e2d\u6587\u7248](https://github.com/LingCoder/OnJava8) (\u7ffb\u8bd1\u4e2d)\n* [Effective Java \u7b2c3\u7248\u4e2d\u6587\u7248](https://github.com/sjsdfg/effective-java-3rd-chinese) \n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## JavaScript\n\n* [\u73b0\u4ee3 Javascript \u6559\u7a0b](https://zh.javascript.info/)\n* [Google JavaScript \u4ee3\u7801\u98ce\u683c\u6307\u5357](http://bq69.com/blog/articles/script/868/google-javascript-style-guide.html)\n* [Google JSON \u98ce\u683c\u6307\u5357](https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md)\n* [Airbnb JavaScript \u89c4\u8303](https://github.com/adamlu/javascript-style-guide)\n* [JavaScript \u6807\u51c6\u53c2\u8003\u6559\u7a0b\uff08alpha\uff09](http://javascript.ruanyifeng.com/)\n* [Javascript\u7f16\u7a0b\u6307\u5357](http://pij.robinqu.me/) ([\u6e90\u7801](https://github.com/RobinQu/Programing-In-Javascript))\n* [javascript \u7684 12 \u4e2a\u602a\u7656](https://github.com/justjavac/12-javascript-quirks)\n* [JavaScript \u79d8\u5bc6\u82b1\u56ed](http://bonsaiden.github.io/JavaScript-Garden/zh/)\n* [JavaScript\u6838\u5fc3\u6982\u5ff5\u53ca\u5b9e\u8df5](http://icodeit.org/jsccp/) (PDF) (\u6b64\u4e66\u5df2\u7531\u4eba\u6c11\u90ae\u7535\u51fa\u7248\u793e\u51fa\u7248\u53d1\u884c\uff0c\u4f46\u4f5c\u8005\u4f9d\u7136\u514d\u8d39\u63d0\u4f9bPDF\u7248\u672c\uff0c\u5e0c\u671b\u5f00\u53d1\u8005\u4eec\u53bb\u8d2d\u4e70\uff0c\u652f\u6301\u4f5c\u8005)\n* [\u300aJavaScript \u6a21\u5f0f\u300b](https://github.com/jayli/javascript-patterns) \u201cJavaScript patterns\u201d\u4e2d\u8bd1\u672c\n* [JavaScript\u8bed\u8a00\u7cbe\u7cb9](https://github.com/qibaoguang/Study-Step-by-Step/blob/master/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/javascript_the_good_parts.md)\n* [\u547d\u540d\u51fd\u6570\u8868\u8fbe\u5f0f\u63a2\u79d8](http://justjavac.com/named-function-expressions-demystified.html)  (\u6ce8:\u539f\u6587\u7531[\u4e3a\u4e4b\u6f2b\u7b14](http://www.cn-cuckoo.com)\u7ffb\u8bd1\uff0c\u539f\u59cb\u5730\u5740\u65e0\u6cd5\u6253\u5f00\uff0c\u6240\u4ee5\u6b64\u5904\u5730\u5740\u4e3a\u6211\u535a\u5ba2\u4e0a\u7684\u5907\u4efd)\n* [\u5b66\u7528 JavaScript \u8bbe\u8ba1\u6a21\u5f0f](http://www.oschina.net/translate/learning-javascript-design-patterns) (\u5f00\u6e90\u4e2d\u56fd)\n* [\u6df1\u5165\u7406\u89e3JavaScript\u7cfb\u5217](http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html)\n* [ECMAScript 5.1 \u4e2d\u6587\u7248](http://yanhaijing.com/es5)\n* [ECMAScript 6 \u5165\u95e8](http://es6.ruanyifeng.com/) (\u4f5c\u8005\uff1a\u962e\u4e00\u5cf0)\n* [JavaScript Promise\u8ff7\u4f60\u4e66](http://liubin.github.io/promises-book/)\n* [You-Dont-Know-JS](https://github.com/getify/You-Dont-Know-JS) (\u6df1\u5165JavaScript\u8bed\u8a00\u6838\u5fc3\u673a\u5236\u7684\u7cfb\u5217\u56fe\u4e66)\n* [JavaScript \u6559\u7a0b](http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000) \u5ed6\u96ea\u5cf0\n* [MDN JavaScript \u4e2d\u6587\u6587\u6863](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript)\n* jQuery\n    * [jQuery \u89e3\u6784](http://www.cn-cuckoo.com/deconstructed/jquery.html)\n    * [\u7b80\u5355\u6613\u61c2\u7684JQuery\u9b54\u6cd5](http://www.nowamagic.net/librarys/books/contents/jquery)\n    * [How to write jQuery plugin](http://i5ting.github.io/How-to-write-jQuery-plugin/build/jquery.plugin.html)\n    * [You Don't Need jQuery](https://github.com/oneuijs/You-Dont-Need-jQuery/blob/master/README.zh-CN.md)\n    * [\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u7c7bjQuery\uff1f](https://github.com/MeCKodo/forchange)\n* Node.js\n    * [Node\u5165\u95e8](http://www.nodebeginner.org/index-zh-cn.html)\n    * [\u4e03\u5929\u5b66\u4f1aNodeJS](http://nqdeng.github.io/7-days-nodejs/)\n    * [Nodejs Wiki Book](https://github.com/nodejs-tw/nodejs-wiki-book) (\u7e41\u4f53\u4e2d\u6587)\n    * [express.js \u4e2d\u6587\u6587\u6863](http://expressjs.jser.us/)\n    * [koa \u4e2d\u6587\u6587\u6863](https://github.com/guo-yu/koa-guide)\n    * [\u4e00\u8d77\u5b66koa](http://base-n.github.io/koa-generator-examples/)\n    * [\u4f7f\u7528 Express + MongoDB \u642d\u5efa\u591a\u4eba\u535a\u5ba2](https://github.com/nswbmw/N-blog)\n    * [Express\u6846\u67b6](http://javascript.ruanyifeng.com/nodejs/express.html)\n    * [Node.js \u5305\u6559\u4e0d\u5305\u4f1a](https://github.com/alsotang/node-lessons)\n    * [Learn You The Node.js For Much Win! (\u4e2d\u6587\u7248)](https://www.npmjs.com/package/learnyounode-zh-cn)\n    * [Node debug \u4e09\u6cd5\u4e09\u4f8b](http://i5ting.github.io/node-debug-tutorial/)\n    * [nodejs\u4e2d\u6587\u6587\u6863](https://www.gitbook.com/book/0532/nodejs/details)\n    * [orm2 \u4e2d\u6587\u6587\u6863](https://github.com/wizardforcel/orm2-doc-zh-cn)\n    * [\u4e00\u8d77\u5b66 Node.js](https://github.com/nswbmw/N-blog)\n* underscore.js\n    * [Underscore.js\u4e2d\u6587\u6587\u6863](http://learningcn.com/underscore/)\n* backbone.js\n    * [backbone.js\u4e2d\u6587\u6587\u6863](http://www.css88.com/doc/backbone/)\n    * [backbone.js\u5165\u95e8\u6559\u7a0b](http://www.the5fire.com/backbone-js-tutorials-pdf-download.html) (PDF)\n    * [Backbone.js\u5165\u95e8\u6559\u7a0b\u7b2c\u4e8c\u7248](https://github.com/the5fire/backbonejs-learning-note)\n    * [Developing Backbone.js Applications(\u4e2d\u6587\u7248)](http://feliving.github.io/developing-backbone-applications/)\n* AngularJS\n    * [AngularJS\u6700\u4f73\u5b9e\u8df5\u548c\u98ce\u683c\u6307\u5357](https://github.com/mgechev/angularjs-style-guide/blob/master/README-zh-cn.md)\n    * [AngularJS\u4e2d\u8bd1\u672c](https://github.com/peiransun/angularjs-cn)\n    * [AngularJS\u5165\u95e8\u6559\u7a0b](https://github.com/zensh/AngularjsTutorial_cn)\n    * [\u6784\u5efa\u81ea\u5df1\u7684AngularJS](https://github.com/xufei/Make-Your-Own-AngularJS/blob/master/01.md)\n    * [\u5728Windows\u73af\u5883\u4e0b\u7528Yeoman\u6784\u5efaAngularJS\u9879\u76ee](http://www.waylau.com/build-angularjs-app-with-yeoman-in-windows/)\n* Zepto.js\n    * [Zepto.js \u4e2d\u6587\u6587\u6863](http://mweb.baidu.com/zeptoapi/)\n* Sea.js\n    * [Hello Sea.js](http://island205.github.io/HelloSea.js/)\n* React.js\n    * [React \u5b66\u4e60\u4e4b\u9053](https://github.com/the-road-to-learn-react/the-road-to-learn-react-chinese)\n    * [React.js \u5c0f\u4e66](https://github.com/huzidaha/react-naive-book)\n    * [React.js \u4e2d\u6587\u6587\u6863](https://doc.react-china.org/)\n    * [React webpack-cookbook](https://github.com/fakefish/react-webpack-cookbook)\n    * [React \u5165\u95e8\u6559\u7a0b](http://fraserxu.me/intro-to-react/)\n    * [React \u5165\u95e8\u6559\u7a0b](https://hulufei.gitbooks.io/react-tutorial/content/) (\u4f5c\u8005\uff1ahulufei, \u4e0e\u4e0a\u884c\u4e0d\u540c\u4f5c\u8005)\n    * [React Native \u4e2d\u6587\u6587\u6863(\u542b\u6700\u65b0Android\u5185\u5bb9)](http://wiki.jikexueyuan.com/project/react-native/)\n    * [Learn React & Webpack by building the Hacker News front page](https://github.com/theJian/build-a-hn-front-page)\n* impress.js\n    * [impress.js\u7684\u4e2d\u6587\u6559\u7a0b](https://github.com/kokdemo/impress.js-tutorial-in-Chinese)\n* CoffeeScript\n    * [CoffeeScript Cookbook](http://island205.com/coffeescript-cookbook.github.com/)\n    * [The Little Book on CoffeeScript\u4e2d\u6587\u7248](http://island205.com/tlboc/)\n    * [CoffeeScript \u7f16\u7801\u98ce\u683c\u6307\u5357](https://github.com/geekplux/coffeescript-style-guide)\n* TypeScipt\n    * [TypeScript Handbook](https://zhongsp.gitbooks.io/typescript-handbook/content/)\n* ExtJS\n    * [Ext4.1.0 \u4e2d\u6587\u6587\u6863](http://extjs-doc-cn.github.io/ext4api/)\n* Meteor\n    * [Discover Meteor](http://zh.discovermeteor.com/)\n    * [Meteor \u4e2d\u6587\u6587\u6863](http://docs.meteorhub.org/#/basic/)\n    * [Angular-Meteor \u4e2d\u6587\u6559\u7a0b](http://angular.meteorhub.org/)\n* VueJS\n    * [\u9010\u884c\u5256\u6790 Vue.js \u6e90\u7801](https://nlrx-wjc.github.io/Learn-Vue-Source-Code/)\n* [Chrome\u6269\u5c55\u53ca\u5e94\u7528\u5f00\u53d1](http://www.ituring.com.cn/minibook/950)\n\n## Kotlin\n* [Kotlin \u5b98\u65b9\u53c2\u8003\u6587\u6863 \u4e2d\u6587\u7248](https://hltj.gitbooks.io/kotlin-reference-chinese/content/) \n* [Kotlin \u4e2d\u6587\u6587\u6863](https://huanglizhuo.gitbooks.io/kotlin-in-chinese/) [GitHub](https://github.com/huanglizhuo/kotlin-in-chinese)   \n* [Kotlin \u53c2\u8003\u6587\u6863](http://www.liying-cn.net/kotlin/docs/reference/)    \n* [\u300aKotlin for android developers\u300b\u4e2d\u6587\u7248](https://wangjiegulu.gitbooks.io/kotlin-for-android-developers-zh/content/)  \n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n\n## LaTeX\n\n* [\u4e00\u4efd\u5176\u5b9e\u5f88\u77ed\u7684 LaTeX \u5165\u95e8\u6587\u6863](http://liam0205.me/2014/09/08/latex-introduction/)\n* [\u4e00\u4efd\u4e0d\u592a\u7b80\u77ed\u7684 LATEX 2\u03b5 \u4ecb\u7ecd](http://www.mohu.org/info/lshort-cn.pdf) \uff08PDF\u7248\uff09\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## LISP\n* Common Lisp\n    * [ANSI Common Lisp \u4e2d\u6587\u7ffb\u8b6f\u7248](http://acl.readthedocs.org/en/latest/)\n    * [On Lisp \u4e2d\u6587\u7ffb\u8bd1\u7248\u672c](http://www.ituring.com.cn/minibook/862)\n* Scheme\n    * [Yet Another Scheme Tutorial Scheme\u5165\u95e8\u6559\u7a0b](http://deathking.github.io/yast-cn/)\n    * [Scheme\u8bed\u8a00\u7b80\u660e\u6559\u7a0b](http://songjinghe.github.io/TYS-zh-translation/)\n    * Racket\n        * [Racket book](https://github.com/tyrchen/racket-book)\n        \n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Lua\n\n* [Lua\u7f16\u7a0b\u5165\u95e8](https://github.com/andycai/luaprimer)\n* [Lua 5.1 \u53c2\u8003\u624b\u518c \u4e2d\u6587\u7ffb\u8bd1](http://www.codingnow.com/2000/download/lua_manual.html)\n* [Lua 5.3 \u53c2\u8003\u624b\u518c \u4e2d\u6587\u7ffb\u8bd1](http://cloudwu.github.io/lua53doc/)\n* [Lua\u6e90\u7801\u6b23\u8d4f](http://www.codingnow.com/temp/readinglua.pdf)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## OCaml\n\n* [Real World OCaml](https://github.com/zforget/translation/tree/master/real_world_ocaml)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Perl\n\n* [Modern Perl \u4e2d\u6587\u7248](https://github.com/horus/modern_perl_book)\n* [Perl \u7a0b\u5e8f\u5458\u5e94\u8be5\u77e5\u9053\u7684\u4e8b](http://perl.linuxtoy.org/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## PHP\n\n* [PHP \u5b98\u65b9\u624b\u518c](http://php.net/manual/zh/)\n* [PHP\u8c03\u8bd5\u6280\u672f\u624b\u518c](http://www.laruence.com/2010/06/21/1608.html)(PDF)\n* PHP\u4e4b\u9053\uff1aphp-the-right-way ([@wulijun\u7248](http://wulijun.github.io/php-the-right-way/) [PHPHub\u7248](http://laravel-china.github.io/php-the-right-way/))\n* [PHP \u6700\u4f73\u5b9e\u8df5](https://github.com/justjavac/PHP-Best-Practices-zh_CN)\n* [PHP \u5f00\u53d1\u8005\u5b9e\u8df5](https://ryancao.gitbooks.io/php-developer-prepares/content/)\n* [\u6df1\u5165\u7406\u89e3PHP\u5185\u6838](https://github.com/reeze/tipi)\n* [PHP\u6269\u5c55\u5f00\u53d1\u53ca\u5185\u6838\u5e94\u7528](http://www.walu.cc/phpbook/)\n* [Laravel5.1 \u4e2d\u6587\u6587\u6863](http://laravel-china.org/docs/5.1)\n* [Laravel 5.1 LTS \u901f\u67e5\u8868](https://cs.phphub.org/)\n* [Symfony2 Cookbook \u4e2d\u6587\u7248](http://wiki.jikexueyuan.com/project/symfony-cookbook/)(\u7248\u672c 2.7.0 LTS)\n* [Symfony2\u4e2d\u6587\u6587\u6863](http://symfony-docs-chs.readthedocs.org/en/latest/) (\u672a\u8bd1\u5b8c)\n* [YiiBook\u51e0\u672cYii\u6846\u67b6\u7684\u5728\u7ebf\u6559\u7a0b](http://yiibook.com//doc)\n* [\u6df1\u5165\u7406\u89e3 Yii 2.0](http://www.digpage.com/)\n* [Yii \u6846\u67b6\u4e2d\u6587\u5b98\u7f51](http://www.yiichina.com/)\n* [\u7b80\u5355\u6613\u61c2\u7684PHP\u9b54\u6cd5](http://www.nowamagic.net/librarys/books/contents/php)\n* [swoole\u6587\u6863\u53ca\u5165\u95e8\u6559\u7a0b](https://github.com/LinkedDestiny/swoole-doc)\n* [Composer \u4e2d\u6587\u7f51](http://www.phpcomposer.com)\n* [Slim \u4e2d\u6587\u6587\u6863](http://ww1.minimee.org/php/slim)\n* [Lumen \u4e2d\u6587\u6587\u6863](http://lumen.laravel-china.org/)\n* [PHPUnit \u4e2d\u6587\u6587\u6863](https://phpunit.de/manual/current/zh_cn/installation.html)\n* [PHP-LeetCode](https://github.com/wuqinqiang/leetcode-php)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Prolog\n\n* [\u7b28\u529e\u6cd5\u5b66Prolog](http://fengdidi.github.io/blog/2011/11/15/qian-yan/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Python\n\n* [\u5ed6\u96ea\u5cf0 Python 2.7 \u4e2d\u6587\u6559\u7a0b](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000)\n* [\u5ed6\u96ea\u5cf0 Python 3 \u4e2d\u6587\u6559\u7a0b](http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000)\n* [\u7b80\u660ePython\u6559\u7a0b](http://www.kuqin.com/abyteofpython_cn/)\n* [\u7b80\u660e Python \u6559\u7a0b(Python 3)](https://legacy.gitbook.com/book/lenkimo/byte-of-python-chinese-edition/details)\n* [\u96f6\u57fa\u7840\u5b66 Python \u7b2c\u4e00\u7248](http://www.kancloud.cn/kancloud/python-basic)\n* [\u96f6\u57fa\u7840\u5b66 Python \u7b2c\u4e8c\u7248](http://www.kancloud.cn/kancloud/starter-learning-python)\n* [\u53ef\u7231\u7684 Python](http://lovelypython.readthedocs.org/en/latest/)\n* [Python 2.7 \u5b98\u65b9\u6559\u7a0b\u4e2d\u6587\u7248](http://www.pythondoc.com/pythontutorial27/index.html)\n* [Python 3.3 \u5b98\u65b9\u6559\u7a0b\u4e2d\u6587\u7248](http://www.pythondoc.com/pythontutorial3/index.html)\n* [Python Cookbook \u4e2d\u6587\u7248](http://www.kancloud.cn/thinkphp/python-cookbook)\n* [Python3 Cookbook \u4e2d\u6587\u7248](https://github.com/yidao620c/python3-cookbook)\n* [\u6df1\u5165 Python](http://www.kuqin.com/docs/diveintopythonzh-cn-5.4b/html/toc/)\n* [\u6df1\u5165 Python 3](http://old.sebug.net/paper/books/dive-into-python3/)\n* [PEP8 Python\u4ee3\u7801\u98ce\u683c\u89c4\u8303](https://code.google.com/p/zhong-wiki/wiki/PEP8)\n* [Google Python \u98ce\u683c\u6307\u5357 \u4e2d\u6587\u7248](http://zh-google-styleguide.readthedocs.org/en/latest/google-python-styleguide/)\n* [Python\u5165\u95e8\u6559\u7a0b](http://liam0205.me/2013/11/02/Python-tutorial-zh_cn/) ([PDF](http://liam0205.me/attachment/Python/The_Python_Tutorial_zh-cn.pdf))\n* [\u7b28\u529e\u6cd5\u5b66 Python](http://old.sebug.net/paper/books/LearnPythonTheHardWay/) ([PDF](http://liam0205.me/attachment/Python/PyHardWay/Learn_Python_The_Hard_Way_zh-cn.pdf) [EPUB](https://www.gitbook.com/download/epub/book/wizardforcel/lpthw))\n* [Python\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u6587\u7248](http://pan.baidu.com/s/1qW4pvnY) \uff08\u611f\u8c22\u9648\u6d9b\u540c\u5b66\u7684\u7ffb\u8bd1\uff0c\u4e5f\u8c22\u8c22 [@shwley](https://github.com/shwley) \u8054\u7cfb\u4e86\u4f5c\u8005\uff09\n* [Python \u7ed8\u56fe\u5e93 matplotlib \u5b98\u65b9\u6307\u5357\u4e2d\u6587\u7ffb\u8bd1](http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/)\n* [Scrapy 0.25 \u6587\u6863](http://scrapy-chs.readthedocs.org/zh_CN/latest/)\n* [ThinkPython](https://github.com/carfly/thinkpython-cn)\n* [ThinkPython 2ed](https://github.com/bingjin/ThinkPython2-CN)\n* [Python\u5feb\u901f\u6559\u7a0b](http://www.cnblogs.com/vamei/archive/2012/09/13/2682778.html)\n* [Python \u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u6307\u5357](http://wiki.ubuntu.org.cn/Python\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u6307\u5357)\n* [python\u521d\u7ea7\u6559\u7a0b\uff1a\u5165\u95e8\u8be6\u89e3](http://www.crifan.com/files/doc/docbook/python_beginner_tutorial/release/html/python_beginner_tutorial.html)\n* [Twisted \u4e0e\u5f02\u6b65\u7f16\u7a0b\u5165\u95e8](https://www.gitbook.com/book/likebeta/twisted-intro-cn/details)\n* [TextGrocery \u4e2d\u6587 API](http://textgrocery.readthedocs.org/zh/latest/index.html) ( \u57fa\u4e8esvm\u7b97\u6cd5\u7684\u4e00\u4e2a\u77ed\u6587\u672c\u5206\u7c7b Python \u5e93 )\n* [Requests: HTTP for Humans](http://requests-docs-cn.readthedocs.org/zh_CN/latest/)\n* [Pillow \u4e2d\u6587\u6587\u6863](http://pillow-cn.readthedocs.org/en/latest/#)\n* [PyMOTW \u4e2d\u6587\u7248](http://pymotwcn.readthedocs.org/en/latest/index.html)\n* [Python \u5b98\u65b9\u6587\u6863\u4e2d\u6587\u7248](http://data.digitser.net/zh-CN/python_index.html)\n* [Fabric \u4e2d\u6587\u6587\u6863](http://fabric-chs.readthedocs.org)\n* [Beautiful Soup 4.2.0 \u4e2d\u6587\u6587\u6863](http://beautifulsoup.readthedocs.org/zh_CN/latest/)\n* [Python \u4e2d\u7684 Socket \u7f16\u7a0b](https://legacy.gitbook.com/book/keelii/socket-programming-in-python-cn/details)\n* [\u7528Python\u505a\u79d1\u5b66\u8ba1\u7b97](http://old.sebug.net/paper/books/scipydoc)\n* [Sphinx \u4e2d\u6587\u6587\u6863](http://www.pythondoc.com/sphinx/index.html)\n* [\u7cbe\u901a Python \u8bbe\u8ba1\u6a21\u5f0f](https://github.com/cundi/Mastering.Python.Design.Patterns)\n* [python \u5b89\u5168\u7f16\u7a0b\u6559\u7a0b](https://github.com/smartFlash/pySecurity)\n* [\u7a0b\u5e8f\u8bbe\u8ba1\u601d\u60f3\u4e0e\u65b9\u6cd5](https://www.gitbook.com/book/wizardforcel/sjtu-cs902-courseware/details)\n* [\u77e5\u4e4e\u5468\u520a\u00b7\u7f16\u7a0b\u5c0f\u767d\u5b66Python](https://read.douban.com/ebook/16691849/)\n* [Scipy \u8bb2\u4e49](https://github.com/cloga/scipy-lecture-notes_cn)\n* [Python \u5b66\u4e60\u7b14\u8bb0 \u57fa\u7840\u7bc7](http://www.kuqin.com/docs/pythonbasic.html)\n* [Python \u5b66\u4e60\u7b14\u8bb0 \u6a21\u5757\u7bc7](http://www.kuqin.com/docs/pythonmodule.html)\n* [Python \u6807\u51c6\u5e93 \u4e2d\u6587\u7248](http://old.sebug.net/paper/books/python/%E3%80%8APython%E6%A0%87%E5%87%86%E5%BA%93%E3%80%8B%E4%B8%AD%E6%96%87%E7%89%88.pdf)\n* [Python\u8fdb\u9636](https://www.gitbook.com/book/eastlakeside/interpy-zh/details)\n* [Python \u6838\u5fc3\u7f16\u7a0b \u7b2c\u4e8c\u7248](https://wizardforcel.gitbooks.io/core-python-2e/content/) CPyUG\u8bd1\n* [Python\u6700\u4f73\u5b9e\u8df5\u6307\u5357](http://pythonguidecn.readthedocs.io/zh/latest/)\n* [Python \u7cbe\u8981\u6559\u7a0b](https://www.gitbook.com/book/wizardforcel/python-essential-tutorial/details)\n* [Python \u91cf\u5316\u4ea4\u6613\u6559\u7a0b](https://www.gitbook.com/book/wizardforcel/python-quant-uqer/details)\n* Django\n    * [Django 1.5 \u6587\u6863\u4e2d\u6587\u7248](http://django-chinese-docs.readthedocs.org/en/latest/) \u6b63\u5728\u7ffb\u8bd1\u4e2d\n    * [Django 2.0 \u6587\u6863\u4e2d\u6587\u7248](https://docs.djangoproject.com/zh-hans/2.0/)\n    * [Django \u6700\u4f73\u5b9e\u8df5](https://github.com/yangyubo/zh-django-best-practices)\n    * [Django 2.1 \u642d\u5efa\u4e2a\u4eba\u535a\u5ba2\u6559\u7a0b](https://www.dusaiphoto.com/article/detail/2/) ( \u7f16\u5199\u4e2d )\n    * [Django\u642d\u5efa\u7b80\u6613\u535a\u5ba2\u6559\u7a0b](https://www.gitbook.com/book/andrew-liu/django-blog/details)\n    * [The Django Book \u4e2d\u6587\u7248](http://djangobook.py3k.cn/2.0/)\n    * [Django \u8bbe\u8ba1\u6a21\u5f0f\u4e0e\u6700\u4f73\u5b9e\u8df5](https://github.com/cundi/Django-Design-Patterns-and-Best-Practices)\n    * [Django \u7f51\u7ad9\u5f00\u53d1 Cookbook](https://github.com/cundi/Web.Development.with.Django.Cookbook)\n    * [Django Girls \u5b78\u7fd2\u6307\u5357](https://www.gitbook.com/book/djangogirlstaipei/django-girls-taipei-tutorial/details)\n* Flask\n    * [Flask \u6587\u6863\u4e2d\u6587\u7248](http://docs.jinkan.org/docs/flask/)\n    * [Jinja2 \u6587\u6863\u4e2d\u6587\u7248](http://docs.jinkan.org/docs/jinja2/)\n    * [Werkzeug \u6587\u6863\u4e2d\u6587\u7248](http://werkzeug-docs-cn.readthedocs.org/zh_CN/latest/)\n    * [Flask\u4e4b\u65c5](http://spacewander.github.io/explore-flask-zh/)\n    * [Flask \u6269\u5c55\u6587\u6863\u6c47\u603b](https://www.gitbook.com/book/wizardforcel/flask-extension-docs/details)\n    * [Flask \u5927\u578b\u6559\u7a0b](http://www.pythondoc.com/flask-mega-tutorial/index.html)\n    * [SQLAlchemy \u4e2d\u6587\u6587\u6863](http://docs.jinkan.org/docs/flask-sqlalchemy/)\n    * [Flask \u5165\u95e8\u6559\u7a0b](https://read.helloflask.com)\n* web.py\n    * [web.py 0.3 \u65b0\u624b\u6307\u5357](http://webpy.org/tutorial3.zh-cn)\n    * [Web.py Cookbook \u7b80\u4f53\u4e2d\u6587\u7248](http://webpy.org/cookbook/index.zh-cn)\n* Tornado\n    * [Introduction to Tornado \u4e2d\u6587\u7ffb\u8bd1](http://demo.pythoner.com/itt2zh/index.html)\n    * [Tornado\u6e90\u7801\u89e3\u6790](http://www.nowamagic.net/academy/detail/13321002)\n    * [Tornado 4.3 \u6587\u6863\u4e2d\u6587\u7248](https://tornado-zh.readthedocs.org/zh/latest/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## R\n\n* [R\u8bed\u8a00\u5fcd\u8005\u79d8\u7b08](https://github.com/yihui/r-ninja)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Ruby\n\n* [Ruby \u98ce\u683c\u6307\u5357](https://github.com/JuanitoFatas/ruby-style-guide/blob/master/README-zhCN.md)\n* [Rails \u98ce\u683c\u6307\u5357](https://github.com/JuanitoFatas/rails-style-guide/blob/master/README-zhCN.md)\n* [\u7b28\u65b9\u6cd5\u5b78 Ruby](http://lrthw.github.io/)\n* [Ruby on Rails \u6307\u5357](http://guides.ruby-china.org/)\n* [Ruby on Rails \u5be6\u6230\u8056\u7d93](https://ihower.tw/rails4/index.html)\n* [Ruby on Rails Tutorial \u539f\u4e66\u7b2c 3 \u7248](http://railstutorial-china.org/) (\u672c\u4e66\u7f51\u9875\u7248\u514d\u8d39\u63d0\u4f9b\uff0c\u7535\u5b50\u7248\u4ee5 PDF\u3001EPub \u548c Mobi \u683c\u5f0f\u63d0\u4f9b\u8d2d\u4e70\uff0c\u4ec5\u552e 9.9 \u7f8e\u5143)\n* [Rails \u5b9e\u8df5](http://rails-practice.com/content/index.html)\n* [Rails 5 \u5f00\u53d1\u8fdb\u9636(Beta)](https://www.gitbook.com/book/kelby/rails-beginner-s-guide/details)\n* [Rails 102](https://www.gitbook.com/book/rocodev/rails-102/details)\n* [\u7f16\u5199Ruby\u7684C\u62d3\u5c55](https://wusuopu.gitbooks.io/write-ruby-extension-with-c/content/)\n* [Ruby \u6e90\u7801\u89e3\u8bfb](https://ruby-china.org/topics/22386)\n* [Ruby\u4e2d\u7684\u5143\u7f16\u7a0b](http://deathking.github.io/metaprogramming-in-ruby/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Rust\n\n* [Rust\u7f16\u7a0b\u8bed\u8a00 \u4e2d\u6587\u7ffb\u8bd1](https://kaisery.github.io/trpl-zh-cn/)\n* [Rust Primer](https://github.com/rustcc/RustPrimer)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Scala\n\n* [Scala\u8bfe\u5802](http://twitter.github.io/scala_school/zh_cn/index.html) (Twitter\u7684Scala\u4e2d\u6587\u6559\u7a0b)\n* [Effective Scala](http://twitter.github.io/effectivescala/index-cn.html)(Twitter\u7684Scala\u6700\u4f73\u5b9e\u8df5\u7684\u4e2d\u6587\u7ffb\u8bd1)\n* [Scala\u6307\u5357](http://zh.scala-tour.com/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Shell\n\n* [Shell\u811a\u672c\u7f16\u7a0b30\u5206\u949f\u5165\u95e8](https://github.com/qinjx/30min_guides/blob/master/shell.md)\n* [Bash\u811a\u672c15\u5206\u949f\u8fdb\u9636\u6559\u7a0b](http://blog.sae.sina.com.cn/archives/3606)\n* [Linux\u5de5\u5177\u5feb\u901f\u6559\u7a0b](https://github.com/me115/linuxtools_rst)\n* [shell\u5341\u4e09\u95ee](https://github.com/wzb56/13_questions_of_shell)\n* [Shell\u7f16\u7a0b\u8303\u4f8b](https://www.gitbook.com/book/tinylab/shellbook/details)\n* [Linux\u547d\u4ee4\u641c\u7d22\u5f15\u64ce](https://wangchujiang.com/linux-command/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## Swift\n\n* [The Swift Programming Language \u4e2d\u6587\u7248](http://numbbbbb.github.io/the-swift-programming-language-in-chinese/)\n* [Swift \u8bed\u8a00\u6307\u5357](http://dev.swiftguide.cn)\n* [Stanford \u516c\u5f00\u8bfe\uff0cDeveloping iOS 8 Apps with Swift \u5b57\u5e55\u7ffb\u8bd1\u6587\u4ef6](https://github.com/x140yu/Developing_iOS_8_Apps_With_Swift)\n* [C4iOS - COSMOS](http://c4ios.swift.gg)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n## \u8bfb\u4e66\u7b14\u8bb0\u53ca\u5176\u5b83\n\n* [\u7f16\u8bd1\u539f\u7406\uff08\u7d2b\u9f99\u4e66\uff09\u4e2d\u6587\u7b2c2\u7248\u4e60\u9898\u7b54\u6848](https://github.com/fool2fish/dragon-book-exercise-answers)\n* [\u628a\u300a\u7f16\u7a0b\u73e0\u7391\u300b\u8bfb\u8584](http://hawstein.com/2013/08/11/make-thiner-programming-pearls/)\n* [Effective C++\u8bfb\u4e66\u7b14\u8bb0](https://github.com/XiaolongJason/ReadingNote/blob/master/Effective%20C%2B%2B/Effective%20C%2B%2B.md)\n* [Golang \u5b66\u4e60\u7b14\u8bb0\u3001Python \u5b66\u4e60\u7b14\u8bb0\u3001C \u5b66\u4e60\u7b14\u8bb0](https://github.com/qyuhen/book) (PDF)\n* [Jsoup \u5b66\u4e60\u7b14\u8bb0](https://github.com/code4craft/jsoup-learning)\n* [\u5b66\u4e60\u7b14\u8bb0: Vim\u3001Python\u3001memcached](https://github.com/lzjun567/note)\n* [\u56fe\u7075\u5f00\u653e\u4e66\u7ffb\u8bd1\u8ba1\u5212--C++\u3001Python\u3001Java\u7b49](http://www.ituring.com.cn/activity/details/2004)\n* [\u8482\u59c6\u00b7\u5965\u83b1\u5229\u968f\u7b14](http://g.yeeyan.org/books/2095) \uff08\u7531\u8bd1\u8a00\u7f51\u7ffb\u8bd1\uff0c\u7535\u5b50\u7248\u514d\u8d39\uff09\n* [SICP \u89e3\u9898\u96c6](http://sicp.readthedocs.org/en/latest/)\n* [\u7cbe\u5f69\u535a\u5ba2\u96c6\u5408](https://github.com/hacke2/hacke2.github.io/issues/2)\n* [\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317](https://github.com/sparanoid/chinese-copywriting-guidelines)\n* [Standard C \u8bed\u8a00\u6807\u51c6\u51fd\u6570\u5e93\u901f\u67e5 (Cheat Sheet)](http://ganquan.info/standard-c/)\n* [Git Cheatsheet Chs](http://gh.amio.us/git-cheatsheet-chs/)\n* [GitBook\u7b80\u660e\u6559\u7a0b](http://www.chengweiyang.cn/gitbook/index.html)\n* [\u5236\u9020\u5f00\u6e90\u8f6f\u4ef6](http://producingoss.com/zh/)\n* [\u63d0\u95ee\u7684\u667a\u6167](http://www.dianbo.org/9238/stone/tiwendezhihui.htm)\n* [Markdown \u5165\u95e8\u53c2\u8003](https://github.com/LearnShare/Learning-Markdown)\n* [AsciiDoc\u7b80\u660e\u6307\u5357](https://github.com/stanzgy/wiki/blob/master/markup/asciidoc-guide.asciidoc)\n* [\u80cc\u5305\u95ee\u9898\u4e5d\u8bb2](http://love-oriented.com/pack/)\n* [\u8001\u9f50\u7684\u6280\u672f\u8d44\u6599](https://github.com/qiwsir/ITArticles)\n* [\u524d\u7aef\u6280\u80fd\u6c47\u603b](https://github.com/JacksonTian/fks)\n* [\u501f\u52a9\u5f00\u6e90\u9879\u76ee\uff0c\u5b66\u4e60\u8f6f\u4ef6\u5f00\u53d1](https://github.com/zhuangbiaowei/learn-with-open-source)\n* [\u524d\u7aef\u5de5\u4f5c\u9762\u8bd5\u95ee\u9898](https://github.com/h5bp/Front-end-Developer-Interview-Questions/tree/master/Translations/Chinese)\n* [leetcode/lintcode\u9898\u89e3/\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0](https://www.gitbook.com/book/yuanbin/algorithm/details)\n* [\u524d\u7aef\u5f00\u53d1\u7b14\u8bb0\u672c](https://github.com/li-xinyang/FEND_Note)\n* [LeetCode\u9898\u89e3](https://siddontang.gitbooks.io/leetcode-solution/content/)\n* [\u300a\u4e0d\u53ef\u66ff\u4ee3\u7684\u56e2\u961f\u9886\u8896\u57f9\u517b\u8ba1\u5212\u300b](https://leader.js.cool/#/)\n\n[\u8fd4\u56de\u76ee\u5f55](#\u76ee\u5f55)\n\n### \u6d4b\u8bd5\u76f8\u5173\n"
 },
 {
  "repo": "ohmyzsh/ohmyzsh",
  "language": "Shell",
  "readme_contents": "<p align=\"center\">\n  <img src=\"https://s3.amazonaws.com/ohmyzsh/oh-my-zsh-logo.png\" alt=\"Oh My Zsh\">\n</p>\n\nOh My Zsh is an open source, community-driven framework for managing your [zsh](https://www.zsh.org/) configuration.\n\nSounds boring. Let's try again.\n\n__Oh My Zsh will not make you a 10x developer...but you may feel like one.__\n\nOnce installed, your terminal shell will become the talk of the town _or your money back!_ With each keystroke in your command prompt, you'll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in caf\u00e9s and ask you, _\"that is amazing! are you some sort of genius?\"_\n\nFinally, you'll begin to get the sort of attention that you have always felt you deserved. ...or maybe you'll use the time that you're saving to start flossing more often. \ud83d\ude2c\n\nTo learn more, visit [ohmyz.sh](https://ohmyz.sh), follow [@ohmyzsh](https://twitter.com/ohmyzsh) on Twitter, and/or join us on Discord.\n\n[![CI](https://github.com/ohmyzsh/ohmyzsh/workflows/CI/badge.svg)](https://github.com/ohmyzsh/ohmyzsh/actions?query=workflow%3ACI)\n[![Follow @ohmyzsh](https://img.shields.io/twitter/follow/ohmyzsh?label=Follow+@ohmyzsh&style=flat)](https://twitter.com/intent/follow?screen_name=ohmyzsh)\n[![Discord server](https://img.shields.io/discord/642496866407284746)](https://discord.gg/bpXWhnN)\n\n## Getting Started\n\n### Prerequisites\n\n* A Unix-like operating system: macOS, Linux, BSD. On Windows: WSL is preferred, but cygwin or msys also mostly work.\n* [Zsh](https://www.zsh.org) should be installed (v4.3.9 or more recent). If not pre-installed (run `zsh --version` to confirm), check the following instructions here: [Installing ZSH](https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH)\n* `curl` or `wget` should be installed\n* `git` should be installed (recommended v1.7.2 or higher)\n\n### Basic Installation\n\nOh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either `curl` or `wget`.\n\n#### via curl\n\n```shell\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n#### via wget\n\n```shell\nsh -c \"$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n#### Manual inspection\n\nIt's a good idea to inspect the install script from projects you don't yet know. You can do\nthat by downloading the install script first, looking through it so everything looks normal,\nthen running it:\n\n```shell\ncurl -Lo install.sh https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh\nsh install.sh\n```\n\n## Using Oh My Zsh\n\n### Plugins\n\nOh My Zsh comes with a shitload of plugins to take advantage of. You can take a look in the [plugins](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins) directory and/or the [wiki](https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins) to see what's currently available.\n\n#### Enabling Plugins\n\nOnce you spot a plugin (or several) that you'd like to use with Oh My Zsh, you'll need to enable them in the `.zshrc` file. You'll find the zshrc file in your `$HOME` directory. Open it with your favorite text editor and you'll see a spot to list all the plugins you want to load.\n\n```shell\nvi ~/.zshrc\n```\n\nFor example, this might begin to look like this:\n\n```shell\nplugins=(\n  git\n  bundler\n  dotenv\n  osx\n  rake\n  rbenv\n  ruby\n)\n```\n\n_Note that the plugins are separated by whitespace. **Do not** use commas between them._\n\n#### Using Plugins\n\nMost plugins (should! we're working on this) include a __README__, which documents how to use them.\n\n### Themes\n\nWe'll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred themes now bundled. Most of them have [screenshots](https://github.com/ohmyzsh/ohmyzsh/wiki/Themes) on the wiki. Check them out!\n\n#### Selecting a Theme\n\n_Robby's theme is the default one. It's not the fanciest one. It's not the simplest one. It's just the right one (for him)._\n\nOnce you find a theme that you'd like to use, you will need to edit the `~/.zshrc` file. You'll see an environment variable (all caps) in there that looks like:\n\n```shell\nZSH_THEME=\"robbyrussell\"\n```\n\nTo use a different theme, simply change the value to match the name of your desired theme. For example:\n\n```shell\nZSH_THEME=\"agnoster\" # (this is one of the fancy ones)\n# see https://github.com/ohmyzsh/ohmyzsh/wiki/Themes#agnoster\n```\n\n_Note: many themes require installing the [Powerline Fonts](https://github.com/powerline/fonts) in order to render properly._\n\nOpen up a new terminal window and your prompt should look something like this:\n\n![Agnoster theme](https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png)\n\nIn case you did not find a suitable theme for your needs, please have a look at the wiki for [more of them](https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes).\n\nIf you're feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.\n\n\n```shell\nZSH_THEME=\"random\" # (...please let it be pie... please be some pie..)\n```\n\nAnd if you want to pick random theme from a list of your favorite themes:\n\n```shell\nZSH_THEME_RANDOM_CANDIDATES=(\n  \"robbyrussell\"\n  \"agnoster\"\n)\n```\n\nIf you only know which themes you don't like, you can add them similarly to a blacklist:\n\n```shell\nZSH_THEME_RANDOM_BLACKLIST=(pygmalion tjkirch_mod)\n```\n\n### FAQ\n\nIf you have some more questions or issues, you might find a solution in our [FAQ](https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ).\n\n## Advanced Topics\n\nIf you're the type that likes to get their hands dirty, these sections might resonate.\n\n### Advanced Installation\n\nSome users may want to manually install Oh My Zsh, or change the default path or other settings that\nthe installer accepts (these settings are also documented at the top of the install script).\n\n#### Custom Directory\n\nThe default location is `~/.oh-my-zsh` (hidden in your home directory)\n\nIf you'd like to change the install directory with the `ZSH` environment variable, either by running\n`export ZSH=/your/path` before installing, or by setting it before the end of the install pipeline\nlike this:\n\n```shell\nZSH=\"$HOME/.dotfiles/oh-my-zsh\" sh install.sh\n```\n\n#### Unattended install\n\nIf you're running the Oh My Zsh install script as part of an automated install, you can pass the\nflag `--unattended` to the `install.sh` script. This will have the effect of not trying to change\nthe default shell, and also won't run `zsh` when the installation has finished.\n\n```shell\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended\n```\n\n#### Installing from a forked repository\n\nThe install script also accepts these variables to allow installation of a different repository:\n\n- `REPO` (default: `ohmyzsh/ohmyzsh`): this takes the form of `owner/repository`. If you set\n  this variable, the installer will look for a repository at `https://github.com/{owner}/{repository}`.\n\n- `REMOTE` (default: `https://github.com/${REPO}.git`): this is the full URL of the git repository\n  clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab,\n  Bitbucket...) or if you want to clone with SSH instead of HTTPS (`git@github.com:user/project.git`).\n\n  _NOTE: it's incompatible with setting the `REPO` variable. This setting will take precedence._\n\n- `BRANCH` (default: `master`): you can use this setting if you want to change the default branch to be\n  checked out when cloning the repository. This might be useful for testing a Pull Request, or if you\n  want to use a branch other than `master`.\n\nFor example:\n\n```shell\nREPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh\n```\n\n#### Manual Installation\n\n##### 1. Clone the repository:\n\n```shell\ngit clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh\n```\n\n##### 2. *Optionally*, backup your existing `~/.zshrc` file:\n\n```shell\ncp ~/.zshrc ~/.zshrc.orig\n```\n\n##### 3. Create a new zsh configuration file\n\nYou can create a new zsh config file by copying the template that we have included for you.\n\n```shell\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n##### 4. Change your default shell\n\n```shell\nchsh -s $(which zsh)\n```\n\nYou must log out from your user session and log back in to see this change.\n\n##### 5. Initialize your new zsh configuration\n\nOnce you open up a new terminal window, it should load zsh with Oh My Zsh's configuration.\n\n### Installation Problems\n\nIf you have any hiccups installing, here are a few common fixes.\n\n* You _might_ need to modify your `PATH` in `~/.zshrc` if you're not able to find some commands after\nswitching to `oh-my-zsh`.\n* If you installed manually or changed the install location, check the `ZSH` environment variable in\n`~/.zshrc`.\n\n### Custom Plugins and Themes\n\nIf you want to override any of the default behaviors, just add a new file (ending in `.zsh`) in the `custom/` directory.\n\nIf you have many functions that go well together, you can put them as a `XYZ.plugin.zsh` file in the `custom/plugins/` directory and then enable this plugin.\n\nIf you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the `custom/plugins/` directory and it will be loaded instead of the one in `plugins/`.\n\n## Getting Updates\n\nBy default, you will be prompted to check for upgrades every few weeks. If you would like `oh-my-zsh` to automatically upgrade itself without prompting you, set the following in your `~/.zshrc`:\n\n```shell\nDISABLE_UPDATE_PROMPT=true\n```\n\nTo disable automatic upgrades, set the following in your `~/.zshrc`:\n\n```shell\nDISABLE_AUTO_UPDATE=true\n```\n\n### Manual Updates\n\nIf you'd like to upgrade at any point in time (maybe someone just released a new plugin and you don't want to wait a week?) you just need to run:\n\n```shell\nupgrade_oh_my_zsh\n```\n\nMagic! \ud83c\udf89\n\n## Uninstalling Oh My Zsh\n\nOh My Zsh isn't for everyone. We'll miss you, but we want to make this an easy breakup.\n\nIf you want to uninstall `oh-my-zsh`, just run `uninstall_oh_my_zsh` from the command-line. It will remove itself and revert your previous `bash` or `zsh` configuration.\n\n## How do I contribute to Oh My Zsh?\n\nBefore you participate in our delightful community, please read the [code of conduct](CODE_OF_CONDUCT.md).\n\nI'm far from being a [Zsh](https://www.zsh.org/) expert and suspect there are many ways to improve \u2013 if you have ideas on how to make the configuration easier to maintain (and faster), don't hesitate to fork and send pull requests!\n\nWe also need people to test out pull-requests. So take a look through [the open issues](https://github.com/ohmyzsh/ohmyzsh/issues) and help where you can.\n\nSee [Contributing](CONTRIBUTING.md) for more details.\n\n### Do NOT send us themes\n\nWe have (more than) enough themes for the time being. Please add your theme to the [external themes](https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes) wiki page.\n\n## Contributors\n\nOh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn't be so awesome.\n\nThank you so much!\n\n## Follow Us\n\nWe're on the social media.\n\n* [@ohmyzsh](https://twitter.com/ohmyzsh) on Twitter. You should follow it.\n* [Oh My Zsh](https://www.facebook.com/Oh-My-Zsh-296616263819290/) on Facebook.\n\n## Merchandise\n\nWe have [stickers, shirts, and coffee mugs available](https://shop.planetargon.com/collections/oh-my-zsh?utm_source=github) for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!\n\n## License\n\nOh My Zsh is released under the [MIT license](LICENSE.txt).\n\n## About Planet Argon\n\n![Planet Argon](https://pa-github-assets.s3.amazonaws.com/PARGON_logo_digital_COL-small.jpg)\n\nOh My Zsh was started by the team at [Planet Argon](https://www.planetargon.com/?utm_source=github), a [Ruby on Rails development agency](https://www.planetargon.com/skills/ruby-on-rails-development?utm_source=github). Check out our [other open source projects](https://www.planetargon.com/open-source?utm_source=github).\n"
 },
 {
  "repo": "scikit-learn/scikit-learn",
  "language": "Python",
  "readme_contents": ".. -*- mode: rst -*-\n\n|Azure|_ |Travis|_ |Codecov|_ |CircleCI|_ |PythonVersion|_ |PyPi|_ |DOI|_\n\n.. |Azure| image:: https://dev.azure.com/scikit-learn/scikit-learn/_apis/build/status/scikit-learn.scikit-learn?branchName=master\n.. _Azure: https://dev.azure.com/scikit-learn/scikit-learn/_build/latest?definitionId=1&branchName=master\n\n.. |Travis| image:: https://api.travis-ci.org/scikit-learn/scikit-learn.svg?branch=master\n.. _Travis: https://travis-ci.org/scikit-learn/scikit-learn\n\n.. |Codecov| image:: https://codecov.io/github/scikit-learn/scikit-learn/badge.svg?branch=master&service=github\n.. _Codecov: https://codecov.io/github/scikit-learn/scikit-learn?branch=master\n\n.. |CircleCI| image:: https://circleci.com/gh/scikit-learn/scikit-learn/tree/master.svg?style=shield&circle-token=:circle-token\n.. _CircleCI: https://circleci.com/gh/scikit-learn/scikit-learn\n\n.. |PythonVersion| image:: https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8-blue\n.. _PythonVersion: https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8-blue\n\n.. |PyPi| image:: https://badge.fury.io/py/scikit-learn.svg\n.. _PyPi: https://badge.fury.io/py/scikit-learn\n\n.. |DOI| image:: https://zenodo.org/badge/21369/scikit-learn/scikit-learn.svg\n.. _DOI: https://zenodo.org/badge/latestdoi/21369/scikit-learn/scikit-learn\n\nscikit-learn\n============\n\nscikit-learn is a Python module for machine learning built on top of\nSciPy and is distributed under the 3-Clause BSD license.\n\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe `About us <https://scikit-learn.org/dev/about.html#authors>`__ page\nfor a list of core contributors.\n\nIt is currently maintained by a team of volunteers.\n\nWebsite: https://scikit-learn.org\n\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\nscikit-learn requires:\n\n- Python (>= 3.6)\n- NumPy (>= 1.13.3)\n- SciPy (>= 0.19.1)\n- joblib (>= 0.11)\n- threadpoolctl (>= 2.0.0)\n\n**Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.**\nscikit-learn 0.23 and later require Python 3.6 or newer.\n\nScikit-learn plotting capabilities (i.e., functions start with ``plot_``\nand classes end with \"Display\") require Matplotlib (>= 2.1.1). For running the\nexamples Matplotlib >= 2.1.1 is required. A few examples require\nscikit-image >= 0.13, a few examples require pandas >= 0.18.0, some examples\nrequire seaborn >= 0.9.0.\n\nUser installation\n~~~~~~~~~~~~~~~~~\n\nIf you already have a working installation of numpy and scipy,\nthe easiest way to install scikit-learn is using ``pip``   ::\n\n    pip install -U scikit-learn\n\nor ``conda``::\n\n    conda install scikit-learn\n\nThe documentation includes more detailed `installation instructions <https://scikit-learn.org/stable/install.html>`_.\n\n\nChangelog\n---------\n\nSee the `changelog <https://scikit-learn.org/dev/whats_new.html>`__\nfor a history of notable changes to scikit-learn.\n\nDevelopment\n-----------\n\nWe welcome new contributors of all experience levels. The scikit-learn\ncommunity goals are to be helpful, welcoming, and effective. The\n`Development Guide <https://scikit-learn.org/stable/developers/index.html>`_\nhas detailed information about contributing code, documentation, tests, and\nmore. We've included some basic information in this README.\n\nImportant links\n~~~~~~~~~~~~~~~\n\n- Official source code repo: https://github.com/scikit-learn/scikit-learn\n- Download releases: https://pypi.org/project/scikit-learn/\n- Issue tracker: https://github.com/scikit-learn/scikit-learn/issues\n\nSource code\n~~~~~~~~~~~\n\nYou can check the latest sources with the command::\n\n    git clone https://github.com/scikit-learn/scikit-learn.git\n\nContributing\n~~~~~~~~~~~~\n\nTo learn more about making a contribution to scikit-learn, please see our\n`Contributing guide\n<https://scikit-learn.org/dev/developers/contributing.html>`_.\n\nTesting\n~~~~~~~\n\nAfter installation, you can launch the test suite from outside the\nsource directory (you will need to have ``pytest`` >= 3.3.0 installed)::\n\n    pytest sklearn\n\nSee the web page https://scikit-learn.org/dev/developers/advanced_installation.html#testing\nfor more information.\n\n    Random number generation can be controlled during testing by setting\n    the ``SKLEARN_SEED`` environment variable.\n\nSubmitting a Pull Request\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBefore opening a Pull Request, have a look at the\nfull Contributing page to make sure your code complies\nwith our guidelines: https://scikit-learn.org/stable/developers/index.html\n\n\nProject History\n---------------\n\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe `About us <https://scikit-learn.org/dev/about.html#authors>`__ page\nfor a list of core contributors.\n\nThe project is currently maintained by a team of volunteers.\n\n**Note**: `scikit-learn` was previously referred to as `scikits.learn`.\n\n\nHelp and Support\n----------------\n\nDocumentation\n~~~~~~~~~~~~~\n\n- HTML documentation (stable release): https://scikit-learn.org\n- HTML documentation (development version): https://scikit-learn.org/dev/\n- FAQ: https://scikit-learn.org/stable/faq.html\n\nCommunication\n~~~~~~~~~~~~~\n\n- Mailing list: https://mail.python.org/mailman/listinfo/scikit-learn\n- IRC channel: ``#scikit-learn`` at ``webchat.freenode.net``\n- Stack Overflow: https://stackoverflow.com/questions/tagged/scikit-learn\n- Website: https://scikit-learn.org\n\nCitation\n~~~~~~~~\n\nIf you use scikit-learn in a scientific publication, we would appreciate citations: https://scikit-learn.org/stable/about.html#citing-scikit-learn\n"
 },
 {
  "repo": "shadowsocks/shadowsocks",
  "language": "Python",
  "readme_contents": "Removed according to regulations.\n"
 },
 {
  "repo": "facebook/react-native",
  "language": "JavaScript",
  "readme_contents": "<h1 align=\"center\">\n  <a href=\"https://reactnative.dev/\">\n    React Native\n  </a>\n</h1>\n\n<p align=\"center\">\n  <strong>Learn once, write anywhere:</strong><br>\n  Build mobile apps with React.\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/facebook/react-native/blob/master/LICENSE\">\n    <img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" alt=\"React Native is released under the MIT license.\" />\n  </a>\n  <a href=\"https://circleci.com/gh/facebook/react-native\">\n    <img src=\"https://circleci.com/gh/facebook/react-native.svg?style=shield\" alt=\"Current CircleCI build status.\" />\n  </a>\n  <a href=\"https://www.npmjs.org/package/react-native\">\n    <img src=\"https://badge.fury.io/js/react-native.svg\" alt=\"Current npm package version.\" />\n  </a>\n  <a href=\"https://reactnative.dev/docs/contributing\">\n    <img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg\" alt=\"PRs welcome!\" />\n  </a>\n  <a href=\"https://twitter.com/intent/follow?screen_name=reactnative\">\n    <img src=\"https://img.shields.io/twitter/follow/reactnative.svg?label=Follow%20@reactnative\" alt=\"Follow @reactnative\" />\n  </a>\n</p>\n\n<h3 align=\"center\">\n  <a href=\"https://reactnative.dev/docs/getting-started\">Getting Started</a>\n  <span> \u00b7 </span>\n  <a href=\"https://reactnative.dev/docs/tutorial\">Learn the Basics</a>\n  <span> \u00b7 </span>\n  <a href=\"https://reactnative.dev/showcase.html\">Showcase</a>\n  <span> \u00b7 </span>\n  <a href=\"https://reactnative.dev/docs/contributing\">Contribute</a>\n  <span> \u00b7 </span>\n  <a href=\"https://reactnative.dev/en/help\">Community</a>\n  <span> \u00b7 </span>\n  <a href=\"https://github.com/facebook/react-native/blob/master/.github/SUPPORT.md\">Support</a>\n</h3>\n\nReact Native brings [**React**'s][r] declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\n\n- **Declarative.** React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.\n- **Component-Based.** Build encapsulated components that manage their state, then compose them to make complex UIs.\n- **Developer Velocity.** See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.\n- **Portability.** Reuse code across iOS, Android, and [other platforms][p].\n\nReact Native is developed and supported by many companies and individual core contributors. Find out more in our [ecosystem overview][e].\n\n[r]: https://reactjs.org/\n[p]: https://reactnative.dev/docs/out-of-tree-platforms\n[e]: https://github.com/facebook/react-native/blob/master/ECOSYSTEM.md\n\n## Contents\n\n- [Requirements](#-requirements)\n- [Building your first React Native app](#-building-your-first-react-native-app)\n- [Documentation](#-documentation)\n- [Upgrading](#-upgrading)\n- [How to Contribute](#-how-to-contribute)\n- [Code of Conduct](#code-of-conduct)\n- [License](#-license)\n\n\n## \ud83d\udccb Requirements\n\nReact Native apps may target iOS 10.0 and Android 4.1 (API 16) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like [Expo](https://expo.io) can be used to work around this.\n\n## \ud83c\udf89 Building your first React Native app\n\nFollow the [Getting Started guide](https://reactnative.dev/docs/getting-started.html). The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:\n\n- [Trying out React Native][hello-world]\n- [Creating a New Application][new-app]\n- [Adding React Native to an Existing Application][existing]\n\n[hello-world]: https://snack.expo.io/@hramos/hello,-world!\n[new-app]: https://reactnative.dev/docs/getting-started.html\n[existing]: https://reactnative.dev/docs/integration-with-existing-apps.html\n\n## \ud83d\udcd6 Documentation\n\nThe full documentation for React Native can be found on our [website][docs].\n\nThe React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the [React documentation][r-docs].\n\nThe source for the React Native documentation and website is hosted on a separate repo, [**@facebook/react-native-website**][repo-website].\n\n[docs]: https://reactnative.dev/docs/getting-started.html\n[r-docs]: https://reactjs.org/docs/getting-started.html\n[repo-website]: https://github.com/facebook/react-native-website\n\n## \ud83d\ude80 Upgrading\n\nUpgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the [Upgrading Guide][u] for instructions.\n\nReact Native releases are discussed in the React Native Community, [**@react-native-community/react-native-releases**][repo-releases].\n\n[u]: https://reactnative.dev/docs/upgrading\n[repo-releases]: https://github.com/react-native-community/react-native-releases\n\n## \ud83d\udc4f How to Contribute\n\nThe main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.\n\n### [Code of Conduct][code]\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to.\nPlease read the [full text][code] so that you can understand what actions will and will not be tolerated.\n\n[code]: https://code.fb.com/codeofconduct/\n\n### [Contributing Guide][contribute]\n\nRead our [**Contributing Guide**][contribute] to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.\n\n[contribute]: https://reactnative.dev/docs/contributing\n\n### [Open Source Roadmap][roadmap]\n\nYou can learn more about our vision for React Native in the [**Roadmap**][roadmap].\n\n[roadmap]: https://github.com/facebook/react-native/wiki/Roadmap\n\n### Good First Issues\n\nWe have a list of [good first issues][gfi] that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.\n\n[gfi]: https://github.com/facebook/react-native/labels/good%20first%20issue\n\n### Discussions\n\nLarger discussions and proposals are discussed in [**@react-native-community/discussions-and-proposals**][repo-meta].\n\n[repo-meta]: https://github.com/react-native-community/discussions-and-proposals\n\n## \ud83d\udcc4 License\n\nReact Native is MIT licensed, as found in the [LICENSE][l] file.\n\nReact Native documentation is Creative Commons licensed, as found in the [LICENSE-docs][ld] file.\n\n[l]: https://github.com/facebook/react-native/blob/master/LICENSE\n[ld]: https://github.com/facebook/react-native/blob/master/LICENSE-docs\n"
 },
 {
  "repo": "jquery/jquery",
  "language": "JavaScript",
  "readme_contents": "[jQuery](https://jquery.com/) \u2014 New Wave JavaScript\n==================================================\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjquery%2Fjquery.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjquery%2Fjquery?ref=badge_shield)\n\n[![Gitter](https://badges.gitter.im/jquery/jquery.svg)](https://gitter.im/jquery/jquery?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nContribution Guides\n--------------------------------------\n\nIn the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:\n\n1. [Getting Involved](https://contribute.jquery.org/)\n2. [Core Style Guide](https://contribute.jquery.org/style-guide/js/)\n3. [Writing Code for jQuery Foundation Projects](https://contribute.jquery.org/code/)\n\n\nEnvironments in which to use jQuery\n--------------------------------------\n\n- [Browser support](https://jquery.com/browser-support/)\n- jQuery also supports Node, browser extensions, and other non-browser environments.\n\n\nWhat you need to build your own jQuery\n--------------------------------------\n\nTo build jQuery, you need to have the latest Node.js/npm and git 1.7 or later. Earlier versions might work, but are not supported.\n\nFor Windows, you have to download and install [git](https://git-scm.com/downloads) and [Node.js](https://nodejs.org/en/download/).\n\nmacOS users should install [Homebrew](https://brew.sh/). Once Homebrew is installed, run `brew install git` to install git,\nand `brew install node` to install Node.js.\n\nLinux/BSD users should use their appropriate package managers to install git and Node.js, or build from source\nif you swing that way. Easy-peasy.\n\n\nHow to build your own jQuery\n----------------------------\n\nFirst, [clone the jQuery git repo](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository).\n\nThen, enter the jquery directory and run the build script:\n```bash\ncd jquery && npm run build\n```\nThe built version of jQuery will be put in the `dist/` subdirectory, along with the minified copy and associated map file.\n\nIf you want to create custom build or help with jQuery development, it would be better to install [grunt command line interface](https://github.com/gruntjs/grunt-cli) as a global package:\n\n```\nnpm install -g grunt-cli\n```\nMake sure you have `grunt` installed by testing:\n```\ngrunt -V\n```\n\nNow by running the `grunt` command, in the jquery directory, you can build a full version of jQuery, just like with an `npm run build` command:\n```\ngrunt\n```\n\nThere are many other tasks available for jQuery Core:\n```\ngrunt -help\n```\n\n### Modules\n\nSpecial builds can be created that exclude subsets of jQuery functionality.\nThis allows for smaller custom builds when the builder is certain that those parts of jQuery are not being used.\nFor example, an app that only used JSONP for `$.ajax()` and did not need to calculate offsets or positions of elements could exclude the offset and ajax/xhr modules.\n\nAny module may be excluded except for `core`, and `selector`. To exclude a module, pass its path relative to the `src` folder (without the `.js` extension).\n\nSome example modules that can be excluded are:\n\n- **ajax**: All AJAX functionality: `$.ajax()`, `$.get()`, `$.post()`, `$.ajaxSetup()`, `.load()`, transports, and ajax event shorthands such as `.ajaxStart()`.\n- **ajax/xhr**: The XMLHTTPRequest AJAX transport only.\n- **ajax/script**: The `<script>` AJAX transport only; used to retrieve scripts.\n- **ajax/jsonp**: The JSONP AJAX transport only; depends on the ajax/script transport.\n- **css**: The `.css()` method. Also removes **all** modules depending on css (including **effects**, **dimensions**, and **offset**).\n- **css/showHide**:  Non-animated `.show()`, `.hide()` and `.toggle()`; can be excluded if you use classes or explicit `.css()` calls to set the `display` property. Also removes the **effects** module.\n- **deprecated**: Methods documented as deprecated but not yet removed.\n- **dimensions**: The `.width()` and `.height()` methods, including `inner-` and `outer-` variations.\n- **effects**: The `.animate()` method and its shorthands such as `.slideUp()` or `.hide(\"slow\")`.\n- **event**: The `.on()` and `.off()` methods and all event functionality.\n- **event/trigger**: The `.trigger()` and `.triggerHandler()` methods.\n- **offset**: The `.offset()`, `.position()`, `.offsetParent()`, `.scrollLeft()`, and `.scrollTop()` methods.\n- **wrap**: The `.wrap()`, `.wrapAll()`, `.wrapInner()`, and `.unwrap()` methods.\n- **core/ready**: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with `jQuery()` will simply be called immediately. However, `jQuery(document).ready()` will not be a function and `.on(\"ready\", ...)` or similar will not be triggered.\n- **deferred**: Exclude jQuery.Deferred. This also removes jQuery.Callbacks. *Note* that modules that depend on jQuery.Deferred(AJAX, effects, core/ready) will not be removed and will still expect jQuery.Deferred to be there. Include your own jQuery.Deferred implementation or exclude those modules as well (`grunt custom:-deferred,-ajax,-effects,-core/ready`).\n- **exports/global**: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.\n- **exports/amd**: Exclude the AMD definition.\n\nThe build process shows a message for each dependent module it excludes or includes.\n\n##### AMD name\n\nAs an option, you can set the module name for jQuery's AMD definition. By default, it is set to \"jquery\", which plays nicely with plugins and third-party libraries, but there may be cases where you'd like to change this. Simply set the `\"amd\"` option:\n\n```bash\ngrunt custom --amd=\"custom-name\"\n```\n\nOr, to define anonymously, set the name to an empty string.\n\n```bash\ngrunt custom --amd=\"\"\n```\n\n#### Custom Build Examples\n\nTo create a custom build, first check out the version:\n\n```bash\ngit pull; git checkout VERSION\n```\n\nWhere VERSION is the version you want to customize. Then, make sure all Node dependencies are installed:\n\n```bash\nnpm install\n```\n\nCreate the custom build using the `grunt custom` option, listing the modules to be excluded.\n\nExclude all **ajax** functionality:\n\n```bash\ngrunt custom:-ajax\n```\n\nExcluding **css** removes modules depending on CSS: **effects**, **offset**, **dimensions**.\n\n```bash\ngrunt custom:-css\n```\n\nExclude a bunch of modules:\n\n```bash\ngrunt custom:-ajax/jsonp,-css,-deprecated,-dimensions,-effects,-offset,-wrap\n```\n\nThere is also a special alias to generate a build with the same configuration as the official jQuery Slim build is generated:\n```bash\ngrunt custom:slim\n```\n\nFor questions or requests regarding custom builds, please start a thread on the [Developing jQuery Core](https://forum.jquery.com/developing-jquery-core) section of the forum. Due to the combinatorics and custom nature of these builds, they are not regularly tested in jQuery's unit test process.\n\nRunning the Unit Tests\n--------------------------------------\n\nMake sure you have the necessary dependencies:\n\n```bash\nnpm install\n```\n\nStart `grunt watch` or `npm start` to auto-build jQuery as you work:\n\n```bash\ngrunt watch\n```\n\n\nRun the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the \"test\" directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:\n\n- Windows: [WAMP download](http://www.wampserver.com/en/)\n- Mac: [MAMP download](https://www.mamp.info/en/downloads/)\n- Linux: [Setting up LAMP](https://www.linux.com/learn/tutorials/288158-easy-lamp-server-installation)\n- [Mongoose (most platforms)](https://code.google.com/p/mongoose/)\n\n\n\n\nBuilding to a different directory\n---------------------------------\n\nTo copy the built jQuery files from `/dist` to another directory:\n\n```bash\ngrunt && grunt dist:/path/to/special/location/\n```\nWith this example, the output files would be:\n\n```bash\n/path/to/special/location/jquery.js\n/path/to/special/location/jquery.min.js\n```\n\nTo add a permanent copy destination, create a file in `dist/` called \".destination.json\". Inside the file, paste and customize the following:\n\n```json\n\n{\n  \"/Absolute/path/to/other/destination\": true\n}\n```\n\nAdditionally, both methods can be combined.\n\n\n\nEssential Git\n-------------\n\nAs the source code is handled by the Git version control system, it's useful to know some features used.\n\n### Cleaning ###\n\nIf you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you've worked on is gone after these):\n\n```bash\ngit reset --hard upstream/master\ngit clean -fdx\n```\n\n### Rebasing ###\n\nFor feature/topic branches, you should always use the `--rebase` flag to `git pull`, or if you are usually handling many temporary \"to be in a github pull request\" branches, run the following to automate this:\n\n```bash\ngit config branch.autosetuprebase local\n```\n(see `man git-config` for more information)\n\n### Handling merge conflicts ###\n\nIf you're getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature\n`git mergetool`. Even though the default tool `xxdiff` looks awful/old, it's rather useful.\n\nThe following are some commands that can be used there:\n\n* `Ctrl + Alt + M` - automerge as much as possible\n* `b` - jump to next merge conflict\n* `s` - change the order of the conflicted lines\n* `u` - undo a merge\n* `left mouse button` - mark a block to be the winner\n* `middle mouse button` - mark a line to be the winner\n* `Ctrl + S` - save\n* `Ctrl + Q` - quit\n\n[QUnit](https://api.qunitjs.com) Reference\n-----------------\n\n### Test methods ###\n\n```js\nexpect( numAssertions );\nstop();\nstart();\n```\n\n\n*Note*: QUnit's eventual addition of an argument to stop/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.\n\n### Test assertions ###\n\n\n```js\nok( value, [message] );\nequal( actual, expected, [message] );\nnotEqual( actual, expected, [message] );\ndeepEqual( actual, expected, [message] );\nnotDeepEqual( actual, expected, [message] );\nstrictEqual( actual, expected, [message] );\nnotStrictEqual( actual, expected, [message] );\nthrows( block, [expected], [message] );\n```\n\n\nTest Suite Convenience Methods Reference (See [test/data/testinit.js](https://github.com/jquery/jquery/blob/master/test/data/testinit.js))\n------------------------------\n\n### Returns an array of elements with the given IDs ###\n\n```js\nq( ... );\n```\n\nExample:\n\n```js\nq(\"main\", \"foo\", \"bar\");\n\n=> [ div#main, span#foo, input#bar ]\n```\n\n### Asserts that a selection matches the given IDs ###\n\n```js\nt( testName, selector, [ \"array\", \"of\", \"ids\" ] );\n```\n\nExample:\n\n```js\nt(\"Check for something\", \"//[a]\", [\"foo\", \"bar\"]);\n```\n\n\n\n### Fires a native DOM event without going through jQuery ###\n\n```js\nfireNative( node, eventType )\n```\n\nExample:\n\n```js\nfireNative( jQuery(\"#elem\")[0], \"click\" );\n```\n\n### Add random number to url to stop caching ###\n\n```js\nurl( \"some/url\" );\n```\n\nExample:\n\n```js\nurl(\"index.html\");\n\n=> \"data/index.html?10538358428943\"\n\n\nurl(\"mock.php?foo=bar\");\n\n=> \"data/mock.php?foo=bar&10538358345554\"\n```\n\n\n### Run tests in an iframe ###\n\nSome tests may require a document other than the standard test fixture, and\nthese can be run in a separate iframe. The actual test code and assertions\nremain in jQuery's main test files; only the minimal test fixture markup\nand setup code should be placed in the iframe file.\n\n```js\ntestIframe( testName, fileName,\n  function testCallback(\n      assert, jQuery, window, document,\n\t  [ additional args ] ) {\n\t...\n  } );\n```\n\nThis loads a page, constructing a url with fileName `\"./data/\" + fileName`.\nThe iframed page determines when the callback occurs in the test by\nincluding the \"/test/data/iframeTest.js\" script and calling\n`startIframeTest( [ additional args ] )` when appropriate. Often this\nwill be after either document ready or `window.onload` fires.\n\nThe `testCallback` receives the QUnit `assert` object created by `testIframe`\nfor this test, followed by the global `jQuery`, `window`, and `document` from\nthe iframe. If the iframe code passes any arguments to `startIframeTest`,\nthey follow the `document` argument.\n\n\nQuestions?\n----------\n\nIf you have any questions, please feel free to ask on the\n[Developing jQuery Core forum](https://forum.jquery.com/developing-jquery-core) or in #jquery on irc.freenode.net.\n"
 },
 {
  "repo": "git/git",
  "language": "C",
  "readme_contents": "[![Build status](https://github.com/git/git/workflows/CI/PR/badge.svg)](https://github.com/git/git/actions?query=branch%3Amaster+event%3Apush)\n\nGit - fast, scalable, distributed revision control system\n=========================================================\n\nGit is a fast, scalable, distributed revision control system with an\nunusually rich command set that provides both high-level operations\nand full access to internals.\n\nGit is an Open Source project covered by the GNU General Public\nLicense version 2 (some parts of it are under different licenses,\ncompatible with the GPLv2). It was originally written by Linus\nTorvalds with help of a group of hackers around the net.\n\nPlease read the file [INSTALL][] for installation instructions.\n\nMany Git online resources are accessible from <https://git-scm.com/>\nincluding full documentation and Git related tools.\n\nSee [Documentation/gittutorial.txt][] to get started, then see\n[Documentation/giteveryday.txt][] for a useful minimum set of commands, and\n`Documentation/git-<commandname>.txt` for documentation of each command.\nIf git has been correctly installed, then the tutorial can also be\nread with `man gittutorial` or `git help tutorial`, and the\ndocumentation of each command with `man git-<commandname>` or `git help\n<commandname>`.\n\nCVS users may also want to read [Documentation/gitcvs-migration.txt][]\n(`man gitcvs-migration` or `git help cvs-migration` if git is\ninstalled).\n\nThe user discussion and development of Git take place on the Git\nmailing list -- everyone is welcome to post bug reports, feature\nrequests, comments and patches to git@vger.kernel.org (read\n[Documentation/SubmittingPatches][] for instructions on patch submission).\nTo subscribe to the list, send an email with just \"subscribe git\" in\nthe body to majordomo@vger.kernel.org. The mailing list archives are\navailable at <https://lore.kernel.org/git/>,\n<http://marc.info/?l=git> and other archival sites.\n\nIssues which are security relevant should be disclosed privately to\nthe Git Security mailing list <git-security@googlegroups.com>.\n\nThe maintainer frequently sends the \"What's cooking\" reports that\nlist the current status of various development topics to the mailing\nlist.  The discussion following them give a good reference for\nproject status, development direction and remaining tasks.\n\nThe name \"git\" was given by Linus Torvalds when he wrote the very\nfirst version. He described the tool as \"the stupid content tracker\"\nand the name as (depending on your mood):\n\n - random three-letter combination that is pronounceable, and not\n   actually used by any common UNIX command.  The fact that it is a\n   mispronunciation of \"get\" may or may not be relevant.\n - stupid. contemptible and despicable. simple. Take your pick from the\n   dictionary of slang.\n - \"global information tracker\": you're in a good mood, and it actually\n   works for you. Angels sing, and a light suddenly fills the room.\n - \"goddamn idiotic truckload of sh*t\": when it breaks\n\n[INSTALL]: INSTALL\n[Documentation/gittutorial.txt]: Documentation/gittutorial.txt\n[Documentation/giteveryday.txt]: Documentation/giteveryday.txt\n[Documentation/gitcvs-migration.txt]: Documentation/gitcvs-migration.txt\n[Documentation/SubmittingPatches]: Documentation/SubmittingPatches\n"
 },
 {
  "repo": "ansible/ansible",
  "language": "Python",
  "readme_contents": "|PyPI version| |Docs badge| |Chat badge| |Build Status| |Code Of Conduct| |Mailing Lists| |License|\n\n*******\nAnsible\n*******\n\nAnsible is a radically simple IT automation system. It handles\nconfiguration management, application deployment, cloud provisioning,\nad-hoc task execution, network automation, and multi-node orchestration. Ansible makes complex\nchanges like zero-downtime rolling updates with load balancers easy. More information on `the Ansible website <https://ansible.com/>`_.\n\nDesign Principles\n=================\n\n*  Have a dead simple setup process and a minimal learning curve.\n*  Manage machines very quickly and in parallel.\n*  Avoid custom-agents and additional open ports, be agentless by\n   leveraging the existing SSH daemon.\n*  Describe infrastructure in a language that is both machine and human\n   friendly.\n*  Focus on security and easy auditability/review/rewriting of content.\n*  Manage new remote machines instantly, without bootstrapping any\n   software.\n*  Allow module development in any dynamic language, not just Python.\n*  Be usable as non-root.\n*  Be the easiest IT automation system to use, ever.\n\nUse Ansible\n===========\n\nYou can install a released version of Ansible via ``pip``, a package manager, or\nour `release repository <https://releases.ansible.com/ansible/>`_. See our\n`installation guide <https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html>`_ for details on installing Ansible\non a variety of platforms.\n\nRed Hat offers supported builds of `Ansible Engine <https://www.ansible.com/ansible-engine>`_.\n\nPower users and developers can run the ``devel`` branch, which has the latest\nfeatures and fixes, directly. Although it is reasonably stable, you are more likely to encounter\nbreaking changes when running the ``devel`` branch. We recommend getting involved\nin the Ansible community if you want to run the ``devel`` branch.\n\nGet Involved\n============\n\n*  Read `Community\n   Information <https://docs.ansible.com/ansible/latest/community>`_ for all\n   kinds of ways to contribute to and interact with the project,\n   including mailing list information and how to submit bug reports and\n   code to Ansible.\n*  Join a `Working Group\n   <https://github.com/ansible/community/wiki>`_, an organized community devoted to a specific technology domain or platform.\n*  Submit a proposed code update through a pull request to the ``devel`` branch.\n*  Talk to us before making larger changes\n   to avoid duplicate efforts. This not only helps everyone\n   know what is going on, it also helps save time and effort if we decide\n   some changes are needed.\n*  For a list of email lists, IRC channels and Working Groups, see the\n   `Communication page <https://docs.ansible.com/ansible/latest/community/communication.html>`_\n\nCoding Guidelines\n=================\n\nWe document our Coding Guidelines in the `Developer Guide <https://docs.ansible.com/ansible/devel/dev_guide/>`_. We particularly suggest you review:\n\n* `Contributing your module to Ansible <https://docs.ansible.com/ansible/devel/dev_guide/developing_modules_checklist.html>`_\n* `Conventions, tips and pitfalls <https://docs.ansible.com/ansible/devel/dev_guide/developing_modules_best_practices.html>`_\n\nBranch Info\n===========\n\n*  The ``devel`` branch corresponds to the release actively under development.\n*  The ``stable-2.X`` branches correspond to stable releases.\n*  Create a branch based on ``devel`` and set up a `dev environment <https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_general.html#common-environment-setup>`_ if you want to open a PR.\n*  See the `Ansible release and maintenance <https://docs.ansible.com/ansible/latest/reference_appendices/release_and_maintenance.html>`_ page for information about active branches.\n\nRoadmap\n=======\n\nBased on team and community feedback, an initial roadmap will be published for a major or minor version (ex: 2.7, 2.8).\nThe `Ansible Roadmap page <https://docs.ansible.com/ansible/devel/roadmap/>`_ details what is planned and how to influence the roadmap.\n\nAuthors\n=======\n\nAnsible was created by `Michael DeHaan <https://github.com/mpdehaan>`_\nand has contributions from over 4700 users (and growing). Thanks everyone!\n\n`Ansible <https://www.ansible.com>`_ is sponsored by `Red Hat, Inc.\n<https://www.redhat.com>`_\n\nLicense\n=======\n\nGNU General Public License v3.0 or later\n\nSee `COPYING <COPYING>`_ to see the full text.\n\n.. |PyPI version| image:: https://img.shields.io/pypi/v/ansible.svg\n   :target: https://pypi.org/project/ansible\n.. |Docs badge| image:: https://img.shields.io/badge/docs-latest-brightgreen.svg\n   :target: https://docs.ansible.com/ansible/latest/\n.. |Build Status| image:: https://api.shippable.com/projects/573f79d02a8192902e20e34b/badge?branch=devel\n   :target: https://app.shippable.com/projects/573f79d02a8192902e20e34b\n.. |Chat badge| image:: https://img.shields.io/badge/chat-IRC-brightgreen.svg\n   :target: https://docs.ansible.com/ansible/latest/community/communication.html\n.. |Code Of Conduct| image:: https://img.shields.io/badge/code%20of%20conduct-Ansible-silver.svg\n   :target: https://docs.ansible.com/ansible/latest/community/code_of_conduct.html\n   :alt: Ansible Code of Conduct\n.. |Mailing Lists| image:: https://img.shields.io/badge/mailing%20lists-Ansible-orange.svg\n   :target: https://docs.ansible.com/ansible/latest/community/communication.html#mailing-list-information\n   :alt: Ansible mailing lists\n.. |License| image:: https://img.shields.io/badge/license-GPL%20v3.0-brightgreen.svg\n   :target: COPYING\n   :alt: Repository License\n"
 },
 {
  "repo": "PanJiaChen/vue-element-admin",
  "language": "Vue",
  "readme_contents": "<p align=\"center\">\n  <img width=\"320\" src=\"https://wpimg.wallstcn.com/ecc53a42-d79b-42e2-8852-5126b810a4c8.svg\">\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/vuejs/vue\">\n    <img src=\"https://img.shields.io/badge/vue-2.6.10-brightgreen.svg\" alt=\"vue\">\n  </a>\n  <a href=\"https://github.com/ElemeFE/element\">\n    <img src=\"https://img.shields.io/badge/element--ui-2.7.0-brightgreen.svg\" alt=\"element-ui\">\n  </a>\n  <a href=\"https://travis-ci.org/PanJiaChen/vue-element-admin\" rel=\"nofollow\">\n    <img src=\"https://travis-ci.org/PanJiaChen/vue-element-admin.svg?branch=master\" alt=\"Estado de Construcci\u00f3n\">\n  </a>\n  <a href=\"https://github.com/PanJiaChen/vue-element-admin/blob/master/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/mashape/apistatus.svg\" alt=\"Licencia\">\n  </a>\n  <a href=\"https://github.com/PanJiaChen/vue-element-admin/releases\">\n    <img src=\"https://img.shields.io/github/release/PanJiaChen/vue-element-admin.svg\" alt=\"Liberaci\u00f3n Github\">\n  </a>\n  <a href=\"https://gitter.im/vue-element-admin/discuss\">\n    <img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Gitter\">\n  </a>\n  <a href=\"https://panjiachen.github.io/vue-element-admin-site/donate\">\n    <img src=\"https://img.shields.io/badge/%24-donate-ff69b4.svg\" alt=\"Donaci\u00f3n\">\n  </a>\n</p>\n\nEspa\u00f1ol | [English](./README.md) | [\u7b80\u4f53\u4e2d\u6587](./README.zh-CN.md) | [\u65e5\u672c\u8a9e](./README.ja.md)\n\n## Introducci\u00f3n\n\n[vue-element-admin](https://panjiachen.github.io/vue-element-admin) es una interf\u00e1z de administraci\u00f3n preparada para producci\u00f3n. Est\u00e1 basada en [vue](https://github.com/vuejs/vue) y usa [element-ui](https://github.com/ElemeFE/element) como conjunto de herramientas de interf\u00e1z de usuario.\n\nVue Element Admin es una soluci\u00f3n pr\u00e1ctica basada en la nueva plataforma de desarrollo de vue, construida con soporte a i18 para el manejo de m\u00faltiples lenguajes, plantillas est\u00e1ndares para aplicaciones de negocio y un conjunto de asombrosas caracter\u00edsticas. Esta herramienta ayuda a construir largas y complejas Aplicacones de una sola p\u00e1gina (SPA). Creo que lo que necesites hacer, este proyecto te ayudar\u00e1.\n\n- [Vista Pr\u00e9via de la Aplicaci\u00f3n](https://panjiachen.github.io/vue-element-admin)\n\n- [Documentaci\u00f3n](https://panjiachen.github.io/vue-element-admin-site/)\n\n- [Canal de Gitter](https://gitter.im/vue-element-admin/discuss)\n\n- [Para Donaciones](https://panjiachen.github.io/vue-element-admin-site/donate/)\n\n- [Enlace de Wiki](https://github.com/PanJiaChen/vue-element-admin/wiki)\n\n- [Canal de Gitee](https://panjiachen.gitee.io/vue-element-admin/)\n\n- Plantilla base recomendada para usar: [vue-admin-template](https://github.com/PanJiaChen/vue-admin-template)\n- Aplicaci\u00f3n de Escritorio: [electron-vue-admin](https://github.com/PanJiaChen/electron-vue-admin)\n- Plantilla de Typescript: [vue-typescript-admin-template](https://github.com/Armour/vue-typescript-admin-template) (Cr\u00e9ditos: [@Armour](https://github.com/Armour))\n- [awesome-project](https://github.com/PanJiaChen/vue-element-admin/issues/2312)\n\n**Despu\u00e9s de la versi\u00f3n `v4.1.0+`, la rama por defecto master no tendr\u00e1 soporte para i18n. Por favor use [i18n](https://github.com/PanJiaChen/vue-element-admin/tree/i18n), los cambios ser\u00e1n incluidos en la rama master**\n\n**la versi\u00f3n actual es `v4.0+` construida con `vue-cli`. Si encuentra alg\u00fan problema, por favor coloque un [issue](https://github.com/PanJiaChen/vue-element-admin/issues/new). Si desea usar la versi\u00f3n anterior, puede cambiar de rama a [tag/3.11.0](https://github.com/PanJiaChen/vue-element-admin/tree/tag/3.11.0), no relacionado con `vue-cli`**\n\n**Este proyecto no est\u00e1 soportado para versiones muy viejas de navegadores (e.g. IE).**\n\n## Preparaci\u00f3n\n\nNecesita instalar [node](https://nodejs.org/) y [git](https://git-scm.com/) localmente. El proyecto es basado en [ES2015+](https://es6.ruanyifeng.com/), [vue](https://cn.vuejs.org/index.html), [vuex](https://vuex.vuejs.org/zh-cn/), [vue-router](https://router.vuejs.org/zh-cn/), [vue-cli](https://github.com/vuejs/vue-cli) , [axios](https://github.com/axios/axios) and [element-ui](https://github.com/ElemeFE/element), toda la solicitud de datos simulada se realiza a trav\u00e9s de [Mock.js](https://github.com/nuysoft/Mock).\nEntendiendo y aprendiendo esto pudiera ayudarle con su proyecto.\n\n[![Edit on CodeSandbox](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/PanJiaChen/vue-element-admin/tree/CodeSandbox)\n\n <p align=\"center\">\n  <img width=\"900\" src=\"https://wpimg.wallstcn.com/a5894c1b-f6af-456e-82df-1151da0839bf.png\">\n</p>\n\n## Patrocinantes\n\nSe un patrocinante y pon tu logo en nuestro README on GitHub con un enlace directo a tu sitio web. [[Se un Patrocinante]](https://www.patreon.com/panjiachen)\n\n<a href=\"https://flatlogic.com/admin-dashboards?from=vue-element-admin\"><img width=\"150px\" src=\"https://wpimg.wallstcn.com/9c0b719b-5551-4c1e-b776-63994632d94a.png\" /></a><p>Plantilla de Dashboard de administraci\u00f3n hecha con Vue, React y Angular.</p>\n\n## Caracter\u00edsticas\n\n```\n- Iniciar / Cerrar Sesi\u00f3n\n\n- Permisos de Authentication\n  - P\u00e1gina de Permisos\n  - Directivas de permisos\n  - P\u00e1gina de configuraci\u00f3n de permisos\n  - Autenticaci\u00f3n por dos pasos\n\n- Construcci\u00f3n Multi-entorno\n  - dev sit stage  producci\u00f3n\n\n- Caracter\u00edsticas Globales\n  - I18n\n  - Temas din\u00e1micos\n  - Dynamic sidebar (soporte a rutas multi-nivel)\n  - Barra de rutas din\u00e1mica\n  - Tags-view (Tab page Support right-click operation)\n  - Svg Sprite\n  - Datos de simulaci\u00f3n con Mock\n  - Pantalla completa\n  - Responsive Sidebar\n\n- Editor\n  - Editor de Texto Enriquecido\n  - Editor Markdown\n  - Editor JSON\n\n- Excel\n  - Exportaci\u00f3n a Excel\n  - Carga de Excel\n  - Visualizaci\u00f3n de Excel\n  - Exportaci\u00f3n como zip\n\n- Tabla\n  - Tabla Din\u00e1mica\n  - Tabla con Arrastrar y Soltar\n  - Tabla de edici\u00f3n en l\u00ednea\n\n- P\u00e1ginas de Error\n  - 401\n  - 404\n\n- Componentes\n  - Carga de Avatar\n  - Bot\u00f3n para subir al inicio\n  - Arrastrar y Soltar (Diaglogo)\n  - Arrastrar y Soltar (Seleccionar)\n  - Arrastrar y Soltar (Kanban)\n  - Arrastrar y Soltar (Lista)\n  - Panel de divisi\u00f3n\n  - Componente para soltar archivos\n  - Adhesi\u00f3n de objetos\n  - Contador hasta\n\n- Ejemplo Avanzado\n- Registro de Errores\n- Tablero de indicadores\n- P\u00e1gina de Gu\u00edas\n- ECharts (Gr\u00e1ficos)\n- Portapapeles\n- Convertidor de Markdown a html\n```\n\n## Iniciando\n\n```bash\n# clone el proyecto\ngit clone https://github.com/PanJiaChen/vue-element-admin.git\n\n# vaya al directorio clonado\ncd vue-element-admin\n\n# instale las dependencias\nnpm install\n\n# corra el proyecto como desarrollador\nnpm run dev\n```\n\nAutom\u00e1ticamente se abrir\u00e1 el siguiente enlace en su navegador http://localhost:9527\n\n## Construcci\u00f3n\n\n```bash\n# Construcci\u00f3n para entornos de prueba\nnpm run build:stage\n\n# Construcci\u00f3n para entornos de producci\u00f3n\nnpm run build:prod\n```\n\n## Avanzado\n\n```bash\n# Vista previa con efectos de entorno\nnpm run preview\n\n# Vista previa  con efectos + an\u00e1lisis de recursos est\u00e1ticos\nnpm run preview -- --report\n\n# Chequeo de formato de c\u00f3digo\nnpm run lint\n\n# Chequeo de formato de c\u00f3digo y auto-correcci\u00f3n\nnpm run lint -- --fix\n```\n\nVaya a [Documentaci\u00f3n](https://panjiachen.github.io/vue-element-admin-site/guide/essentials/deploy.html) para mayor informaci\u00f3n\n\n## Registro de Cambios\n\nLos cambios detallados por cada liberaci\u00f3n se encuentran en [notas de liberaci\u00f3n](https://github.com/PanJiaChen/vue-element-admin/releases).\n\n## Demostraci\u00f3n en l\u00ednea\n\n[Vista Pr\u00e9via de la Aplicaci\u00f3n](https://panjiachen.github.io/vue-element-admin)\n\n## Donaci\u00f3n\n\nSi este proyecto es de mucha ayuda para ti, puedes comprarle al autor un vaso de jugo :tropical_drink:\n\n![Donar](https://wpimg.wallstcn.com/bd273f0d-83a0-4ef2-92e1-9ac8ed3746b9.png)\n\n[dona por Paypal](https://www.paypal.me/panfree23)\n\n[Comprame un Caf\u00e9](https://www.buymeacoffee.com/Pan)\n\n## Navegadores Soportados\n\nNavegadores modernos e Internet Explorer 10+.\n\n| [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png\" alt=\"IE / Edge\" width=\"24px\" height=\"24px\" />](https://godban.github.io/browsers-support-badges/)</br>IE / Edge | [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png\" alt=\"Firefox\" width=\"24px\" height=\"24px\" />](https://godban.github.io/browsers-support-badges/)</br>Firefox | [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png\" alt=\"Chrome\" width=\"24px\" height=\"24px\" />](https://godban.github.io/browsers-support-badges/)</br>Chrome | [<img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png\" alt=\"Safari\" width=\"24px\" height=\"24px\" />](https://godban.github.io/browsers-support-badges/)</br>Safari |\n| --------- | --------- | --------- | --------- |\n| IE10, IE11, Edge| \u00faltimas 2 versiones| \u00faltimas 2 versiones| \u00faltimas 2 versiones\n\n## Licencia\n\n[MIT](https://github.com/PanJiaChen/vue-element-admin/blob/master/LICENSE)\n\nCopyright (c) 2017-presente PanJiaChen\n"
 },
 {
  "repo": "facebook/create-react-app",
  "language": "JavaScript",
  "readme_contents": "# Create React App [![Build Status](https://dev.azure.com/facebook/create-react-app/_apis/build/status/facebook.create-react-app?branchName=master)](https://dev.azure.com/facebook/create-react-app/_build/latest?definitionId=1&branchName=master) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-green.svg)](https://github.com/facebook/create-react-app/blob/master/CONTRIBUTING.md)\n\nCreate React apps with no build configuration.\n\n- [Creating an App](#creating-an-app) \u2013 How to create a new app.\n- [User Guide](https://facebook.github.io/create-react-app/) \u2013 How to develop apps bootstrapped with Create React App.\n\nCreate React App works on macOS, Windows, and Linux.<br>\nIf something doesn\u2019t work, please [file an issue](https://github.com/facebook/create-react-app/issues/new).<br>\nIf you have questions or need help, please ask in our [Spectrum](https://spectrum.chat/create-react-app) community.\n\n## Quick Overview\n\n```sh\nnpx create-react-app my-app\ncd my-app\nnpm start\n```\n\nIf you've previously installed `create-react-app` globally via `npm install -g create-react-app`, we recommend you uninstall the package using `npm uninstall -g create-react-app` to ensure that npx always uses the latest version.\n\n_([npx](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b) comes with npm 5.2+ and higher, see [instructions for older npm versions](https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f))_\n\nThen open [http://localhost:3000/](http://localhost:3000/) to see your app.<br>\nWhen you\u2019re ready to deploy to production, create a minified bundle with `npm run build`.\n\n<p align='center'>\n<img src='https://cdn.jsdelivr.net/gh/facebook/create-react-app@27b42ac7efa018f2541153ab30d63180f5fa39e0/screencast.svg' width='600' alt='npm start'>\n</p>\n\n### Get Started Immediately\n\nYou **don\u2019t** need to install or configure tools like webpack or Babel.<br>\nThey are preconfigured and hidden so that you can focus on the code.\n\nCreate a project, and you\u2019re good to go.\n\n## Creating an App\n\n**You\u2019ll need to have Node 8.16.0 or Node 10.16.0 or later version on your local development machine** (but it\u2019s not required on the server). You can use [nvm](https://github.com/creationix/nvm#installation) (macOS/Linux) or [nvm-windows](https://github.com/coreybutler/nvm-windows#node-version-manager-nvm-for-windows) to switch Node versions between different projects.\n\nTo create a new app, you may choose one of the following methods:\n\n### npx\n\n```sh\nnpx create-react-app my-app\n```\n\n_([npx](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b) is a package runner tool that comes with npm 5.2+ and higher, see [instructions for older npm versions](https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f))_\n\n### npm\n\n```sh\nnpm init react-app my-app\n```\n\n_`npm init <initializer>` is available in npm 6+_\n\n### Yarn\n\n```sh\nyarn create react-app my-app\n```\n\n_[`yarn create <starter-kit-package>`](https://yarnpkg.com/lang/en/docs/cli/create/) is available in Yarn 0.25+_\n\nIt will create a directory called `my-app` inside the current folder.<br>\nInside that directory, it will generate the initial project structure and install the transitive dependencies:\n\n```\nmy-app\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 public\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 manifest.json\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 App.css\n    \u251c\u2500\u2500 App.js\n    \u251c\u2500\u2500 App.test.js\n    \u251c\u2500\u2500 index.css\n    \u251c\u2500\u2500 index.js\n    \u251c\u2500\u2500 logo.svg\n    \u2514\u2500\u2500 serviceWorker.js\n    \u2514\u2500\u2500 setupTests.js\n```\n\nNo configuration or complicated folder structures, only the files you need to build your app.<br>\nOnce the installation is done, you can open your project folder:\n\n```sh\ncd my-app\n```\n\nInside the newly created project, you can run some built-in commands:\n\n### `npm start` or `yarn start`\n\nRuns the app in development mode.<br>\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\n\nThe page will automatically reload if you make changes to the code.<br>\nYou will see the build errors and lint warnings in the console.\n\n<p align='center'>\n<img src='https://cdn.jsdelivr.net/gh/marionebl/create-react-app@9f6282671c54f0874afd37a72f6689727b562498/screencast-error.svg' width='600' alt='Build errors'>\n</p>\n\n### `npm test` or `yarn test`\n\nRuns the test watcher in an interactive mode.<br>\nBy default, runs tests related to files changed since the last commit.\n\n[Read more about testing.](https://facebook.github.io/create-react-app/docs/running-tests)\n\n### `npm run build` or `yarn build`\n\nBuilds the app for production to the `build` folder.<br>\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.<br>\n\nYour app is ready to be deployed.\n\n## User Guide\n\nYou can find detailed instructions on using Create React App and many tips in [its documentation](https://facebook.github.io/create-react-app/).\n\n## How to Update to New Versions?\n\nPlease refer to the [User Guide](https://facebook.github.io/create-react-app/docs/updating-to-new-releases) for this and other information.\n\n## Philosophy\n\n- **One Dependency:** There is only one build dependency. It uses webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.\n\n- **No Configuration Required:** You don't need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.\n\n- **No Lock-In:** You can \u201ceject\u201d to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.\n\n## What\u2019s Included?\n\nYour environment will have everything you need to build a modern single-page React app:\n\n- React, JSX, ES6, TypeScript and Flow syntax support.\n- Language extras beyond ES6 like the object spread operator.\n- Autoprefixed CSS, so you don\u2019t need `-webkit-` or other prefixes.\n- A fast interactive unit test runner with built-in support for coverage reporting.\n- A live development server that warns about common mistakes.\n- A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.\n- An offline-first [service worker](https://developers.google.com/web/fundamentals/getting-started/primers/service-workers) and a [web app manifest](https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/), meeting all the [Progressive Web App](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app) criteria. (_Note: Using the service worker is opt-in as of `react-scripts@2.0.0` and higher_)\n- Hassle-free updates for the above tools with a single dependency.\n\nCheck out [this guide](https://github.com/nitishdayal/cra_closer_look) for an overview of how these tools fit together.\n\nThe tradeoff is that **these tools are preconfigured to work in a specific way**. If your project needs more customization, you can [\"eject\"](https://facebook.github.io/create-react-app/docs/available-scripts#npm-run-eject) and customize it, but then you will need to maintain this configuration.\n\n## Popular Alternatives\n\nCreate React App is a great fit for:\n\n- **Learning React** in a comfortable and feature-rich development environment.\n- **Starting new single-page React applications.**\n- **Creating examples** with React for your libraries and components.\n\nHere are a few common cases where you might want to try something else:\n\n- If you want to **try React** without hundreds of transitive build tool dependencies, consider [using a single HTML file or an online sandbox instead](https://reactjs.org/docs/try-react.html).\n\n- If you need to **integrate React code with a server-side template framework** like Rails, Django or Symfony, or if you\u2019re **not building a single-page app**, consider using [nwb](https://github.com/insin/nwb), or [Neutrino](https://neutrino.js.org/) which are more flexible. For Rails specifically, you can use [Rails Webpacker](https://github.com/rails/webpacker). For Symfony, try [Symfony's webpack Encore](https://symfony.com/doc/current/frontend/encore/reactjs.html).\n\n- If you need to **publish a React component**, [nwb](https://github.com/insin/nwb) can [also do this](https://github.com/insin/nwb#react-components-and-libraries), as well as [Neutrino's react-components preset](https://neutrino.js.org/packages/react-components/).\n\n- If you want to do **server rendering** with React and Node.js, check out [Next.js](https://github.com/zeit/next.js/) or [Razzle](https://github.com/jaredpalmer/razzle). Create React App is agnostic of the backend, and only produces static HTML/JS/CSS bundles.\n\n- If your website is **mostly static** (for example, a portfolio or a blog), consider using [Gatsby](https://www.gatsbyjs.org/) instead. Unlike Create React App, it pre-renders the website into HTML at the build time.\n\n- Finally, if you need **more customization**, check out [Neutrino](https://neutrino.js.org/) and its [React preset](https://neutrino.js.org/packages/react/).\n\nAll of the above tools can work with little to no configuration.\n\nIf you prefer configuring the build yourself, [follow this guide](https://reactjs.org/docs/add-react-to-an-existing-app.html).\n\n## React Native\n\nLooking for something similar, but for React Native?<br>\nCheck out [Expo CLI](https://github.com/expo/expo-cli).\n\n## Contributing\n\nWe'd love to have your helping hand on `create-react-app`! See [CONTRIBUTING.md](CONTRIBUTING.md) for more information on what we're looking for and how to get started.\n\n## Credits\n\nThis project exists thanks to all the people who [contribute](CONTRIBUTING.md).<br>\n<a href=\"https://github.com/facebook/create-react-app/graphs/contributors\"><img src=\"https://opencollective.com/create-react-app/contributors.svg?width=890&button=false\" /></a>\n\nThanks to [Netlify](https://www.netlify.com/) for hosting our documentation.\n\n## Acknowledgements\n\nWe are grateful to the authors of existing related projects for their ideas and collaboration:\n\n- [@eanplatter](https://github.com/eanplatter)\n- [@insin](https://github.com/insin)\n- [@mxstbr](https://github.com/mxstbr)\n\n## License\n\nCreate React App is open source software [licensed as MIT](https://github.com/facebook/create-react-app/blob/master/LICENSE).\n"
 },
 {
  "repo": "slatedocs/slate",
  "language": "JavaScript",
  "readme_contents": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/slatedocs/img/master/logo-slate.png\" alt=\"Slate: API Documentation Generator\" width=\"226\">\n  <br>\n  <a href=\"https://github.com/slatedocs/slate/actions?query=workflow%3ABuild+branch%3Amaster\"><img src=\"https://github.com/slatedocs/slate/workflows/Build/badge.svg?branch=master\" alt=\"Build Status\"></a>\n</p>\n\n<p align=\"center\">Slate helps you create beautiful, intelligent, responsive API documentation.</p>\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/slatedocs/img/master/screenshot-slate.png\" width=700 alt=\"Screenshot of Example Documentation created with Slate\"></p>\n\n<p align=\"center\"><em>The example above was created with Slate. Check it out at <a href=\"https://slatedocs.github.io/slate\">slatedocs.github.io/slate</a>.</em></p>\n\nFeatures\n------------\n\n* **Clean, intuitive design** \u2014 With Slate, the description of your API is on the left side of your documentation, and all the code examples are on the right side. Inspired by [Stripe's](https://stripe.com/docs/api) and [PayPal's](https://developer.paypal.com/webapps/developer/docs/api/) API docs. Slate is responsive, so it looks great on tablets, phones, and even in print.\n\n* **Everything on a single page** \u2014 Gone are the days when your users had to search through a million pages to find what they wanted. Slate puts the entire documentation on a single page. We haven't sacrificed linkability, though. As you scroll, your browser's hash will update to the nearest header, so linking to a particular point in the documentation is still natural and easy.\n\n* **Slate is just Markdown** \u2014 When you write docs with Slate, you're just writing Markdown, which makes it simple to edit and understand. Everything is written in Markdown \u2014 even the code samples are just Markdown code blocks.\n\n* **Write code samples in multiple languages** \u2014 If your API has bindings in multiple programming languages, you can easily put in tabs to switch between them. In your document, you'll distinguish different languages by specifying the language name at the top of each code block, just like with GitHub Flavored Markdown.\n\n* **Out-of-the-box syntax highlighting** for [over 100 languages](https://github.com/jneen/rouge/wiki/List-of-supported-languages-and-lexers), no configuration required.\n\n* **Automatic, smoothly scrolling table of contents** on the far left of the page. As you scroll, it displays your current position in the document. It's fast, too. We're using Slate at TripIt to build documentation for our new API, where our table of contents has over 180 entries. We've made sure that the performance remains excellent, even for larger documents.\n\n* **Let your users update your documentation for you** \u2014 By default, your Slate-generated documentation is hosted in a public GitHub repository. Not only does this mean you get free hosting for your docs with GitHub Pages, but it also makes it simple for other developers to make pull requests to your docs if they find typos or other problems. Of course, if you don't want to use GitHub, you're also welcome to host your docs elsewhere.\n\n* **RTL Support** Full right-to-left layout for RTL languages such as Arabic, Persian (Farsi), Hebrew etc.\n\nGetting started with Slate is super easy! Simply press the green \"use this template\" button above and follow the instructions below. Or, if you'd like to check out what Slate is capable of, take a look at the [sample docs](https://slatedocs.github.io/slate/).\n\nGetting Started with Slate\n------------------------------\n\nTo get started with Slate, please check out the [Getting Started](https://github.com/slatedocs/slate/wiki#getting-started)\nsection in our [wiki](https://github.com/slate/wiki).\n\nWe support running Slate in three different ways:\n* [Natively](https://github.com/slatedocs/slate/wiki/Using-Slate-Natively)\n* [Using Vagrant](https://github.com/slatedocs/slate/wiki/Using-Slate-in-Vagrant)\n* [Using Docker](https://github.com/slatedocs/slate/wiki/Using-Slate-in-Docker)\n\nCompanies Using Slate\n---------------------------------\n\n* [NASA](https://api.nasa.gov)\n* [Sony](http://developers.cimediacloud.com)\n* [Best Buy](https://bestbuyapis.github.io/api-documentation/)\n* [Travis-CI](https://docs.travis-ci.com/api/)\n* [Greenhouse](https://developers.greenhouse.io/harvest.html)\n* [WooCommerce](http://woocommerce.github.io/woocommerce-rest-api-docs/)\n* [Dwolla](https://docs.dwolla.com/)\n* [Clearbit](https://clearbit.com/docs)\n* [Coinbase](https://developers.coinbase.com/api)\n* [Parrot Drones](http://developer.parrot.com/docs/bebop/)\n* [Scale](https://docs.scaleapi.com/)\n\nYou can view more in [the list on the wiki](https://github.com/slatedocs/slate/wiki/Slate-in-the-Wild).\n\nQuestions? Need Help? Found a bug?\n--------------------\n\nIf you've got questions about setup, deploying, special feature implementation in your fork, or just want to chat with the developer, please feel free to [start a thread in our Discussions tab](https://github.com/slatedocs/slate/discussions)!\n\nFound a bug with upstream Slate? Go ahead and [submit an issue](https://github.com/slatedocs/slate/issues). And, of course, feel free to submit pull requests with bug fixes or changes to the `dev` branch.\n\nContributors\n--------------------\n\nSlate was built by [Robert Lord](https://lord.io) while at [TripIt](https://www.tripit.com/). The project is now maintained by [Matthew Peveler](https://github.com/MasterOdin) and [Mike Ralphson](https://github.com/MikeRalphson).\n\nThanks to the following people who have submitted major pull requests:\n\n- [@chrissrogers](https://github.com/chrissrogers)\n- [@bootstraponline](https://github.com/bootstraponline)\n- [@realityking](https://github.com/realityking)\n- [@cvkef](https://github.com/cvkef)\n\nAlso, thanks to [Sauce Labs](http://saucelabs.com) for sponsoring the development of the responsive styles.\n\nSpecial Thanks\n--------------------\n- [Middleman](https://github.com/middleman/middleman)\n- [jquery.tocify.js](https://github.com/gfranko/jquery.tocify.js)\n- [middleman-syntax](https://github.com/middleman/middleman-syntax)\n- [middleman-gh-pages](https://github.com/edgecase/middleman-gh-pages)\n- [Font Awesome](http://fortawesome.github.io/Font-Awesome/)\n"
 },
 {
  "repo": "airbnb/javascript",
  "language": "JavaScript",
  "readme_contents": "# Airbnb JavaScript Style Guide() {\n\n*A mostly reasonable approach to JavaScript*\n\n> **Note**: this guide assumes you are using [Babel](https://babeljs.io), and requires that you use [babel-preset-airbnb](https://npmjs.com/babel-preset-airbnb) or the equivalent. It also assumes you are installing shims/polyfills in your app, with [airbnb-browser-shims](https://npmjs.com/airbnb-browser-shims) or the equivalent.\n\n[![Downloads](https://img.shields.io/npm/dm/eslint-config-airbnb.svg)](https://www.npmjs.com/package/eslint-config-airbnb)\n[![Downloads](https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg)](https://www.npmjs.com/package/eslint-config-airbnb-base)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/airbnb/javascript?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nThis guide is available in other languages too. See [Translation](#translation)\n\nOther Style Guides\n\n  - [ES5 (Deprecated)](https://github.com/airbnb/javascript/tree/es5-deprecated/es5)\n  - [React](react/)\n  - [CSS-in-JavaScript](css-in-javascript/)\n  - [CSS & Sass](https://github.com/airbnb/css)\n  - [Ruby](https://github.com/airbnb/ruby)\n\n## Table of Contents\n\n  1. [Types](#types)\n  1. [References](#references)\n  1. [Objects](#objects)\n  1. [Arrays](#arrays)\n  1. [Destructuring](#destructuring)\n  1. [Strings](#strings)\n  1. [Functions](#functions)\n  1. [Arrow Functions](#arrow-functions)\n  1. [Classes & Constructors](#classes--constructors)\n  1. [Modules](#modules)\n  1. [Iterators and Generators](#iterators-and-generators)\n  1. [Properties](#properties)\n  1. [Variables](#variables)\n  1. [Hoisting](#hoisting)\n  1. [Comparison Operators & Equality](#comparison-operators--equality)\n  1. [Blocks](#blocks)\n  1. [Control Statements](#control-statements)\n  1. [Comments](#comments)\n  1. [Whitespace](#whitespace)\n  1. [Commas](#commas)\n  1. [Semicolons](#semicolons)\n  1. [Type Casting & Coercion](#type-casting--coercion)\n  1. [Naming Conventions](#naming-conventions)\n  1. [Accessors](#accessors)\n  1. [Events](#events)\n  1. [jQuery](#jquery)\n  1. [ECMAScript 5 Compatibility](#ecmascript-5-compatibility)\n  1. [ECMAScript 6+ (ES 2015+) Styles](#ecmascript-6-es-2015-styles)\n  1. [Standard Library](#standard-library)\n  1. [Testing](#testing)\n  1. [Performance](#performance)\n  1. [Resources](#resources)\n  1. [In the Wild](#in-the-wild)\n  1. [Translation](#translation)\n  1. [The JavaScript Style Guide Guide](#the-javascript-style-guide-guide)\n  1. [Chat With Us About JavaScript](#chat-with-us-about-javascript)\n  1. [Contributors](#contributors)\n  1. [License](#license)\n  1. [Amendments](#amendments)\n\n## Types\n\n  <a name=\"types--primitives\"></a><a name=\"1.1\"></a>\n  - [1.1](#types--primitives) **Primitives**: When you access a primitive type you work directly on its value.\n\n    - `string`\n    - `number`\n    - `boolean`\n    - `null`\n    - `undefined`\n    - `symbol`\n    - `bigint`\n\n    ```javascript\n    const foo = 1;\n    let bar = foo;\n\n    bar = 9;\n\n    console.log(foo, bar); // => 1, 9\n    ```\n\n    - Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don\u2019t support them natively.\n\n  <a name=\"types--complex\"></a><a name=\"1.2\"></a>\n  - [1.2](#types--complex)  **Complex**: When you access a complex type you work on a reference to its value.\n\n    - `object`\n    - `array`\n    - `function`\n\n    ```javascript\n    const foo = [1, 2];\n    const bar = foo;\n\n    bar[0] = 9;\n\n    console.log(foo[0], bar[0]); // => 9, 9\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## References\n\n  <a name=\"references--prefer-const\"></a><a name=\"2.1\"></a>\n  - [2.1](#references--prefer-const) Use `const` for all of your references; avoid using `var`. eslint: [`prefer-const`](https://eslint.org/docs/rules/prefer-const.html), [`no-const-assign`](https://eslint.org/docs/rules/no-const-assign.html)\n\n    > Why? This ensures that you can\u2019t reassign your references, which can lead to bugs and difficult to comprehend code.\n\n    ```javascript\n    // bad\n    var a = 1;\n    var b = 2;\n\n    // good\n    const a = 1;\n    const b = 2;\n    ```\n\n  <a name=\"references--disallow-var\"></a><a name=\"2.2\"></a>\n  - [2.2](#references--disallow-var) If you must reassign references, use `let` instead of `var`. eslint: [`no-var`](https://eslint.org/docs/rules/no-var.html)\n\n    > Why? `let` is block-scoped rather than function-scoped like `var`.\n\n    ```javascript\n    // bad\n    var count = 1;\n    if (true) {\n      count += 1;\n    }\n\n    // good, use the let.\n    let count = 1;\n    if (true) {\n      count += 1;\n    }\n    ```\n\n  <a name=\"references--block-scope\"></a><a name=\"2.3\"></a>\n  - [2.3](#references--block-scope) Note that both `let` and `const` are block-scoped.\n\n    ```javascript\n    // const and let only exist in the blocks they are defined in.\n    {\n      let a = 1;\n      const b = 1;\n    }\n    console.log(a); // ReferenceError\n    console.log(b); // ReferenceError\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Objects\n\n  <a name=\"objects--no-new\"></a><a name=\"3.1\"></a>\n  - [3.1](#objects--no-new) Use the literal syntax for object creation. eslint: [`no-new-object`](https://eslint.org/docs/rules/no-new-object.html)\n\n    ```javascript\n    // bad\n    const item = new Object();\n\n    // good\n    const item = {};\n    ```\n\n  <a name=\"es6-computed-properties\"></a><a name=\"3.4\"></a>\n  - [3.2](#es6-computed-properties) Use computed property names when creating objects with dynamic property names.\n\n    > Why? They allow you to define all the properties of an object in one place.\n\n    ```javascript\n\n    function getKey(k) {\n      return `a key named ${k}`;\n    }\n\n    // bad\n    const obj = {\n      id: 5,\n      name: 'San Francisco',\n    };\n    obj[getKey('enabled')] = true;\n\n    // good\n    const obj = {\n      id: 5,\n      name: 'San Francisco',\n      [getKey('enabled')]: true,\n    };\n    ```\n\n  <a name=\"es6-object-shorthand\"></a><a name=\"3.5\"></a>\n  - [3.3](#es6-object-shorthand) Use object method shorthand. eslint: [`object-shorthand`](https://eslint.org/docs/rules/object-shorthand.html)\n\n    ```javascript\n    // bad\n    const atom = {\n      value: 1,\n\n      addValue: function (value) {\n        return atom.value + value;\n      },\n    };\n\n    // good\n    const atom = {\n      value: 1,\n\n      addValue(value) {\n        return atom.value + value;\n      },\n    };\n    ```\n\n  <a name=\"es6-object-concise\"></a><a name=\"3.6\"></a>\n  - [3.4](#es6-object-concise) Use property value shorthand. eslint: [`object-shorthand`](https://eslint.org/docs/rules/object-shorthand.html)\n\n    > Why? It is shorter and descriptive.\n\n    ```javascript\n    const lukeSkywalker = 'Luke Skywalker';\n\n    // bad\n    const obj = {\n      lukeSkywalker: lukeSkywalker,\n    };\n\n    // good\n    const obj = {\n      lukeSkywalker,\n    };\n    ```\n\n  <a name=\"objects--grouped-shorthand\"></a><a name=\"3.7\"></a>\n  - [3.5](#objects--grouped-shorthand) Group your shorthand properties at the beginning of your object declaration.\n\n    > Why? It\u2019s easier to tell which properties are using the shorthand.\n\n    ```javascript\n    const anakinSkywalker = 'Anakin Skywalker';\n    const lukeSkywalker = 'Luke Skywalker';\n\n    // bad\n    const obj = {\n      episodeOne: 1,\n      twoJediWalkIntoACantina: 2,\n      lukeSkywalker,\n      episodeThree: 3,\n      mayTheFourth: 4,\n      anakinSkywalker,\n    };\n\n    // good\n    const obj = {\n      lukeSkywalker,\n      anakinSkywalker,\n      episodeOne: 1,\n      twoJediWalkIntoACantina: 2,\n      episodeThree: 3,\n      mayTheFourth: 4,\n    };\n    ```\n\n  <a name=\"objects--quoted-props\"></a><a name=\"3.8\"></a>\n  - [3.6](#objects--quoted-props) Only quote properties that are invalid identifiers. eslint: [`quote-props`](https://eslint.org/docs/rules/quote-props.html)\n\n    > Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.\n\n    ```javascript\n    // bad\n    const bad = {\n      'foo': 3,\n      'bar': 4,\n      'data-blah': 5,\n    };\n\n    // good\n    const good = {\n      foo: 3,\n      bar: 4,\n      'data-blah': 5,\n    };\n    ```\n\n  <a name=\"objects--prototype-builtins\"></a>\n  - [3.7](#objects--prototype-builtins) Do not call `Object.prototype` methods directly, such as `hasOwnProperty`, `propertyIsEnumerable`, and `isPrototypeOf`. eslint: [`no-prototype-builtins`](https://eslint.org/docs/rules/no-prototype-builtins)\n\n    > Why? These methods may be shadowed by properties on the object in question - consider `{ hasOwnProperty: false }` - or, the object may be a null object (`Object.create(null)`).\n\n    ```javascript\n    // bad\n    console.log(object.hasOwnProperty(key));\n\n    // good\n    console.log(Object.prototype.hasOwnProperty.call(object, key));\n\n    // best\n    const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.\n    console.log(has.call(object, key));\n    /* or */\n    import has from 'has'; // https://www.npmjs.com/package/has\n    console.log(has(object, key));\n    ```\n\n  <a name=\"objects--rest-spread\"></a>\n  - [3.8](#objects--rest-spread) Prefer the object spread operator over [`Object.assign`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign) to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted.\n\n    ```javascript\n    // very bad\n    const original = { a: 1, b: 2 };\n    const copy = Object.assign(original, { c: 3 }); // this mutates `original` \u0ca0_\u0ca0\n    delete copy.a; // so does this\n\n    // bad\n    const original = { a: 1, b: 2 };\n    const copy = Object.assign({}, original, { c: 3 }); // copy => { a: 1, b: 2, c: 3 }\n\n    // good\n    const original = { a: 1, b: 2 };\n    const copy = { ...original, c: 3 }; // copy => { a: 1, b: 2, c: 3 }\n\n    const { a, ...noA } = copy; // noA => { b: 2, c: 3 }\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Arrays\n\n  <a name=\"arrays--literals\"></a><a name=\"4.1\"></a>\n  - [4.1](#arrays--literals) Use the literal syntax for array creation. eslint: [`no-array-constructor`](https://eslint.org/docs/rules/no-array-constructor.html)\n\n    ```javascript\n    // bad\n    const items = new Array();\n\n    // good\n    const items = [];\n    ```\n\n  <a name=\"arrays--push\"></a><a name=\"4.2\"></a>\n  - [4.2](#arrays--push) Use [Array#push](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push) instead of direct assignment to add items to an array.\n\n    ```javascript\n    const someStack = [];\n\n    // bad\n    someStack[someStack.length] = 'abracadabra';\n\n    // good\n    someStack.push('abracadabra');\n    ```\n\n  <a name=\"es6-array-spreads\"></a><a name=\"4.3\"></a>\n  - [4.3](#es6-array-spreads) Use array spreads `...` to copy arrays.\n\n    ```javascript\n    // bad\n    const len = items.length;\n    const itemsCopy = [];\n    let i;\n\n    for (i = 0; i < len; i += 1) {\n      itemsCopy[i] = items[i];\n    }\n\n    // good\n    const itemsCopy = [...items];\n    ```\n\n  <a name=\"arrays--from\"></a>\n  <a name=\"arrays--from-iterable\"></a><a name=\"4.4\"></a>\n  - [4.4](#arrays--from-iterable) To convert an iterable object to an array, use spreads `...` instead of [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from).\n\n    ```javascript\n    const foo = document.querySelectorAll('.foo');\n\n    // good\n    const nodes = Array.from(foo);\n\n    // best\n    const nodes = [...foo];\n    ```\n\n  <a name=\"arrays--from-array-like\"></a>\n  - [4.5](#arrays--from-array-like) Use [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from) for converting an array-like object to an array.\n\n    ```javascript\n    const arrLike = { 0: 'foo', 1: 'bar', 2: 'baz', length: 3 };\n\n    // bad\n    const arr = Array.prototype.slice.call(arrLike);\n\n    // good\n    const arr = Array.from(arrLike);\n    ```\n\n  <a name=\"arrays--mapping\"></a>\n  - [4.6](#arrays--mapping) Use [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from) instead of spread `...` for mapping over iterables, because it avoids creating an intermediate array.\n\n    ```javascript\n    // bad\n    const baz = [...foo].map(bar);\n\n    // good\n    const baz = Array.from(foo, bar);\n    ```\n\n  <a name=\"arrays--callback-return\"></a><a name=\"4.5\"></a>\n  - [4.7](#arrays--callback-return) Use return statements in array method callbacks. It\u2019s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following [8.2](#arrows--implicit-return). eslint: [`array-callback-return`](https://eslint.org/docs/rules/array-callback-return)\n\n    ```javascript\n    // good\n    [1, 2, 3].map((x) => {\n      const y = x + 1;\n      return x * y;\n    });\n\n    // good\n    [1, 2, 3].map((x) => x + 1);\n\n    // bad - no returned value means `acc` becomes undefined after the first iteration\n    [[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n      const flatten = acc.concat(item);\n    });\n\n    // good\n    [[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n      const flatten = acc.concat(item);\n      return flatten;\n    });\n\n    // bad\n    inbox.filter((msg) => {\n      const { subject, author } = msg;\n      if (subject === 'Mockingbird') {\n        return author === 'Harper Lee';\n      } else {\n        return false;\n      }\n    });\n\n    // good\n    inbox.filter((msg) => {\n      const { subject, author } = msg;\n      if (subject === 'Mockingbird') {\n        return author === 'Harper Lee';\n      }\n\n      return false;\n    });\n    ```\n\n  <a name=\"arrays--bracket-newline\"></a>\n  - [4.8](#arrays--bracket-newline) Use line breaks after open and before close array brackets if an array has multiple lines\n\n    ```javascript\n    // bad\n    const arr = [\n      [0, 1], [2, 3], [4, 5],\n    ];\n\n    const objectInArray = [{\n      id: 1,\n    }, {\n      id: 2,\n    }];\n\n    const numberInArray = [\n      1, 2,\n    ];\n\n    // good\n    const arr = [[0, 1], [2, 3], [4, 5]];\n\n    const objectInArray = [\n      {\n        id: 1,\n      },\n      {\n        id: 2,\n      },\n    ];\n\n    const numberInArray = [\n      1,\n      2,\n    ];\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Destructuring\n\n  <a name=\"destructuring--object\"></a><a name=\"5.1\"></a>\n  - [5.1](#destructuring--object) Use object destructuring when accessing and using multiple properties of an object. eslint: [`prefer-destructuring`](https://eslint.org/docs/rules/prefer-destructuring)\n\n    > Why? Destructuring saves you from creating temporary references for those properties.\n\n    ```javascript\n    // bad\n    function getFullName(user) {\n      const firstName = user.firstName;\n      const lastName = user.lastName;\n\n      return `${firstName} ${lastName}`;\n    }\n\n    // good\n    function getFullName(user) {\n      const { firstName, lastName } = user;\n      return `${firstName} ${lastName}`;\n    }\n\n    // best\n    function getFullName({ firstName, lastName }) {\n      return `${firstName} ${lastName}`;\n    }\n    ```\n\n  <a name=\"destructuring--array\"></a><a name=\"5.2\"></a>\n  - [5.2](#destructuring--array) Use array destructuring. eslint: [`prefer-destructuring`](https://eslint.org/docs/rules/prefer-destructuring)\n\n    ```javascript\n    const arr = [1, 2, 3, 4];\n\n    // bad\n    const first = arr[0];\n    const second = arr[1];\n\n    // good\n    const [first, second] = arr;\n    ```\n\n  <a name=\"destructuring--object-over-array\"></a><a name=\"5.3\"></a>\n  - [5.3](#destructuring--object-over-array) Use object destructuring for multiple return values, not array destructuring.\n\n    > Why? You can add new properties over time or change the order of things without breaking call sites.\n\n    ```javascript\n    // bad\n    function processInput(input) {\n      // then a miracle occurs\n      return [left, right, top, bottom];\n    }\n\n    // the caller needs to think about the order of return data\n    const [left, __, top] = processInput(input);\n\n    // good\n    function processInput(input) {\n      // then a miracle occurs\n      return { left, right, top, bottom };\n    }\n\n    // the caller selects only the data they need\n    const { left, top } = processInput(input);\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Strings\n\n  <a name=\"strings--quotes\"></a><a name=\"6.1\"></a>\n  - [6.1](#strings--quotes) Use single quotes `''` for strings. eslint: [`quotes`](https://eslint.org/docs/rules/quotes.html)\n\n    ```javascript\n    // bad\n    const name = \"Capt. Janeway\";\n\n    // bad - template literals should contain interpolation or newlines\n    const name = `Capt. Janeway`;\n\n    // good\n    const name = 'Capt. Janeway';\n    ```\n\n  <a name=\"strings--line-length\"></a><a name=\"6.2\"></a>\n  - [6.2](#strings--line-length) Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.\n\n    > Why? Broken strings are painful to work with and make code less searchable.\n\n    ```javascript\n    // bad\n    const errorMessage = 'This is a super long error that was thrown because \\\n    of Batman. When you stop to think about how Batman had anything to do \\\n    with this, you would get nowhere \\\n    fast.';\n\n    // bad\n    const errorMessage = 'This is a super long error that was thrown because ' +\n      'of Batman. When you stop to think about how Batman had anything to do ' +\n      'with this, you would get nowhere fast.';\n\n    // good\n    const errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.';\n    ```\n\n  <a name=\"es6-template-literals\"></a><a name=\"6.4\"></a>\n  - [6.3](#es6-template-literals) When programmatically building up strings, use template strings instead of concatenation. eslint: [`prefer-template`](https://eslint.org/docs/rules/prefer-template.html) [`template-curly-spacing`](https://eslint.org/docs/rules/template-curly-spacing)\n\n    > Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.\n\n    ```javascript\n    // bad\n    function sayHi(name) {\n      return 'How are you, ' + name + '?';\n    }\n\n    // bad\n    function sayHi(name) {\n      return ['How are you, ', name, '?'].join();\n    }\n\n    // bad\n    function sayHi(name) {\n      return `How are you, ${ name }?`;\n    }\n\n    // good\n    function sayHi(name) {\n      return `How are you, ${name}?`;\n    }\n    ```\n\n  <a name=\"strings--eval\"></a><a name=\"6.5\"></a>\n  - [6.4](#strings--eval) Never use `eval()` on a string, it opens too many vulnerabilities. eslint: [`no-eval`](https://eslint.org/docs/rules/no-eval)\n\n  <a name=\"strings--escaping\"></a>\n  - [6.5](#strings--escaping) Do not unnecessarily escape characters in strings. eslint: [`no-useless-escape`](https://eslint.org/docs/rules/no-useless-escape)\n\n    > Why? Backslashes harm readability, thus they should only be present when necessary.\n\n    ```javascript\n    // bad\n    const foo = '\\'this\\' \\i\\s \\\"quoted\\\"';\n\n    // good\n    const foo = '\\'this\\' is \"quoted\"';\n    const foo = `my name is '${name}'`;\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Functions\n\n  <a name=\"functions--declarations\"></a><a name=\"7.1\"></a>\n  - [7.1](#functions--declarations) Use named function expressions instead of function declarations. eslint: [`func-style`](https://eslint.org/docs/rules/func-style)\n\n    > Why? Function declarations are hoisted, which means that it\u2019s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function\u2019s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it\u2019s time to extract it to its own module! Don\u2019t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error\u2019s call stack. ([Discussion](https://github.com/airbnb/javascript/issues/794))\n\n    ```javascript\n    // bad\n    function foo() {\n      // ...\n    }\n\n    // bad\n    const foo = function () {\n      // ...\n    };\n\n    // good\n    // lexical name distinguished from the variable-referenced invocation(s)\n    const short = function longUniqueMoreDescriptiveLexicalFoo() {\n      // ...\n    };\n    ```\n\n  <a name=\"functions--iife\"></a><a name=\"7.2\"></a>\n  - [7.2](#functions--iife) Wrap immediately invoked function expressions in parentheses. eslint: [`wrap-iife`](https://eslint.org/docs/rules/wrap-iife.html)\n\n    > Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.\n\n    ```javascript\n    // immediately-invoked function expression (IIFE)\n    (function () {\n      console.log('Welcome to the Internet. Please follow me.');\n    }());\n    ```\n\n  <a name=\"functions--in-blocks\"></a><a name=\"7.3\"></a>\n  - [7.3](#functions--in-blocks) Never declare a function in a non-function block (`if`, `while`, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: [`no-loop-func`](https://eslint.org/docs/rules/no-loop-func.html)\n\n  <a name=\"functions--note-on-blocks\"></a><a name=\"7.4\"></a>\n  - [7.4](#functions--note-on-blocks) **Note:** ECMA-262 defines a `block` as a list of statements. A function declaration is not a statement.\n\n    ```javascript\n    // bad\n    if (currentUser) {\n      function test() {\n        console.log('Nope.');\n      }\n    }\n\n    // good\n    let test;\n    if (currentUser) {\n      test = () => {\n        console.log('Yup.');\n      };\n    }\n    ```\n\n  <a name=\"functions--arguments-shadow\"></a><a name=\"7.5\"></a>\n  - [7.5](#functions--arguments-shadow) Never name a parameter `arguments`. This will take precedence over the `arguments` object that is given to every function scope.\n\n    ```javascript\n    // bad\n    function foo(name, options, arguments) {\n      // ...\n    }\n\n    // good\n    function foo(name, options, args) {\n      // ...\n    }\n    ```\n\n  <a name=\"es6-rest\"></a><a name=\"7.6\"></a>\n  - [7.6](#es6-rest) Never use `arguments`, opt to use rest syntax `...` instead. eslint: [`prefer-rest-params`](https://eslint.org/docs/rules/prefer-rest-params)\n\n    > Why? `...` is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like `arguments`.\n\n    ```javascript\n    // bad\n    function concatenateAll() {\n      const args = Array.prototype.slice.call(arguments);\n      return args.join('');\n    }\n\n    // good\n    function concatenateAll(...args) {\n      return args.join('');\n    }\n    ```\n\n  <a name=\"es6-default-parameters\"></a><a name=\"7.7\"></a>\n  - [7.7](#es6-default-parameters) Use default parameter syntax rather than mutating function arguments.\n\n    ```javascript\n    // really bad\n    function handleThings(opts) {\n      // No! We shouldn\u2019t mutate function arguments.\n      // Double bad: if opts is falsy it'll be set to an object which may\n      // be what you want but it can introduce subtle bugs.\n      opts = opts || {};\n      // ...\n    }\n\n    // still bad\n    function handleThings(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n      // ...\n    }\n\n    // good\n    function handleThings(opts = {}) {\n      // ...\n    }\n    ```\n\n  <a name=\"functions--default-side-effects\"></a><a name=\"7.8\"></a>\n  - [7.8](#functions--default-side-effects) Avoid side effects with default parameters.\n\n    > Why? They are confusing to reason about.\n\n    ```javascript\n    var b = 1;\n    // bad\n    function count(a = b++) {\n      console.log(a);\n    }\n    count();  // 1\n    count();  // 2\n    count(3); // 3\n    count();  // 3\n    ```\n\n  <a name=\"functions--defaults-last\"></a><a name=\"7.9\"></a>\n  - [7.9](#functions--defaults-last) Always put default parameters last.\n\n    ```javascript\n    // bad\n    function handleThings(opts = {}, name) {\n      // ...\n    }\n\n    // good\n    function handleThings(name, opts = {}) {\n      // ...\n    }\n    ```\n\n  <a name=\"functions--constructor\"></a><a name=\"7.10\"></a>\n  - [7.10](#functions--constructor) Never use the Function constructor to create a new function. eslint: [`no-new-func`](https://eslint.org/docs/rules/no-new-func)\n\n    > Why? Creating a function in this way evaluates a string similarly to `eval()`, which opens vulnerabilities.\n\n    ```javascript\n    // bad\n    var add = new Function('a', 'b', 'return a + b');\n\n    // still bad\n    var subtract = Function('a', 'b', 'return a - b');\n    ```\n\n  <a name=\"functions--signature-spacing\"></a><a name=\"7.11\"></a>\n  - [7.11](#functions--signature-spacing) Spacing in a function signature. eslint: [`space-before-function-paren`](https://eslint.org/docs/rules/space-before-function-paren) [`space-before-blocks`](https://eslint.org/docs/rules/space-before-blocks)\n\n    > Why? Consistency is good, and you shouldn\u2019t have to add or remove a space when adding or removing a name.\n\n    ```javascript\n    // bad\n    const f = function(){};\n    const g = function (){};\n    const h = function() {};\n\n    // good\n    const x = function () {};\n    const y = function a() {};\n    ```\n\n  <a name=\"functions--mutate-params\"></a><a name=\"7.12\"></a>\n  - [7.12](#functions--mutate-params) Never mutate parameters. eslint: [`no-param-reassign`](https://eslint.org/docs/rules/no-param-reassign.html)\n\n    > Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.\n\n    ```javascript\n    // bad\n    function f1(obj) {\n      obj.key = 1;\n    }\n\n    // good\n    function f2(obj) {\n      const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1;\n    }\n    ```\n\n  <a name=\"functions--reassign-params\"></a><a name=\"7.13\"></a>\n  - [7.13](#functions--reassign-params) Never reassign parameters. eslint: [`no-param-reassign`](https://eslint.org/docs/rules/no-param-reassign.html)\n\n    > Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the `arguments` object. It can also cause optimization issues, especially in V8.\n\n    ```javascript\n    // bad\n    function f1(a) {\n      a = 1;\n      // ...\n    }\n\n    function f2(a) {\n      if (!a) { a = 1; }\n      // ...\n    }\n\n    // good\n    function f3(a) {\n      const b = a || 1;\n      // ...\n    }\n\n    function f4(a = 1) {\n      // ...\n    }\n    ```\n\n  <a name=\"functions--spread-vs-apply\"></a><a name=\"7.14\"></a>\n  - [7.14](#functions--spread-vs-apply) Prefer the use of the spread operator `...` to call variadic functions. eslint: [`prefer-spread`](https://eslint.org/docs/rules/prefer-spread)\n\n    > Why? It\u2019s cleaner, you don\u2019t need to supply a context, and you can not easily compose `new` with `apply`.\n\n    ```javascript\n    // bad\n    const x = [1, 2, 3, 4, 5];\n    console.log.apply(console, x);\n\n    // good\n    const x = [1, 2, 3, 4, 5];\n    console.log(...x);\n\n    // bad\n    new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));\n\n    // good\n    new Date(...[2016, 8, 5]);\n    ```\n\n  <a name=\"functions--signature-invocation-indentation\"></a>\n  - [7.15](#functions--signature-invocation-indentation) Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: [`function-paren-newline`](https://eslint.org/docs/rules/function-paren-newline)\n\n    ```javascript\n    // bad\n    function foo(bar,\n                 baz,\n                 quux) {\n      // ...\n    }\n\n    // good\n    function foo(\n      bar,\n      baz,\n      quux,\n    ) {\n      // ...\n    }\n\n    // bad\n    console.log(foo,\n      bar,\n      baz);\n\n    // good\n    console.log(\n      foo,\n      bar,\n      baz,\n    );\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Arrow Functions\n\n  <a name=\"arrows--use-them\"></a><a name=\"8.1\"></a>\n  - [8.1](#arrows--use-them) When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: [`prefer-arrow-callback`](https://eslint.org/docs/rules/prefer-arrow-callback.html), [`arrow-spacing`](https://eslint.org/docs/rules/arrow-spacing.html)\n\n    > Why? It creates a version of the function that executes in the context of `this`, which is usually what you want, and is a more concise syntax.\n\n    > Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.\n\n    ```javascript\n    // bad\n    [1, 2, 3].map(function (x) {\n      const y = x + 1;\n      return x * y;\n    });\n\n    // good\n    [1, 2, 3].map((x) => {\n      const y = x + 1;\n      return x * y;\n    });\n    ```\n\n  <a name=\"arrows--implicit-return\"></a><a name=\"8.2\"></a>\n  - [8.2](#arrows--implicit-return) If the function body consists of a single statement returning an [expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions) without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a `return` statement. eslint: [`arrow-parens`](https://eslint.org/docs/rules/arrow-parens.html), [`arrow-body-style`](https://eslint.org/docs/rules/arrow-body-style.html)\n\n    > Why? Syntactic sugar. It reads well when multiple functions are chained together.\n\n    ```javascript\n    // bad\n    [1, 2, 3].map((number) => {\n      const nextNumber = number + 1;\n      `A string containing the ${nextNumber}.`;\n    });\n\n    // good\n    [1, 2, 3].map((number) => `A string containing the ${number + 1}.`);\n\n    // good\n    [1, 2, 3].map((number) => {\n      const nextNumber = number + 1;\n      return `A string containing the ${nextNumber}.`;\n    });\n\n    // good\n    [1, 2, 3].map((number, index) => ({\n      [index]: number,\n    }));\n\n    // No implicit return with side effects\n    function foo(callback) {\n      const val = callback();\n      if (val === true) {\n        // Do something if callback returns true\n      }\n    }\n\n    let bool = false;\n\n    // bad\n    foo(() => bool = true);\n\n    // good\n    foo(() => {\n      bool = true;\n    });\n    ```\n\n  <a name=\"arrows--paren-wrap\"></a><a name=\"8.3\"></a>\n  - [8.3](#arrows--paren-wrap) In case the expression spans over multiple lines, wrap it in parentheses for better readability.\n\n    > Why? It shows clearly where the function starts and ends.\n\n    ```javascript\n    // bad\n    ['get', 'post', 'put'].map((httpMethod) => Object.prototype.hasOwnProperty.call(\n        httpMagicObjectWithAVeryLongName,\n        httpMethod,\n      )\n    );\n\n    // good\n    ['get', 'post', 'put'].map((httpMethod) => (\n      Object.prototype.hasOwnProperty.call(\n        httpMagicObjectWithAVeryLongName,\n        httpMethod,\n      )\n    ));\n    ```\n\n  <a name=\"arrows--one-arg-parens\"></a><a name=\"8.4\"></a>\n  - [8.4](#arrows--one-arg-parens) Always include parentheses around arguments for clarity and consistency. eslint: [`arrow-parens`](https://eslint.org/docs/rules/arrow-parens.html)\n\n    > Why? Minimizes diff churn when adding or removing arguments.\n\n    ```javascript\n    // bad\n    [1, 2, 3].map(x => x * x);\n\n    // good\n    [1, 2, 3].map((x) => x * x);\n\n    // bad\n    [1, 2, 3].map(number => (\n      `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n    ));\n\n    // good\n    [1, 2, 3].map((number) => (\n      `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n    ));\n\n    // bad\n    [1, 2, 3].map(x => {\n      const y = x + 1;\n      return x * y;\n    });\n\n    // good\n    [1, 2, 3].map((x) => {\n      const y = x + 1;\n      return x * y;\n    });\n    ```\n\n  <a name=\"arrows--confusing\"></a><a name=\"8.5\"></a>\n  - [8.5](#arrows--confusing) Avoid confusing arrow function syntax (`=>`) with comparison operators (`<=`, `>=`). eslint: [`no-confusing-arrow`](https://eslint.org/docs/rules/no-confusing-arrow)\n\n    ```javascript\n    // bad\n    const itemHeight = (item) => item.height <= 256 ? item.largeSize : item.smallSize;\n\n    // bad\n    const itemHeight = (item) => item.height >= 256 ? item.largeSize : item.smallSize;\n\n    // good\n    const itemHeight = (item) => (item.height <= 256 ? item.largeSize : item.smallSize);\n\n    // good\n    const itemHeight = (item) => {\n      const { height, largeSize, smallSize } = item;\n      return height <= 256 ? largeSize : smallSize;\n    };\n    ```\n\n  <a name=\"whitespace--implicit-arrow-linebreak\"></a>\n  - [8.6](#whitespace--implicit-arrow-linebreak) Enforce the location of arrow function bodies with implicit returns. eslint: [`implicit-arrow-linebreak`](https://eslint.org/docs/rules/implicit-arrow-linebreak)\n\n    ```javascript\n    // bad\n    (foo) =>\n      bar;\n\n    (foo) =>\n      (bar);\n\n    // good\n    (foo) => bar;\n    (foo) => (bar);\n    (foo) => (\n       bar\n    )\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Classes & Constructors\n\n  <a name=\"constructors--use-class\"></a><a name=\"9.1\"></a>\n  - [9.1](#constructors--use-class) Always use `class`. Avoid manipulating `prototype` directly.\n\n    > Why? `class` syntax is more concise and easier to reason about.\n\n    ```javascript\n    // bad\n    function Queue(contents = []) {\n      this.queue = [...contents];\n    }\n    Queue.prototype.pop = function () {\n      const value = this.queue[0];\n      this.queue.splice(0, 1);\n      return value;\n    };\n\n    // good\n    class Queue {\n      constructor(contents = []) {\n        this.queue = [...contents];\n      }\n      pop() {\n        const value = this.queue[0];\n        this.queue.splice(0, 1);\n        return value;\n      }\n    }\n    ```\n\n  <a name=\"constructors--extends\"></a><a name=\"9.2\"></a>\n  - [9.2](#constructors--extends) Use `extends` for inheritance.\n\n    > Why? It is a built-in way to inherit prototype functionality without breaking `instanceof`.\n\n    ```javascript\n    // bad\n    const inherits = require('inherits');\n    function PeekableQueue(contents) {\n      Queue.apply(this, contents);\n    }\n    inherits(PeekableQueue, Queue);\n    PeekableQueue.prototype.peek = function () {\n      return this.queue[0];\n    };\n\n    // good\n    class PeekableQueue extends Queue {\n      peek() {\n        return this.queue[0];\n      }\n    }\n    ```\n\n  <a name=\"constructors--chaining\"></a><a name=\"9.3\"></a>\n  - [9.3](#constructors--chaining) Methods can return `this` to help with method chaining.\n\n    ```javascript\n    // bad\n    Jedi.prototype.jump = function () {\n      this.jumping = true;\n      return true;\n    };\n\n    Jedi.prototype.setHeight = function (height) {\n      this.height = height;\n    };\n\n    const luke = new Jedi();\n    luke.jump(); // => true\n    luke.setHeight(20); // => undefined\n\n    // good\n    class Jedi {\n      jump() {\n        this.jumping = true;\n        return this;\n      }\n\n      setHeight(height) {\n        this.height = height;\n        return this;\n      }\n    }\n\n    const luke = new Jedi();\n\n    luke.jump()\n      .setHeight(20);\n    ```\n\n  <a name=\"constructors--tostring\"></a><a name=\"9.4\"></a>\n  - [9.4](#constructors--tostring) It\u2019s okay to write a custom `toString()` method, just make sure it works successfully and causes no side effects.\n\n    ```javascript\n    class Jedi {\n      constructor(options = {}) {\n        this.name = options.name || 'no name';\n      }\n\n      getName() {\n        return this.name;\n      }\n\n      toString() {\n        return `Jedi - ${this.getName()}`;\n      }\n    }\n    ```\n\n  <a name=\"constructors--no-useless\"></a><a name=\"9.5\"></a>\n  - [9.5](#constructors--no-useless) Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: [`no-useless-constructor`](https://eslint.org/docs/rules/no-useless-constructor)\n\n    ```javascript\n    // bad\n    class Jedi {\n      constructor() {}\n\n      getName() {\n        return this.name;\n      }\n    }\n\n    // bad\n    class Rey extends Jedi {\n      constructor(...args) {\n        super(...args);\n      }\n    }\n\n    // good\n    class Rey extends Jedi {\n      constructor(...args) {\n        super(...args);\n        this.name = 'Rey';\n      }\n    }\n    ```\n\n  <a name=\"classes--no-duplicate-members\"></a>\n  - [9.6](#classes--no-duplicate-members) Avoid duplicate class members. eslint: [`no-dupe-class-members`](https://eslint.org/docs/rules/no-dupe-class-members)\n\n    > Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.\n\n    ```javascript\n    // bad\n    class Foo {\n      bar() { return 1; }\n      bar() { return 2; }\n    }\n\n    // good\n    class Foo {\n      bar() { return 1; }\n    }\n\n    // good\n    class Foo {\n      bar() { return 2; }\n    }\n    ```\n\n  <a name=\"classes--methods-use-this\"></a>\n  - [9.7](#classes--methods-use-this) Class methods should use `this` or be made into a static method unless an external library or framework requires to use specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: [`class-methods-use-this`](https://eslint.org/docs/rules/class-methods-use-this)\n\n    ```javascript\n    // bad\n    class Foo {\n      bar() {\n        console.log('bar');\n      }\n    }\n\n    // good - this is used\n    class Foo {\n      bar() {\n        console.log(this.bar);\n      }\n    }\n\n    // good - constructor is exempt\n    class Foo {\n      constructor() {\n        // ...\n      }\n    }\n\n    // good - static methods aren't expected to use this\n    class Foo {\n      static bar() {\n        console.log('bar');\n      }\n    }\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Modules\n\n  <a name=\"modules--use-them\"></a><a name=\"10.1\"></a>\n  - [10.1](#modules--use-them) Always use modules (`import`/`export`) over a non-standard module system. You can always transpile to your preferred module system.\n\n    > Why? Modules are the future, let\u2019s start using the future now.\n\n    ```javascript\n    // bad\n    const AirbnbStyleGuide = require('./AirbnbStyleGuide');\n    module.exports = AirbnbStyleGuide.es6;\n\n    // ok\n    import AirbnbStyleGuide from './AirbnbStyleGuide';\n    export default AirbnbStyleGuide.es6;\n\n    // best\n    import { es6 } from './AirbnbStyleGuide';\n    export default es6;\n    ```\n\n  <a name=\"modules--no-wildcard\"></a><a name=\"10.2\"></a>\n  - [10.2](#modules--no-wildcard) Do not use wildcard imports.\n\n    > Why? This makes sure you have a single default export.\n\n    ```javascript\n    // bad\n    import * as AirbnbStyleGuide from './AirbnbStyleGuide';\n\n    // good\n    import AirbnbStyleGuide from './AirbnbStyleGuide';\n    ```\n\n  <a name=\"modules--no-export-from-import\"></a><a name=\"10.3\"></a>\n  - [10.3](#modules--no-export-from-import) And do not export directly from an import.\n\n    > Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.\n\n    ```javascript\n    // bad\n    // filename es6.js\n    export { es6 as default } from './AirbnbStyleGuide';\n\n    // good\n    // filename es6.js\n    import { es6 } from './AirbnbStyleGuide';\n    export default es6;\n    ```\n\n  <a name=\"modules--no-duplicate-imports\"></a>\n  - [10.4](#modules--no-duplicate-imports) Only import from a path in one place.\n eslint: [`no-duplicate-imports`](https://eslint.org/docs/rules/no-duplicate-imports)\n    > Why? Having multiple lines that import from the same path can make code harder to maintain.\n\n    ```javascript\n    // bad\n    import foo from 'foo';\n    // \u2026 some other imports \u2026 //\n    import { named1, named2 } from 'foo';\n\n    // good\n    import foo, { named1, named2 } from 'foo';\n\n    // good\n    import foo, {\n      named1,\n      named2,\n    } from 'foo';\n    ```\n\n  <a name=\"modules--no-mutable-exports\"></a>\n  - [10.5](#modules--no-mutable-exports) Do not export mutable bindings.\n eslint: [`import/no-mutable-exports`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-mutable-exports.md)\n    > Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.\n\n    ```javascript\n    // bad\n    let foo = 3;\n    export { foo };\n\n    // good\n    const foo = 3;\n    export { foo };\n    ```\n\n  <a name=\"modules--prefer-default-export\"></a>\n  - [10.6](#modules--prefer-default-export) In modules with a single export, prefer default export over named export.\n eslint: [`import/prefer-default-export`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/prefer-default-export.md)\n    > Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.\n\n    ```javascript\n    // bad\n    export function foo() {}\n\n    // good\n    export default function foo() {}\n    ```\n\n  <a name=\"modules--imports-first\"></a>\n  - [10.7](#modules--imports-first) Put all `import`s above non-import statements.\n eslint: [`import/first`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md)\n    > Why? Since `import`s are hoisted, keeping them all at the top prevents surprising behavior.\n\n    ```javascript\n    // bad\n    import foo from 'foo';\n    foo.init();\n\n    import bar from 'bar';\n\n    // good\n    import foo from 'foo';\n    import bar from 'bar';\n\n    foo.init();\n    ```\n\n  <a name=\"modules--multiline-imports-over-newlines\"></a>\n  - [10.8](#modules--multiline-imports-over-newlines) Multiline imports should be indented just like multiline array and object literals.\n eslint: [`object-curly-newline`](https://eslint.org/docs/rules/object-curly-newline)\n\n    > Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.\n\n    ```javascript\n    // bad\n    import {longNameA, longNameB, longNameC, longNameD, longNameE} from 'path';\n\n    // good\n    import {\n      longNameA,\n      longNameB,\n      longNameC,\n      longNameD,\n      longNameE,\n    } from 'path';\n    ```\n\n  <a name=\"modules--no-webpack-loader-syntax\"></a>\n  - [10.9](#modules--no-webpack-loader-syntax) Disallow Webpack loader syntax in module import statements.\n eslint: [`import/no-webpack-loader-syntax`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-webpack-loader-syntax.md)\n    > Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in `webpack.config.js`.\n\n    ```javascript\n    // bad\n    import fooSass from 'css!sass!foo.scss';\n    import barCss from 'style!css!bar.css';\n\n    // good\n    import fooSass from 'foo.scss';\n    import barCss from 'bar.css';\n    ```\n\n  <a name=\"modules--import-extensions\"></a>\n  - [10.10](#modules--import-extensions) Do not include JavaScript filename extensions\n eslint: [`import/extensions`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/extensions.md)\n    > Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you're importing in every consumer.\n\n    ```javascript\n    // bad\n    import foo from './foo.js';\n    import bar from './bar.jsx';\n    import baz from './baz/index.jsx';\n\n    // good\n    import foo from './foo';\n    import bar from './bar';\n    import baz from './baz';\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Iterators and Generators\n\n  <a name=\"iterators--nope\"></a><a name=\"11.1\"></a>\n  - [11.1](#iterators--nope) Don\u2019t use iterators. Prefer JavaScript\u2019s higher-order functions instead of loops like `for-in` or `for-of`. eslint: [`no-iterator`](https://eslint.org/docs/rules/no-iterator.html) [`no-restricted-syntax`](https://eslint.org/docs/rules/no-restricted-syntax)\n\n    > Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.\n\n    > Use `map()` / `every()` / `filter()` / `find()` / `findIndex()` / `reduce()` / `some()` / ... to iterate over arrays, and `Object.keys()` / `Object.values()` / `Object.entries()` to produce arrays so you can iterate over objects.\n\n    ```javascript\n    const numbers = [1, 2, 3, 4, 5];\n\n    // bad\n    let sum = 0;\n    for (let num of numbers) {\n      sum += num;\n    }\n    sum === 15;\n\n    // good\n    let sum = 0;\n    numbers.forEach((num) => {\n      sum += num;\n    });\n    sum === 15;\n\n    // best (use the functional force)\n    const sum = numbers.reduce((total, num) => total + num, 0);\n    sum === 15;\n\n    // bad\n    const increasedByOne = [];\n    for (let i = 0; i < numbers.length; i++) {\n      increasedByOne.push(numbers[i] + 1);\n    }\n\n    // good\n    const increasedByOne = [];\n    numbers.forEach((num) => {\n      increasedByOne.push(num + 1);\n    });\n\n    // best (keeping it functional)\n    const increasedByOne = numbers.map((num) => num + 1);\n    ```\n\n  <a name=\"generators--nope\"></a><a name=\"11.2\"></a>\n  - [11.2](#generators--nope) Don\u2019t use generators for now.\n\n    > Why? They don\u2019t transpile well to ES5.\n\n  <a name=\"generators--spacing\"></a>\n  - [11.3](#generators--spacing) If you must use generators, or if you disregard [our advice](#generators--nope), make sure their function signature is spaced properly. eslint: [`generator-star-spacing`](https://eslint.org/docs/rules/generator-star-spacing)\n\n    > Why? `function` and `*` are part of the same conceptual keyword - `*` is not a modifier for `function`, `function*` is a unique construct, different from `function`.\n\n    ```javascript\n    // bad\n    function * foo() {\n      // ...\n    }\n\n    // bad\n    const bar = function * () {\n      // ...\n    };\n\n    // bad\n    const baz = function *() {\n      // ...\n    };\n\n    // bad\n    const quux = function*() {\n      // ...\n    };\n\n    // bad\n    function*foo() {\n      // ...\n    }\n\n    // bad\n    function *foo() {\n      // ...\n    }\n\n    // very bad\n    function\n    *\n    foo() {\n      // ...\n    }\n\n    // very bad\n    const wat = function\n    *\n    () {\n      // ...\n    };\n\n    // good\n    function* foo() {\n      // ...\n    }\n\n    // good\n    const foo = function* () {\n      // ...\n    };\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Properties\n\n  <a name=\"properties--dot\"></a><a name=\"12.1\"></a>\n  - [12.1](#properties--dot) Use dot notation when accessing properties. eslint: [`dot-notation`](https://eslint.org/docs/rules/dot-notation.html)\n\n    ```javascript\n    const luke = {\n      jedi: true,\n      age: 28,\n    };\n\n    // bad\n    const isJedi = luke['jedi'];\n\n    // good\n    const isJedi = luke.jedi;\n    ```\n\n  <a name=\"properties--bracket\"></a><a name=\"12.2\"></a>\n  - [12.2](#properties--bracket) Use bracket notation `[]` when accessing properties with a variable.\n\n    ```javascript\n    const luke = {\n      jedi: true,\n      age: 28,\n    };\n\n    function getProp(prop) {\n      return luke[prop];\n    }\n\n    const isJedi = getProp('jedi');\n    ```\n\n  <a name=\"es2016-properties--exponentiation-operator\"></a>\n  - [12.3](#es2016-properties--exponentiation-operator) Use exponentiation operator `**` when calculating exponentiations. eslint: [`no-restricted-properties`](https://eslint.org/docs/rules/no-restricted-properties).\n\n    ```javascript\n    // bad\n    const binary = Math.pow(2, 10);\n\n    // good\n    const binary = 2 ** 10;\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Variables\n\n  <a name=\"variables--const\"></a><a name=\"13.1\"></a>\n  - [13.1](#variables--const) Always use `const` or `let` to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: [`no-undef`](https://eslint.org/docs/rules/no-undef) [`prefer-const`](https://eslint.org/docs/rules/prefer-const)\n\n    ```javascript\n    // bad\n    superPower = new SuperPower();\n\n    // good\n    const superPower = new SuperPower();\n    ```\n\n  <a name=\"variables--one-const\"></a><a name=\"13.2\"></a>\n  - [13.2](#variables--one-const) Use one `const` or `let` declaration per variable or assignment. eslint: [`one-var`](https://eslint.org/docs/rules/one-var.html)\n\n    > Why? It\u2019s easier to add new variable declarations this way, and you never have to worry about swapping out a `;` for a `,` or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.\n\n    ```javascript\n    // bad\n    const items = getItems(),\n        goSportsTeam = true,\n        dragonball = 'z';\n\n    // bad\n    // (compare to above, and try to spot the mistake)\n    const items = getItems(),\n        goSportsTeam = true;\n        dragonball = 'z';\n\n    // good\n    const items = getItems();\n    const goSportsTeam = true;\n    const dragonball = 'z';\n    ```\n\n  <a name=\"variables--const-let-group\"></a><a name=\"13.3\"></a>\n  - [13.3](#variables--const-let-group) Group all your `const`s and then group all your `let`s.\n\n    > Why? This is helpful when later on you might need to assign a variable depending on one of the previous assigned variables.\n\n    ```javascript\n    // bad\n    let i, len, dragonball,\n        items = getItems(),\n        goSportsTeam = true;\n\n    // bad\n    let i;\n    const items = getItems();\n    let dragonball;\n    const goSportsTeam = true;\n    let len;\n\n    // good\n    const goSportsTeam = true;\n    const items = getItems();\n    let dragonball;\n    let i;\n    let length;\n    ```\n\n  <a name=\"variables--define-where-used\"></a><a name=\"13.4\"></a>\n  - [13.4](#variables--define-where-used) Assign variables where you need them, but place them in a reasonable place.\n\n    > Why? `let` and `const` are block scoped and not function scoped.\n\n    ```javascript\n    // bad - unnecessary function call\n    function checkName(hasName) {\n      const name = getName();\n\n      if (hasName === 'test') {\n        return false;\n      }\n\n      if (name === 'test') {\n        this.setName('');\n        return false;\n      }\n\n      return name;\n    }\n\n    // good\n    function checkName(hasName) {\n      if (hasName === 'test') {\n        return false;\n      }\n\n      const name = getName();\n\n      if (name === 'test') {\n        this.setName('');\n        return false;\n      }\n\n      return name;\n    }\n    ```\n\n  <a name=\"variables--no-chain-assignment\"></a><a name=\"13.5\"></a>\n  - [13.5](#variables--no-chain-assignment) Don\u2019t chain variable assignments. eslint: [`no-multi-assign`](https://eslint.org/docs/rules/no-multi-assign)\n\n    > Why? Chaining variable assignments creates implicit global variables.\n\n    ```javascript\n    // bad\n    (function example() {\n      // JavaScript interprets this as\n      // let a = ( b = ( c = 1 ) );\n      // The let keyword only applies to variable a; variables b and c become\n      // global variables.\n      let a = b = c = 1;\n    }());\n\n    console.log(a); // throws ReferenceError\n    console.log(b); // 1\n    console.log(c); // 1\n\n    // good\n    (function example() {\n      let a = 1;\n      let b = a;\n      let c = a;\n    }());\n\n    console.log(a); // throws ReferenceError\n    console.log(b); // throws ReferenceError\n    console.log(c); // throws ReferenceError\n\n    // the same applies for `const`\n    ```\n\n  <a name=\"variables--unary-increment-decrement\"></a><a name=\"13.6\"></a>\n  - [13.6](#variables--unary-increment-decrement) Avoid using unary increments and decrements (`++`, `--`). eslint [`no-plusplus`](https://eslint.org/docs/rules/no-plusplus)\n\n    > Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like `num += 1` instead of `num++` or `num ++`. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.\n\n    ```javascript\n    // bad\n\n    const array = [1, 2, 3];\n    let num = 1;\n    num++;\n    --num;\n\n    let sum = 0;\n    let truthyCount = 0;\n    for (let i = 0; i < array.length; i++) {\n      let value = array[i];\n      sum += value;\n      if (value) {\n        truthyCount++;\n      }\n    }\n\n    // good\n\n    const array = [1, 2, 3];\n    let num = 1;\n    num += 1;\n    num -= 1;\n\n    const sum = array.reduce((a, b) => a + b, 0);\n    const truthyCount = array.filter(Boolean).length;\n    ```\n\n<a name=\"variables--linebreak\"></a>\n  - [13.7](#variables--linebreak) Avoid linebreaks before or after `=` in an assignment. If your assignment violates [`max-len`](https://eslint.org/docs/rules/max-len.html), surround the value in parens. eslint [`operator-linebreak`](https://eslint.org/docs/rules/operator-linebreak.html).\n\n    > Why? Linebreaks surrounding `=` can obfuscate the value of an assignment.\n\n    ```javascript\n    // bad\n    const foo =\n      superLongLongLongLongLongLongLongLongFunctionName();\n\n    // bad\n    const foo\n      = 'superLongLongLongLongLongLongLongLongString';\n\n    // good\n    const foo = (\n      superLongLongLongLongLongLongLongLongFunctionName()\n    );\n\n    // good\n    const foo = 'superLongLongLongLongLongLongLongLongString';\n    ```\n\n<a name=\"variables--no-unused-vars\"></a>\n  - [13.8](#variables--no-unused-vars) Disallow unused variables. eslint: [`no-unused-vars`](https://eslint.org/docs/rules/no-unused-vars)\n\n    > Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.\n\n    ```javascript\n    // bad\n\n    var some_unused_var = 42;\n\n    // Write-only variables are not considered as used.\n    var y = 10;\n    y = 5;\n\n    // A read for a modification of itself is not considered as used.\n    var z = 0;\n    z = z + 1;\n\n    // Unused function arguments.\n    function getX(x, y) {\n        return x;\n    }\n\n    // good\n\n    function getXPlusY(x, y) {\n      return x + y;\n    }\n\n    var x = 1;\n    var y = a + 2;\n\n    alert(getXPlusY(x, y));\n\n    // 'type' is ignored even if unused because it has a rest property sibling.\n    // This is a form of extracting an object that omits the specified keys.\n    var { type, ...coords } = data;\n    // 'coords' is now the 'data' object without its 'type' property.\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Hoisting\n\n  <a name=\"hoisting--about\"></a><a name=\"14.1\"></a>\n  - [14.1](#hoisting--about) `var` declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. `const` and `let` declarations are blessed with a new concept called [Temporal Dead Zones (TDZ)](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone). It\u2019s important to know why [typeof is no longer safe](http://es-discourse.com/t/why-typeof-is-no-longer-safe/15).\n\n    ```javascript\n    // we know this wouldn\u2019t work (assuming there\n    // is no notDefined global variable)\n    function example() {\n      console.log(notDefined); // => throws a ReferenceError\n    }\n\n    // creating a variable declaration after you\n    // reference the variable will work due to\n    // variable hoisting. Note: the assignment\n    // value of `true` is not hoisted.\n    function example() {\n      console.log(declaredButNotAssigned); // => undefined\n      var declaredButNotAssigned = true;\n    }\n\n    // the interpreter is hoisting the variable\n    // declaration to the top of the scope,\n    // which means our example could be rewritten as:\n    function example() {\n      let declaredButNotAssigned;\n      console.log(declaredButNotAssigned); // => undefined\n      declaredButNotAssigned = true;\n    }\n\n    // using const and let\n    function example() {\n      console.log(declaredButNotAssigned); // => throws a ReferenceError\n      console.log(typeof declaredButNotAssigned); // => throws a ReferenceError\n      const declaredButNotAssigned = true;\n    }\n    ```\n\n  <a name=\"hoisting--anon-expressions\"></a><a name=\"14.2\"></a>\n  - [14.2](#hoisting--anon-expressions) Anonymous function expressions hoist their variable name, but not the function assignment.\n\n    ```javascript\n    function example() {\n      console.log(anonymous); // => undefined\n\n      anonymous(); // => TypeError anonymous is not a function\n\n      var anonymous = function () {\n        console.log('anonymous function expression');\n      };\n    }\n    ```\n\n  <a name=\"hoisting--named-expresions\"></a><a name=\"hoisting--named-expressions\"></a><a name=\"14.3\"></a>\n  - [14.3](#hoisting--named-expressions) Named function expressions hoist the variable name, not the function name or the function body.\n\n    ```javascript\n    function example() {\n      console.log(named); // => undefined\n\n      named(); // => TypeError named is not a function\n\n      superPower(); // => ReferenceError superPower is not defined\n\n      var named = function superPower() {\n        console.log('Flying');\n      };\n    }\n\n    // the same is true when the function name\n    // is the same as the variable name.\n    function example() {\n      console.log(named); // => undefined\n\n      named(); // => TypeError named is not a function\n\n      var named = function named() {\n        console.log('named');\n      };\n    }\n    ```\n\n  <a name=\"hoisting--declarations\"></a><a name=\"14.4\"></a>\n  - [14.4](#hoisting--declarations) Function declarations hoist their name and the function body.\n\n    ```javascript\n    function example() {\n      superPower(); // => Flying\n\n      function superPower() {\n        console.log('Flying');\n      }\n    }\n    ```\n\n  - For more information refer to [JavaScript Scoping & Hoisting](http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/) by [Ben Cherry](http://www.adequatelygood.com/).\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Comparison Operators & Equality\n\n  <a name=\"comparison--eqeqeq\"></a><a name=\"15.1\"></a>\n  - [15.1](#comparison--eqeqeq) Use `===` and `!==` over `==` and `!=`. eslint: [`eqeqeq`](https://eslint.org/docs/rules/eqeqeq.html)\n\n  <a name=\"comparison--if\"></a><a name=\"15.2\"></a>\n  - [15.2](#comparison--if) Conditional statements such as the `if` statement evaluate their expression using coercion with the `ToBoolean` abstract method and always follow these simple rules:\n\n    - **Objects** evaluate to **true**\n    - **Undefined** evaluates to **false**\n    - **Null** evaluates to **false**\n    - **Booleans** evaluate to **the value of the boolean**\n    - **Numbers** evaluate to **false** if **+0, -0, or NaN**, otherwise **true**\n    - **Strings** evaluate to **false** if an empty string `''`, otherwise **true**\n\n    ```javascript\n    if ([0] && []) {\n      // true\n      // an array (even an empty one) is an object, objects will evaluate to true\n    }\n    ```\n\n  <a name=\"comparison--shortcuts\"></a><a name=\"15.3\"></a>\n  - [15.3](#comparison--shortcuts) Use shortcuts for booleans, but explicit comparisons for strings and numbers.\n\n    ```javascript\n    // bad\n    if (isValid === true) {\n      // ...\n    }\n\n    // good\n    if (isValid) {\n      // ...\n    }\n\n    // bad\n    if (name) {\n      // ...\n    }\n\n    // good\n    if (name !== '') {\n      // ...\n    }\n\n    // bad\n    if (collection.length) {\n      // ...\n    }\n\n    // good\n    if (collection.length > 0) {\n      // ...\n    }\n    ```\n\n  <a name=\"comparison--moreinfo\"></a><a name=\"15.4\"></a>\n  - [15.4](#comparison--moreinfo) For more information see [Truth Equality and JavaScript](https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108) by Angus Croll.\n\n  <a name=\"comparison--switch-blocks\"></a><a name=\"15.5\"></a>\n  - [15.5](#comparison--switch-blocks) Use braces to create blocks in `case` and `default` clauses that contain lexical declarations (e.g. `let`, `const`, `function`, and `class`). eslint: [`no-case-declarations`](https://eslint.org/docs/rules/no-case-declarations.html)\n\n    > Why? Lexical declarations are visible in the entire `switch` block but only get initialized when assigned, which only happens when its `case` is reached. This causes problems when multiple `case` clauses attempt to define the same thing.\n\n    ```javascript\n    // bad\n    switch (foo) {\n      case 1:\n        let x = 1;\n        break;\n      case 2:\n        const y = 2;\n        break;\n      case 3:\n        function f() {\n          // ...\n        }\n        break;\n      default:\n        class C {}\n    }\n\n    // good\n    switch (foo) {\n      case 1: {\n        let x = 1;\n        break;\n      }\n      case 2: {\n        const y = 2;\n        break;\n      }\n      case 3: {\n        function f() {\n          // ...\n        }\n        break;\n      }\n      case 4:\n        bar();\n        break;\n      default: {\n        class C {}\n      }\n    }\n    ```\n\n  <a name=\"comparison--nested-ternaries\"></a><a name=\"15.6\"></a>\n  - [15.6](#comparison--nested-ternaries) Ternaries should not be nested and generally be single line expressions. eslint: [`no-nested-ternary`](https://eslint.org/docs/rules/no-nested-ternary.html)\n\n    ```javascript\n    // bad\n    const foo = maybe1 > maybe2\n      ? \"bar\"\n      : value1 > value2 ? \"baz\" : null;\n\n    // split into 2 separated ternary expressions\n    const maybeNull = value1 > value2 ? 'baz' : null;\n\n    // better\n    const foo = maybe1 > maybe2\n      ? 'bar'\n      : maybeNull;\n\n    // best\n    const foo = maybe1 > maybe2 ? 'bar' : maybeNull;\n    ```\n\n  <a name=\"comparison--unneeded-ternary\"></a><a name=\"15.7\"></a>\n  - [15.7](#comparison--unneeded-ternary) Avoid unneeded ternary statements. eslint: [`no-unneeded-ternary`](https://eslint.org/docs/rules/no-unneeded-ternary.html)\n\n    ```javascript\n    // bad\n    const foo = a ? a : b;\n    const bar = c ? true : false;\n    const baz = c ? false : true;\n\n    // good\n    const foo = a || b;\n    const bar = !!c;\n    const baz = !c;\n    ```\n\n  <a name=\"comparison--no-mixed-operators\"></a>\n  - [15.8](#comparison--no-mixed-operators) When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: `+`, `-`, and `**` since their precedence is broadly understood. We recommend enclosing `/` and `*` in parentheses because their precedence can be ambiguous when they are mixed.\n  eslint: [`no-mixed-operators`](https://eslint.org/docs/rules/no-mixed-operators.html)\n\n    > Why? This improves readability and clarifies the developer\u2019s intention.\n\n    ```javascript\n    // bad\n    const foo = a && b < 0 || c > 0 || d + 1 === 0;\n\n    // bad\n    const bar = a ** b - 5 % d;\n\n    // bad\n    // one may be confused into thinking (a || b) && c\n    if (a || b && c) {\n      return d;\n    }\n\n    // bad\n    const bar = a + b / c * d;\n\n    // good\n    const foo = (a && b < 0) || c > 0 || (d + 1 === 0);\n\n    // good\n    const bar = a ** b - (5 % d);\n\n    // good\n    if (a || (b && c)) {\n      return d;\n    }\n\n    // good\n    const bar = a + (b / c) * d;\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Blocks\n\n  <a name=\"blocks--braces\"></a><a name=\"16.1\"></a>\n  - [16.1](#blocks--braces) Use braces with all multiline blocks. eslint: [`nonblock-statement-body-position`](https://eslint.org/docs/rules/nonblock-statement-body-position)\n\n    ```javascript\n    // bad\n    if (test)\n      return false;\n\n    // good\n    if (test) return false;\n\n    // good\n    if (test) {\n      return false;\n    }\n\n    // bad\n    function foo() { return false; }\n\n    // good\n    function bar() {\n      return false;\n    }\n    ```\n\n  <a name=\"blocks--cuddled-elses\"></a><a name=\"16.2\"></a>\n  - [16.2](#blocks--cuddled-elses) If you\u2019re using multiline blocks with `if` and `else`, put `else` on the same line as your `if` block\u2019s closing brace. eslint: [`brace-style`](https://eslint.org/docs/rules/brace-style.html)\n\n    ```javascript\n    // bad\n    if (test) {\n      thing1();\n      thing2();\n    }\n    else {\n      thing3();\n    }\n\n    // good\n    if (test) {\n      thing1();\n      thing2();\n    } else {\n      thing3();\n    }\n    ```\n\n  <a name=\"blocks--no-else-return\"></a><a name=\"16.3\"></a>\n  - [16.3](#blocks--no-else-return) If an `if` block always executes a `return` statement, the subsequent `else` block is unnecessary. A `return` in an `else if` block following an `if` block that contains a `return` can be separated into multiple `if` blocks. eslint: [`no-else-return`](https://eslint.org/docs/rules/no-else-return)\n\n    ```javascript\n    // bad\n    function foo() {\n      if (x) {\n        return x;\n      } else {\n        return y;\n      }\n    }\n\n    // bad\n    function cats() {\n      if (x) {\n        return x;\n      } else if (y) {\n        return y;\n      }\n    }\n\n    // bad\n    function dogs() {\n      if (x) {\n        return x;\n      } else {\n        if (y) {\n          return y;\n        }\n      }\n    }\n\n    // good\n    function foo() {\n      if (x) {\n        return x;\n      }\n\n      return y;\n    }\n\n    // good\n    function cats() {\n      if (x) {\n        return x;\n      }\n\n      if (y) {\n        return y;\n      }\n    }\n\n    // good\n    function dogs(x) {\n      if (x) {\n        if (z) {\n          return y;\n        }\n      } else {\n        return z;\n      }\n    }\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Control Statements\n\n  <a name=\"control-statements\"></a>\n  - [17.1](#control-statements) In case your control statement (`if`, `while` etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.\n\n    > Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.\n\n    ```javascript\n    // bad\n    if ((foo === 123 || bar === 'abc') && doesItLookGoodWhenItBecomesThatLong() && isThisReallyHappening()) {\n      thing1();\n    }\n\n    // bad\n    if (foo === 123 &&\n      bar === 'abc') {\n      thing1();\n    }\n\n    // bad\n    if (foo === 123\n      && bar === 'abc') {\n      thing1();\n    }\n\n    // bad\n    if (\n      foo === 123 &&\n      bar === 'abc'\n    ) {\n      thing1();\n    }\n\n    // good\n    if (\n      foo === 123\n      && bar === 'abc'\n    ) {\n      thing1();\n    }\n\n    // good\n    if (\n      (foo === 123 || bar === 'abc')\n      && doesItLookGoodWhenItBecomesThatLong()\n      && isThisReallyHappening()\n    ) {\n      thing1();\n    }\n\n    // good\n    if (foo === 123 && bar === 'abc') {\n      thing1();\n    }\n    ```\n\n  <a name=\"control-statement--value-selection\"></a><a name=\"control-statements--value-selection\"></a>\n  - [17.2](#control-statements--value-selection) Don't use selection operators in place of control statements.\n\n    ```javascript\n    // bad\n    !isRunning && startRunning();\n\n    // good\n    if (!isRunning) {\n      startRunning();\n    }\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Comments\n\n  <a name=\"comments--multiline\"></a><a name=\"17.1\"></a>\n  - [18.1](#comments--multiline) Use `/** ... */` for multiline comments.\n\n    ```javascript\n    // bad\n    // make() returns a new element\n    // based on the passed in tag name\n    //\n    // @param {String} tag\n    // @return {Element} element\n    function make(tag) {\n\n      // ...\n\n      return element;\n    }\n\n    // good\n    /**\n     * make() returns a new element\n     * based on the passed-in tag name\n     */\n    function make(tag) {\n\n      // ...\n\n      return element;\n    }\n    ```\n\n  <a name=\"comments--singleline\"></a><a name=\"17.2\"></a>\n  - [18.2](#comments--singleline) Use `//` for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it\u2019s on the first line of a block.\n\n    ```javascript\n    // bad\n    const active = true;  // is current tab\n\n    // good\n    // is current tab\n    const active = true;\n\n    // bad\n    function getType() {\n      console.log('fetching type...');\n      // set the default type to 'no type'\n      const type = this.type || 'no type';\n\n      return type;\n    }\n\n    // good\n    function getType() {\n      console.log('fetching type...');\n\n      // set the default type to 'no type'\n      const type = this.type || 'no type';\n\n      return type;\n    }\n\n    // also good\n    function getType() {\n      // set the default type to 'no type'\n      const type = this.type || 'no type';\n\n      return type;\n    }\n    ```\n\n  <a name=\"comments--spaces\"></a>\n  - [18.3](#comments--spaces) Start all comments with a space to make it easier to read. eslint: [`spaced-comment`](https://eslint.org/docs/rules/spaced-comment)\n\n    ```javascript\n    // bad\n    //is current tab\n    const active = true;\n\n    // good\n    // is current tab\n    const active = true;\n\n    // bad\n    /**\n     *make() returns a new element\n     *based on the passed-in tag name\n     */\n    function make(tag) {\n\n      // ...\n\n      return element;\n    }\n\n    // good\n    /**\n     * make() returns a new element\n     * based on the passed-in tag name\n     */\n    function make(tag) {\n\n      // ...\n\n      return element;\n    }\n    ```\n\n  <a name=\"comments--actionitems\"></a><a name=\"17.3\"></a>\n  - [18.4](#comments--actionitems) Prefixing your comments with `FIXME` or `TODO` helps other developers quickly understand if you\u2019re pointing out a problem that needs to be revisited, or if you\u2019re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are `FIXME: -- need to figure this out` or `TODO: -- need to implement`.\n\n  <a name=\"comments--fixme\"></a><a name=\"17.4\"></a>\n  - [18.5](#comments--fixme) Use `// FIXME:` to annotate problems.\n\n    ```javascript\n    class Calculator extends Abacus {\n      constructor() {\n        super();\n\n        // FIXME: shouldn\u2019t use a global here\n        total = 0;\n      }\n    }\n    ```\n\n  <a name=\"comments--todo\"></a><a name=\"17.5\"></a>\n  - [18.6](#comments--todo) Use `// TODO:` to annotate solutions to problems.\n\n    ```javascript\n    class Calculator extends Abacus {\n      constructor() {\n        super();\n\n        // TODO: total should be configurable by an options param\n        this.total = 0;\n      }\n    }\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Whitespace\n\n  <a name=\"whitespace--spaces\"></a><a name=\"18.1\"></a>\n  - [19.1](#whitespace--spaces) Use soft tabs (space character) set to 2 spaces. eslint: [`indent`](https://eslint.org/docs/rules/indent.html)\n\n    ```javascript\n    // bad\n    function foo() {\n    \u2219\u2219\u2219\u2219let name;\n    }\n\n    // bad\n    function bar() {\n    \u2219let name;\n    }\n\n    // good\n    function baz() {\n    \u2219\u2219let name;\n    }\n    ```\n\n  <a name=\"whitespace--before-blocks\"></a><a name=\"18.2\"></a>\n  - [19.2](#whitespace--before-blocks) Place 1 space before the leading brace. eslint: [`space-before-blocks`](https://eslint.org/docs/rules/space-before-blocks.html)\n\n    ```javascript\n    // bad\n    function test(){\n      console.log('test');\n    }\n\n    // good\n    function test() {\n      console.log('test');\n    }\n\n    // bad\n    dog.set('attr',{\n      age: '1 year',\n      breed: 'Bernese Mountain Dog',\n    });\n\n    // good\n    dog.set('attr', {\n      age: '1 year',\n      breed: 'Bernese Mountain Dog',\n    });\n    ```\n\n  <a name=\"whitespace--around-keywords\"></a><a name=\"18.3\"></a>\n  - [19.3](#whitespace--around-keywords) Place 1 space before the opening parenthesis in control statements (`if`, `while` etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: [`keyword-spacing`](https://eslint.org/docs/rules/keyword-spacing.html)\n\n    ```javascript\n    // bad\n    if(isJedi) {\n      fight ();\n    }\n\n    // good\n    if (isJedi) {\n      fight();\n    }\n\n    // bad\n    function fight () {\n      console.log ('Swooosh!');\n    }\n\n    // good\n    function fight() {\n      console.log('Swooosh!');\n    }\n    ```\n\n  <a name=\"whitespace--infix-ops\"></a><a name=\"18.4\"></a>\n  - [19.4](#whitespace--infix-ops) Set off operators with spaces. eslint: [`space-infix-ops`](https://eslint.org/docs/rules/space-infix-ops.html)\n\n    ```javascript\n    // bad\n    const x=y+5;\n\n    // good\n    const x = y + 5;\n    ```\n\n  <a name=\"whitespace--newline-at-end\"></a><a name=\"18.5\"></a>\n  - [19.5](#whitespace--newline-at-end) End files with a single newline character. eslint: [`eol-last`](https://github.com/eslint/eslint/blob/master/docs/rules/eol-last.md)\n\n    ```javascript\n    // bad\n    import { es6 } from './AirbnbStyleGuide';\n      // ...\n    export default es6;\n    ```\n\n    ```javascript\n    // bad\n    import { es6 } from './AirbnbStyleGuide';\n      // ...\n    export default es6;\u21b5\n    \u21b5\n    ```\n\n    ```javascript\n    // good\n    import { es6 } from './AirbnbStyleGuide';\n      // ...\n    export default es6;\u21b5\n    ```\n\n  <a name=\"whitespace--chains\"></a><a name=\"18.6\"></a>\n  - [19.6](#whitespace--chains) Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which\n    emphasizes that the line is a method call, not a new statement. eslint: [`newline-per-chained-call`](https://eslint.org/docs/rules/newline-per-chained-call) [`no-whitespace-before-property`](https://eslint.org/docs/rules/no-whitespace-before-property)\n\n    ```javascript\n    // bad\n    $('#items').find('.selected').highlight().end().find('.open').updateCount();\n\n    // bad\n    $('#items').\n      find('.selected').\n        highlight().\n        end().\n      find('.open').\n        updateCount();\n\n    // good\n    $('#items')\n      .find('.selected')\n        .highlight()\n        .end()\n      .find('.open')\n        .updateCount();\n\n    // bad\n    const leds = stage.selectAll('.led').data(data).enter().append('svg:svg').classed('led', true)\n        .attr('width', (radius + margin) * 2).append('svg:g')\n        .attr('transform', `translate(${radius + margin},${radius + margin})`)\n        .call(tron.led);\n\n    // good\n    const leds = stage.selectAll('.led')\n        .data(data)\n      .enter().append('svg:svg')\n        .classed('led', true)\n        .attr('width', (radius + margin) * 2)\n      .append('svg:g')\n        .attr('transform', `translate(${radius + margin},${radius + margin})`)\n        .call(tron.led);\n\n    // good\n    const leds = stage.selectAll('.led').data(data);\n    ```\n\n  <a name=\"whitespace--after-blocks\"></a><a name=\"18.7\"></a>\n  - [19.7](#whitespace--after-blocks) Leave a blank line after blocks and before the next statement.\n\n    ```javascript\n    // bad\n    if (foo) {\n      return bar;\n    }\n    return baz;\n\n    // good\n    if (foo) {\n      return bar;\n    }\n\n    return baz;\n\n    // bad\n    const obj = {\n      foo() {\n      },\n      bar() {\n      },\n    };\n    return obj;\n\n    // good\n    const obj = {\n      foo() {\n      },\n\n      bar() {\n      },\n    };\n\n    return obj;\n\n    // bad\n    const arr = [\n      function foo() {\n      },\n      function bar() {\n      },\n    ];\n    return arr;\n\n    // good\n    const arr = [\n      function foo() {\n      },\n\n      function bar() {\n      },\n    ];\n\n    return arr;\n    ```\n\n  <a name=\"whitespace--padded-blocks\"></a><a name=\"18.8\"></a>\n  - [19.8](#whitespace--padded-blocks) Do not pad your blocks with blank lines. eslint: [`padded-blocks`](https://eslint.org/docs/rules/padded-blocks.html)\n\n    ```javascript\n    // bad\n    function bar() {\n\n      console.log(foo);\n\n    }\n\n    // bad\n    if (baz) {\n\n      console.log(qux);\n    } else {\n      console.log(foo);\n\n    }\n\n    // bad\n    class Foo {\n\n      constructor(bar) {\n        this.bar = bar;\n      }\n    }\n\n    // good\n    function bar() {\n      console.log(foo);\n    }\n\n    // good\n    if (baz) {\n      console.log(qux);\n    } else {\n      console.log(foo);\n    }\n    ```\n\n  <a name=\"whitespace--no-multiple-blanks\"></a>\n  - [19.9](#whitespace--no-multiple-blanks) Do not use multiple blank lines to pad your code. eslint: [`no-multiple-empty-lines`](https://eslint.org/docs/rules/no-multiple-empty-lines)\n\n    <!-- markdownlint-disable MD012 -->\n    ```javascript\n    // bad\n    class Person {\n      constructor(fullName, email, birthday) {\n        this.fullName = fullName;\n\n\n        this.email = email;\n\n\n        this.setAge(birthday);\n      }\n\n\n      setAge(birthday) {\n        const today = new Date();\n\n\n        const age = this.getAge(today, birthday);\n\n\n        this.age = age;\n      }\n\n\n      getAge(today, birthday) {\n        // ..\n      }\n    }\n\n    // good\n    class Person {\n      constructor(fullName, email, birthday) {\n        this.fullName = fullName;\n        this.email = email;\n        this.setAge(birthday);\n      }\n\n      setAge(birthday) {\n        const today = new Date();\n        const age = getAge(today, birthday);\n        this.age = age;\n      }\n\n      getAge(today, birthday) {\n        // ..\n      }\n    }\n    ```\n\n  <a name=\"whitespace--in-parens\"></a><a name=\"18.9\"></a>\n  - [19.10](#whitespace--in-parens) Do not add spaces inside parentheses. eslint: [`space-in-parens`](https://eslint.org/docs/rules/space-in-parens.html)\n\n    ```javascript\n    // bad\n    function bar( foo ) {\n      return foo;\n    }\n\n    // good\n    function bar(foo) {\n      return foo;\n    }\n\n    // bad\n    if ( foo ) {\n      console.log(foo);\n    }\n\n    // good\n    if (foo) {\n      console.log(foo);\n    }\n    ```\n\n  <a name=\"whitespace--in-brackets\"></a><a name=\"18.10\"></a>\n  - [19.11](#whitespace--in-brackets) Do not add spaces inside brackets. eslint: [`array-bracket-spacing`](https://eslint.org/docs/rules/array-bracket-spacing.html)\n\n    ```javascript\n    // bad\n    const foo = [ 1, 2, 3 ];\n    console.log(foo[ 0 ]);\n\n    // good\n    const foo = [1, 2, 3];\n    console.log(foo[0]);\n    ```\n\n  <a name=\"whitespace--in-braces\"></a><a name=\"18.11\"></a>\n  - [19.12](#whitespace--in-braces) Add spaces inside curly braces. eslint: [`object-curly-spacing`](https://eslint.org/docs/rules/object-curly-spacing.html)\n\n    ```javascript\n    // bad\n    const foo = {clark: 'kent'};\n\n    // good\n    const foo = { clark: 'kent' };\n    ```\n\n  <a name=\"whitespace--max-len\"></a><a name=\"18.12\"></a>\n  - [19.13](#whitespace--max-len) Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per [above](#strings--line-length), long strings are exempt from this rule, and should not be broken up. eslint: [`max-len`](https://eslint.org/docs/rules/max-len.html)\n\n    > Why? This ensures readability and maintainability.\n\n    ```javascript\n    // bad\n    const foo = jsonData && jsonData.foo && jsonData.foo.bar && jsonData.foo.bar.baz && jsonData.foo.bar.baz.quux && jsonData.foo.bar.baz.quux.xyzzy;\n\n    // bad\n    $.ajax({ method: 'POST', url: 'https://airbnb.com/', data: { name: 'John' } }).done(() => console.log('Congratulations!')).fail(() => console.log('You have failed this city.'));\n\n    // good\n    const foo = jsonData\n      && jsonData.foo\n      && jsonData.foo.bar\n      && jsonData.foo.bar.baz\n      && jsonData.foo.bar.baz.quux\n      && jsonData.foo.bar.baz.quux.xyzzy;\n\n    // good\n    $.ajax({\n      method: 'POST',\n      url: 'https://airbnb.com/',\n      data: { name: 'John' },\n    })\n      .done(() => console.log('Congratulations!'))\n      .fail(() => console.log('You have failed this city.'));\n    ```\n\n  <a name=\"whitespace--block-spacing\"></a>\n  - [19.14](#whitespace--block-spacing) Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: [`block-spacing`](https://eslint.org/docs/rules/block-spacing)\n\n    ```javascript\n    // bad\n    function foo() {return true;}\n    if (foo) { bar = 0;}\n\n    // good\n    function foo() { return true; }\n    if (foo) { bar = 0; }\n    ```\n\n  <a name=\"whitespace--comma-spacing\"></a>\n  - [19.15](#whitespace--comma-spacing) Avoid spaces before commas and require a space after commas. eslint: [`comma-spacing`](https://eslint.org/docs/rules/comma-spacing)\n\n    ```javascript\n    // bad\n    var foo = 1,bar = 2;\n    var arr = [1 , 2];\n\n    // good\n    var foo = 1, bar = 2;\n    var arr = [1, 2];\n    ```\n\n  <a name=\"whitespace--computed-property-spacing\"></a>\n  - [19.16](#whitespace--computed-property-spacing) Enforce spacing inside of computed property brackets. eslint: [`computed-property-spacing`](https://eslint.org/docs/rules/computed-property-spacing)\n\n    ```javascript\n    // bad\n    obj[foo ]\n    obj[ 'foo']\n    var x = {[ b ]: a}\n    obj[foo[ bar ]]\n\n    // good\n    obj[foo]\n    obj['foo']\n    var x = { [b]: a }\n    obj[foo[bar]]\n    ```\n\n  <a name=\"whitespace--func-call-spacing\"></a>\n  - [19.17](#whitespace--func-call-spacing) Avoid spaces between functions and their invocations. eslint: [`func-call-spacing`](https://eslint.org/docs/rules/func-call-spacing)\n\n    ```javascript\n    // bad\n    func ();\n\n    func\n    ();\n\n    // good\n    func();\n    ```\n\n  <a name=\"whitespace--key-spacing\"></a>\n  - [19.18](#whitespace--key-spacing) Enforce spacing between keys and values in object literal properties. eslint: [`key-spacing`](https://eslint.org/docs/rules/key-spacing)\n\n    ```javascript\n    // bad\n    var obj = { foo : 42 };\n    var obj2 = { foo:42 };\n\n    // good\n    var obj = { foo: 42 };\n    ```\n\n  <a name=\"whitespace--no-trailing-spaces\"></a>\n  - [19.19](#whitespace--no-trailing-spaces) Avoid trailing spaces at the end of lines. eslint: [`no-trailing-spaces`](https://eslint.org/docs/rules/no-trailing-spaces)\n\n  <a name=\"whitespace--no-multiple-empty-lines\"></a>\n  - [19.20](#whitespace--no-multiple-empty-lines) Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: [`no-multiple-empty-lines`](https://eslint.org/docs/rules/no-multiple-empty-lines)\n\n    <!-- markdownlint-disable MD012 -->\n    ```javascript\n    // bad - multiple empty lines\n    var x = 1;\n\n\n    var y = 2;\n\n    // bad - 2+ newlines at end of file\n    var x = 1;\n    var y = 2;\n\n\n    // bad - 1+ newline(s) at beginning of file\n\n    var x = 1;\n    var y = 2;\n\n    // good\n    var x = 1;\n    var y = 2;\n\n    ```\n    <!-- markdownlint-enable MD012 -->\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Commas\n\n  <a name=\"commas--leading-trailing\"></a><a name=\"19.1\"></a>\n  - [20.1](#commas--leading-trailing) Leading commas: **Nope.** eslint: [`comma-style`](https://eslint.org/docs/rules/comma-style.html)\n\n    ```javascript\n    // bad\n    const story = [\n        once\n      , upon\n      , aTime\n    ];\n\n    // good\n    const story = [\n      once,\n      upon,\n      aTime,\n    ];\n\n    // bad\n    const hero = {\n        firstName: 'Ada'\n      , lastName: 'Lovelace'\n      , birthYear: 1815\n      , superPower: 'computers'\n    };\n\n    // good\n    const hero = {\n      firstName: 'Ada',\n      lastName: 'Lovelace',\n      birthYear: 1815,\n      superPower: 'computers',\n    };\n    ```\n\n  <a name=\"commas--dangling\"></a><a name=\"19.2\"></a>\n  - [20.2](#commas--dangling) Additional trailing comma: **Yup.** eslint: [`comma-dangle`](https://eslint.org/docs/rules/comma-dangle.html)\n\n    > Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don\u2019t have to worry about the [trailing comma problem](https://github.com/airbnb/javascript/blob/es5-deprecated/es5/README.md#commas) in legacy browsers.\n\n    ```diff\n    // bad - git diff without trailing comma\n    const hero = {\n         firstName: 'Florence',\n    -    lastName: 'Nightingale'\n    +    lastName: 'Nightingale',\n    +    inventorOf: ['coxcomb chart', 'modern nursing']\n    };\n\n    // good - git diff with trailing comma\n    const hero = {\n         firstName: 'Florence',\n         lastName: 'Nightingale',\n    +    inventorOf: ['coxcomb chart', 'modern nursing'],\n    };\n    ```\n\n    ```javascript\n    // bad\n    const hero = {\n      firstName: 'Dana',\n      lastName: 'Scully'\n    };\n\n    const heroes = [\n      'Batman',\n      'Superman'\n    ];\n\n    // good\n    const hero = {\n      firstName: 'Dana',\n      lastName: 'Scully',\n    };\n\n    const heroes = [\n      'Batman',\n      'Superman',\n    ];\n\n    // bad\n    function createHero(\n      firstName,\n      lastName,\n      inventorOf\n    ) {\n      // does nothing\n    }\n\n    // good\n    function createHero(\n      firstName,\n      lastName,\n      inventorOf,\n    ) {\n      // does nothing\n    }\n\n    // good (note that a comma must not appear after a \"rest\" element)\n    function createHero(\n      firstName,\n      lastName,\n      inventorOf,\n      ...heroArgs\n    ) {\n      // does nothing\n    }\n\n    // bad\n    createHero(\n      firstName,\n      lastName,\n      inventorOf\n    );\n\n    // good\n    createHero(\n      firstName,\n      lastName,\n      inventorOf,\n    );\n\n    // good (note that a comma must not appear after a \"rest\" element)\n    createHero(\n      firstName,\n      lastName,\n      inventorOf,\n      ...heroArgs\n    );\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Semicolons\n\n  <a name=\"semicolons--required\"></a><a name=\"20.1\"></a>\n  - [21.1](#semicolons--required) **Yup.** eslint: [`semi`](https://eslint.org/docs/rules/semi.html)\n\n    > Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called [Automatic Semicolon Insertion](https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion) to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.\n\n    ```javascript\n    // bad - raises exception\n    const luke = {}\n    const leia = {}\n    [luke, leia].forEach((jedi) => jedi.father = 'vader')\n\n    // bad - raises exception\n    const reaction = \"No! That\u2019s impossible!\"\n    (async function meanwhileOnTheFalcon() {\n      // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n      // ...\n    }())\n\n    // bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!\n    function foo() {\n      return\n        'search your feelings, you know it to be foo'\n    }\n\n    // good\n    const luke = {};\n    const leia = {};\n    [luke, leia].forEach((jedi) => {\n      jedi.father = 'vader';\n    });\n\n    // good\n    const reaction = \"No! That\u2019s impossible!\";\n    (async function meanwhileOnTheFalcon() {\n      // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n      // ...\n    }());\n\n    // good\n    function foo() {\n      return 'search your feelings, you know it to be foo';\n    }\n    ```\n\n    [Read more](https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214).\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Type Casting & Coercion\n\n  <a name=\"coercion--explicit\"></a><a name=\"21.1\"></a>\n  - [22.1](#coercion--explicit) Perform type coercion at the beginning of the statement.\n\n  <a name=\"coercion--strings\"></a><a name=\"21.2\"></a>\n  - [22.2](#coercion--strings) Strings: eslint: [`no-new-wrappers`](https://eslint.org/docs/rules/no-new-wrappers)\n\n    ```javascript\n    // => this.reviewScore = 9;\n\n    // bad\n    const totalScore = new String(this.reviewScore); // typeof totalScore is \"object\" not \"string\"\n\n    // bad\n    const totalScore = this.reviewScore + ''; // invokes this.reviewScore.valueOf()\n\n    // bad\n    const totalScore = this.reviewScore.toString(); // isn\u2019t guaranteed to return a string\n\n    // good\n    const totalScore = String(this.reviewScore);\n    ```\n\n  <a name=\"coercion--numbers\"></a><a name=\"21.3\"></a>\n  - [22.3](#coercion--numbers) Numbers: Use `Number` for type casting and `parseInt` always with a radix for parsing strings. eslint: [`radix`](https://eslint.org/docs/rules/radix) [`no-new-wrappers`](https://eslint.org/docs/rules/no-new-wrappers)\n\n    ```javascript\n    const inputValue = '4';\n\n    // bad\n    const val = new Number(inputValue);\n\n    // bad\n    const val = +inputValue;\n\n    // bad\n    const val = inputValue >> 0;\n\n    // bad\n    const val = parseInt(inputValue);\n\n    // good\n    const val = Number(inputValue);\n\n    // good\n    const val = parseInt(inputValue, 10);\n    ```\n\n  <a name=\"coercion--comment-deviations\"></a><a name=\"21.4\"></a>\n  - [22.4](#coercion--comment-deviations) If for whatever reason you are doing something wild and `parseInt` is your bottleneck and need to use Bitshift for [performance reasons](https://jsperf.com/coercion-vs-casting/3), leave a comment explaining why and what you\u2019re doing.\n\n    ```javascript\n    // good\n    /**\n     * parseInt was the reason my code was slow.\n     * Bitshifting the String to coerce it to a\n     * Number made it a lot faster.\n     */\n    const val = inputValue >> 0;\n    ```\n\n  <a name=\"coercion--bitwise\"></a><a name=\"21.5\"></a>\n  - [22.5](#coercion--bitwise) **Note:** Be careful when using bitshift operations. Numbers are represented as [64-bit values](https://es5.github.io/#x4.3.19), but bitshift operations always return a 32-bit integer ([source](https://es5.github.io/#x11.7)). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. [Discussion](https://github.com/airbnb/javascript/issues/109). Largest signed 32-bit Int is 2,147,483,647:\n\n    ```javascript\n    2147483647 >> 0; // => 2147483647\n    2147483648 >> 0; // => -2147483648\n    2147483649 >> 0; // => -2147483647\n    ```\n\n  <a name=\"coercion--booleans\"></a><a name=\"21.6\"></a>\n  - [22.6](#coercion--booleans) Booleans: eslint: [`no-new-wrappers`](https://eslint.org/docs/rules/no-new-wrappers)\n\n    ```javascript\n    const age = 0;\n\n    // bad\n    const hasAge = new Boolean(age);\n\n    // good\n    const hasAge = Boolean(age);\n\n    // best\n    const hasAge = !!age;\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Naming Conventions\n\n  <a name=\"naming--descriptive\"></a><a name=\"22.1\"></a>\n  - [23.1](#naming--descriptive) Avoid single letter names. Be descriptive with your naming. eslint: [`id-length`](https://eslint.org/docs/rules/id-length)\n\n    ```javascript\n    // bad\n    function q() {\n      // ...\n    }\n\n    // good\n    function query() {\n      // ...\n    }\n    ```\n\n  <a name=\"naming--camelCase\"></a><a name=\"22.2\"></a>\n  - [23.2](#naming--camelCase) Use camelCase when naming objects, functions, and instances. eslint: [`camelcase`](https://eslint.org/docs/rules/camelcase.html)\n\n    ```javascript\n    // bad\n    const OBJEcttsssss = {};\n    const this_is_my_object = {};\n    function c() {}\n\n    // good\n    const thisIsMyObject = {};\n    function thisIsMyFunction() {}\n    ```\n\n  <a name=\"naming--PascalCase\"></a><a name=\"22.3\"></a>\n  - [23.3](#naming--PascalCase) Use PascalCase only when naming constructors or classes. eslint: [`new-cap`](https://eslint.org/docs/rules/new-cap.html)\n\n    ```javascript\n    // bad\n    function user(options) {\n      this.name = options.name;\n    }\n\n    const bad = new user({\n      name: 'nope',\n    });\n\n    // good\n    class User {\n      constructor(options) {\n        this.name = options.name;\n      }\n    }\n\n    const good = new User({\n      name: 'yup',\n    });\n    ```\n\n  <a name=\"naming--leading-underscore\"></a><a name=\"22.4\"></a>\n  - [23.4](#naming--leading-underscore) Do not use trailing or leading underscores. eslint: [`no-underscore-dangle`](https://eslint.org/docs/rules/no-underscore-dangle.html)\n\n    > Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean \u201cprivate\u201d, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won\u2019t count as breaking, or that tests aren\u2019t needed. tl;dr: if you want something to be \u201cprivate\u201d, it must not be observably present.\n\n    ```javascript\n    // bad\n    this.__firstName__ = 'Panda';\n    this.firstName_ = 'Panda';\n    this._firstName = 'Panda';\n\n    // good\n    this.firstName = 'Panda';\n\n    // good, in environments where WeakMaps are available\n    // see https://kangax.github.io/compat-table/es6/#test-WeakMap\n    const firstNames = new WeakMap();\n    firstNames.set(this, 'Panda');\n    ```\n\n  <a name=\"naming--self-this\"></a><a name=\"22.5\"></a>\n  - [23.5](#naming--self-this) Don\u2019t save references to `this`. Use arrow functions or [Function#bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n\n    ```javascript\n    // bad\n    function foo() {\n      const self = this;\n      return function () {\n        console.log(self);\n      };\n    }\n\n    // bad\n    function foo() {\n      const that = this;\n      return function () {\n        console.log(that);\n      };\n    }\n\n    // good\n    function foo() {\n      return () => {\n        console.log(this);\n      };\n    }\n    ```\n\n  <a name=\"naming--filename-matches-export\"></a><a name=\"22.6\"></a>\n  - [23.6](#naming--filename-matches-export) A base filename should exactly match the name of its default export.\n\n    ```javascript\n    // file 1 contents\n    class CheckBox {\n      // ...\n    }\n    export default CheckBox;\n\n    // file 2 contents\n    export default function fortyTwo() { return 42; }\n\n    // file 3 contents\n    export default function insideDirectory() {}\n\n    // in some other file\n    // bad\n    import CheckBox from './checkBox'; // PascalCase import/export, camelCase filename\n    import FortyTwo from './FortyTwo'; // PascalCase import/filename, camelCase export\n    import InsideDirectory from './InsideDirectory'; // PascalCase import/filename, camelCase export\n\n    // bad\n    import CheckBox from './check_box'; // PascalCase import/export, snake_case filename\n    import forty_two from './forty_two'; // snake_case import/filename, camelCase export\n    import inside_directory from './inside_directory'; // snake_case import, camelCase export\n    import index from './inside_directory/index'; // requiring the index file explicitly\n    import insideDirectory from './insideDirectory/index'; // requiring the index file explicitly\n\n    // good\n    import CheckBox from './CheckBox'; // PascalCase export/import/filename\n    import fortyTwo from './fortyTwo'; // camelCase export/import/filename\n    import insideDirectory from './insideDirectory'; // camelCase export/import/directory name/implicit \"index\"\n    // ^ supports both insideDirectory.js and insideDirectory/index.js\n    ```\n\n  <a name=\"naming--camelCase-default-export\"></a><a name=\"22.7\"></a>\n  - [23.7](#naming--camelCase-default-export) Use camelCase when you export-default a function. Your filename should be identical to your function\u2019s name.\n\n    ```javascript\n    function makeStyleGuide() {\n      // ...\n    }\n\n    export default makeStyleGuide;\n    ```\n\n  <a name=\"naming--PascalCase-singleton\"></a><a name=\"22.8\"></a>\n  - [23.8](#naming--PascalCase-singleton) Use PascalCase when you export a constructor / class / singleton / function library / bare object.\n\n    ```javascript\n    const AirbnbStyleGuide = {\n      es6: {\n      },\n    };\n\n    export default AirbnbStyleGuide;\n    ```\n\n  <a name=\"naming--Acronyms-and-Initialisms\"></a>\n  - [23.9](#naming--Acronyms-and-Initialisms) Acronyms and initialisms should always be all uppercased, or all lowercased.\n\n    > Why? Names are for readability, not to appease a computer algorithm.\n\n    ```javascript\n    // bad\n    import SmsContainer from './containers/SmsContainer';\n\n    // bad\n    const HttpRequests = [\n      // ...\n    ];\n\n    // good\n    import SMSContainer from './containers/SMSContainer';\n\n    // good\n    const HTTPRequests = [\n      // ...\n    ];\n\n    // also good\n    const httpRequests = [\n      // ...\n    ];\n\n    // best\n    import TextMessageContainer from './containers/TextMessageContainer';\n\n    // best\n    const requests = [\n      // ...\n    ];\n    ```\n\n  <a name=\"naming--uppercase\"></a>\n  - [23.10](#naming--uppercase) You may optionally uppercase a constant only if it (1) is exported, (2) is a `const` (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.\n\n    > Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.\n    - What about all `const` variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.\n    - What about exported objects? - Uppercase at the top level of export (e.g. `EXPORTED_OBJECT.key`) and maintain that all nested properties do not change.\n\n    ```javascript\n    // bad\n    const PRIVATE_VARIABLE = 'should not be unnecessarily uppercased within a file';\n\n    // bad\n    export const THING_TO_BE_CHANGED = 'should obviously not be uppercased';\n\n    // bad\n    export let REASSIGNABLE_VARIABLE = 'do not use let with uppercase variables';\n\n    // ---\n\n    // allowed but does not supply semantic value\n    export const apiKey = 'SOMEKEY';\n\n    // better in most cases\n    export const API_KEY = 'SOMEKEY';\n\n    // ---\n\n    // bad - unnecessarily uppercases key while adding no semantic value\n    export const MAPPING = {\n      KEY: 'value'\n    };\n\n    // good\n    export const MAPPING = {\n      key: 'value'\n    };\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Accessors\n\n  <a name=\"accessors--not-required\"></a><a name=\"23.1\"></a>\n  - [24.1](#accessors--not-required) Accessor functions for properties are not required.\n\n  <a name=\"accessors--no-getters-setters\"></a><a name=\"23.2\"></a>\n  - [24.2](#accessors--no-getters-setters) Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use `getVal()` and `setVal('hello')`.\n\n    ```javascript\n    // bad\n    class Dragon {\n      get age() {\n        // ...\n      }\n\n      set age(value) {\n        // ...\n      }\n    }\n\n    // good\n    class Dragon {\n      getAge() {\n        // ...\n      }\n\n      setAge(value) {\n        // ...\n      }\n    }\n    ```\n\n  <a name=\"accessors--boolean-prefix\"></a><a name=\"23.3\"></a>\n  - [24.3](#accessors--boolean-prefix) If the property/method is a `boolean`, use `isVal()` or `hasVal()`.\n\n    ```javascript\n    // bad\n    if (!dragon.age()) {\n      return false;\n    }\n\n    // good\n    if (!dragon.hasAge()) {\n      return false;\n    }\n    ```\n\n  <a name=\"accessors--consistent\"></a><a name=\"23.4\"></a>\n  - [24.4](#accessors--consistent) It\u2019s okay to create `get()` and `set()` functions, but be consistent.\n\n    ```javascript\n    class Jedi {\n      constructor(options = {}) {\n        const lightsaber = options.lightsaber || 'blue';\n        this.set('lightsaber', lightsaber);\n      }\n\n      set(key, val) {\n        this[key] = val;\n      }\n\n      get(key) {\n        return this[key];\n      }\n    }\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Events\n\n  <a name=\"events--hash\"></a><a name=\"24.1\"></a>\n  - [25.1](#events--hash) When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a \"hash\") instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:\n\n    ```javascript\n    // bad\n    $(this).trigger('listingUpdated', listing.id);\n\n    // ...\n\n    $(this).on('listingUpdated', (e, listingID) => {\n      // do something with listingID\n    });\n    ```\n\n    prefer:\n\n    ```javascript\n    // good\n    $(this).trigger('listingUpdated', { listingID: listing.id });\n\n    // ...\n\n    $(this).on('listingUpdated', (e, data) => {\n      // do something with data.listingID\n    });\n    ```\n\n  **[\u2b06 back to top](#table-of-contents)**\n\n## jQuery\n\n  <a name=\"jquery--dollar-prefix\"></a><a name=\"25.1\"></a>\n  - [26.1](#jquery--dollar-prefix) Prefix jQuery object variables with a `$`.\n\n    ```javascript\n    // bad\n    const sidebar = $('.sidebar');\n\n    // good\n    const $sidebar = $('.sidebar');\n\n    // good\n    const $sidebarBtn = $('.sidebar-btn');\n    ```\n\n  <a name=\"jquery--cache\"></a><a name=\"25.2\"></a>\n  - [26.2](#jquery--cache) Cache jQuery lookups.\n\n    ```javascript\n    // bad\n    function setSidebar() {\n      $('.sidebar').hide();\n\n      // ...\n\n      $('.sidebar').css({\n        'background-color': 'pink',\n      });\n    }\n\n    // good\n    function setSidebar() {\n      const $sidebar = $('.sidebar');\n      $sidebar.hide();\n\n      // ...\n\n      $sidebar.css({\n        'background-color': 'pink',\n      });\n    }\n    ```\n\n  <a name=\"jquery--queries\"></a><a name=\"25.3\"></a>\n  - [26.3](#jquery--queries) For DOM queries use Cascading `$('.sidebar ul')` or parent > child `$('.sidebar > ul')`. [jsPerf](http://jsperf.com/jquery-find-vs-context-sel/16)\n\n  <a name=\"jquery--find\"></a><a name=\"25.4\"></a>\n  - [26.4](#jquery--find) Use `find` with scoped jQuery object queries.\n\n    ```javascript\n    // bad\n    $('ul', '.sidebar').hide();\n\n    // bad\n    $('.sidebar').find('ul').hide();\n\n    // good\n    $('.sidebar ul').hide();\n\n    // good\n    $('.sidebar > ul').hide();\n\n    // good\n    $sidebar.find('ul').hide();\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## ECMAScript 5 Compatibility\n\n  <a name=\"es5-compat--kangax\"></a><a name=\"26.1\"></a>\n  - [27.1](#es5-compat--kangax) Refer to [Kangax](https://twitter.com/kangax/)\u2019s ES5 [compatibility table](https://kangax.github.io/es5-compat-table/).\n\n**[\u2b06 back to top](#table-of-contents)**\n\n<a name=\"ecmascript-6-styles\"></a>\n## ECMAScript 6+ (ES 2015+) Styles\n\n  <a name=\"es6-styles\"></a><a name=\"27.1\"></a>\n  - [28.1](#es6-styles) This is a collection of links to the various ES6+ features.\n\n1. [Arrow Functions](#arrow-functions)\n1. [Classes](#classes--constructors)\n1. [Object Shorthand](#es6-object-shorthand)\n1. [Object Concise](#es6-object-concise)\n1. [Object Computed Properties](#es6-computed-properties)\n1. [Template Strings](#es6-template-literals)\n1. [Destructuring](#destructuring)\n1. [Default Parameters](#es6-default-parameters)\n1. [Rest](#es6-rest)\n1. [Array Spreads](#es6-array-spreads)\n1. [Let and Const](#references)\n1. [Exponentiation Operator](#es2016-properties--exponentiation-operator)\n1. [Iterators and Generators](#iterators-and-generators)\n1. [Modules](#modules)\n\n  <a name=\"tc39-proposals\"></a>\n  - [28.2](#tc39-proposals) Do not use [TC39 proposals](https://github.com/tc39/proposals) that have not reached stage 3.\n\n    > Why? [They are not finalized](https://tc39.github.io/process-document/), and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Standard Library\n\n  The [Standard Library](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects)\n  contains utilities that are functionally broken but remain for legacy reasons.\n\n  <a name=\"standard-library--isnan\"></a>\n  - [29.1](#standard-library--isnan) Use `Number.isNaN` instead of global `isNaN`.\n    eslint: [`no-restricted-globals`](https://eslint.org/docs/rules/no-restricted-globals)\n\n    > Why? The global `isNaN` coerces non-numbers to numbers, returning true for anything that coerces to NaN.\n    > If this behavior is desired, make it explicit.\n\n    ```javascript\n    // bad\n    isNaN('1.2'); // false\n    isNaN('1.2.3'); // true\n\n    // good\n    Number.isNaN('1.2.3'); // false\n    Number.isNaN(Number('1.2.3')); // true\n    ```\n\n  <a name=\"standard-library--isfinite\"></a>\n  - [29.2](#standard-library--isfinite) Use `Number.isFinite` instead of global `isFinite`.\n    eslint: [`no-restricted-globals`](https://eslint.org/docs/rules/no-restricted-globals)\n\n    > Why? The global `isFinite` coerces non-numbers to numbers, returning true for anything that coerces to a finite number.\n    > If this behavior is desired, make it explicit.\n\n    ```javascript\n    // bad\n    isFinite('2e3'); // true\n\n    // good\n    Number.isFinite('2e3'); // false\n    Number.isFinite(parseInt('2e3', 10)); // true\n    ```\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Testing\n\n  <a name=\"testing--yup\"></a><a name=\"28.1\"></a>\n  - [30.1](#testing--yup) **Yup.**\n\n    ```javascript\n    function foo() {\n      return true;\n    }\n    ```\n\n  <a name=\"testing--for-real\"></a><a name=\"28.2\"></a>\n  - [30.2](#testing--for-real) **No, but seriously**:\n    - Whichever testing framework you use, you should be writing tests!\n    - Strive to write many small pure functions, and minimize where mutations occur.\n    - Be cautious about stubs and mocks - they can make your tests more brittle.\n    - We primarily use [`mocha`](https://www.npmjs.com/package/mocha) and [`jest`](https://www.npmjs.com/package/jest) at Airbnb. [`tape`](https://www.npmjs.com/package/tape) is also used occasionally for small, separate modules.\n    - 100% test coverage is a good goal to strive for, even if it\u2019s not always practical to reach it.\n    - Whenever you fix a bug, _write a regression test_. A bug fixed without a regression test is almost certainly going to break again in the future.\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Performance\n\n  - [On Layout & Web Performance](https://www.kellegous.com/j/2013/01/26/layout-performance/)\n  - [String vs Array Concat](https://jsperf.com/string-vs-array-concat/2)\n  - [Try/Catch Cost In a Loop](https://jsperf.com/try-catch-in-loop-cost/12)\n  - [Bang Function](https://jsperf.com/bang-function)\n  - [jQuery Find vs Context, Selector](https://jsperf.com/jquery-find-vs-context-sel/164)\n  - [innerHTML vs textContent for script text](https://jsperf.com/innerhtml-vs-textcontent-for-script-text)\n  - [Long String Concatenation](https://jsperf.com/ya-string-concat/38)\n  - [Are JavaScript functions like `map()`, `reduce()`, and `filter()` optimized for traversing arrays?](https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta)\n  - Loading...\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Resources\n\n**Learning ES6+**\n\n  - [Latest ECMA spec](https://tc39.github.io/ecma262/)\n  - [ExploringJS](http://exploringjs.com/)\n  - [ES6 Compatibility Table](https://kangax.github.io/compat-table/es6/)\n  - [Comprehensive Overview of ES6 Features](http://es6-features.org/)\n\n**Read This**\n\n  - [Standard ECMA-262](http://www.ecma-international.org/ecma-262/6.0/index.html)\n\n**Tools**\n\n  - Code Style Linters\n    - [ESlint](https://eslint.org/) - [Airbnb Style .eslintrc](https://github.com/airbnb/javascript/blob/master/linters/.eslintrc)\n    - [JSHint](http://jshint.com/) - [Airbnb Style .jshintrc](https://github.com/airbnb/javascript/blob/master/linters/.jshintrc)\n  - Neutrino Preset - [@neutrinojs/airbnb](https://neutrinojs.org/packages/airbnb/)\n\n**Other Style Guides**\n\n  - [Google JavaScript Style Guide](https://google.github.io/styleguide/jsguide.html)\n  - [Google JavaScript Style Guide (Old)](https://google.github.io/styleguide/javascriptguide.xml)\n  - [jQuery Core Style Guidelines](https://contribute.jquery.org/style-guide/js/)\n  - [Principles of Writing Consistent, Idiomatic JavaScript](https://github.com/rwaldron/idiomatic.js)\n  - [StandardJS](https://standardjs.com)\n\n**Other Styles**\n\n  - [Naming this in nested functions](https://gist.github.com/cjohansen/4135065) - Christian Johansen\n  - [Conditional Callbacks](https://github.com/airbnb/javascript/issues/52) - Ross Allen\n  - [Popular JavaScript Coding Conventions on GitHub](http://sideeffect.kr/popularconvention/#javascript) - JeongHoon Byun\n  - [Multiple var statements in JavaScript, not superfluous](http://benalman.com/news/2012/05/multiple-var-statements-javascript/) - Ben Alman\n\n**Further Reading**\n\n  - [Understanding JavaScript Closures](https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/) - Angus Croll\n  - [Basic JavaScript for the impatient programmer](http://www.2ality.com/2013/06/basic-javascript.html) - Dr. Axel Rauschmayer\n  - [You Might Not Need jQuery](http://youmightnotneedjquery.com/) - Zack Bloom & Adam Schwartz\n  - [ES6 Features](https://github.com/lukehoban/es6features) - Luke Hoban\n  - [Frontend Guidelines](https://github.com/bendc/frontend-guidelines) - Benjamin De Cock\n\n**Books**\n\n  - [JavaScript: The Good Parts](https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742) - Douglas Crockford\n  - [JavaScript Patterns](https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752) - Stoyan Stefanov\n  - [Pro JavaScript Design Patterns](https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X) - Ross Harmes and Dustin Diaz\n  - [High Performance Web Sites: Essential Knowledge for Front-End Engineers](https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309) - Steve Souders\n  - [Maintainable JavaScript](https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680) - Nicholas C. Zakas\n  - [JavaScript Web Applications](https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X) - Alex MacCaw\n  - [Pro JavaScript Techniques](https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273) - John Resig\n  - [Smashing Node.js: JavaScript Everywhere](https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595) - Guillermo Rauch\n  - [Secrets of the JavaScript Ninja](https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X) - John Resig and Bear Bibeault\n  - [Human JavaScript](http://humanjavascript.com/) - Henrik Joreteg\n  - [Superhero.js](http://superherojs.com/) - Kim Joar Bekkelund, Mads Mob\u00e6k, & Olav Bjorkoy\n  - [JSBooks](http://jsbooks.revolunet.com/) - Julien Bouquillon\n  - [Third Party JavaScript](https://www.manning.com/books/third-party-javascript) - Ben Vinegar and Anton Kovalyov\n  - [Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript](http://amzn.com/0321812182) - David Herman\n  - [Eloquent JavaScript](http://eloquentjavascript.net/) - Marijn Haverbeke\n  - [You Don\u2019t Know JS: ES6 & Beyond](http://shop.oreilly.com/product/0636920033769.do) - Kyle Simpson\n\n**Blogs**\n\n  - [JavaScript Weekly](http://javascriptweekly.com/)\n  - [JavaScript, JavaScript...](https://javascriptweblog.wordpress.com/)\n  - [Bocoup Weblog](https://bocoup.com/weblog)\n  - [Adequately Good](http://www.adequatelygood.com/)\n  - [NCZOnline](https://www.nczonline.net/)\n  - [Perfection Kills](http://perfectionkills.com/)\n  - [Ben Alman](http://benalman.com/)\n  - [Dmitry Baranovskiy](http://dmitry.baranovskiy.com/)\n  - [nettuts](http://code.tutsplus.com/?s=javascript)\n\n**Podcasts**\n\n  - [JavaScript Air](https://javascriptair.com/)\n  - [JavaScript Jabber](https://devchat.tv/js-jabber/)\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## In the Wild\n\n  This is a list of organizations that are using this style guide. Send us a pull request and we'll add you to the list.\n\n  - **123erfasst**: [123erfasst/javascript](https://github.com/123erfasst/javascript)\n  - **3blades**: [3Blades](https://github.com/3blades)\n  - **4Catalyzer**: [4Catalyzer/javascript](https://github.com/4Catalyzer/javascript)\n  - **Aan Zee**: [AanZee/javascript](https://github.com/AanZee/javascript)\n  - **Adult Swim**: [adult-swim/javascript](https://github.com/adult-swim/javascript)\n  - **Airbnb**: [airbnb/javascript](https://github.com/airbnb/javascript)\n  - **AltSchool**: [AltSchool/javascript](https://github.com/AltSchool/javascript)\n  - **Apartmint**: [apartmint/javascript](https://github.com/apartmint/javascript)\n  - **Ascribe**: [ascribe/javascript](https://github.com/ascribe/javascript)\n  - **Avalara**: [avalara/javascript](https://github.com/avalara/javascript)\n  - **Avant**: [avantcredit/javascript](https://github.com/avantcredit/javascript)\n  - **Axept**: [axept/javascript](https://github.com/axept/javascript)\n  - **BashPros**: [BashPros/javascript](https://github.com/BashPros/javascript)\n  - **Billabong**: [billabong/javascript](https://github.com/billabong/javascript)\n  - **Bisk**: [bisk](https://github.com/Bisk/)\n  - **Bonhomme**: [bonhommeparis/javascript](https://github.com/bonhommeparis/javascript)\n  - **Brainshark**: [brainshark/javascript](https://github.com/brainshark/javascript)\n  - **CaseNine**: [CaseNine/javascript](https://github.com/CaseNine/javascript)\n  - **Cerner**: [Cerner](https://github.com/cerner/)\n  - **Chartboost**: [ChartBoost/javascript-style-guide](https://github.com/ChartBoost/javascript-style-guide)\n  - **Coeur d'Alene Tribe**: [www.cdatribe-nsn.gov](https://www.cdatribe-nsn.gov)\n  - **ComparaOnline**: [comparaonline/javascript](https://github.com/comparaonline/javascript-style-guide)\n  - **Compass Learning**: [compasslearning/javascript-style-guide](https://github.com/compasslearning/javascript-style-guide)\n  - **DailyMotion**: [dailymotion/javascript](https://github.com/dailymotion/javascript)\n  - **DoSomething**: [DoSomething/eslint-config](https://github.com/DoSomething/eslint-config)\n  - **Digitpaint** [digitpaint/javascript](https://github.com/digitpaint/javascript)\n  - **Drupal**: [www.drupal.org](https://www.drupal.org/project/drupal)\n  - **Ecosia**: [ecosia/javascript](https://github.com/ecosia/javascript)\n  - **Evernote**: [evernote/javascript-style-guide](https://github.com/evernote/javascript-style-guide)\n  - **Evolution Gaming**: [evolution-gaming/javascript](https://github.com/evolution-gaming/javascript)\n  - **EvozonJs**: [evozonjs/javascript](https://github.com/evozonjs/javascript)\n  - **ExactTarget**: [ExactTarget/javascript](https://github.com/ExactTarget/javascript)\n  - **Expensify** [Expensify/Style-Guide](https://github.com/Expensify/Style-Guide/blob/master/javascript.md)\n  - **Flexberry**: [Flexberry/javascript-style-guide](https://github.com/Flexberry/javascript-style-guide)\n  - **Gawker Media**: [gawkermedia](https://github.com/gawkermedia/)\n  - **General Electric**: [GeneralElectric/javascript](https://github.com/GeneralElectric/javascript)\n  - **Generation Tux**: [GenerationTux/javascript](https://github.com/generationtux/styleguide)\n  - **GoodData**: [gooddata/gdc-js-style](https://github.com/gooddata/gdc-js-style)\n  - **GreenChef**: [greenchef/javascript](https://github.com/greenchef/javascript)\n  - **Grooveshark**: [grooveshark/javascript](https://github.com/grooveshark/javascript)\n  - **Grupo-Abraxas**: [Grupo-Abraxas/javascript](https://github.com/Grupo-Abraxas/javascript)\n  - **Happeo**: [happeo/javascript](https://github.com/happeo/javascript)\n  - **Honey**: [honeyscience/javascript](https://github.com/honeyscience/javascript)\n  - **How About We**: [howaboutwe/javascript](https://github.com/howaboutwe/javascript-style-guide)\n  - **Huballin**: [huballin](https://github.com/huballin/)\n  - **HubSpot**: [HubSpot/javascript](https://github.com/HubSpot/javascript)\n  - **Hyper**: [hyperoslo/javascript-playbook](https://github.com/hyperoslo/javascript-playbook/blob/master/style.md)\n  - **InterCity Group**: [intercitygroup/javascript-style-guide](https://github.com/intercitygroup/javascript-style-guide)\n  - **Jam3**: [Jam3/Javascript-Code-Conventions](https://github.com/Jam3/Javascript-Code-Conventions)\n  - **JeopardyBot**: [kesne/jeopardy-bot](https://github.com/kesne/jeopardy-bot/blob/master/STYLEGUIDE.md)\n  - **JSSolutions**: [JSSolutions/javascript](https://github.com/JSSolutions/javascript)\n  - **Kaplan Komputing**: [kaplankomputing/javascript](https://github.com/kaplankomputing/javascript)\n  - **KickorStick**: [kickorstick](https://github.com/kickorstick/)\n  - **Kinetica Solutions**: [kinetica/javascript](https://github.com/kinetica/Javascript-style-guide)\n  - **LEINWAND**: [LEINWAND/javascript](https://github.com/LEINWAND/javascript)\n  - **Lonely Planet**: [lonelyplanet/javascript](https://github.com/lonelyplanet/javascript)\n  - **M2GEN**: [M2GEN/javascript](https://github.com/M2GEN/javascript)\n  - **Mighty Spring**: [mightyspring/javascript](https://github.com/mightyspring/javascript)\n  - **MinnPost**: [MinnPost/javascript](https://github.com/MinnPost/javascript)\n  - **MitocGroup**: [MitocGroup/javascript](https://github.com/MitocGroup/javascript)\n  - **ModCloth**: [modcloth/javascript](https://github.com/modcloth/javascript)\n  - **Money Advice Service**: [moneyadviceservice/javascript](https://github.com/moneyadviceservice/javascript)\n  - **Muber**: [muber](https://github.com/muber/)\n  - **National Geographic**: [natgeo](https://github.com/natgeo/)\n  - **Nimbl3**: [nimbl3/javascript](https://github.com/nimbl3/javascript)\n  - **NullDev**: [NullDevCo/JavaScript-Styleguide](https://github.com/NullDevCo/JavaScript-Styleguide)\n  - **Nulogy**: [nulogy/javascript](https://github.com/nulogy/javascript)\n  - **Orange Hill Development**: [orangehill/javascript](https://github.com/orangehill/javascript)\n  - **Orion Health**: [orionhealth/javascript](https://github.com/orionhealth/javascript)\n  - **OutBoxSoft**: [OutBoxSoft/javascript](https://github.com/OutBoxSoft/javascript)\n  - **Peerby**: [Peerby/javascript](https://github.com/Peerby/javascript)\n  - **Pier 1**: [Pier1/javascript](https://github.com/pier1/javascript)\n  - **Qotto**: [Qotto/javascript-style-guide](https://github.com/Qotto/javascript-style-guide)\n  - **Razorfish**: [razorfish/javascript-style-guide](https://github.com/razorfish/javascript-style-guide)\n  - **reddit**: [reddit/styleguide/javascript](https://github.com/reddit/styleguide/tree/master/javascript)\n  - **React**: [facebook.github.io/react/contributing/how-to-contribute.html#style-guide](https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide)\n  - **REI**: [reidev/js-style-guide](https://github.com/rei/code-style-guides/)\n  - **Ripple**: [ripple/javascript-style-guide](https://github.com/ripple/javascript-style-guide)\n  - **Sainsbury\u2019s Supermarkets**: [jsainsburyplc](https://github.com/jsainsburyplc)\n  - **SeekingAlpha**: [seekingalpha/javascript-style-guide](https://github.com/seekingalpha/javascript-style-guide)\n  - **Shutterfly**: [shutterfly/javascript](https://github.com/shutterfly/javascript)\n  - **Sourcetoad**: [sourcetoad/javascript](https://github.com/sourcetoad/javascript)\n  - **Springload**: [springload](https://github.com/springload/)\n  - **StratoDem Analytics**: [stratodem/javascript](https://github.com/stratodem/javascript)\n  - **SteelKiwi Development**: [steelkiwi/javascript](https://github.com/steelkiwi/javascript)\n  - **StudentSphere**: [studentsphere/javascript](https://github.com/studentsphere/guide-javascript)\n  - **SwoopApp**: [swoopapp/javascript](https://github.com/swoopapp/javascript)\n  - **SysGarage**: [sysgarage/javascript-style-guide](https://github.com/sysgarage/javascript-style-guide)\n  - **Syzygy Warsaw**: [syzygypl/javascript](https://github.com/syzygypl/javascript)\n  - **Target**: [target/javascript](https://github.com/target/javascript)\n  - **Terra**: [terra](https://github.com/cerner?utf8=%E2%9C%93&q=terra&type=&language=)\n  - **TheLadders**: [TheLadders/javascript](https://github.com/TheLadders/javascript)\n  - **The Nerdery**: [thenerdery/javascript-standards](https://github.com/thenerdery/javascript-standards)\n  - **Tomify**: [tomprats](https://github.com/tomprats)\n  - **Traitify**: [traitify/eslint-config-traitify](https://github.com/traitify/eslint-config-traitify)\n  - **T4R Technology**: [T4R-Technology/javascript](https://github.com/T4R-Technology/javascript)\n  - **UrbanSim**: [urbansim](https://github.com/urbansim/)\n  - **VoxFeed**: [VoxFeed/javascript-style-guide](https://github.com/VoxFeed/javascript-style-guide)\n  - **WeBox Studio**: [weboxstudio/javascript](https://github.com/weboxstudio/javascript)\n  - **Weggo**: [Weggo/javascript](https://github.com/Weggo/javascript)\n  - **Zillow**: [zillow/javascript](https://github.com/zillow/javascript)\n  - **ZocDoc**: [ZocDoc/javascript](https://github.com/ZocDoc/javascript)\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Translation\n\n  This style guide is also available in other languages:\n\n  - ![br](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png) **Brazilian Portuguese**: [armoucar/javascript-style-guide](https://github.com/armoucar/javascript-style-guide)\n  - ![bg](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png) **Bulgarian**: [borislavvv/javascript](https://github.com/borislavvv/javascript)\n  - ![ca](https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png) **Catalan**: [fpmweb/javascript-style-guide](https://github.com/fpmweb/javascript-style-guide)\n  - ![cn](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png) **Chinese (Simplified)**: [lin-123/javascript](https://github.com/lin-123/javascript)\n  - ![tw](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png) **Chinese (Traditional)**: [jigsawye/javascript](https://github.com/jigsawye/javascript)\n  - ![fr](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png) **French**: [nmussy/javascript-style-guide](https://github.com/nmussy/javascript-style-guide)\n  - ![de](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png) **German**: [timofurrer/javascript-style-guide](https://github.com/timofurrer/javascript-style-guide)\n  - ![it](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png) **Italian**: [sinkswim/javascript-style-guide](https://github.com/sinkswim/javascript-style-guide)\n  - ![jp](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png) **Japanese**: [mitsuruog/javascript-style-guide](https://github.com/mitsuruog/javascript-style-guide)\n  - ![kr](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png) **Korean**: [ParkSB/javascript-style-guide](https://github.com/ParkSB/javascript-style-guide)\n  - ![ru](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png) **Russian**: [leonidlebedev/javascript-airbnb](https://github.com/leonidlebedev/javascript-airbnb)\n  - ![es](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png) **Spanish**: [paolocarrasco/javascript-style-guide](https://github.com/paolocarrasco/javascript-style-guide)\n  - ![th](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png) **Thai**: [lvarayut/javascript-style-guide](https://github.com/lvarayut/javascript-style-guide)\n  - ![tr](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png) **Turkish**: [eraycetinay/javascript](https://github.com/eraycetinay/javascript)\n  - ![ua](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png) **Ukrainian**: [ivanzusko/javascript](https://github.com/ivanzusko/javascript)\n  - ![vn](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png) **Vietnam**: [dangkyokhoang/javascript-style-guide](https://github.com/dangkyokhoang/javascript-style-guide)\n\n## The JavaScript Style Guide Guide\n\n  - [Reference](https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide)\n\n## Chat With Us About JavaScript\n\n  - Find us on [gitter](https://gitter.im/airbnb/javascript).\n\n## Contributors\n\n  - [View Contributors](https://github.com/airbnb/javascript/graphs/contributors)\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 Airbnb\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n**[\u2b06 back to top](#table-of-contents)**\n\n## Amendments\n\nWe encourage you to fork this guide and change the rules to fit your team\u2019s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.\n\n# };\n"
 },
 {
  "repo": "dotnet/AspNetCore.Docs",
  "language": "C#",
  "readme_contents": "# ASP.NET Core Docs\n\nThis repository contains the conceptual ASP.NET Core documentation hosted at [docs.microsoft.com/aspnet/core](https://docs.microsoft.com/aspnet/core). See the [Contributing Guide](CONTRIBUTING.md) and the [issues list](https://github.com/dotnet/AspNetCore.Docs/issues) if you would like to help.\n\nAPI documentation changes are made in the [AspNetApiDocs repository](https://github.com/dotnet/AspNetApiDocs) against the triple slash `///` comments.\n\nASP.NET 4.x documentation changes are made in the [dotnet/AspNetDocs repository](https://github.com/dotnet/AspNetDocs).\n"
 },
 {
  "repo": "iluwatar/java-design-patterns",
  "language": "Java",
  "readme_contents": "<!-- the line below needs to be an empty line C: (its because kramdown isnt\n     that smart and dearly wants an empty line before a heading to be able to\n     display it as such, e.g. website) -->\n\n# Design patterns implemented in Java\n\n[![Build status](https://travis-ci.org/iluwatar/java-design-patterns.svg?branch=master)](https://travis-ci.org/iluwatar/java-design-patterns)\n[![License MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/iluwatar/java-design-patterns/master/LICENSE.md)\n[![Join the chat at https://gitter.im/iluwatar/java-design-patterns](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/iluwatar/java-design-patterns?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Sonarcloud Status](https://sonarcloud.io/api/project_badges/measure?project=iluwatar_java-design-patterns&metric=alert_status)](https://sonarcloud.io/dashboard?id=iluwatar_java-design-patterns) \n\n# Introduction\n\nDesign patterns are the best formalized practices a programmer can use to\nsolve common problems when designing an application or system.\n\nDesign patterns can speed up the development process by providing tested, proven\ndevelopment paradigms.\n\nReusing design patterns help prevent subtle issues that cause major\nproblems, and it also improves code readability for coders and architects who\nare familiar with the patterns.\n\n# Getting started\n\nThis site showcases Java Design Patterns. The solutions have been developed by\nexperienced programmers and architects from the open source community. The \npatterns can be browsed by their high level descriptions or by looking at their\nsource code. The source code examples are well commented and can be thought as\nprogramming tutorials how to implement a specific pattern. We use the most\npopular battle-proven open source Java technologies.\n\nBefore you dive into the material, you should be familiar with various\nsoftware design principles.\n\nAll designs should be as simple as possible. You should start with KISS, YAGNI,\nand Do The Simplest Thing That Could Possibly Work principles. Complexity and\npatterns should only be introduced when they are needed for practical\nextensibility.\n\nOnce you are familiar with these concepts you can start drilling down into\npatterns by any of the following approaches\n\n - Using difficulty tags, `Difficulty-Beginner`, `Difficulty-Intermediate` & `Difficulty-Expert`.\n - Using pattern categories, `Creational`, `Behavioral`, and others.\n - Search for a specific pattern. Can't find one? Please report a new pattern [here](https://github.com/iluwatar/java-design-patterns/issues).\n\nHopefully you find the object oriented solutions presented on this site useful\nin your architectures and have as much fun learning them as we had developing them.\n\n# How to contribute\n\nIf you are willing to contribute to the project you will find the relevant information in \nour [developer wiki](https://github.com/iluwatar/java-design-patterns/wiki). We will help \nyou and answer your questions in the [Gitter chatroom](https://gitter.im/iluwatar/java-design-patterns).\n\n# License\n\nThis project is licensed under the terms of the MIT license.\n"
 },
 {
  "repo": "laravel/laravel",
  "language": "PHP",
  "readme_contents": "<p align=\"center\"><img src=\"https://res.cloudinary.com/dtfbvvkyp/image/upload/v1566331377/laravel-logolockup-cmyk-red.svg\" width=\"400\"></p>\n\n<p align=\"center\">\n<a href=\"https://travis-ci.org/laravel/framework\"><img src=\"https://travis-ci.org/laravel/framework.svg\" alt=\"Build Status\"></a>\n<a href=\"https://packagist.org/packages/laravel/framework\"><img src=\"https://poser.pugx.org/laravel/framework/d/total.svg\" alt=\"Total Downloads\"></a>\n<a href=\"https://packagist.org/packages/laravel/framework\"><img src=\"https://poser.pugx.org/laravel/framework/v/stable.svg\" alt=\"Latest Stable Version\"></a>\n<a href=\"https://packagist.org/packages/laravel/framework\"><img src=\"https://poser.pugx.org/laravel/framework/license.svg\" alt=\"License\"></a>\n</p>\n\n## About Laravel\n\nLaravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:\n\n- [Simple, fast routing engine](https://laravel.com/docs/routing).\n- [Powerful dependency injection container](https://laravel.com/docs/container).\n- Multiple back-ends for [session](https://laravel.com/docs/session) and [cache](https://laravel.com/docs/cache) storage.\n- Expressive, intuitive [database ORM](https://laravel.com/docs/eloquent).\n- Database agnostic [schema migrations](https://laravel.com/docs/migrations).\n- [Robust background job processing](https://laravel.com/docs/queues).\n- [Real-time event broadcasting](https://laravel.com/docs/broadcasting).\n\nLaravel is accessible, powerful, and provides tools required for large, robust applications.\n\n## Learning Laravel\n\nLaravel has the most extensive and thorough [documentation](https://laravel.com/docs) and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.\n\nIf you don't feel like reading, [Laracasts](https://laracasts.com) can help. Laracasts contains over 1500 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.\n\n## Laravel Sponsors\n\nWe would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel [Patreon page](https://patreon.com/taylorotwell).\n\n- **[Vehikl](https://vehikl.com/)**\n- **[Tighten Co.](https://tighten.co)**\n- **[Kirschbaum Development Group](https://kirschbaumdevelopment.com)**\n- **[64 Robots](https://64robots.com)**\n- **[Cubet Techno Labs](https://cubettech.com)**\n- **[Cyber-Duck](https://cyber-duck.co.uk)**\n- **[Many](https://www.many.co.uk)**\n- **[Webdock, Fast VPS Hosting](https://www.webdock.io/en)**\n- **[DevSquad](https://devsquad.com)**\n- [UserInsights](https://userinsights.com)\n- [Fragrantica](https://www.fragrantica.com)\n- [SOFTonSOFA](https://softonsofa.com/)\n- [User10](https://user10.com)\n- [Soumettre.fr](https://soumettre.fr/)\n- [CodeBrisk](https://codebrisk.com)\n- [1Forge](https://1forge.com)\n- [TECPRESSO](https://tecpresso.co.jp/)\n- [Runtime Converter](http://runtimeconverter.com/)\n- [WebL'Agence](https://weblagence.com/)\n- [Invoice Ninja](https://www.invoiceninja.com)\n- [iMi digital](https://www.imi-digital.de/)\n- [Earthlink](https://www.earthlink.ro/)\n- [Steadfast Collective](https://steadfastcollective.com/)\n- [We Are The Robots Inc.](https://watr.mx/)\n- [Understand.io](https://www.understand.io/)\n- [Abdel Elrafa](https://abdelelrafa.com)\n- [Hyper Host](https://hyper.host)\n- [Appoly](https://www.appoly.co.uk)\n- [OP.GG](https://op.gg)\n- [\u4e91\u8f6f\u79d1\u6280](http://www.yunruan.ltd/)\n\n## Contributing\n\nThank you for considering contributing to the Laravel framework! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).\n\n## Code of Conduct\n\nIn order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).\n\n## Security Vulnerabilities\n\nIf you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via [taylor@laravel.com](mailto:taylor@laravel.com). All security vulnerabilities will be promptly addressed.\n\n## License\n\nThe Laravel framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).\n"
 },
 {
  "repo": "rails/rails",
  "language": "Ruby",
  "readme_contents": "# Welcome to Rails\n\n## What's Rails?\n\nRails is a web-application framework that includes everything needed to\ncreate database-backed web applications according to the\n[Model-View-Controller (MVC)](https://en.wikipedia.org/wiki/Model-view-controller)\npattern.\n\nUnderstanding the MVC pattern is key to understanding Rails. MVC divides your\napplication into three layers: Model, View, and Controller, each with a specific responsibility.\n\n## Model layer\n\nThe _**Model layer**_ represents the domain model (such as Account, Product,\nPerson, Post, etc.) and encapsulates the business logic specific to\nyour application. In Rails, database-backed model classes are derived from\n`ActiveRecord::Base`. [Active Record](activerecord/README.rdoc) allows you to present the data from\ndatabase rows as objects and embellish these data objects with business logic\nmethods.\nAlthough most Rails models are backed by a database, models can also be ordinary\nRuby classes, or Ruby classes that implement a set of interfaces as provided by\nthe [Active Model](activemodel/README.rdoc) module.\n\n## Controller layer\n\nThe _**Controller layer**_ is responsible for handling incoming HTTP requests and\nproviding a suitable response. Usually, this means returning HTML, but Rails controllers\ncan also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and\nmanipulate models, and render view templates in order to generate the appropriate HTTP response.\nIn Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and\ncontroller classes are derived from `ActionController::Base`. Action Dispatch and Action Controller\nare bundled together in [Action Pack](actionpack/README.rdoc).\n\n## View layer\n\nThe _**View layer**_ is composed of \"templates\" that are responsible for providing\nappropriate representations of your application's resources. Templates can\ncome in a variety of formats, but most view templates are HTML with embedded\nRuby code (ERB files). Views are typically rendered to generate a controller response \nor to generate the body of an email. In Rails, View generation is handled by [Action View](actionview/README.rdoc).\n\n## Frameworks and libraries\n\n[Active Record](activerecord/README.rdoc), [Active Model](activemodel/README.rdoc), [Action Pack](actionpack/README.rdoc), and [Action View](actionview/README.rdoc) can each be used independently outside Rails.\nIn addition to that, Rails also comes with [Action Mailer](actionmailer/README.rdoc), a library\nto generate and send emails; [Action Mailbox](actionmailbox/README.md), a library to receive emails within a Rails application;\n[Active Job](activejob/README.md), a framework for declaring jobs and making them run on a variety of queuing\nbackends; [Action Cable](actioncable/README.md), a framework to\nintegrate WebSockets with a Rails application; [Active Storage](activestorage/README.md), a library to attach cloud\nand local files to Rails applications; [Action Text](actiontext/README.md), a library to handle rich text content;\nand [Active Support](activesupport/README.rdoc), a collection\nof utility classes and standard library extensions that are useful for Rails,\nand may also be used independently outside Rails.\n\n## Getting Started\n\n1. Install Rails at the command prompt if you haven't yet:\n\n        $ gem install rails\n\n2. At the command prompt, create a new Rails application:\n\n        $ rails new myapp\n\n   where \"myapp\" is the application name.\n\n3. Change directory to `myapp` and start the web server:\n\n        $ cd myapp\n        $ bin/rails server\n\n   Run with `--help` or `-h` for options.\n\n4. Go to `http://localhost:3000` and you'll see:\n\"Yay! You\u2019re on Rails!\"\n\n5. Follow the guidelines to start developing your application. You may find\n   the following resources handy:\n    * [Getting Started with Rails](https://guides.rubyonrails.org/getting_started.html)\n    * [Ruby on Rails Guides](https://guides.rubyonrails.org)\n    * [The API Documentation](https://api.rubyonrails.org)\n\n## Contributing\n\n[![Code Triage Badge](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails)\n\nWe encourage you to contribute to Ruby on Rails! Please check out the\n[Contributing to Ruby on Rails guide](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for guidelines about how to proceed. [Join us!](https://contributors.rubyonrails.org)\n\nTrying to report a possible security vulnerability in Rails? Please\ncheck out our [security policy](https://rubyonrails.org/security/) for\nguidelines about how to proceed.\n\nEveryone interacting in Rails and its sub-projects' codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails [code of conduct](https://rubyonrails.org/conduct/).\n\n## Code Status\n\n[![Build Status](https://badge.buildkite.com/ab1152b6a1f6a61d3ea4ec5b3eece8d4c2b830998459c75352.svg?branch=master)](https://buildkite.com/rails/rails)\n\n## License\n\nRuby on Rails is released under the [MIT License](https://opensource.org/licenses/MIT).\n"
 },
 {
  "repo": "BVLC/caffe",
  "language": "C++",
  "readme_contents": "# Caffe\n\n[![Build Status](https://travis-ci.org/BVLC/caffe.svg?branch=master)](https://travis-ci.org/BVLC/caffe)\n[![License](https://img.shields.io/badge/license-BSD-blue.svg)](LICENSE)\n\nCaffe is a deep learning framework made with expression, speed, and modularity in mind.\nIt is developed by Berkeley AI Research ([BAIR](http://bair.berkeley.edu))/The Berkeley Vision and Learning Center (BVLC) and community contributors.\n\nCheck out the [project site](http://caffe.berkeleyvision.org) for all the details like\n\n- [DIY Deep Learning for Vision with Caffe](https://docs.google.com/presentation/d/1UeKXVgRvvxg9OUdh_UiC5G71UMscNPlvArsWER41PsU/edit#slide=id.p)\n- [Tutorial Documentation](http://caffe.berkeleyvision.org/tutorial/)\n- [BAIR reference models](http://caffe.berkeleyvision.org/model_zoo.html) and the [community model zoo](https://github.com/BVLC/caffe/wiki/Model-Zoo)\n- [Installation instructions](http://caffe.berkeleyvision.org/installation.html)\n\nand step-by-step examples.\n\n## Custom distributions\n\n - [Intel Caffe](https://github.com/BVLC/caffe/tree/intel) (Optimized for CPU and support for multi-node), in particular Intel\u00ae Xeon processors.\n- [OpenCL Caffe](https://github.com/BVLC/caffe/tree/opencl) e.g. for AMD or Intel devices.\n- [Windows Caffe](https://github.com/BVLC/caffe/tree/windows)\n\n## Community\n\n[![Join the chat at https://gitter.im/BVLC/caffe](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/BVLC/caffe?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nPlease join the [caffe-users group](https://groups.google.com/forum/#!forum/caffe-users) or [gitter chat](https://gitter.im/BVLC/caffe) to ask questions and talk about methods and models.\nFramework development discussions and thorough bug reports are collected on [Issues](https://github.com/BVLC/caffe/issues).\n\nHappy brewing!\n\n## License and Citation\n\nCaffe is released under the [BSD 2-Clause license](https://github.com/BVLC/caffe/blob/master/LICENSE).\nThe BAIR/BVLC reference models are released for unrestricted use.\n\nPlease cite Caffe in your publications if it helps your research:\n\n    @article{jia2014caffe,\n      Author = {Jia, Yangqing and Shelhamer, Evan and Donahue, Jeff and Karayev, Sergey and Long, Jonathan and Girshick, Ross and Guadarrama, Sergio and Darrell, Trevor},\n      Journal = {arXiv preprint arXiv:1408.5093},\n      Title = {Caffe: Convolutional Architecture for Fast Feature Embedding},\n      Year = {2014}\n    }\n"
 },
 {
  "repo": "keras-team/keras",
  "language": "Python",
  "readme_contents": "\ufeff# Keras: Deep Learning for humans\n\n![Keras logo](https://s3.amazonaws.com/keras.io/img/keras-logo-2018-large-1200.png)\n\n[![Build Status](https://travis-ci.org/keras-team/keras.svg?branch=master)](https://travis-ci.org/keras-team/keras)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://github.com/keras-team/keras/blob/master/LICENSE)\n\n## You have just found Keras.\n\nKeras is a high-level neural networks API, written in Python and capable of running on top of [TensorFlow](https://github.com/tensorflow/tensorflow), [CNTK](https://github.com/Microsoft/cntk), or [Theano](https://github.com/Theano/Theano). It was developed with a focus on enabling fast experimentation. *Being able to go from idea to result with the least possible delay is key to doing good research.*\n\nUse Keras if you need a deep learning library that:\n\n- Allows for easy and fast prototyping (through user friendliness, modularity, and extensibility).\n- Supports both convolutional networks and recurrent networks, as well as combinations of the two.\n- Runs seamlessly on CPU and GPU.\n\nRead the documentation at [Keras.io](https://keras.io).\n\nKeras is compatible with: __Python 2.7-3.6__.\n\n\n------------------\n\n## Multi-backend Keras and tf.keras:\n\n**At this time, we recommend that Keras users who use multi-backend Keras with the TensorFlow backend switch to `tf.keras` in TensorFlow 2.0**. `tf.keras` is better maintained and has better integration with TensorFlow features (eager execution, distribution support and other).\n\nKeras 2.2.5 was the last release of Keras implementing the 2.2.* API. It was the last release to only support TensorFlow 1 (as well as Theano and CNTK).\n\nThe current release is Keras 2.3.0, which makes significant API changes and add support for TensorFlow 2.0. The 2.3.0 release will be the last major release of multi-backend Keras. Multi-backend Keras is superseded by `tf.keras`.\n\nBugs present in multi-backend Keras will only be fixed until April 2020 (as part of minor releases).\n\nFor more information about the future of Keras, see [the Keras meeting notes](http://bit.ly/keras-meeting-notes).\n\n\n------------------\n\n## Guiding principles\n\n- __User friendliness.__ Keras is an API designed for human beings, not machines. It puts user experience front and center. Keras follows best practices for reducing cognitive load: it offers consistent & simple APIs, it minimizes the number of user actions required for common use cases, and it provides clear and actionable feedback upon user error.\n\n- __Modularity.__ A model is understood as a sequence or a graph of standalone, fully configurable modules that can be plugged together with as few restrictions as possible. In particular, neural layers, cost functions, optimizers, initialization schemes, activation functions and regularization schemes are all standalone modules that you can combine to create new models.\n\n- __Easy extensibility.__ New modules are simple to add (as new classes and functions), and existing modules provide ample examples. To be able to easily create new modules allows for total expressiveness, making Keras suitable for advanced research.\n\n- __Work with Python__. No separate models configuration files in a declarative format. Models are described in Python code, which is compact, easier to debug, and allows for ease of extensibility.\n\n\n------------------\n\n\n## Getting started: 30 seconds to Keras\n\nThe core data structure of Keras is a __model__, a way to organize layers. The simplest type of model is the [`Sequential`](https://keras.io/getting-started/sequential-model-guide) model, a linear stack of layers. For more complex architectures, you should use the [Keras functional API](https://keras.io/getting-started/functional-api-guide), which allows to build arbitrary graphs of layers.\n\nHere is the `Sequential` model:\n\n```python\nfrom keras.models import Sequential\n\nmodel = Sequential()\n```\n\nStacking layers is as easy as `.add()`:\n\n```python\nfrom keras.layers import Dense\n\nmodel.add(Dense(units=64, activation='relu', input_dim=100))\nmodel.add(Dense(units=10, activation='softmax'))\n```\n\nOnce your model looks good, configure its learning process with `.compile()`:\n\n```python\nmodel.compile(loss='categorical_crossentropy',\n              optimizer='sgd',\n              metrics=['accuracy'])\n```\n\nIf you need to, you can further configure your optimizer. A core principle of Keras is to make things reasonably simple, while allowing the user to be fully in control when they need to (the ultimate control being the easy extensibility of the source code).\n```python\nmodel.compile(loss=keras.losses.categorical_crossentropy,\n              optimizer=keras.optimizers.SGD(lr=0.01, momentum=0.9, nesterov=True))\n```\n\nYou can now iterate on your training data in batches:\n\n```python\n# x_train and y_train are Numpy arrays --just like in the Scikit-Learn API.\nmodel.fit(x_train, y_train, epochs=5, batch_size=32)\n```\n\nAlternatively, you can feed batches to your model manually:\n\n```python\nmodel.train_on_batch(x_batch, y_batch)\n```\n\nEvaluate your performance in one line:\n\n```python\nloss_and_metrics = model.evaluate(x_test, y_test, batch_size=128)\n```\n\nOr generate predictions on new data:\n\n```python\nclasses = model.predict(x_test, batch_size=128)\n```\n\nBuilding a question answering system, an image classification model, a Neural Turing Machine, or any other model is just as fast. The ideas behind deep learning are simple, so why should their implementation be painful?\n\nFor a more in-depth tutorial about Keras, you can check out:\n\n- [Getting started with the Sequential model](https://keras.io/getting-started/sequential-model-guide)\n- [Getting started with the functional API](https://keras.io/getting-started/functional-api-guide)\n\nIn the [examples folder](https://github.com/keras-team/keras/tree/master/examples) of the repository, you will find more advanced models: question-answering with memory networks, text generation with stacked LSTMs, etc.\n\n\n------------------\n\n\n## Installation\n\nBefore installing Keras, please install one of its backend engines: TensorFlow, Theano, or CNTK. We recommend the TensorFlow backend.\n\n- [TensorFlow installation instructions](https://www.tensorflow.org/install/).\n- [Theano installation instructions](http://deeplearning.net/software/theano/install.html#install).\n- [CNTK installation instructions](https://docs.microsoft.com/en-us/cognitive-toolkit/setup-cntk-on-your-machine).\n\nYou may also consider installing the following **optional dependencies**:\n\n- [cuDNN](https://docs.nvidia.com/deeplearning/sdk/cudnn-install/) (recommended if you plan on running Keras on GPU).\n- HDF5 and [h5py](http://docs.h5py.org/en/latest/build.html) (required if you plan on saving Keras models to disk).\n- [graphviz](https://graphviz.gitlab.io/download/) and [pydot](https://github.com/erocarrera/pydot) (used by [visualization utilities](https://keras.io/visualization/) to plot model graphs).\n\nThen, you can install Keras itself. There are two ways to install Keras:\n\n- **Install Keras from PyPI (recommended):**\n\nNote: These installation steps assume that you are on a Linux or Mac environment.\nIf you are on Windows, you will need to remove `sudo` to run the commands below.\n\n```sh\nsudo pip install keras\n```\n\nIf you are using a virtualenv, you may want to avoid using sudo:\n\n```sh\npip install keras\n```\n\n- **Alternatively: install Keras from the GitHub source:**\n\nFirst, clone Keras using `git`:\n\n```sh\ngit clone https://github.com/keras-team/keras.git\n```\n\n Then, `cd` to the Keras folder and run the install command:\n```sh\ncd keras\nsudo python setup.py install\n```\n\n------------------\n\n\n## Configuring your Keras backend\n\nBy default, Keras will use TensorFlow as its tensor manipulation library. [Follow these instructions](https://keras.io/backend/) to configure the Keras backend.\n\n------------------\n\n\n## Support\n\nYou can ask questions and join the development discussion:\n\n- On the [Keras Google group](https://groups.google.com/forum/#!forum/keras-users).\n- On the [Keras Slack channel](https://kerasteam.slack.com). Use [this link](https://keras-slack-autojoin.herokuapp.com/) to request an invitation to the channel.\n\nYou can also post **bug reports and feature requests** (only) in [GitHub issues](https://github.com/keras-team/keras/issues). Make sure to read [our guidelines](https://github.com/keras-team/keras/blob/master/CONTRIBUTING.md) first.\n\n\n------------------\n\n\n## Why this name, Keras?\n\nKeras (\u03ba\u03ad\u03c1\u03b1\u03c2) means _horn_ in Greek. It is a reference to a literary image from ancient Greek and Latin literature, first found in the _Odyssey_, where dream spirits (_Oneiroi_, singular _Oneiros_) are divided between those who deceive men with false visions, who arrive to Earth through a gate of ivory, and those who announce a future that will come to pass, who arrive through a gate of horn. It's a play on the words \u03ba\u03ad\u03c1\u03b1\u03c2 (horn) / \u03ba\u03c1\u03b1\u03af\u03bd\u03c9 (fulfill), and \u1f10\u03bb\u03ad\u03c6\u03b1\u03c2 (ivory) / \u1f10\u03bb\u03b5\u03c6\u03b1\u03af\u03c1\u03bf\u03bc\u03b1\u03b9 (deceive).\n\nKeras was initially developed as part of the research effort of project ONEIROS (Open-ended Neuro-Electronic Intelligent Robot Operating System).\n\n>_\"Oneiroi are beyond our unravelling --who can be sure what tale they tell? Not all that men look for comes to pass. Two gates there are that give passage to fleeting Oneiroi; one is made of horn, one of ivory. The Oneiroi that pass through sawn ivory are deceitful, bearing a message that will not be fulfilled; those that come out through polished horn have truth behind them, to be accomplished for men who see them.\"_ Homer, Odyssey 19. 562 ff (Shewring translation).\n\n------------------\n"
 },
 {
  "repo": "sindresorhus/awesome",
  "language": null,
  "readme_contents": "<div align=\"center\">\n\t<img width=\"500\" height=\"350\" src=\"media/logo.svg\" alt=\"Awesome\">\n\t<br>\n\t<p>\n\t\t<p>\n\t\t\t<sup>\n\t\t\t\t<a href=\"https://github.com/sponsors/sindresorhus\">My open source work is supported by the community</a>\n\t\t\t</sup>\n\t\t</p>\n\t\t<br>\n\t\t<br>\n\t</p>\n\t<br>\n\t<br>\n</div>\n\n<p align=\"center\">\n\t<a href=\"awesome.md\">What is an awesome list?</a>&nbsp;&nbsp;&nbsp;\n\t<a href=\"contributing.md\">Contribution guide</a>&nbsp;&nbsp;&nbsp;\n\t<a href=\"create-list.md\">Creating a list</a>&nbsp;&nbsp;&nbsp;\n\t<a href=\"https://twitter.com/awesome__re\">Twitter</a>&nbsp;&nbsp;&nbsp;\n\t<a href=\"https://www.redbubble.com/people/sindresorhus/works/30364188-awesome-logo\">Stickers & t-shirts</a>\n</p>\n\n<br>\n\n<div align=\"center\">\n\t<b>Follow the <a href=\"https://twitter.com/awesome__re\">Awesome Twitter account</a> for updates on new list additions.</b>\n</div>\n\n<br>\n\n<p align=\"center\">\n\t<sub>Just type <a href=\"https://awesome.re\"><code>awesome.re</code></a> to go here. Check out my <a href=\"https://blog.sindresorhus.com\">blog</a> and follow me on <a href=\"https://twitter.com/sindresorhus\">Twitter</a>.</sub>\n</p>\n<br>\n\n## Contents\n\n- [Platforms](#platforms)\n- [Programming Languages](#programming-languages)\n- [Front-End Development](#front-end-development)\n- [Back-End Development](#back-end-development)\n- [Computer Science](#computer-science)\n- [Big Data](#big-data)\n- [Theory](#theory)\n- [Books](#books)\n- [Editors](#editors)\n- [Gaming](#gaming)\n- [Development Environment](#development-environment)\n- [Entertainment](#entertainment)\n- [Databases](#databases)\n- [Media](#media)\n- [Learn](#learn)\n- [Security](#security)\n- [Content Management Systems](#content-management-systems)\n- [Hardware](#hardware)\n- [Business](#business)\n- [Work](#work)\n- [Networking](#networking)\n- [Decentralized Systems](#decentralized-systems)\n- [Higher Education](#higher-education)\n- [Events](#events)\n- [Testing](#testing)\n- [Miscellaneous](#miscellaneous)\n- [Related](#related)\n\n## Platforms\n\n- [Node.js](https://github.com/sindresorhus/awesome-nodejs#readme) - Async non-blocking event-driven JavaScript runtime built on Chrome's V8 JavaScript engine.\n\t- [Cross-Platform](https://github.com/bcoe/awesome-cross-platform-nodejs#readme) - Writing cross-platform code on Node.js.\n- [Frontend Development](https://github.com/dypsilon/frontend-dev-bookmarks#readme)\n- [iOS](https://github.com/vsouza/awesome-ios#readme) - Mobile operating system for Apple phones and tablets.\n- [Android](https://github.com/JStumpp/awesome-android#readme) - Mobile operating system developed by Google.\n- [IoT & Hybrid Apps](https://github.com/weblancaster/awesome-IoT-hybrid#readme)\n- [Electron](https://github.com/sindresorhus/awesome-electron#readme) - Cross-platform native desktop apps using JavaScript/HTML/CSS.\n- [Cordova](https://github.com/busterc/awesome-cordova#readme) - JavaScript API for hybrid apps.\n- [React Native](https://github.com/jondot/awesome-react-native#readme) - JavaScript framework for writing natively rendering mobile apps for iOS and Android.\n- [Xamarin](https://github.com/XamSome/awesome-xamarin#readme) - Mobile app development IDE, testing, and distribution.\n- [Linux](https://github.com/aleksandar-todorovic/awesome-linux#readme)\n\t- [Containers](https://github.com/Friz-zy/awesome-linux-containers#readme)\n\t- [eBPF](https://github.com/zoidbergwill/awesome-ebpf#readme) - Virtual machine that allows you to write more efficient and powerful tracing and monitoring for Linux systems.\n\t- [Arch-based Projects](https://github.com/PandaFoss/Awesome-Arch#readme) - Linux distributions and projects based on Arch Linux.\n- [macOS](https://github.com/iCHAIT/awesome-macOS#readme) - Operating system for Apple's Mac computers.\n\t- [Command-Line](https://github.com/herrbischoff/awesome-macos-command-line#readme)\n\t- [Screensavers](https://github.com/agarrharr/awesome-macos-screensavers#readme)\n\t- [Apps](https://github.com/jaywcjlove/awesome-mac#readme)\n\t- [Open Source Apps](https://github.com/serhii-londar/open-source-mac-os-apps#readme)\n- [watchOS](https://github.com/yenchenlin/awesome-watchos#readme) - Operating system for the Apple Watch.\n- [JVM](https://github.com/deephacks/awesome-jvm#readme)\n- [Salesforce](https://github.com/mailtoharshit/awesome-salesforce#readme)\n- [Amazon Web Services](https://github.com/donnemartin/awesome-aws#readme)\n- [Windows](https://github.com/Awesome-Windows/Awesome#readme)\n- [IPFS](https://github.com/ipfs/awesome-ipfs#readme) - P2P hypermedia protocol.\n- [Fuse](https://github.com/fuse-compound/awesome-fuse#readme) - Mobile development tools.\n- [Heroku](https://github.com/ianstormtaylor/awesome-heroku#readme) - Cloud platform as a service.\n- [Raspberry Pi](https://github.com/thibmaek/awesome-raspberry-pi#readme) - Credit card-sized computer aimed at teaching kids programming, but capable of a lot more.\n- [Qt](https://github.com/JesseTG/awesome-qt#readme) - Cross-platform GUI app framework.\n- [WebExtensions](https://github.com/fregante/Awesome-WebExtensions#readme) - Cross-browser extension system.\n- [RubyMotion](https://github.com/motion-open-source/awesome-rubymotion#readme) - Write cross-platform native apps for iOS, Android, macOS, tvOS, and watchOS in Ruby.\n- [Smart TV](https://github.com/vitalets/awesome-smart-tv#readme) - Create apps for different TV platforms.\n- [GNOME](https://github.com/Kazhnuz/awesome-gnome#readme) - Simple and distraction-free desktop environment for Linux.\n- [KDE](https://github.com/francoism90/awesome-kde#readme) - A free software community dedicated to creating an open and user-friendly computing experience.\n- [.NET](https://github.com/quozd/awesome-dotnet#readme)\n\t- [Core](https://github.com/thangchung/awesome-dotnet-core#readme)\n\t- [Roslyn](https://github.com/ironcev/awesome-roslyn#readme) - Open-source compilers and code analysis APIs for C# and VB.NET languages.\n- [Amazon Alexa](https://github.com/miguelmota/awesome-amazon-alexa#readme) - Virtual home assistant.\n- [DigitalOcean](https://github.com/jonleibowitz/awesome-digitalocean#readme) - Cloud computing platform designed for developers.\n- [Flutter](https://github.com/Solido/awesome-flutter#readme) - Google's mobile SDK for building native iOS and Android apps from a single codebase written in Dart.\n- [Home Assistant](https://github.com/frenck/awesome-home-assistant#readme) - Open source home automation that puts local control and privacy first.\n- [IBM Cloud](https://github.com/victorshinya/awesome-ibmcloud#readme) - Cloud platform for developers and companies.\n- [Firebase](https://github.com/jthegedus/awesome-firebase#readme) - App development platform built on Google Cloud Platform.\n- [Robot Operating System 2.0](https://github.com/fkromer/awesome-ros2#readme) - Set of software libraries and tools that help you build robot apps.\n- [Adafruit IO](https://github.com/adafruit/awesome-adafruitio#readme) - Visualize and store data from any device.\n- [Cloudflare](https://github.com/irazasyed/awesome-cloudflare#readme) - CDN, DNS, DDoS protection, and security for your site.\n- [Actions on Google](https://github.com/ravirupareliya/awesome-actions-on-google#readme) - Developer platform for Google Assistant.\n- [ESP](https://github.com/agucova/awesome-esp#readme) - Low-cost microcontrollers with WiFi and broad IoT applications.\n- [Deno](https://github.com/denolib/awesome-deno#readme) - A secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust.\n\n## Programming Languages\n\n- [JavaScript](https://github.com/sorrycc/awesome-javascript#readme)\n\t- [Promises](https://github.com/wbinnssmith/awesome-promises#readme)\n\t- [Standard Style](https://github.com/standard/awesome-standard#readme) - Style guide and linter.\n\t- [Must Watch Talks](https://github.com/bolshchikov/js-must-watch#readme)\n\t- [Tips](https://github.com/loverajoel/jstips#readme)\n\t- [Network Layer](https://github.com/Kikobeats/awesome-network-js#readme)\n\t- [Micro npm Packages](https://github.com/parro-it/awesome-micro-npm-packages#readme)\n\t- [Mad Science npm Packages](https://github.com/feross/awesome-mad-science#readme) - Impossible sounding projects that exist.\n\t- [Maintenance Modules](https://github.com/maxogden/maintenance-modules#readme) - For npm packages.\n\t- [npm](https://github.com/sindresorhus/awesome-npm#readme) - Package manager.\n\t- [AVA](https://github.com/avajs/awesome-ava#readme) - Test runner.\n\t- [ESLint](https://github.com/dustinspecker/awesome-eslint#readme) - Linter.\n\t- [Functional Programming](https://github.com/stoeffel/awesome-fp-js#readme)\n\t- [Observables](https://github.com/sindresorhus/awesome-observables#readme)\n\t- [npm scripts](https://github.com/RyanZim/awesome-npm-scripts#readme) - Task runner.\n\t- [30 Seconds of Code](https://github.com/30-seconds/30-seconds-of-code#readme) - Code snippets you can understand in 30 seconds.\n- [Swift](https://github.com/matteocrippa/awesome-swift#readme) - Apple's compiled programming language that is secure, modern, programmer-friendly, and fast.\n\t- [Education](https://github.com/hsavit1/Awesome-Swift-Education#readme)\n\t- [Playgrounds](https://github.com/uraimo/Awesome-Swift-Playgrounds#readme)\n- [Python](https://github.com/vinta/awesome-python#readme) - General-purpose programming language designed for readability.\n\t- [Asyncio](https://github.com/timofurrer/awesome-asyncio#readme) - Asynchronous I/O in Python 3.\n\t- [Scientific Audio](https://github.com/faroit/awesome-python-scientific-audio#readme) - Scientific research in audio/music.\n\t- [CircuitPython](https://github.com/adafruit/awesome-circuitpython#readme) - A version of Python for microcontrollers.\n\t- [Data Science](https://github.com/krzjoa/awesome-python-data-science#readme) - Data analysis and machine learning.\n\t- [Typing](https://github.com/typeddjango/awesome-python-typing#readme) - Optional static typing for Python.\n\t- [MicroPython](https://github.com/mcauser/awesome-micropython#readme) - A lean and efficient implementation of Python 3 for microcontrollers.\n- [Rust](https://github.com/rust-unofficial/awesome-rust#readme)\n- [Haskell](https://github.com/krispo/awesome-haskell#readme)\n- [PureScript](https://github.com/passy/awesome-purescript#readme)\n- [Go](https://github.com/avelino/awesome-go#readme)\n- [Scala](https://github.com/lauris/awesome-scala#readme)\n\t- [Scala Native](https://github.com/tindzk/awesome-scala-native#readme) - Optimizing ahead-of-time compiler for Scala based on LLVM.\n- [Ruby](https://github.com/markets/awesome-ruby#readme)\n- [Clojure](https://github.com/razum2um/awesome-clojure#readme)\n- [ClojureScript](https://github.com/hantuzun/awesome-clojurescript#readme)\n- [Elixir](https://github.com/h4cc/awesome-elixir#readme)\n- [Elm](https://github.com/sporto/awesome-elm#readme)\n- [Erlang](https://github.com/drobakowski/awesome-erlang#readme)\n- [Julia](https://github.com/svaksha/Julia.jl#readme) - High-level dynamic programming language designed to address the needs of high-performance numerical analysis and computational science.\n- [Lua](https://github.com/LewisJEllis/awesome-lua#readme)\n- [C](https://github.com/aleksandar-todorovic/awesome-c#readme)\n- [C/C++](https://github.com/fffaraz/awesome-cpp#readme) - General-purpose language with a bias toward system programming and embedded, resource-constrained software.\n- [R](https://github.com/qinwf/awesome-R#readme)\n- [D](https://github.com/zhaopuming/awesome-d#readme)\n- [Common Lisp](https://github.com/CodyReichert/awesome-cl#readme) - Powerful dynamic multiparadigm language that facilitates iterative and interactive development.\n\t- [Learning](https://github.com/GustavBertram/awesome-common-lisp-learning#readme)\n- [Perl](https://github.com/hachiojipm/awesome-perl#readme)\n- [Groovy](https://github.com/kdabir/awesome-groovy#readme)\n- [Dart](https://github.com/yissachar/awesome-dart#readme)\n- [Java](https://github.com/akullpp/awesome-java#readme) - Popular secure object-oriented language designed for flexibility to \"write once, run anywhere\".\n\t- [RxJava](https://github.com/eleventigers/awesome-rxjava#readme)\n- [Kotlin](https://github.com/KotlinBy/awesome-kotlin#readme)\n- [OCaml](https://github.com/ocaml-community/awesome-ocaml#readme)\n- [ColdFusion](https://github.com/seancoyne/awesome-coldfusion#readme)\n- [Fortran](https://github.com/rabbiabram/awesome-fortran#readme)\n- [PHP](https://github.com/ziadoz/awesome-php#readme) - Server-side scripting language.\n\t- [Composer](https://github.com/jakoch/awesome-composer#readme) - Package manager.\n- [Pascal](https://github.com/Fr0sT-Brutal/awesome-pascal#readme)\n- [Assembler](https://github.com/lurumdare/awesome-asm#readme)\n- [AutoHotkey](https://github.com/ahkscript/awesome-AutoHotkey#readme)\n- [AutoIt](https://github.com/J2TeaM/awesome-AutoIt#readme)\n- [Crystal](https://github.com/veelenga/awesome-crystal#readme)\n- [Frege](https://github.com/sfischer13/awesome-frege#readme) - Haskell for the JVM.\n- [CMake](https://github.com/onqtam/awesome-cmake#readme) - Build, test, and package software.\n- [ActionScript 3](https://github.com/robinrodricks/awesome-actionscript3#readme) - Object-oriented language targeting Adobe AIR.\n- [Eta](https://github.com/sfischer13/awesome-eta#readme) - Functional programming language for the JVM.\n- [Idris](https://github.com/joaomilho/awesome-idris#readme) - General purpose pure functional programming language with dependent types influenced by Haskell and ML.\n- [Ada/SPARK](https://github.com/ohenley/awesome-ada#readme) - Modern programming language designed for large, long-lived apps where reliability and efficiency are essential.\n- [Q#](https://github.com/ebraminio/awesome-qsharp#readme) - Domain-specific programming language used for expressing quantum algorithms.\n- [Imba](https://github.com/koolamusic/awesome-imba#readme) - Programming language inspired by Ruby and Python and compiles to performant JavaScript.\n- [Vala](https://github.com/desiderantes/awesome-vala#readme) - Programming language designed to take full advantage of the GLib and GNOME ecosystems, while preserving the speed of C code.\n- [Coq](https://github.com/coq-community/awesome-coq#readme) - Formal language and environment for programming and specification which facilitates interactive development of machine-checked proofs.\n- [V](https://github.com/vlang/awesome-v#readme) - Simple, fast, safe, compiled language for developing maintainable software.\n\n## Front-End Development\n\n- [ES6 Tools](https://github.com/addyosmani/es6-tools#readme)\n- [Web Performance Optimization](https://github.com/davidsonfellipe/awesome-wpo#readme)\n- [Web Tools](https://github.com/lvwzhen/tools#readme)\n- [CSS](https://github.com/awesome-css-group/awesome-css#readme) - Style sheet language that specifies how HTML elements are displayed on screen.\n\t- [Critical-Path Tools](https://github.com/addyosmani/critical-path-css-tools#readme)\n\t- [Scalability](https://github.com/davidtheclark/scalable-css-reading-list#readme)\n\t- [Must-Watch Talks](https://github.com/AllThingsSmitty/must-watch-css#readme)\n\t- [Protips](https://github.com/AllThingsSmitty/css-protips#readme)\n\t- [Frameworks](https://github.com/troxler/awesome-css-frameworks#readme)\n- [React](https://github.com/enaqx/awesome-react#readme) - App framework.\n\t- [Relay](https://github.com/expede/awesome-relay#readme) - Framework for building data-driven React apps.\n\t- [React Hooks](https://github.com/glauberfc/awesome-react-hooks#readme) - A new feature that lets you use state and other React features without writing a class.\n- [Web Components](https://github.com/mateusortiz/webcomponents-the-right-way#readme)\n- [Polymer](https://github.com/Granze/awesome-polymer#readme) - JavaScript library to develop Web Components.\n- [Angular](https://github.com/PatrickJS/awesome-angular#readme) - App framework.\n- [Backbone](https://github.com/sadcitizen/awesome-backbone#readme) - App framework.\n- [HTML5](https://github.com/diegocard/awesome-html5#readme) - Markup language used for websites & web apps.\n- [SVG](https://github.com/willianjusten/awesome-svg#readme) - XML-based vector image format.\n- [Canvas](https://github.com/raphamorim/awesome-canvas#readme)\n- [KnockoutJS](https://github.com/dnbard/awesome-knockout#readme) - JavaScript library.\n- [Dojo Toolkit](https://github.com/petk/awesome-dojo#readme) - JavaScript toolkit.\n- [Inspiration](https://github.com/NoahBuscher/Inspire#readme)\n- [Ember](https://github.com/ember-community-russia/awesome-ember#readme) - App framework.\n- [Android UI](https://github.com/wasabeef/awesome-android-ui#readme)\n- [iOS UI](https://github.com/cjwirth/awesome-ios-ui#readme)\n- [Meteor](https://github.com/Urigo/awesome-meteor#readme)\n- [BEM](https://github.com/sturobson/BEM-resources#readme)\n- [Flexbox](https://github.com/afonsopacifer/awesome-flexbox#readme)\n- [Web Typography](https://github.com/deanhume/typography#readme)\n- [Web Accessibility](https://github.com/brunopulis/awesome-a11y#readme)\n- [Material Design](https://github.com/sachin1092/awesome-material#readme)\n- [D3](https://github.com/wbkd/awesome-d3#readme) - Library for producing dynamic, interactive data visualizations.\n- [Emails](https://github.com/jonathandion/awesome-emails#readme)\n- [jQuery](https://github.com/petk/awesome-jquery#readme) - Easy to use JavaScript library for DOM manipulation.\n\t- [Tips](https://github.com/AllThingsSmitty/jquery-tips-everyone-should-know#readme)\n- [Web Audio](https://github.com/notthetup/awesome-webaudio#readme)\n- [Offline-First](https://github.com/pazguille/offline-first#readme)\n- [Static Website Services](https://github.com/agarrharr/awesome-static-website-services#readme)\n- [Cycle.js](https://github.com/cyclejs-community/awesome-cyclejs#readme) - Functional and reactive JavaScript framework.\n- [Text Editing](https://github.com/dok/awesome-text-editing#readme)\n- [Motion UI Design](https://github.com/fliptheweb/motion-ui-design#readme)\n- [Vue.js](https://github.com/vuejs/awesome-vue#readme) - App framework.\n- [Marionette.js](https://github.com/sadcitizen/awesome-marionette#readme) - App framework.\n- [Aurelia](https://github.com/aurelia-contrib/awesome-aurelia#readme) - App framework.\n- [Charting](https://github.com/zingchart/awesome-charting#readme)\n- [Ionic Framework 2](https://github.com/candelibas/awesome-ionic#readme)\n- [Chrome DevTools](https://github.com/ChromeDevTools/awesome-chrome-devtools#readme)\n- [PostCSS](https://github.com/jdrgomes/awesome-postcss#readme) - CSS tool.\n- [Draft.js](https://github.com/nikgraf/awesome-draft-js#readme) - Rich text editor framework for React.\n- [Service Workers](https://github.com/TalAter/awesome-service-workers#readme)\n- [Progressive Web Apps](https://github.com/TalAter/awesome-progressive-web-apps#readme)\n- [choo](https://github.com/choojs/awesome-choo#readme) - App framework.\n- [Redux](https://github.com/brillout/awesome-redux#readme) - State container for JavaScript apps.\n- [webpack](https://github.com/webpack-contrib/awesome-webpack#readme) - Module bundler.\n- [Browserify](https://github.com/browserify/awesome-browserify#readme) - Module bundler.\n- [Sass](https://github.com/Famolus/awesome-sass#readme) - CSS preprocessor.\n- [Ant Design](https://github.com/websemantics/awesome-ant-design#readme) - Enterprise-class UI design language.\n- [Less](https://github.com/LucasBassetti/awesome-less#readme) - CSS preprocessor.\n- [WebGL](https://github.com/sjfricke/awesome-webgl#readme) - JavaScript API for rendering 3D graphics.\n- [Preact](https://github.com/preactjs/awesome-preact#readme) - App framework.\n- [Progressive Enhancement](https://github.com/jbmoelker/progressive-enhancement-resources#readme)\n- [Next.js](https://github.com/unicodeveloper/awesome-nextjs#readme) - Framework for server-rendered React apps.\n- [Hyperapp](https://github.com/jorgebucaran/awesome-hyperapp#readme) - Tiny JavaScript library for building web apps.\n- [lit-html](https://github.com/web-padawan/awesome-lit-html#readme) - HTML templating library for JavaScript.\n- [JAMstack](https://github.com/automata/awesome-jamstack#readme) - Modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt markup.\n- [WordPress-Gatsby](https://github.com/henrikwirth/awesome-wordpress-gatsby#readme) - Web development technology stack with WordPress as a back end and Gatsby as a front end.\n- [Mobile Web Development](https://github.com/myshov/awesome-mobile-web-development#readme) - Creating a great mobile web experience.\n- [Storybook](https://github.com/lauthieb/awesome-storybook#readme) - Development environment for UI components.\n- [Blazor](https://github.com/AdrienTorris/awesome-blazor#readme) - .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly.\n- [PageSpeed Metrics](https://github.com/palfi-ltd/awesome-pagespeed-metrics#readme) - Metrics to help understand page speed and user experience.\n- [Tailwind CSS](https://github.com/aniftyco/awesome-tailwindcss#readme) - Utility-first CSS framework for rapid UI development.\n- [Seed](https://github.com/seed-rs/awesome-seed-rs#readme) - Rust framework for creating web apps running in WebAssembly.\n- [Web Performance Budget](https://github.com/pajaydev/awesome-web-performance-budget#readme) - Techniques to ensure certain performance metrics for a website.\n- [Web Animation](https://github.com/sergey-pimenov/awesome-web-animation#readme) - Animations in the browser with JavaScript, CSS, SVG, etc.\n- [Yew](https://github.com/jetli/awesome-yew#readme) - Rust framework inspired by Elm and React for creating multi-threaded frontend web apps with WebAssembly.\n- [Material-UI](https://github.com/nadunindunil/awesome-material-ui#readme) - Material Design React components for faster and easier web development.\n\n## Back-End Development\n\n- [Flask](https://github.com/humiaozuzu/awesome-flask#readme) - Python framework.\n- [Docker](https://github.com/veggiemonk/awesome-docker#readme)\n- [Vagrant](https://github.com/iJackUA/awesome-vagrant#readme) - Automation virtual machine environment.\n- [Pyramid](https://github.com/uralbash/awesome-pyramid#readme) - Python framework.\n- [Play1 Framework](https://github.com/PerfectCarl/awesome-play1#readme)\n- [CakePHP](https://github.com/friendsofcake/awesome-cakephp#readme) - PHP framework.\n- [Symfony](https://github.com/sitepoint-editors/awesome-symfony#readme) - PHP framework.\n\t- [Education](https://github.com/pehapkari/awesome-symfony-education#readme)\n- [Laravel](https://github.com/chiraggude/awesome-laravel#readme) - PHP framework.\n\t- [Education](https://github.com/fukuball/Awesome-Laravel-Education#readme)\n- [Rails](https://github.com/gramantin/awesome-rails#readme) - Web app framework for Ruby.\n\t- [Gems](https://github.com/hothero/awesome-rails-gem#readme) - Packages.\n- [Phalcon](https://github.com/phalcon/awesome-phalcon#readme) - PHP framework.\n- [Useful `.htaccess` Snippets](https://github.com/phanan/htaccess#readme)\n- [nginx](https://github.com/fcambus/nginx-resources#readme) - Web server.\n- [Dropwizard](https://github.com/stve/awesome-dropwizard#readme) - Java framework.\n- [Kubernetes](https://github.com/ramitsurana/awesome-kubernetes#readme) - Open-source platform that automates Linux container operations.\n- [Lumen](https://github.com/unicodeveloper/awesome-lumen#readme) - PHP micro-framework.\n- [Serverless Framework](https://github.com/pmuens/awesome-serverless#readme) - Serverless computing and serverless architectures.\n- [Apache Wicket](https://github.com/PhantomYdn/awesome-wicket#readme) - Java web app framework.\n- [Vert.x](https://github.com/vert-x3/vertx-awesome#readme) - Toolkit for building reactive apps on the JVM.\n- [Terraform](https://github.com/shuaibiyy/awesome-terraform#readme) - Tool for building, changing, and versioning infrastructure.\n- [Vapor](https://github.com/Cellane/awesome-vapor#readme) - Server-side development in Swift.\n- [Dash](https://github.com/ucg8j/awesome-dash#readme) - Python web app framework.\n\n## Computer Science\n\n- [University Courses](https://github.com/prakhar1989/awesome-courses#readme)\n- [Data Science](https://github.com/academic/awesome-datascience#readme)\n\t- [Tutorials](https://github.com/siboehm/awesome-learn-datascience#readme)\n- [Machine Learning](https://github.com/josephmisiti/awesome-machine-learning#readme)\n\t- [Tutorials](https://github.com/ujjwalkarn/Machine-Learning-Tutorials#readme)\n\t- [ML with Ruby](https://github.com/arbox/machine-learning-with-ruby#readme) - Learning, implementing, and applying Machine Learning using Ruby.\n\t- [Core ML Models](https://github.com/likedan/Awesome-CoreML-Models#readme) - Models for Apple's machine learning framework.\n\t- [H2O](https://github.com/h2oai/awesome-h2o#readme) - Open source distributed machine learning platform written in Java with APIs in R, Python, and Scala.\n- [Speech and Natural Language Processing](https://github.com/edobashira/speech-language-processing#readme)\n\t- [Spanish](https://github.com/dav009/awesome-spanish-nlp#readme)\n\t- [NLP with Ruby](https://github.com/arbox/nlp-with-ruby#readme)\n\t- [Question Answering](https://github.com/seriousran/awesome-qa#readme) - The science of asking and answering in natural language with a machine.\n\t- [Natural Language Generation](https://github.com/tokenmill/awesome-nlg#readme) - Generation of text used in data to text, conversational agents, and narrative generation applications.\n- [Linguistics](https://github.com/theimpossibleastronaut/awesome-linguistics#readme)\n- [Cryptography](https://github.com/sobolevn/awesome-cryptography#readme)\n\t- [Papers](https://github.com/pFarb/awesome-crypto-papers#readme) - Theory basics for using cryptography by non-cryptographers.\n- [Computer Vision](https://github.com/jbhuang0604/awesome-computer-vision#readme)\n- [Deep Learning](https://github.com/ChristosChristofidis/awesome-deep-learning#readme) - Neural networks.\n\t- [TensorFlow](https://github.com/jtoy/awesome-tensorflow#readme) - Library for machine intelligence.\n\t- [Papers](https://github.com/terryum/awesome-deep-learning-papers#readme) - The most cited deep learning papers.\n\t- [Education](https://github.com/guillaume-chevalier/awesome-deep-learning-resources#readme)\n- [Deep Vision](https://github.com/kjw0612/awesome-deep-vision#readme)\n- [Open Source Society University](https://github.com/ossu/computer-science#readme)\n- [Functional Programming](https://github.com/lucasviola/awesome-functional-programming#readme)\n- [Empirical Software Engineering](https://github.com/dspinellis/awesome-msr#readme) - Evidence-based research on software systems.\n- [Static Analysis & Code Quality](https://github.com/analysis-tools-dev/static-analysis#readme)\n- [Information Retrieval](https://github.com/harpribot/awesome-information-retrieval#readme) - Learn to develop your own search engine.\n- [Quantum Computing](https://github.com/desireevl/awesome-quantum-computing#readme) - Computing which utilizes quantum mechanics and qubits on quantum computers.\n\n## Big Data\n\n- [Big Data](https://github.com/onurakpolat/awesome-bigdata#readme)\n- [Public Datasets](https://github.com/awesomedata/awesome-public-datasets#readme)\n- [Hadoop](https://github.com/youngwookim/awesome-hadoop#readme) - Framework for distributed storage and processing of very large data sets.\n- [Data Engineering](https://github.com/igorbarinov/awesome-data-engineering#readme)\n- [Streaming](https://github.com/manuzhang/awesome-streaming#readme)\n- [Apache Spark](https://github.com/awesome-spark/awesome-spark#readme) - Unified engine for large-scale data processing.\n- [Qlik](https://github.com/ambster-public/awesome-qlik#readme) - Business intelligence platform for data visualization, analytics, and reporting apps.\n- [Splunk](https://github.com/sduff/awesome-splunk#readme) - Platform for searching, monitoring, and analyzing structured and unstructured machine-generated big data in real-time.\n\n## Theory\n\n- [Papers We Love](https://github.com/papers-we-love/papers-we-love#readme)\n- [Talks](https://github.com/JanVanRyswyck/awesome-talks#readme)\n- [Algorithms](https://github.com/tayllan/awesome-algorithms#readme)\n\t- [Education](https://github.com/gaerae/awesome-algorithms-education#readme) - Learning and practicing.\n- [Algorithm Visualizations](https://github.com/enjalot/algovis#readme)\n- [Artificial Intelligence](https://github.com/owainlewis/awesome-artificial-intelligence#readme)\n- [Search Engine Optimization](https://github.com/marcobiedermann/search-engine-optimization#readme)\n- [Competitive Programming](https://github.com/lnishan/awesome-competitive-programming#readme)\n- [Math](https://github.com/rossant/awesome-math#readme)\n- [Recursion Schemes](https://github.com/passy/awesome-recursion-schemes#readme) - Traversing nested data structures.\n\n## Books\n\n- [Free Programming Books](https://github.com/EbookFoundation/free-programming-books#readme)\n- [Free Software Testing Books](https://github.com/ligurio/awesome-software-quality#readme)\n- [Go Books](https://github.com/dariubs/GoBooks#readme)\n- [R Books](https://github.com/RomanTsegelskyi/rbooks#readme)\n- [Mind Expanding Books](https://github.com/hackerkid/Mind-Expanding-Books#readme)\n- [Book Authoring](https://github.com/TalAter/awesome-book-authoring#readme)\n- [Elixir Books](https://github.com/sger/ElixirBooks#readme)\n\n## Editors\n\n- [Sublime Text](https://github.com/dreikanter/sublime-bookmarks#readme)\n- [Vim](https://github.com/mhinz/vim-galore#readme)\n- [Emacs](https://github.com/emacs-tw/awesome-emacs#readme)\n- [Atom](https://github.com/mehcode/awesome-atom#readme) - Open-source and hackable text editor.\n- [Visual Studio Code](https://github.com/viatsko/awesome-vscode#readme) - Cross-platform open-source text editor.\n\n## Gaming\n\n- [Game Development](https://github.com/ellisonleao/magictools#readme)\n- [Game Talks](https://github.com/hzoo/awesome-gametalks#readme)\n- [Godot](https://github.com/Calinou/awesome-godot#readme) - Game engine.\n- [Open Source Games](https://github.com/leereilly/games#readme)\n- [Unity](https://github.com/RyanNielson/awesome-unity#readme) - Game engine.\n- [Chess](https://github.com/hkirat/awesome-chess#readme)\n- [L\u00d6VE](https://github.com/love2d-community/awesome-love2d#readme) - Game engine.\n- [PICO-8](https://github.com/pico-8/awesome-PICO-8#readme) - Fantasy console.\n- [Game Boy Development](https://github.com/gbdev/awesome-gbdev#readme)\n- [Construct 2](https://github.com/WebCreationClub/awesome-construct#readme) - Game engine.\n- [Gideros](https://github.com/stetso/awesome-gideros#readme) - Game engine.\n- [Minecraft](https://github.com/bs-community/awesome-minecraft#readme) - Sandbox video game.\n- [Game Datasets](https://github.com/leomaurodesenv/game-datasets#readme) - Materials and datasets for Artificial Intelligence in games.\n- [Haxe Game Development](https://github.com/Dvergar/awesome-haxe-gamedev#readme) - A high-level strongly typed programming language used to produce cross-platform native code.\n- [libGDX](https://github.com/rafaskb/awesome-libgdx#readme) - Java game framework.\n- [PlayCanvas](https://github.com/playcanvas/awesome-playcanvas#readme) - Game engine.\n- [Game Remakes](https://github.com/radek-sprta/awesome-game-remakes#readme) - Actively maintained open-source game remakes.\n\n## Development Environment\n\n- [Quick Look Plugins](https://github.com/sindresorhus/quick-look-plugins#readme) - For macOS.\n- [Dev Env](https://github.com/jondot/awesome-devenv#readme)\n- [Dotfiles](https://github.com/webpro/awesome-dotfiles#readme)\n- [Shell](https://github.com/alebcay/awesome-shell#readme)\n- [Fish](https://github.com/jorgebucaran/awesome-fish#readme) - User-friendly shell.\n- [Command-Line Apps](https://github.com/agarrharr/awesome-cli-apps#readme)\n- [ZSH Plugins](https://github.com/unixorn/awesome-zsh-plugins#readme)\n- [GitHub](https://github.com/phillipadsmith/awesome-github#readme) - Hosting service for Git repositories.\n\t- [Browser Extensions](https://github.com/stefanbuck/awesome-browser-extensions-for-github#readme)\n\t- [Cheat Sheet](https://github.com/tiimgreen/github-cheat-sheet#readme)\n\t- [Pinned Gists](https://github.com/matchai/awesome-pinned-gists#readme) - Dynamic pinned gists for your GitHub profile.\n- [Git Cheat Sheet & Git Flow](https://github.com/arslanbilal/git-cheat-sheet#readme)\n- [Git Tips](https://github.com/git-tips/tips#readme)\n- [Git Add-ons](https://github.com/stevemao/awesome-git-addons#readme) - Enhance the `git` CLI.\n- [Git Hooks](https://github.com/compscilauren/awesome-git-hooks#readme) - Scripts for automating tasks during `git` workflows.\n- [SSH](https://github.com/moul/awesome-ssh#readme)\n- [FOSS for Developers](https://github.com/tvvocold/FOSS-for-Dev#readme)\n- [Hyper](https://github.com/bnb/awesome-hyper#readme) - Cross-platform terminal app built on web technologies.\n- [PowerShell](https://github.com/janikvonrotz/awesome-powershell#readme) - Cross-platform object-oriented shell.\n- [Alfred Workflows](https://github.com/derimagia/awesome-alfred-workflows#readme) - Productivity app for macOS.\n- [Terminals Are Sexy](https://github.com/k4m4/terminals-are-sexy#readme)\n- [GitHub Actions](https://github.com/sdras/awesome-actions#readme) - Create tasks to automate your workflow and share them with others on GitHub.\n\n## Entertainment\n\n- [Science Fiction](https://github.com/sindresorhus/awesome-scifi#readme) - Scifi.\n- [Fantasy](https://github.com/RichardLitt/awesome-fantasy#readme)\n- [Podcasts](https://github.com/ayr-ton/awesome-geek-podcasts#readme)\n- [Email Newsletters](https://github.com/zudochkin/awesome-newsletters#readme)\n- [IT Quotes](https://github.com/victorlaerte/awesome-it-quotes#readme)\n\n## Databases\n\n- [Database](https://github.com/numetriclabz/awesome-db#readme)\n- [MySQL](https://github.com/shlomi-noach/awesome-mysql#readme)\n- [SQLAlchemy](https://github.com/dahlia/awesome-sqlalchemy#readme)\n- [InfluxDB](https://github.com/mark-rushakoff/awesome-influxdb#readme)\n- [Neo4j](https://github.com/neueda/awesome-neo4j#readme)\n- [MongoDB](https://github.com/ramnes/awesome-mongodb#readme) - NoSQL database.\n- [RethinkDB](https://github.com/d3viant0ne/awesome-rethinkdb#readme)\n- [TinkerPop](https://github.com/mohataher/awesome-tinkerpop#readme) - Graph computing framework.\n- [PostgreSQL](https://github.com/dhamaniasad/awesome-postgres#readme) - Object-relational database.\n- [CouchDB](https://github.com/quangv/awesome-couchdb#readme) - Document-oriented NoSQL database.\n- [HBase](https://github.com/rayokota/awesome-hbase#readme) - Distributed, scalable, big data store.\n- [NoSQL Guides](https://github.com/erictleung/awesome-nosql-guides#readme) - Help on using non-relational, distributed, open-source, and horizontally scalable databases.\n- [Contexture](https://github.com/ltchris/awesome-contexture#readme) - Abstracts queries/filters and results/aggregations from different backing data stores like ElasticSearch and MongoDB.\n- [Database Tools](https://github.com/mgramin/awesome-db-tools#readme) - Everything that makes working with databases easier.\n\n## Media\n\n- [Creative Commons Media](https://github.com/shime/creative-commons-media#readme)\n- [Fonts](https://github.com/brabadu/awesome-fonts#readme)\n- [Codeface](https://github.com/chrissimpkins/codeface#readme) - Text editor fonts.\n- [Stock Resources](https://github.com/neutraltone/awesome-stock-resources#readme)\n- [GIF](https://github.com/davisonio/awesome-gif#readme) - Image format known for animated images.\n- [Music](https://github.com/ciconia/awesome-music#readme)\n- [Open Source Documents](https://github.com/hubtee/awesome-opensource-documents#readme)\n- [Audio Visualization](https://github.com/willianjusten/awesome-audio-visualization#readme)\n- [Broadcasting](https://github.com/ebu/awesome-broadcasting#readme)\n- [Pixel Art](https://github.com/Siilwyn/awesome-pixel-art#readme) - Pixel-level digital art.\n- [FFmpeg](https://github.com/transitive-bullshit/awesome-ffmpeg#readme) - Cross-platform solution to record, convert and stream audio and video.\n- [Icons](https://github.com/notlmn/awesome-icons#readme) - Downloadable SVG/PNG/font icon projects.\n\n## Learn\n\n- [CLI Workshoppers](https://github.com/therebelrobot/awesome-workshopper#readme) - Interactive tutorials.\n- [Learn to Program](https://github.com/karlhorky/learn-to-program#readme)\n- [Speaking](https://github.com/matteofigus/awesome-speaking#readme)\n- [Tech Videos](https://github.com/lucasviola/awesome-tech-videos#readme)\n- [Dive into Machine Learning](https://github.com/hangtwenty/dive-into-machine-learning#readme)\n- [Computer History](https://github.com/watson/awesome-computer-history#readme)\n- [Programming for Kids](https://github.com/HollyAdele/awesome-programming-for-kids#readme)\n- [Educational Games](https://github.com/yrgo/awesome-educational-games#readme) - Learn while playing.\n- [JavaScript Learning](https://github.com/micromata/awesome-javascript-learning#readme)\n- [CSS Learning](https://github.com/micromata/awesome-css-learning#readme) - Mainly about CSS \u2013 the language and the modules.\n- [Product Management](https://github.com/dend/awesome-product-management#readme) - Learn how to be a better product manager.\n- [Roadmaps](https://github.com/liuchong/awesome-roadmaps#readme) - Gives you a clear route to improve your knowledge and skills.\n\n## Security\n\n- [Application Security](https://github.com/paragonie/awesome-appsec#readme)\n- [Security](https://github.com/sbilly/awesome-security#readme)\n- [CTF](https://github.com/apsdehal/awesome-ctf#readme) - Capture The Flag.\n- [Malware Analysis](https://github.com/rshipp/awesome-malware-analysis#readme)\n- [Android Security](https://github.com/ashishb/android-security-awesome#readme)\n- [Hacking](https://github.com/carpedm20/awesome-hacking#readme)\n- [Honeypots](https://github.com/paralax/awesome-honeypots#readme) - Deception trap, designed to entice an attacker into attempting to compromise the information systems in an organization.\n- [Incident Response](https://github.com/meirwah/awesome-incident-response#readme)\n- [Vehicle Security and Car Hacking](https://github.com/jaredthecoder/awesome-vehicle-security#readme)\n- [Web Security](https://github.com/qazbnm456/awesome-web-security#readme) - Security of web apps & services.\n- [Lockpicking](https://github.com/meitar/awesome-lockpicking#readme) - The art of unlocking a lock by manipulating its components without the key.\n- [Cybersecurity Blue Team](https://github.com/meitar/awesome-cybersecurity-blueteam#readme) - Groups of individuals who identify security flaws in information technology systems.\n- [Fuzzing](https://github.com/cpuu/awesome-fuzzing#readme) - Automated software testing technique that involves feeding pseudo-randomly generated input data.\n- [Embedded and IoT Security](https://github.com/fkie-cad/awesome-embedded-and-iot-security#readme)\n- [GDPR](https://github.com/bakke92/awesome-gdpr#readme) - Regulation on data protection and privacy for all individuals within EU.\n\n## Content Management Systems\n\n- [Umbraco](https://github.com/umbraco-community/awesome-umbraco#readme)\n- [Refinery CMS](https://github.com/refinerycms-contrib/awesome-refinerycms#readme) - Ruby on Rails CMS.\n- [Wagtail](https://github.com/springload/awesome-wagtail#readme) - Django CMS focused on flexibility and user experience.\n- [Textpattern](https://github.com/drmonkeyninja/awesome-textpattern#readme) - Lightweight PHP-based CMS.\n- [Drupal](https://github.com/nirgn975/awesome-drupal#readme) - Extensible PHP-based CMS.\n- [Craft CMS](https://github.com/craftcms/awesome#readme) - Content-first CMS.\n- [Sitecore](https://github.com/MartinMiles/Awesome-Sitecore#readme) - .NET digital marketing platform that combines CMS with tools for managing multiple websites.\n\n## Hardware\n\n- [Robotics](https://github.com/Kiloreux/awesome-robotics#readme)\n- [Internet of Things](https://github.com/HQarroum/awesome-iot#readme)\n- [Electronics](https://github.com/kitspace/awesome-electronics#readme) - For electronic engineers and hobbyists.\n- [Bluetooth Beacons](https://github.com/rabschi/awesome-beacon#readme)\n- [Electric Guitar Specifications](https://github.com/gitfrage/guitarspecs#readme) - Checklist for building your own electric guitar.\n- [Plotters](https://github.com/beardicus/awesome-plotters#readme) - Computer-controlled drawing machines and other visual art robots.\n\n## Business\n\n- [Open Companies](https://github.com/opencompany/awesome-open-company#readme)\n- [Places to Post Your Startup](https://github.com/mmccaff/PlacesToPostYourStartup#readme)\n- [OKR Methodology](https://github.com/domenicosolazzo/awesome-okr#readme) - Goal setting & communication best practices.\n- [Leading and Managing](https://github.com/LappleApple/awesome-leading-and-managing#readme) - Leading people and being a manager in a technology company/environment.\n- [Indie](https://github.com/mezod/awesome-indie#readme) - Independent developer businesses.\n- [Tools of the Trade](https://github.com/cjbarber/ToolsOfTheTrade#readme) - Tools used by companies on Hacker News.\n- [Clean Tech](https://github.com/nglgzz/awesome-clean-tech#readme) - Fighting climate change with technology.\n- [Wardley Maps](https://github.com/wardley-maps-community/awesome-wardley-maps#readme) - Provides high situational awareness to help improve strategic planning and decision making.\n\n## Work\n\n- [Slack](https://github.com/matiassingers/awesome-slack#readme) - Team collaboration.\n\t- [Communities](https://github.com/filipelinhares/awesome-slack#readme)\n- [Remote Jobs](https://github.com/lukasz-madon/awesome-remote-job#readme)\n- [Productivity](https://github.com/jyguyomarch/awesome-productivity#readme)\n- [Niche Job Boards](https://github.com/tramcar/awesome-job-boards#readme)\n- [Programming Interviews](https://github.com/MaximAbramchuck/awesome-interview-questions#readme)\n- [Code Review](https://github.com/joho/awesome-code-review#readme) - Reviewing code.\n\n## Networking\n\n- [Software-Defined Networking](https://github.com/sdnds-tw/awesome-sdn#readme)\n- [Network Analysis](https://github.com/briatte/awesome-network-analysis#readme)\n- [PCAPTools](https://github.com/caesar0301/awesome-pcaptools#readme)\n- [Real-Time Communications](https://github.com/rtckit/awesome-rtc#readme) - Network protocols for near simultaneous exchange of media and data.\n\n## Decentralized Systems\n\n- [Bitcoin](https://github.com/igorbarinov/awesome-bitcoin#readme) - Bitcoin services and tools for software developers.\n- [Ripple](https://github.com/vhpoet/awesome-ripple#readme) - Open source distributed settlement network.\n- [Non-Financial Blockchain](https://github.com/machinomy/awesome-non-financial-blockchain#readme) - Non-financial blockchain applications.\n- [Mastodon](https://github.com/tleb/awesome-mastodon#readme) - Open source decentralized microblogging network.\n- [Ethereum](https://github.com/ttumiel/Awesome-Ethereum#readme) - Distributed computing platform for smart contract development.\n- [Blockchain AI](https://github.com/steven2358/awesome-blockchain-ai#readme) - Blockchain projects for artificial intelligence and machine learning.\n- [EOSIO](https://github.com/DanailMinchev/awesome-eosio#readme) - A decentralized operating system supporting industrial-scale apps.\n- [Corda](https://github.com/chainstack/awesome-corda#readme) - Open source blockchain platform designed for business.\n- [Waves](https://github.com/msmolyakov/awesome-waves#readme) - Open source blockchain platform and development toolset for Web 3.0 apps and decentralized solutions.\n\n## Higher Education\n\n- [Computational Neuroscience](https://github.com/eselkin/awesome-computational-neuroscience#readme) - A multidisciplinary science which uses computational approaches to study the nervous system.\n- [Digital History](https://github.com/maehr/awesome-digital-history#readme) - Computer-aided scientific investigation of history.\n\n## Events\n\n- [Creative Tech Events](https://github.com/danvoyce/awesome-creative-tech-events#readme) - Events around the globe for creative coding, tech, design, music, arts and cool stuff.\n- [Events in Italy](https://github.com/ildoc/awesome-italy-events#readme) - Tech-related events in Italy.\n- [Events in the Netherlands](https://github.com/awkward/awesome-netherlands-events#readme) - Tech-related events in the Netherlands.\n\n## Testing\n\n- [Testing](https://github.com/TheJambo/awesome-testing#readme) - Software testing.\n- [Visual Regression Testing](https://github.com/mojoaxel/awesome-regression-testing#readme) - Ensures changes did not break the functionality or style.\n- [Selenium](https://github.com/christian-bromann/awesome-selenium#readme) - Open-source browser automation framework and ecosystem.\n- [Appium](https://github.com/SrinivasanTarget/awesome-appium#readme) - Test automation tool for apps.\n- [TAP](https://github.com/sindresorhus/awesome-tap#readme) - Test Anything Protocol.\n- [JMeter](https://github.com/aliesbelik/awesome-jmeter#readme) - Load testing and performance measurement tool.\n- [k6](https://github.com/k6io/awesome-k6#readme) - Open-source, developer-centric performance monitoring and load testing solution.\n- [Playwright](https://github.com/mxschmitt/awesome-playwright#readme) - Node.js library to automate Chromium, Firefox and WebKit with a single API.\n\n## Miscellaneous\n\n- [JSON](https://github.com/burningtree/awesome-json#readme) - Text based data interchange format.\n\t- [GeoJSON](https://github.com/tmcw/awesome-geojson#readme)\n\t- [Datasets](https://github.com/jdorfman/awesome-json-datasets#readme)\n- [CSV](https://github.com/secretGeek/awesomeCSV#readme) - A text file format that stores tabular data and uses a comma to separate values.\n- [Discounts for Student Developers](https://github.com/AchoArnold/discount-for-student-dev#readme)\n- [Sysadmin](https://github.com/n1trux/awesome-sysadmin#readme)\n- [Radio](https://github.com/kyleterry/awesome-radio#readme)\n- [Awesome](https://github.com/sindresorhus/awesome#readme) - Recursion illustrated.\n- [Analytics](https://github.com/onurakpolat/awesome-analytics#readme)\n- [REST](https://github.com/marmelab/awesome-rest#readme)\n- [Continuous Integration and Continuous Delivery](https://github.com/cicdops/awesome-ciandcd#readme)\n- [Services Engineering](https://github.com/mmcgrana/services-engineering#readme)\n- [Free for Developers](https://github.com/ripienaar/free-for-dev#readme)\n- [Answers](https://github.com/cyberglot/awesome-answers#readme) - Stack Overflow, Quora, etc.\n- [Sketch](https://github.com/diessica/awesome-sketch#readme) - Design app for macOS.\n- [Boilerplate Projects](https://github.com/melvin0008/awesome-projects-boilerplates#readme)\n- [Readme](https://github.com/matiassingers/awesome-readme#readme)\n- [Design and Development Guides](https://github.com/NARKOZ/guides#readme)\n- [Software Engineering Blogs](https://github.com/kilimchoi/engineering-blogs#readme)\n- [Self Hosted](https://github.com/awesome-selfhosted/awesome-selfhosted#readme)\n- [FOSS Production Apps](https://github.com/DataDaoDe/awesome-foss-apps#readme)\n- [Gulp](https://github.com/alferov/awesome-gulp#readme) - Task runner.\n- [AMA](https://github.com/sindresorhus/amas#readme) - Ask Me Anything.\n\t- [Answers](https://github.com/stoeffel/awesome-ama-answers#readme)\n- [Open Source Photography](https://github.com/ibaaj/awesome-OpenSourcePhotography#readme)\n- [OpenGL](https://github.com/eug/awesome-opengl#readme) - Cross-platform API for rendering 2D and 3D graphics.\n- [GraphQL](https://github.com/chentsulin/awesome-graphql#readme)\n- [Transit](https://github.com/CUTR-at-USF/awesome-transit#readme)\n- [Research Tools](https://github.com/emptymalei/awesome-research#readme)\n- [Data Visualization](https://github.com/fasouto/awesome-dataviz#readme)\n- [Social Media Share Links](https://github.com/vinkla/shareable-links#readme)\n- [Microservices](https://github.com/mfornos/awesome-microservices#readme)\n- [Unicode](https://github.com/Wisdom/Awesome-Unicode#readme) - Unicode standards, quirks, packages and resources.\n\t- [Code Points](https://github.com/Codepoints/awesome-codepoints#readme)\n- [Beginner-Friendly Projects](https://github.com/MunGell/awesome-for-beginners#readme)\n- [Katas](https://github.com/gamontal/awesome-katas#readme)\n- [Tools for Activism](https://github.com/drewrwilson/toolsforactivism#readme)\n- [Citizen Science](https://github.com/dylanrees/citizen-science#readme) - For community-based and non-institutional scientists.\n- [MQTT](https://github.com/hobbyquaker/awesome-mqtt#readme) - \"Internet of Things\" connectivity protocol.\n- [Hacking Spots](https://github.com/daviddias/awesome-hacking-locations#readme)\n- [For Girls](https://github.com/cristianoliveira/awesome4girls#readme)\n- [Vorpal](https://github.com/vorpaljs/awesome-vorpal#readme) - Node.js CLI framework.\n- [Vulkan](https://github.com/vinjn/awesome-vulkan#readme) - Low-overhead, cross-platform 3D graphics and compute API.\n- [LaTeX](https://github.com/egeerardyn/awesome-LaTeX#readme) - Typesetting language.\n- [Economics](https://github.com/antontarasenko/awesome-economics#readme) - An economist's starter kit.\n- [Funny Markov Chains](https://github.com/sublimino/awesome-funny-markov#readme)\n- [Bioinformatics](https://github.com/danielecook/Awesome-Bioinformatics#readme)\n- [Cheminformatics](https://github.com/hsiaoyi0504/awesome-cheminformatics#readme) - Informatics techniques applied to problems in chemistry.\n- [Colorful](https://github.com/Siddharth11/Colorful#readme) - Choose your next color scheme.\n- [Steam](https://github.com/scholtzm/awesome-steam#readme) - Digital distribution platform.\n- [Bots](https://github.com/hackerkid/bots#readme) - Building bots.\n- [Site Reliability Engineering](https://github.com/dastergon/awesome-sre#readme)\n- [Empathy in Engineering](https://github.com/KimberlyMunoz/empathy-in-engineering#readme) - Building and promoting more compassionate engineering cultures.\n- [DTrace](https://github.com/xen0l/awesome-dtrace#readme) - Dynamic tracing framework.\n- [Userscripts](https://github.com/brunocvcunha/awesome-userscripts#readme) - Enhance your browsing experience.\n- [Pok\u00e9mon](https://github.com/tobiasbueschel/awesome-pokemon#readme) - Pok\u00e9mon and Pok\u00e9mon GO.\n- [ChatOps](https://github.com/exAspArk/awesome-chatops#readme) - Managing technical and business operations through a chat.\n- [Falsehood](https://github.com/kdeldycke/awesome-falsehood#readme) - Falsehoods programmers believe in.\n- [Domain-Driven Design](https://github.com/heynickc/awesome-ddd#readme) - Software development approach for complex needs by connecting the implementation to an evolving model.\n- [Quantified Self](https://github.com/woop/awesome-quantified-self#readme) - Self-tracking through technology.\n- [SaltStack](https://github.com/hbokh/awesome-saltstack#readme) - Python-based config management system.\n- [Web Design](https://github.com/nicolesaidy/awesome-web-design#readme) - For digital designers.\n- [Creative Coding](https://github.com/terkelg/awesome-creative-coding#readme) - Programming something expressive instead of something functional.\n- [No-Login Web Apps](https://github.com/aviaryan/awesome-no-login-web-apps#readme) - Web apps that work without login.\n- [Free Software](https://github.com/johnjago/awesome-free-software#readme) - Free as in freedom.\n- [Framer](https://github.com/podo/awesome-framer#readme) - Prototyping interactive UI designs.\n- [Markdown](https://github.com/BubuAnabelas/awesome-markdown#readme) - Markup language.\n- [Dev Fun](https://github.com/mislavcimpersak/awesome-dev-fun#readme) - Funny developer projects.\n- [Healthcare](https://github.com/kakoni/awesome-healthcare#readme) - Open source healthcare software for facilities, providers, developers, policy experts, and researchers.\n- [Magento 2](https://github.com/DavidLambauer/awesome-magento2#readme) - Open Source eCommerce built with PHP.\n- [TikZ](https://github.com/xiaohanyu/awesome-tikz#readme) - Graph drawing packages for TeX/LaTeX/ConTeXt.\n- [Neuroscience](https://github.com/analyticalmonk/awesome-neuroscience#readme) - Study of the nervous system and brain.\n- [Ad-Free](https://github.com/johnjago/awesome-ad-free#readme) - Ad-free alternatives.\n- [Esolangs](https://github.com/angrykoala/awesome-esolangs#readme) - Programming languages designed for experimentation or as jokes rather than actual use.\n- [Prometheus](https://github.com/roaldnefs/awesome-prometheus#readme) - Open-source monitoring system.\n- [Homematic](https://github.com/homematic-community/awesome-homematic#readme) - Smart home devices.\n- [Ledger](https://github.com/sfischer13/awesome-ledger#readme) - Double-entry accounting on the command-line.\n- [Uncopyright](https://github.com/johnjago/awesome-uncopyright#readme) - Public domain works.\n- [Crypto Currency Tools & Algorithms](https://github.com/Zheaoli/awesome-coins#readme) - Digital currency where encryption is used to regulate the generation of units and verify transfers.\n- [Diversity](https://github.com/folkswhocode/awesome-diversity#readme) - Creating a more inclusive and diverse tech community.\n- [Open Source Supporters](https://github.com/zachflower/awesome-open-source-supporters#readme) - Companies that offer their tools and services for free to open source projects.\n- [Design Principles](https://github.com/robinstickel/awesome-design-principles#readme) - Create better and more consistent designs and experiences.\n- [Theravada](https://github.com/johnjago/awesome-theravada#readme) - Teachings from the Theravada Buddhist tradition.\n- [inspectIT](https://github.com/inspectit-labs/awesome-inspectit#readme) - Open source Java app performance management tool.\n- [Open Source Maintainers](https://github.com/nayafia/awesome-maintainers#readme) - The experience of being an open source maintainer.\n- [Calculators](https://github.com/xxczaki/awesome-calculators#readme) - Calculators for every platform.\n- [Captcha](https://github.com/ZYSzys/awesome-captcha#readme) - A type of challenge\u2013response test used in computing to determine whether or not the user is human.\n- [Jupyter](https://github.com/markusschanta/awesome-jupyter#readme) - Create and share documents that contain code, equations, visualizations and narrative text.\n- [FIRST Robotics Competition](https://github.com/andrewda/awesome-frc#readme) - International high school robotics championship.\n- [Humane Technology](https://github.com/humanetech-community/awesome-humane-tech#readme) - Open source projects that help improve society.\n- [Speakers](https://github.com/karlhorky/awesome-speakers#readme) - Conference and meetup speakers in the programming and design community.\n- [Board Games](https://github.com/edm00se/awesome-board-games#readme) - Table-top gaming fun for all.\n- [Software Patreons](https://github.com/uraimo/awesome-software-patreons#readme) - Fund individual programmers or the development of open source projects.\n- [Parasite](https://github.com/ecohealthalliance/awesome-parasite#readme) - Parasites and host-pathogen interactions.\n- [Food](https://github.com/jzarca01/awesome-food#readme) - Food-related projects on GitHub.\n- [Mental Health](https://github.com/dreamingechoes/awesome-mental-health#readme) - Mental health awareness and self-care in the software industry.\n- [Bitcoin Payment Processors](https://github.com/alexk111/awesome-bitcoin-payment-processors#readme) - Start accepting Bitcoin.\n- [Scientific Computing](https://github.com/nschloe/awesome-scientific-computing#readme) - Solving complex scientific problems using computers.\n- [Amazon Sellers](https://github.com/ScaleLeap/awesome-amazon-seller#readme)\n- [Agriculture](https://github.com/beaorn/awesome-agriculture#readme) - Open source technology for farming and gardening.\n- [Product Design](https://github.com/teoga/awesome-product-design#readme) - Design a product from the initial concept to production.\n- [Prisma](https://github.com/catalinmiron/awesome-prisma#readme) - Turn your database into a GraphQL API.\n- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n- [Connectivity Data and Reports](https://github.com/stevesong/awesome-connectivity-info#readme) - Better understand who has access to telecommunication and internet infrastructure and on what terms.\n- [Stacks](https://github.com/stackshareio/awesome-stacks#readme) - Tech stacks for building different apps and features.\n- [Cytodata](https://github.com/cytodata/awesome-cytodata#readme) - Image-based profiling of biological phenotypes for computational biologists.\n- [IRC](https://github.com/davisonio/awesome-irc#readme) - Open source messaging protocol.\n- [Advertising](https://github.com/cenoura/awesome-ads#readme) - Advertising and programmatic media for websites.\n- [Earth](https://github.com/philsturgeon/awesome-earth#readme) - Find ways to resolve the climate crisis.\n- [Naming](https://github.com/gruhn/awesome-naming#readme) - Naming things in computer science done right.\n- [Biomedical Information Extraction](https://github.com/caufieldjh/awesome-bioie#readme) - How to extract information from unstructured biomedical data and text.\n- [Web Archiving](https://github.com/iipc/awesome-web-archiving#readme) - An effort to preserve the Web for future generations.\n\n## Related\n\n- [Awesome Indexed](https://awesome-indexed.mathew-davies.co.uk) - Search the Awesome dataset.\n- [Awesome Search](https://awesomelists.top) - Quick search for Awesome lists.\n- [StumbleUponAwesome](https://github.com/basharovV/StumbleUponAwesome) - Discover random pages from the Awesome dataset using a browser extension.\n- [Awesome CLI](https://github.com/umutphp/awesome-cli) - A simple command-line tool to dive into Awesome lists.\n"
 },
 {
  "repo": "kamranahmedse/developer-roadmap",
  "language": null,
  "readme_contents": "\n![Web Developer Roadmap - 2020](https://i.imgur.com/NNyc9QM.png)\n\n> Roadmap to becoming a web developer in 2020\n\n[![](https://img.shields.io/badge/-Roadmaps%20-0a0a0a.svg?style=flat&colorA=0a0a0a)](http://roadmap.sh)\n[![](https://img.shields.io/badge/-Guides-0a0a0a.svg?style=flat&colorA=0a0a0a)](http://roadmap.sh/guides)\n[![](https://img.shields.io/badge/-Translations-0a0a0a.svg?style=flat&colorA=0a0a0a)](./translations)\n[![](https://img.shields.io/badge/%E2%9D%A4-YouTube%20Channel-0a0a0a.svg?style=flat&colorA=0a0a0a)](https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1)\n\nBelow you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a frontend, backend or a devops. I made these charts for an old professor of mine who wanted something to share with his college students to give them a perspective; sharing them here to help the community.\n\n***\n\n<p align=\"center\">\n\t\t<sup>Special Announcement:</sup>\n\t\t<br>\n\t\t<a href=\"https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1\">\n\t\t\t<img width=\"70px\" src=\"https://roadmap.sh/sponsors/youtube.svg\">\n\t\t</a>\n\t\t<br>\n\t\t<sub><b>We now have a YouTube Channel</b></sub>\n\t\t<br>\n\t\t<sub>I plan on covering the roadmaps and put more content there<br><a href=\"https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1\">Subscribe to the channel</a>.</sub>\n</p>\n\n***\n\n<h3 align=\"center\"><strong>Purpose of these Roadmaps</strong></h3>\n\n> The purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would be better suited for some cases than the other and remember hip and trendy never means best suited for the job.\n\n<h3 align=\"center\"><strong>Note to Beginners</strong></h3>\n\n> These roadmaps cover everything that is there to learn for the paths listed below. Don't feel overwhelmed, you don't need to learn it all in the beginning if you are just getting started. We are working on the beginner versions of these and will [release it soon](https://roadmap.sh) after we are done with the 2020 release of the Backend and DevOps roadmaps.\n\n***\n\nIf you think that these can be improved in any way, please do suggest.\n\n## Introduction\n\n![Web Developer Roadmap Introduction](./img/intro.png)\n\n## Frontend Roadmap\n\n[![](https://img.shields.io/badge/-Download%20PDF%20-0a0a0a.svg?style=flat&colorA=0a0a0a)](https://gum.co/frontend-roadmap) [![](https://img.shields.io/badge/-Shareable%20Link%20-0a0a0a.svg?style=flat&colorA=0a0a0a)](https://roadmap.sh/frontend)\n\n![Frontend Roadmap](./img/frontend.png?year-2020-2)\n\n## Back-end Roadmap \n\n[![](https://img.shields.io/badge/-Download%20PDF%20-0a0a0a.svg?style=flat&colorA=0a0a0a)](https://gum.co/backend-roadmap) [![](https://img.shields.io/badge/-Shareable%20Link%20-0a0a0a.svg?style=flat&colorA=0a0a0a)](https://roadmap.sh/backend)\n\n![Back-end Roadmap](./img/backend.png?year-2020-2)\n\n## DevOps Roadmap\n\n[![](https://img.shields.io/badge/-Download%20PDF%20-0a0a0a.svg?style=flat&colorA=0a0a0a)](https://gum.co/devops-roadmap) [![](https://img.shields.io/badge/-Shareable%20Link%20-0a0a0a.svg?style=flat&colorA=0a0a0a)](https://roadmap.sh/devops)\n\n![DevOps Roadmap](./img/devops.png)\n\n## \ud83d\udea6 Wrap Up\n\nIf you think any of the roadmaps can be improved, feel free to discuss it in the issues. Also, I will continue to improve this, so you might want to watch this repository or subscribe at [roadmap.sh](http://roadmap.sh) to revisit.\n\n## \ud83d\ude4c Contribution\n\n> Have a look at [contribution docs](./CONTRIBUTING.md) for how to update any of the roadmaps\n\n- Open pull request with improvements\n- Discuss ideas in issues\n- Spread the word\n- Reach out with any feedback [![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/kamranahmedse.svg?style=social&label=Follow%20%40kamranahmedse)](https://twitter.com/kamranahmedse)\n \n## License\n\nHave a look at the [license file](./LICENSE) for details\n"
 },
 {
  "repo": "donnemartin/system-design-primer",
  "language": "Python",
  "readme_contents": "*[English](README.md) \u2219 [\u65e5\u672c\u8a9e](README-ja.md) \u2219 [\u7b80\u4f53\u4e2d\u6587](README-zh-Hans.md) \u2219 [\u7e41\u9ad4\u4e2d\u6587](README-zh-TW.md) | [\u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e](https://github.com/donnemartin/system-design-primer/issues/170) \u2219 [\u09ac\u09be\u0982\u09b2\u09be](https://github.com/donnemartin/system-design-primer/issues/220) \u2219 [Portugu\u00eas do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) \u2219 [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) \u2219 [\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac](https://github.com/donnemartin/system-design-primer/issues/130) \u2219 [\u05e2\u05d1\u05e8\u05d9\u05ea](https://github.com/donnemartin/system-design-primer/issues/272) \u2219 [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) \u2219 [\u97d3\u570b\u8a9e](https://github.com/donnemartin/system-design-primer/issues/102) \u2219 [\u0641\u0627\u0631\u0633\u06cc](https://github.com/donnemartin/system-design-primer/issues/110) \u2219 [Polski](https://github.com/donnemartin/system-design-primer/issues/68) \u2219 [\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a](https://github.com/donnemartin/system-design-primer/issues/87) \u2219 [Espa\u00f1ol](https://github.com/donnemartin/system-design-primer/issues/136) \u2219 [\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22](https://github.com/donnemartin/system-design-primer/issues/187) \u2219 [T\u00fcrk\u00e7e](https://github.com/donnemartin/system-design-primer/issues/39) \u2219 [ti\u1ebfng Vi\u1ec7t](https://github.com/donnemartin/system-design-primer/issues/127) \u2219 [Fran\u00e7ais](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*\n\n# \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u5165\u9580\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/jj3A5N8.png\"/>\n  <br/>\n</p>\n\n## \u52d5\u6a5f\u30fb\u76ee\u7684\n\n> \u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u5b66\u3076\n>\n> \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u5099\u3048\u308b\n\n### \u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08\u3092\u5b66\u3076\n\n\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u5b66\u3076\u3053\u3068\u306f\u3001\u3088\u308a\u826f\u3044\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u306a\u308b\u3053\u3068\u306b\u8cc7\u3059\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306f\u3068\u3066\u3082\u5e83\u7bc4\u306a\u30c8\u30d4\u30c3\u30af\u3092\u542b\u307f\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u539f\u7406\u306b\u3064\u3044\u3066\u306f **\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306b\u306f\u81a8\u5927\u306a\u91cf\u306e\u6587\u732e\u304c\u6563\u3089\u3070\u3063\u3066\u3044\u307e\u3059\u3002**\n\n\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\u306b\u5fc5\u8981\u306a\u77e5\u8b58\u3092\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u308b **\u6587\u732e\u30ea\u30b9\u30c8\u3092\u4f53\u7cfb\u7684\u306b\u307e\u3068\u3081\u305f\u3082\u306e** \u3067\u3059\u3002\n\n### \u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5b66\u3076\n\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u3053\u308c\u304b\u3089\u3082\u305a\u3063\u3068\u66f4\u65b0\u3055\u308c\u3066\u3044\u304f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u6bb5\u968e\u306b\u3059\u304e\u307e\u305b\u3093\u3002\n\n[Contributions](#contributing) \u306f\u5927\u6b53\u8fce\u3067\u3059\uff01\n\n### \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u5099\u3048\u308b\n\n\u30b3\u30fc\u30c9\u6280\u8853\u9762\u63a5\u306b\u52a0\u3048\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306b\u95a2\u3059\u308b\u77e5\u8b58\u306f\u3001\u591a\u304f\u306e\u30c6\u30c3\u30af\u4f01\u696d\u306b\u304a\u3051\u308b **\u6280\u8853\u63a1\u7528\u9762\u63a5\u30d7\u30ed\u30bb\u30b9** \u3067 **\u5fc5\u8981\u4e0d\u53ef\u6b20\u306a\u8981\u7d20** \u3067\u3059\u3002\n\n**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u306e\u983b\u51fa\u8cea\u554f\u306b\u5099\u3048**\u3001\u81ea\u5206\u306e\u89e3\u7b54\u3068*\u6a21\u7bc4\u89e3\u7b54*:\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u3001\u30b3\u30fc\u30c9\u305d\u3057\u3066\u56f3\u8868\u306a\u3069\u3092*\u6bd4\u8f03*\u3057\u3066\u5b66\u3073\u307e\u3057\u3087\u3046\u3002\n\n\u9762\u63a5\u6e96\u5099\u306b\u5f79\u7acb\u3064\u305d\u306e\u4ed6\u306e\u30c8\u30d4\u30c3\u30af:\n\n* [\u5b66\u7fd2\u6307\u91dd](#\u5b66\u7fd2\u6307\u91dd)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u6e96\u5099\u3059\u308b\u304b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b **\u3068\u305d\u306e\u89e3\u7b54**](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54)\n* [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3001 **\u3068\u305d\u306e\u89e3\u7b54**](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54)\n* [\u305d\u306e\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u4f8b](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c)\n\n## \u6697\u8a18\u30ab\u30fc\u30c9\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/zdCAkB3.png\"/>\n  <br/>\n</p>\n\n\u3053\u306e[Anki\u7528\u30d5\u30e9\u30c3\u30b7\u30e5\u30ab\u30fc\u30c9\u30c7\u30c3\u30ad](https://apps.ankiweb.net/) \u306f\u3001\u9593\u9694\u53cd\u5fa9\u3092\u6d3b\u7528\u3057\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30ad\u30fc\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u5b66\u7fd2\u3092\u652f\u63f4\u3057\u307e\u3059\u3002\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c7\u30c3\u30ad](resources/flash_cards/System%20Design.apkg)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u7df4\u7fd2\u8ab2\u984c\u30c7\u30c3\u30ad](resources/flash_cards/System%20Design%20Exercises.apkg)\n* [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u7df4\u7fd2\u8ab2\u984c\u30c7\u30c3\u30ad](resources/flash_cards/OO%20Design.apkg)\n\n\u5916\u51fa\u5148\u3084\u79fb\u52d5\u4e2d\u306e\u52c9\u5f37\u306b\u5f79\u7acb\u3064\u3067\u3057\u3087\u3046\u3002\n\n### \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6280\u8853\u8ab2\u984c\u7528\u306e\u554f\u984c: \u7df4\u7fd2\u7528\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30b3\u30fc\u30c9\u6280\u8853\u9762\u63a5\u7528\u306e\u554f\u984c\u3092\u63a2\u3057\u3066\u3044\u308b\u5834\u5408\u306f[**\u3053\u3061\u3089**](https://github.com/donnemartin/interactive-coding-challenges)\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/b4YtAEN.png\"/>\n  <br/>\n</p>\n\n\u59c9\u59b9\u30ea\u30dd\u30b8\u30c8\u30ea\u306e [**Interactive Coding Challenges**](https://github.com/donnemartin/interactive-coding-challenges)\u3082\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u8ffd\u52a0\u306e\u6697\u8a18\u30c7\u30c3\u30ad\u30ab\u30fc\u30c9\u3082\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n* [Coding deck](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## \u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\n\n> \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5b66\u3076\n\n\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u7b49\u306e\u8ca2\u732e\u306f\u7a4d\u6975\u7684\u306b\u304a\u9858\u3044\u3057\u307e\u3059:\n\n* \u30a8\u30e9\u30fc\u4fee\u6b63\n* \u30bb\u30af\u30b7\u30e7\u30f3\u5185\u5bb9\u6539\u5584\n* \u65b0\u898f\u30bb\u30af\u30b7\u30e7\u30f3\u8ffd\u52a0\n* [\u7ffb\u8a33\u3059\u308b](https://github.com/donnemartin/system-design-primer/issues/28)\n\n\u73fe\u5728\u3001\u5185\u5bb9\u306e\u6539\u5584\u304c\u5fc5\u8981\u306a\u4f5c\u696d\u4e2d\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f[\u3053\u3061\u3089](#\u9032\u884c\u4e2d\u306e\u4f5c\u696d)\u3067\u3059\u3002\n\n\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u306e\u524d\u306b[Contributing Guidelines](CONTRIBUTING.md)\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21\n\n> \u8cdb\u5426\u3082\u542b\u3081\u305f\u69d8\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u5404\u30c8\u30d4\u30c3\u30af\u306e\u6982\u8981\u3002 **\u5168\u3066\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308a\u307e\u3059\u3002**\n>\n> \u305d\u308c\u305e\u308c\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3088\u308a\u5b66\u3073\u3092\u6df1\u3081\u308b\u3088\u3046\u306a\u4ed6\u306e\u6587\u732e\u3078\u306e\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/jrUBAF7.png\"/>\n  <br/>\n</p>\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af: \u307e\u305a\u306f\u3053\u3053\u304b\u3089](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u30b9-\u307e\u305a\u306f\u3053\u3053\u304b\u3089)\n    * [Step 1: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u898b\u308b](#\u30b9\u30c6\u30c3\u30d7-1-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u89b3\u3066\u5fa9\u7fd2\u3059\u308b)\n    * [Step 2: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3092\u8aad\u3080](#\u30b9\u30c6\u30c3\u30d7-2-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3092\u8aad\u3093\u3067\u5fa9\u7fd2\u3059\u308b)\n    * [\u6b21\u306e\u30b9\u30c6\u30c3\u30d7](#\u6b21\u306e\u30b9\u30c6\u30c3\u30d7)\n* [\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 vs \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9-vs-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3)\n* [\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8](#\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc-vs-\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8)\n* [\u53ef\u7528\u6027 vs \u4e00\u8cab\u6027](#\u53ef\u7528\u6027-vs-\u4e00\u8cab\u6027)\n    * [CAP\u7406\u8ad6](#cap-\u7406\u8ad6)\n        * [CP - \u4e00\u8cab\u6027(consistency)\u3068\u5206\u5272\u6027(partition)\u8010\u6027](#cp---\u4e00\u8cab\u6027\u3068\u5206\u65ad\u8010\u6027consistency-and-partition-tolerance)\n        * [AP - \u53ef\u7528\u6027(availability)\u3068\u5206\u5272\u6027(partition)\u8010\u6027](#ap---\u53ef\u7528\u6027\u3068\u5206\u65ad\u8010\u6027availability-and-partition-tolerance)\n* [\u4e00\u8cab\u6027 \u30d1\u30bf\u30fc\u30f3](#\u4e00\u8cab\u6027\u30d1\u30bf\u30fc\u30f3)\n    * [\u5f31\u3044\u4e00\u8cab\u6027](#\u5f31\u3044\u4e00\u8cab\u6027)\n    * [\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027)\n    * [\u5f37\u3044\u4e00\u8cab\u6027](#\u5f37\u3044\u4e00\u8cab\u6027)\n* [\u53ef\u7528\u6027 \u30d1\u30bf\u30fc\u30f3](#\u53ef\u7528\u6027\u30d1\u30bf\u30fc\u30f3)\n    * [\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc](#\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc)\n    * [\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* [\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0(DNS)](#\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0)\n* [\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(CDN)](#\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30afcontent-delivery-network)\n    * [\u30d7\u30c3\u30b7\u30e5CDN](#\u30d7\u30c3\u30b7\u30e5cdn)\n    * [\u30d7\u30ebCDN](#\u30d7\u30ebcdn)\n* [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc](#\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc)\n    * [\u30a2\u30af\u30c6\u30a3\u30d6/\u30d1\u30c3\u30b7\u30d6\u69cb\u6210](#\u30a2\u30af\u30c6\u30a3\u30d6\u30d1\u30c3\u30b7\u30d6)\n    * [\u30a2\u30af\u30c6\u30a3\u30d6/\u30a2\u30af\u30c6\u30a3\u30d6\u69cb\u6210](#\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6)\n    * [Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](#layer-4-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n    * [Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](#layer-7-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n    * [\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0](#\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0)\n* [\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7 (WEB\u30b5\u30fc\u30d0\u30fc)](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc)\n    * [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc vs \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7](#\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc-vs-\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7)\n* [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc](#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64)\n    * [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9](#\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9)\n    * [\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30fc](#service-discovery)\n* [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\n    * [\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0 (RDBMS)](#\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0-rdbms)\n        * [\u30de\u30b9\u30bf\u30fc/\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n        * [\u30de\u30b9\u30bf\u30fc/\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n        * [\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3](#federation)\n        * [\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0](#\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0)\n        * [\u30c7\u30ce\u30fc\u30de\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3](#\u975e\u6b63\u898f\u5316)\n        * [SQL \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0](#sql\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0)\n    * [NoSQL](#nosql)\n        * [\u30ad\u30fc/\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2](#\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2)\n        * [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2](#\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2)\n        * [\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2](#\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2)\n        * [\u30b0\u30e9\u30d5 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\n    * [SQL or NoSQL](#sql\u304bnosql\u304b)\n* [\u30ad\u30e3\u30c3\u30b7\u30e5](#\u30ad\u30e3\u30c3\u30b7\u30e5)\n    * [\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [CDN\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#cdn\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [Web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3059\u308b](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3059\u308b](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u306e\u304b](#\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b)\n        * [\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9](#\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9)\n        * [\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc](#\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc)\n        * [\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9 (\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)](#\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9-\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)\n        * [\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9](#\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9)\n* [\u975e\u540c\u671f\u51e6\u7406](#\u975e\u540c\u671f\u51e6\u7406)\n    * [\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc](#\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc)\n    * [\u30bf\u30b9\u30af\u30ad\u30e5\u30fc](#\u30bf\u30b9\u30af\u30ad\u30e5\u30fc)\n    * [\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc](#\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc)\n* [\u901a\u4fe1](#\u901a\u4fe1)\n    * [\u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb (TCP)](#\u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb-tcp)\n    * [\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb (UDP)](#\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb-udp)\n    * [\u9060\u9694\u624b\u7d9a\u547c\u51fa (RPC)](#\u9060\u9694\u624b\u7d9a\u547c\u51fa-rpc)\n    * [Representational state transfer (REST)](#representational-state-transfer-rest)\n* [\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3](#\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3)\n* [\u88dc\u907a](#\u88dc\u907a)\n    * [2\u306e\u4e57\u6570\u8868](#2\u306e\u4e57\u6570\u8868)\n    * [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024](#\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024)\n    * [\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c)\n    * [\u5b9f\u4e16\u754c\u3067\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3)\n    * [\u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3)\n    * [\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0](#\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0)\n* [\u4f5c\u696d\u4e2d](#\u9032\u884c\u4e2d\u306e\u4f5c\u696d)\n* [\u30af\u30ec\u30b8\u30c3\u30c8](#\u30af\u30ec\u30b8\u30c3\u30c8)\n* [\u9023\u7d61\u60c5\u5831](#contact-info)\n* [\u30e9\u30a4\u30bb\u30f3\u30b9](#license)\n\n## \u5b66\u7fd2\u6307\u91dd\n\n> \u5b66\u7fd2\u30b9\u30d1\u30f3\u306b\u5fdc\u3058\u3066\u307f\u308b\u3079\u304d\u30c8\u30d4\u30c3\u30af\u30b9 (short, medium, long)\n\n![Imgur](http://i.imgur.com/OfVllex.png)\n\n**Q: \u9762\u63a5\u306e\u305f\u3081\u306b\u306f\u3001\u3053\u3053\u306b\u3042\u308b\u3082\u306e\u3059\u3079\u3066\u3092\u3084\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f**\n\n**A: \u3044\u3048\u3001\u3053\u3053\u306b\u3042\u308b\u3059\u3079\u3066\u3092\u3084\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002**\n\n\u9762\u63a5\u3067\u4f55\u3092\u805e\u304b\u308c\u308b\u304b\u306f\u4ee5\u4e0b\u306e\u6761\u4ef6\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059:\n\n* \u3069\u308c\u3060\u3051\u306e\u6280\u8853\u7d4c\u9a13\u304c\u3042\u308b\u304b\n* \u3042\u306a\u305f\u306e\u6280\u8853\u80cc\u666f\u304c\u4f55\u3067\u3042\u308b\u304b\n* \u3069\u306e\u30dd\u30b8\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u9762\u63a5\u3092\u53d7\u3051\u3066\u3044\u308b\u304b\n* \u3069\u306e\u4f01\u696d\u306e\u9762\u63a5\u3092\u53d7\u3051\u3066\u3044\u308b\u304b\n* \u904b\n\n\u3088\u308a\u7d4c\u9a13\u306e\u3042\u308b\u5019\u88dc\u8005\u306f\u4e00\u822c\u7684\u306b\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306b\u3064\u3044\u3066\u3088\u308a\u6df1\u3044\u77e5\u8b58\u3092\u6709\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u8981\u6c42\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u30b7\u30b9\u30c6\u30e0\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u3084\u30c1\u30fc\u30e0\u30ea\u30fc\u30c0\u30fc\u306f\u5404\u30e1\u30f3\u30d0\u30fc\u306e\u6301\u3064\u3088\u3046\u306a\u77e5\u8b58\u3088\u308a\u306f\u6df1\u3044\u898b\u8b58\u3092\u6301\u3063\u3066\u3044\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\u4e00\u6d41\u30c6\u30c3\u30af\u4f01\u696d\u3067\u306f\u8907\u6570\u56de\u306e\u8a2d\u8a08\u9762\u63a5\u3092\u8ab2\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\n\u307e\u305a\u306f\u5e83\u304f\u59cb\u3081\u3066\u3001\u305d\u3053\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u5206\u91ce\u306b\u7d5e\u3063\u3066\u6df1\u3081\u3066\u3044\u304f\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u69d8\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30c8\u30d4\u30c3\u30af\u306b\u3064\u3044\u3066\u5c11\u3057\u305a\u3064\u77e5\u3063\u3066\u304a\u304f\u3053\u3068\u306f\u3044\u3044\u3053\u3068\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u5b66\u7fd2\u30ac\u30a4\u30c9\u3092\u81ea\u5206\u306e\u5b66\u7fd2\u306b\u5f53\u3066\u3089\u308c\u308b\u6642\u9593\u3001\u6280\u8853\u7d4c\u9a13\u3001\u3069\u306e\u8077\u4f4d\u3001\u3069\u306e\u4f1a\u793e\u306b\u5fdc\u52df\u3057\u3066\u3044\u308b\u304b\u306a\u3069\u3092\u52a0\u5473\u3057\u3066\u81ea\u5206\u7528\u306b\u8abf\u6574\u3057\u3066\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n* **\u77ed\u671f\u9593** - **\u5e45\u5e83\u304f** \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u3044\u304f\u3064\u304b\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n* **\u4e2d\u671f\u9593** - **\u5e45\u5e83\u304f** \u305d\u3057\u3066 **\u305d\u308c\u306a\u308a\u306b\u6df1\u304f**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u591a\u304f\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n* **\u9577\u671f\u9593** - **\u5e45\u5e83\u304f** \u305d\u3057\u3066 **\u3082\u3063\u3068\u6df1\u304f**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u307b\u307c\u5168\u3066\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n\n| | \u77ed\u671f\u9593 | \u4e2d\u671f\u9593 | \u9577\u671f\u9593 |\n|---|---|---|---|\n| [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21) \u3092\u8aad\u307f\u3001\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u6a5f\u5e8f\u306b\u3064\u3044\u3066\u5e83\u304f\u77e5\u308b | :+1: | :+1: | :+1: |\n| \u6b21\u306e\u30ea\u30f3\u30af\u5148\u306e\u3044\u304f\u3064\u304b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3093\u3067 [\u5404\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u30d6\u30ed\u30b0](#\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0) \u5fdc\u52df\u3059\u308b\u4f1a\u793e\u306b\u3064\u3044\u3066\u77e5\u308b | :+1: | :+1: | :+1: |\n| \u6b21\u306e\u30ea\u30f3\u30af\u5148\u306e\u3044\u304f\u3064\u304b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3080 [\u5b9f\u4e16\u754c\u3067\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3) | :+1: | :+1: | :+1: |\n| \u5fa9\u7fd2\u3059\u308b [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u6e96\u5099\u3059\u308b\u304b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b) | :+1: | :+1: | :+1: |\n| \u3068\u308a\u3042\u3048\u305a\u4e00\u5468\u3059\u308b [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54) | Some | Many | Most |\n| \u3068\u308a\u3042\u3048\u305a\u4e00\u5468\u3059\u308b [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54) | Some | Many | Most |\n| \u5fa9\u7fd2\u3059\u308b [\u305d\u306e\u4ed6\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u306e\u8cea\u554f\u4f8b](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c) | Some | Many | Most |\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b\n\n> \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8a66\u9a13\u554f\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u53d6\u308a\u7d44\u3080\u304b\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306f **open-ended conversation(Yes/No\u3067\u306f\u7b54\u3048\u3089\u308c\u306a\u3044\u53e3\u982d\u8cea\u554f)\u3067\u3059**\u3002 \u81ea\u5206\u3067\u4f1a\u8a71\u3092\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u8b70\u8ad6\u3092\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u904e\u7a0b\u3092\u78ba\u304b\u306a\u3082\u306e\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3[\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54](#system-design-interview-questions-with-solutions) \u3092\u4ee5\u4e0b\u306e\u6307\u91dd\u306b\u5f93\u3063\u3066\u8aad\u307f\u8fbc\u3080\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u30b9\u30c6\u30c3\u30d7 1: \u305d\u306e\u30b7\u30b9\u30c6\u30e0\u4f7f\u7528\u4f8b\u306e\u6982\u8981\u3001\u5236\u7d04\u3001\u63a8\u8a08\u5024\u7b49\u3092\u805e\u304d\u51fa\u3057\u3001\u307e\u3068\u3081\u308b\n\n\u30b7\u30b9\u30c6\u30e0\u4ed5\u69d8\u306e\u8981\u6c42\u4e8b\u9805\u3092\u805e\u304d\u51fa\u3057\u3001\u554f\u984c\u7b87\u6240\u3092\u7279\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\u4f7f\u7528\u4f8b\u3068\u5236\u7d04\u3092\u660e\u78ba\u306b\u3059\u308b\u305f\u3081\u306e\u8cea\u554f\u3092\u6295\u3052\u304b\u3051\u307e\u3057\u3087\u3046\u3002\u8981\u6c42\u3059\u308b\u63a8\u8a08\u5024\u306b\u3064\u3044\u3066\u3082\u8b70\u8ad6\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n* \u8ab0\u304c\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\u306e\u304b\uff1f\n* \u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\uff1f\n* \u4f55\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u3044\u308b\u306e\u304b\uff1f\n* \u30b7\u30b9\u30c6\u30e0\u306f\u3069\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u679c\u305f\u3059\u306e\u304b\uff1f\n* \u30b7\u30b9\u30c6\u30e0\u3078\u306e\u5165\u529b\u3068\u51fa\u529b\u306f\uff1f\n* \u3069\u308c\u3060\u3051\u306e\u5bb9\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u634c\u304f\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\uff1f\n* \u4e00\u79d2\u9593\u306b\u4f55\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u9001\u4fe1\u304c\u60f3\u5b9a\u3055\u308c\u308b\u304b\uff1f\n* \u8aad\u307f\u66f8\u304d\u6bd4\u7387\u306e\u63a8\u5b9a\u5024\u306f\u3044\u304f\u3089\u7a0b\u5ea6\u304b\uff1f\n\n### \u30b9\u30c6\u30c3\u30d7 2: \u3088\u308a\u9ad8\u30ec\u30d9\u30eb\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u7d44\u307f\u7acb\u3066\u308b\n\n\u91cd\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5168\u3066\u8003\u616e\u3057\u305f\u9ad8\u30ec\u30d9\u30eb\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u6982\u8981\u3092\u7d44\u307f\u7acb\u3066\u308b\u3002\n\n* \u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u63a5\u7d9a\u3092\u30b9\u30b1\u30c3\u30c1\u3057\u3066\u66f8\u304d\u51fa\u3059\n* \u8003\u3048\u306e\u88cf\u4ed8\u3051\u3092\u3059\u308b\n\n### \u30b9\u30c6\u30c3\u30d7 3: \u6838\u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8a2d\u8a08\u3059\u308b\n\n\u305d\u308c\u305e\u308c\u306e\u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u3092\u5b66\u3076\u3002\u4f8b\u3048\u3070\u3001[url\u77ed\u7e2e\u30b5\u30fc\u30d3\u30b9](solutions/system_design/pastebin/README.md)\u306e\u8a2d\u8a08\u3092\u554f\u308f\u308c\u305f\u969b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u5143\u306eURL\u306e\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u305f\u3082\u306e\u3092\u4f5c\u308a\u3001\u305d\u308c\u3092\u4fdd\u5b58\u3059\u308b\n    * [MD5](solutions/system_design/pastebin/README.md) \u3068 [Base62](solutions/system_design/pastebin/README.md)\n    * \u30cf\u30c3\u30b7\u30e5\u885d\u7a81\n    * SQL \u3082\u3057\u304f\u306f NoSQL\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\n* \u30cf\u30c3\u30b7\u30e5\u5316\u3055\u308c\u305fURL\u3092\u5143\u306eURL\u306b\u518d\u7ffb\u8a33\u3059\u308b\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u53c2\u7167\n* API & \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u8a2d\u8a08\n\n### \u30b9\u30c6\u30c3\u30d7 4: \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30b9\u30b1\u30fc\u30eb\n\n\u4e0e\u3048\u3089\u308c\u305f\u5236\u7d04\u6761\u4ef6\u304b\u3089\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3068\u306a\u308a\u305d\u3046\u306a\u3068\u3053\u308d\u3092\u5272\u308a\u51fa\u3057\u3001\u660e\u78ba\u5316\u3059\u308b\u3002  \u4f8b\u3048\u3070\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u554f\u984c\u89e3\u6c7a\u306e\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u8981\u7d20\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3060\u308d\u3046\u304b\uff1f\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n* \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n* \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n\u53d6\u308a\u3046\u308b\u89e3\u6c7a\u7b56\u3068\u305d\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3092\u3057\u3088\u3046\u3002\u5168\u3066\u306e\u3053\u3068\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b\u3002\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u3064\u3044\u3066\u306f[\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u539f\u7406](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21)\u3092\u8aad\u3080\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u3061\u3087\u3063\u3068\u3057\u305f\u6697\u7b97\u554f\u984c\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u63a8\u8a08\u5024\u3092\u624b\u8a08\u7b97\u3067\u3059\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002[\u88dc\u907a](#\u88dc\u907a)\u306e\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046:\n\n* [\u30c1\u30e9\u88cf\u8a08\u7b97\u3067\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3059\u308b](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [2\u306e\u4e57\u6570\u8868](#2\u306e\u4e57\u6570\u8868)\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u3063\u3066\u304a\u304f\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u306e\u53c2\u8003\u5024](#\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024)\n\n### \u6587\u732e\u3068\u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\n\n\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u5148\u30da\u30fc\u30b8\u3092\u898b\u3066\u3069\u306e\u3088\u3046\u306a\u8cea\u554f\u3092\u6295\u3052\u304b\u3051\u3089\u308c\u308b\u304b\u6982\u8981\u3092\u982d\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046:\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u6210\u529f\u3059\u308b\u306b\u306f\uff1f](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5](http://www.hiredintech.com/system-design)\n* [\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3078\u306e\u5c0e\u5165](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54\n\n> \u983b\u51fa\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u53c2\u8003\u89e3\u7b54\u3001\u30b3\u30fc\u30c9\u53ca\u3073\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n>\n> \u89e3\u7b54\u306f `solutions/` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b\n\n| \u554f\u984c | |\n|---|---|\n| Pastebin.com (\u3082\u3057\u304f\u306f Bit.ly) \u3092\u8a2d\u8a08\u3059\u308b| [\u89e3\u7b54](solutions/system_design/pastebin/README.md) |\n| Twitter\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3 (\u3082\u3057\u304f\u306fFacebook\u30d5\u30a3\u30fc\u30c9)\u3092\u8a2d\u8a08\u3059\u308b<br/>Twitter\u691c\u7d22(\u3082\u3057\u304f\u306fFacebook\u691c\u7d22)\u6a5f\u80fd\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/twitter/README.md) |\n| \u30a6\u30a7\u30d6\u30af\u30ed\u30fc\u30e9\u30fc\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/web_crawler/README.md) |\n| Mint.com\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/mint/README.md) |\n| SNS\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/social_graph/README.md) |\n| \u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u30ad\u30fc/\u30d0\u30ea\u30e5\u30fc\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/query_cache/README.md) |\n| Amazon\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306e\u58f2\u308a\u4e0a\u3052\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/sales_rank/README.md) |\n| AWS\u4e0a\u3067100\u4e07\u4eba\u898f\u6a21\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/scaling_aws/README.md) |\n| \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u554f\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### Pastebin.com (\u3082\u3057\u304f\u306f Bit.ly) \u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/pastebin/README.md)\n\n![Imgur](http://i.imgur.com/4edXG0T.png)\n\n### Twitter\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3&\u691c\u7d22 (\u3082\u3057\u304f\u306fFacebook\u30d5\u30a3\u30fc\u30c9&\u691c\u7d22)\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/twitter/README.md)\n\n![Imgur](http://i.imgur.com/jrUBAF7.png)\n\n### \u30a6\u30a7\u30d6\u30af\u30ed\u30fc\u30e9\u30fc\u306e\u8a2d\u8a08\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/web_crawler/README.md)\n\n![Imgur](http://i.imgur.com/bWxPtQA.png)\n\n### Mint.com\u306e\u8a2d\u8a08\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/mint/README.md)\n\n![Imgur](http://i.imgur.com/V5q57vU.png)\n\n### SNS\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/social_graph/README.md)\n\n![Imgur](http://i.imgur.com/cdCv5g7.png)\n\n### \u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u30ad\u30fc/\u30d0\u30ea\u30e5\u30fc\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/query_cache/README.md)\n\n![Imgur](http://i.imgur.com/4j99mhe.png)\n\n### Amazon\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306e\u58f2\u308a\u4e0a\u3052\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/sales_rank/README.md)\n\n![Imgur](http://i.imgur.com/MzExP06.png)\n\n### AWS\u4e0a\u3067100\u4e07\u4eba\u898f\u6a21\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/scaling_aws/README.md)\n\n![Imgur](http://i.imgur.com/jj3A5N8.png)\n\n## \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54\n\n> \u983b\u51fa\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u53c2\u8003\u89e3\u7b54\u3001\u30b3\u30fc\u30c9\u53ca\u3073\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n>\n> \u89e3\u7b54\u306f `solutions/` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b\n\n>**\u5099\u8003: \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u4f5c\u696d\u4e2d\u3067\u3059**\n\n| \u554f\u984c | |\n|---|---|\n| \u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/hash_table/hash_map.ipynb)  |\n| LRU\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |\n| \u30b3\u30fc\u30eb\u30bb\u30f3\u30bf\u30fc\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/call_center/call_center.ipynb)  |\n| \u30ab\u30fc\u30c9\u306e\u30c7\u30c3\u30ad\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |\n| \u99d0\u8eca\u5834\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |\n| \u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/online_chat/online_chat.ipynb)  |\n| \u5186\u5f62\u914d\u5217\u306e\u8a2d\u8a08 | [Contribute](#contributing)  |\n| \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u554f\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u30b9: \u307e\u305a\u306f\u3053\u3053\u304b\u3089\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u52c9\u5f37\u306f\u521d\u3081\u3066\uff1f\n\n\u307e\u305a\u521d\u3081\u306b\u3001\u3088\u304f\u4f7f\u308f\u308c\u308b\u8a2d\u8a08\u539f\u7406\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u3089\u304c\u4f55\u3067\u3042\u308b\u304b\u3001\u3069\u306e\u3088\u3046\u306b\u7528\u3044\u3089\u308c\u308b\u304b\u3001\u9577\u6240\u77ed\u6240\u306b\u3064\u3044\u3066\u57fa\u672c\u7684\u306a\u77e5\u8b58\u3092\u5f97\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n### \u30b9\u30c6\u30c3\u30d7 1: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u89b3\u3066\u5fa9\u7fd2\u3059\u308b\n\n[Harvard\u3067\u306e\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u8b1b\u7fa9](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* \u3053\u3053\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u30c8\u30d4\u30c3\u30af\u30b9:\n    * \u5782\u76f4\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n    * \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n    * \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n    * \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\n\n### \u30b9\u30c6\u30c3\u30d7 2: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3092\u8aad\u3093\u3067\u5fa9\u7fd2\u3059\u308b\n\n[\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http://www.lecloud.net/tagged/scalability/chrono)\n\n* \u3053\u3053\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u30c8\u30d4\u30c3\u30af\u30b9:\n    * [\u30af\u30ed\u30fc\u30f3](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [\u30ad\u30e3\u30c3\u30b7\u30e5](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [\u975e\u540c\u671f](http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\n\n\u6b21\u306b\u3001\u30cf\u30a4\u30ec\u30d9\u30eb\u3067\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u3064\u3044\u3066\u307f\u3066\u3044\u304f:\n\n* **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** vs **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3**\n* **\u30ec\u30a4\u30c6\u30f3\u30b7** vs **\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8**\n* **\u53ef\u7528\u6027** vs **\u4e00\u8cab\u6027**\n\n**\u5168\u3066\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b**\u3068\u3044\u3046\u306e\u3092\u809d\u306b\u547d\u3058\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u308c\u304b\u3089\u3001\u3088\u308a\u6df1\u3044\u5185\u5bb9\u3001DNS\u3084CDN\u305d\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306a\u3069\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n## \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 vs \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\n\n\u30ea\u30bd\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306e\u306b\u3064\u308c\u3066 **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** \u304c\u5411\u4e0a\u3059\u308b\u5834\u5408\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306f **\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb** \u3067\u3042\u308b\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002\u4e00\u822c\u7684\u306b\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3068\u3044\u3046\u306e\u306f\u3059\u306a\u308f\u3061\u8a08\u7b97\u51e6\u7406\u3092\u5897\u3084\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u304c\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u5897\u3048\u305f\u6642\u306a\u3069\u3088\u308a\u5927\u304d\u306a\u51e6\u7406\u3092\u634c\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\u3002<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9vs\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u3068\u3089\u3048\u308b\u4ed6\u306e\u8003\u3048\u65b9:\n\n* **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** \u3067\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u308b\u6642\u3001\u3042\u306a\u305f\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u4e00\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u9045\u3044\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n* **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3** \u3067\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u308b\u3068\u304d\u3001\u4e00\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u306f\u901f\u3044\u3067\u3059\u304c\u3001\u591a\u304f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u308b\u6642\u306b\u306f\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u3064\u3044\u3066](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u53ef\u7528\u6027\u3001\u5b89\u5b9a\u6027\u3001\u30d1\u30bf\u30fc\u30f3](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\n\n**\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc** \u3068\u306f\u306a\u306b\u304c\u3057\u304b\u306e\u52d5\u4f5c\u3092\u884c\u3046\u3001\u3082\u3057\u304f\u306f\u7d50\u679c\u3092\u7b97\u51fa\u3059\u308b\u306e\u306b\u8981\u3059\u308b\u6642\u9593\n\n**\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8** \u3068\u306f\u305d\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3084\u7d50\u679c\u7b97\u51fa\u304c\u5358\u4f4d\u6642\u9593\u306b\u884c\u308f\u308c\u308b\u56de\u6570\n\n\u4e00\u822c\u7684\u306b\u3001 **\u6700\u5927\u9650\u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8** \u3092 **\u8a31\u5bb9\u7bc4\u56f2\u5185\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc** \u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u306e\u304c\u666e\u901a\u3060\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u7406\u89e3\u3059\u308b](https://community.cadence.com/cadence_blogs_8/b/sd/archive/2010/09/13/understanding-latency-vs-throughput)\n\n## \u53ef\u7528\u6027 vs \u4e00\u8cab\u6027\n\n### CAP \u7406\u8ad6\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/bgLMI2u.png\"/>\n  <br/>\n  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Source: CAP theorem revisited</a></i>\n</p>\n\n\u5206\u6563\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3044\u3066\u306f\u4e0b\u306e\u4e09\u3064\u306e\u3046\u3061\u4e8c\u3064\u307e\u3067\u3057\u304b\u540c\u6642\u306b\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002:\n\n* **\u4e00\u8cab\u6027** - \u5168\u3066\u306e\u8aad\u307f\u8fbc\u307f\u306f\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u3082\u3057\u304f\u306f\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u308b\n* **\u53ef\u7528\u6027** - \u53d7\u3051\u53d6\u308b\u60c5\u5831\u304c\u6700\u65b0\u306e\u3082\u306e\u3060\u3068\u3044\u3046\u4fdd\u8a3c\u306f\u306a\u3044\u304c\u3001\u5168\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5fc5\u305a\u53d7\u3051\u53d6\u308b\n* **\u5206\u65ad\u8010\u6027** - \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u554f\u984c\u306b\u3088\u3063\u3066\u9806\u4e0d\u540c\u306e\u5206\u65ad\u304c\u8d77\u304d\u3066\u3082\u30b7\u30b9\u30c6\u30e0\u304c\u52d5\u4f5c\u3092\u7d9a\u3051\u308b\n\n*\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u4fe1\u983c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u5206\u65ad\u8010\u6027\u306f\u5fc5\u305a\u4fdd\u8a3c\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306f\u3001\u4e00\u8cab\u6027\u3092\u53d6\u308b\u304b\u3001\u53ef\u7528\u6027\u3092\u53d6\u308b\u304b\u3092\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002*\n\n#### CP - \u4e00\u8cab\u6027\u3068\u5206\u65ad\u8010\u6027(consistency and partition tolerance)\n\n\u5206\u65ad\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5f85\u3061\u7d9a\u3051\u3066\u3044\u308b\u3068\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u306b\u9665\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002CP\u306f\u3042\u306a\u305f\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u30a2\u30c8\u30df\u30c3\u30af\u306a\u8aad\u307f\u66f8\u304d\uff08\u4e0d\u53ef\u5206\u64cd\u4f5c\uff09\u3092\u5fc5\u8981\u3068\u3059\u308b\u969b\u306b\u306f\u3044\u3044\u9078\u629e\u80a2\u3067\u3057\u3087\u3046\u3002\n\n#### AP - \u53ef\u7528\u6027\u3068\u5206\u65ad\u8010\u6027(availability and partition tolerance)\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u30ce\u30fc\u30c9\u4e0a\u306b\u3042\u308b\u30c7\u30fc\u30bf\u3067\u6700\u65b0\u306e\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6700\u65b0\u7248\u306e\u30c7\u30fc\u30bf\u304c\u8fd4\u3055\u308c\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u5206\u65ad\u304c\u89e3\u6d88\u3055\u308c\u305f\u5f8c\u3082\u3001\u66f8\u304d\u8fbc\u307f\u304c\u53cd\u6620\u3055\u308c\u308b\u306e\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n[\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027)\u3000\u3092\u6c42\u3081\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u969b\u306b\u306fAP\u3092\u63a1\u7528\u3059\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3082\u3057\u304f\u306f\u3001\u5916\u90e8\u30a8\u30e9\u30fc\u306b\u95a2\u308f\u3089\u305a\u30b7\u30b9\u30c6\u30e0\u304c\u7a3c\u50cd\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u969b\u306b\u3082\u540c\u69d8\u3067\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [CAP \u7406\u8ad6\u3092\u632f\u308a\u8fd4\u308b](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [\u5e73\u6613\u306a\u82f1\u8a9e\u3067\u306eCAP \u7406\u8ad6\u306e\u30a4\u30f3\u30c8\u30ed](http://ksat.me/a-plain-english-introduction-to-cap-theorem/)\n* [CAP FAQ](https://github.com/henryr/cap-faq)\n\n## \u4e00\u8cab\u6027\u30d1\u30bf\u30fc\u30f3\n\n\u540c\u3058\u30c7\u30fc\u30bf\u306e\u8907\u88fd\u304c\u8907\u6570\u3042\u308b\u72b6\u614b\u3067\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u4e00\u8cab\u3057\u305f\u30c7\u30fc\u30bf\u8868\u793a\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u3001\u3069\u306e\u3088\u3046\u306b\u305d\u308c\u3089\u3092\u540c\u671f\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002 [CAP \u7406\u8ad6](#cap-\u7406\u8ad6) \u306b\u304a\u3051\u308b\u4e00\u8cab\u6027\u306e\u5b9a\u7fa9\u3092\u601d\u3044\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5168\u3066\u306e\u8aad\u307f\u53d6\u308a\u306f\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u30c7\u30fc\u30bf\u3082\u3057\u304f\u306f\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u308b\u306f\u305a\u3067\u3059\u3002\n\n### \u5f31\u3044\u4e00\u8cab\u6027\n\n\u66f8\u304d\u8fbc\u307f\u5f8c\u306e\u8aad\u307f\u53d6\u308a\u3067\u306f\u3001\u305d\u306e\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u3092\u8aad\u3081\u305f\u308a\u8aad\u3081\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3002\u30d9\u30b9\u30c8\u30a8\u30d5\u30a9\u30fc\u30c8\u578b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u57fa\u3065\u304f\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fmemcached\u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u898b\u3089\u308c\u307e\u3059\u3002\u5f31\u3044\u4e00\u8cab\u6027\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u5fc5\u8981\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3001\u4f8b\u3048\u3070VoIP\u3001\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306a\u3069\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u4f8b\u3048\u3070\u3001\u96fb\u8a71\u306b\u51fa\u3066\u3044\u308b\u3068\u304d\u306b\u6570\u79d2\u9593\u97f3\u58f0\u304c\u53d7\u3051\u53d6\u308c\u306a\u304f\u306a\u3063\u305f\u3068\u3057\u305f\u3089\u3001\u305d\u306e\u5f8c\u306b\u63a5\u7d9a\u304c\u56de\u5fa9\u3057\u3066\u3082\u305d\u306e\u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u305f\u9593\u306b\u8a71\u3055\u308c\u3066\u3044\u305f\u3053\u3068\u306f\u805e\u304d\u53d6\u308c\u306a\u3044\u3068\u3044\u3046\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n### \u7d50\u679c\u6574\u5408\u6027\n\n\u66f8\u304d\u8fbc\u307f\u306e\u5f8c\u3001\u8aad\u307f\u53d6\u308a\u306f\u6700\u7d42\u7684\u306b\u306f\u305d\u306e\u7d50\u679c\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b(\u30df\u30ea\u79d2\u307b\u3069\u9045\u308c\u3066\u3068\u3044\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059)\u3002\u30c7\u30fc\u30bf\u306f\u975e\u540c\u671f\u7684\u306b\u8907\u88fd\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fDNS\u3084\u30e1\u30fc\u30eb\u30b7\u30b9\u30c6\u30e0\u306a\u3069\u306b\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u7d50\u679c\u6574\u5408\u6027\u306f\u591a\u304f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u5f37\u3044\u4e00\u8cab\u6027\n\n\u66f8\u304d\u8fbc\u307f\u306e\u5f8c\u3001\u8aad\u307f\u53d6\u308a\u306f\u305d\u308c\u3092\u5fc5\u305a\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306f\u540c\u671f\u7684\u306b\u8907\u88fd\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3084RDBMS\u306a\u3069\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6271\u3046\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u5f37\u3044\u4e00\u8cab\u6027\u304c\u5fc5\u8981\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u9593\u3067\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## \u53ef\u7528\u6027\u30d1\u30bf\u30fc\u30f3\n\n\u9ad8\u3044\u53ef\u7528\u6027\u3092\u62c5\u4fdd\u3059\u308b\u306b\u306f\u4e3b\u306b\u6b21\u306e\u4e8c\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u307e\u3059: **\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc** \u3068 **\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3** \u3067\u3059\u3002\n\n### \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\n\n#### \u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306b\u304a\u3044\u3066\u306f\u3001\u5468\u671f\u4fe1\u53f7\u306f\u30a2\u30af\u30c6\u30a3\u30d6\u3082\u3057\u304f\u306f\u30b9\u30bf\u30f3\u30d0\u30a4\u4e2d\u306e\u30d1\u30c3\u30b7\u30d6\u306a\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u307e\u3059\u3002\u5468\u671f\u4fe1\u53f7\u304c\u4e2d\u65ad\u3055\u308c\u305f\u6642\u306b\u306f\u3001\u30d1\u30c3\u30b7\u30d6\u3060\u3063\u305f\u30b5\u30fc\u30d0\u30fc\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u30b5\u30fc\u30d0\u30fc\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u5f15\u304d\u7d99\u3044\u3067\u30b5\u30fc\u30d3\u30b9\u3092\u518d\u958b\u3057\u307e\u3059\u3002\n\n\u8d77\u52d5\u307e\u3067\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306f\u30d1\u30c3\u30b7\u30d6\u30b5\u30fc\u30d0\u30fc\u304c\u300c\u30db\u30c3\u30c8\u300d\u306a\u30b9\u30bf\u30f3\u30d0\u30a4\u72b6\u614b\u306b\u3042\u308b\u304b\u3001\u300c\u30b3\u30fc\u30eb\u30c9\u300d\u306a\u30b9\u30bf\u30f3\u30d0\u30a4\u72b6\u614b\u306b\u3042\u308b\u304b\u3067\u5909\u308f\u308a\u307e\u3059\u3002\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30fc\u30d0\u30fc\u306e\u307f\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304d\u307e\u3059\u3002\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306f\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n#### \u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6\u69cb\u6210\u3067\u306f\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304f\u3053\u3068\u3067\u8ca0\u8377\u3092\u5206\u6563\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u30d1\u30d6\u30ea\u30c3\u30af\u306a\u3082\u306e\u306e\u5834\u5408\u3001DNS\u306f\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u30d1\u30d6\u30ea\u30c3\u30afIP\u3092\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u3082\u306e\u306a\u5834\u5408\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u304c\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306f\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n### \u77ed\u6240: \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\n\n* \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3067\u306f\u3088\u308a\u591a\u304f\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u8981\u3057\u3001\u8907\u96d1\u3055\u304c\u5897\u3057\u307e\u3059\u3002\n* \u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u304c\u30d1\u30c3\u30b7\u30d6\u30b5\u30fc\u30d0\u30fc\u306b\u8907\u88fd\u3055\u308c\u308b\u524d\u306b\u30a2\u30af\u30c6\u30a3\u30d6\u304c\u843d\u3061\u308b\u3068\u3001\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u8d77\u304d\u308b\u6f5c\u5728\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n#### \u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6\u3000\u3068\u3000\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc\n\n\u3053\u306e\u30c8\u30d4\u30c3\u30af\u306f [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9) \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u3088\u308a\u8a73\u7d30\u306b\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059:\n\n* [\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* [\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n\n## \u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/IOyLj4i.jpg\"/>\n  <br/>\n  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Source: DNS security presentation</a></i>\n</p>\n\n\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0 (DNS) \u306f www.example.com \u306a\u3069\u306e\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u3092IP\u30a2\u30c9\u30ec\u30b9\u3078\u3068\u7ffb\u8a33\u3057\u307e\u3059\u3002\n\nDNS\u306f\u5c11\u6570\u306e\u30aa\u30fc\u30bd\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u304c\u4e0a\u4f4d\u306b\u4f4d\u7f6e\u3059\u308b\u968e\u5c64\u7684\u69cb\u9020\u3067\u3059\u3002\u3042\u306a\u305f\u306e\u30eb\u30fc\u30bf\u30fc\u3082\u3057\u304f\u306fISP\u306f\u691c\u7d22\u3092\u3059\u308b\u969b\u306b\u3069\u306eDNS\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u4f4e\u3044\u968e\u5c64\u306eDNS\u30b5\u30fc\u30d0\u30fc\u306f\u305d\u306e\u7d4c\u8def\u30de\u30c3\u30d7\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u3053\u306e\u60c5\u5831\u306f\u4f1d\u642c\u9045\u5ef6\u306b\u3088\u3063\u3066\u9673\u8150\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002DNS\u306e\u7d50\u679c\u306f\u3042\u306a\u305f\u306e\u30d6\u30e9\u30a6\u30b6\u3082\u3057\u304f\u306fOS\u306b\u4e00\u5b9a\u671f\u9593\uff08[time to live (TTL)](https://en.wikipedia.org/wiki/Time_to_live)\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u671f\u9593\uff09\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\n\n* **NS record (name server)** - \u3042\u306a\u305f\u306e\u30c9\u30e1\u30a4\u30f3\u30fb\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u3067\u306eDNS\u30b5\u30fc\u30d0\u30fc\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n* **MX record (mail exchange)** - \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n* **A record (address)** - IP\u30a2\u30c9\u30ec\u30b9\u306b\u540d\u524d\u3092\u3064\u3051\u307e\u3059\u3002\n* **CNAME (canonical)** - \u4ed6\u306e\u540d\u524d\u3082\u3057\u304f\u306f\u3000`CNAME` (example.com \u3092 www.example.com) \u3082\u3057\u304f\u306f `A` record\u3078\u3068\u540d\u524d\u3092\u6307\u3057\u793a\u3059\u3002\n\n[CloudFlare](https://www.cloudflare.com/dns/) \u3084 [Route 53](https://aws.amazon.com/route53/) \u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u30de\u30cd\u30fc\u30b8\u30c9DNS\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306eDNS\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u69d8\u3005\u306a\u624b\u6cd5\u3092\u4f7f\u3063\u3066\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\n* [\u52a0\u91cd\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3](http://g33kinfo.com/info/archives/2657)\n    * \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u4e2d\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u884c\u304f\u306e\u3092\u9632\u304e\u307e\u3059\n    * \u69d8\u3005\u306a\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3057\u307e\u3059\n    * A/B \u30c6\u30b9\u30c8\n* \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u30d9\u30fc\u30b9\n* \u5730\u7406\u30d9\u30fc\u30b9\n\n### \u6b20\u70b9: DNS\n\n* \u4e0a\u8a18\u3067\u793a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u3088\u3063\u3066\u7de9\u548c\u3055\u308c\u3066\u3044\u308b\u3068\u306f\u3044\u3048\u3001DNS\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u63a5\u7d9a\u306b\u306f\u5c11\u3057\u9045\u5ef6\u304c\u751f\u3058\u308b\u3002\n* DNS\u30b5\u30fc\u30d0\u30fc\u306f\u3001[\u653f\u5e9c\u3001ISP\u4f01\u696d,\u305d\u3057\u3066\u5927\u4f01\u696d](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729)\u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u3089\u306e\u7ba1\u7406\u306f\u8907\u96d1\u3067\u3042\u308b\u3002\n* DNS\u30b5\u30fc\u30d3\u30b9\u306f[DDoS attack](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/)\u306e\u4f8b\u3067\u3001IP\u30a2\u30c9\u30ec\u30b9\u306a\u3057\u306b\u30e6\u30fc\u30b6\u30fc\u304cTwitter\u306a\u3069\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3088\u3046\u306b\u3001\u653b\u6483\u3092\u53d7\u3051\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [DNS \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [DNS \u8a18\u4e8b](https://support.dnsimple.com/categories/dns/)\n\n## \u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(Content delivery network)\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/h9TAuGI.jpg\"/>\n  <br/>\n  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Source: Why use a CDN</a></i>\n</p>\n\n\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(CDN)\u306f\u4e16\u754c\u4e2d\u306b\u914d\u7f6e\u3055\u308c\u305f\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u4e00\u756a\u5730\u7406\u7684\u306b\u8fd1\u3044\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u306e\u3053\u3068\u3067\u3059\u3002Amazon\u306eCloudFront\u306a\u3069\u306f\u4f8b\u5916\u7684\u306b\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3082\u914d\u4fe1\u3057\u307e\u3059\u304c\u3001\u4e00\u822c\u7684\u306b\u3001HTML/CSS/JS\u3001\u5199\u771f\u3001\u305d\u3057\u3066\u52d5\u753b\u306a\u3069\u306e\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u304cCDN\u3092\u901a\u3058\u3066\u914d\u4fe1\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u30b5\u30a4\u30c8\u306eDNS\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3069\u306e\u30b5\u30fc\u30d0\u30fc\u3068\u4ea4\u4fe1\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u4f1d\u3048\u307e\u3059\u3002\n\nCDN\u3092\u7528\u3044\u3066\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u4e8c\u3064\u306e\u7406\u7531\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5287\u7684\u306b\u5411\u4e0a\u3057\u307e\u3059:\n\n* \u30e6\u30fc\u30b6\u30fc\u306f\u8fd1\u304f\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u53d7\u4fe1\u3067\u304d\u308b\n* \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u306fCDN\u304c\u51e6\u7406\u3057\u3066\u304f\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u3057\u3066\u306f\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\n\n### \u30d7\u30c3\u30b7\u30e5CDN\n\n\u30d7\u30c3\u30b7\u30e5CDN\u3067\u306f\u30b5\u30fc\u30d0\u30fc\u30c7\u30fc\u30bf\u306b\u66f4\u65b0\u304c\u3042\u3063\u305f\u6642\u306b\u306f\u5fc5\u305a\u3001\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u53d7\u3051\u53d6\u308b\u65b9\u5f0f\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7528\u610f\u3057\u3001CDN\u306b\u76f4\u63a5\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001URL\u3092CDN\u3092\u6307\u3059\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3001\u5168\u3066\u81ea\u5206\u3067\u8cac\u4efb\u3092\u8ca0\u3046\u5f62\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3044\u3064\u671f\u9650\u5207\u308c\u306b\u306a\u308b\u306e\u304b\u66f4\u65b0\u3055\u308c\u308b\u306e\u304b\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u65b0\u898f\u4f5c\u6210\u6642\u3001\u66f4\u65b0\u6642\u306e\u307f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3053\u3068\u3067\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u6700\u5c0f\u5316\u3055\u308c\u308b\u4e00\u65b9\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u6700\u5927\u9650\u6d88\u8cbb\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5c11\u306a\u3044\u3001\u3082\u3057\u304f\u306f\u983b\u7e41\u306b\u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u306a\u3044\u30b5\u30a4\u30c8\u306e\u5834\u5408\u306b\u306f\u30d7\u30c3\u30b7\u30e5CDN\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u5b9a\u671f\u7684\u306b\u518d\u3073\u30d7\u30eb\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001CDN\u306b\u4e00\u5ea6\u306e\u307f\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n\n### \u30d7\u30ebCDN\n\n\u30d7\u30ebCDN\u3067\u306f\u4e00\u4eba\u76ee\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u305f\u6642\u306b\u3001\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30b5\u30fc\u30d3\u30b9\u306e\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u81ea\u5206\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u4fdd\u5b58\u3057\u3066\u3001CDN\u3092\u6307\u3059URL\u3092\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001CDN\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u307e\u3067\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u304c\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\n[time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live) \u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3069\u308c\u3060\u3051\u306e\u671f\u9593\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u304b\u3092\u898f\u5b9a\u3057\u307e\u3059\u3002\u30d7\u30ebCDN\u306fCDN \u4e0a\u3067\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30b9\u30da\u30fc\u30b9\u3092\u6700\u5c0f\u5316\u3057\u307e\u3059\u304c\u3001\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u66f4\u65b0\u524d\u306b\u30d7\u30eb\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u5197\u9577\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u7e4b\u304c\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5927\u898f\u6a21\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u3042\u308b\u30b5\u30a4\u30c8\u3067\u306f\u30d7\u30ebCDN\u304c\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5927\u90e8\u5206\u306f\u6700\u8fd1\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3001CDN\u306b\u6b8b\u3063\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u304c\u591a\u3044\u304b\u3089\u3067\u3059\u3002\n\n### \u6b20\u70b9: CDN\n\n* CDN\u306e\u30b3\u30b9\u30c8\u306f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u91cf\u306b\u3088\u3063\u3066\u5909\u308f\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001CDN\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306e\u30b3\u30b9\u30c8\u3068\u6bd4\u8f03\u3059\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n* TTL\u304c\u5207\u308c\u308b\u524d\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u9673\u8150\u5316\u3059\u308b\u6050\u308c\u304c\u3042\u308a\u307e\u3059\u3002\n* CDN\u3067\u306f\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u304cCDN\u3092\u6307\u3059\u3088\u3046\u306bURL\u3092\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u5206\u6563\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci)\n* [\u30d7\u30c3\u30b7\u30e5CDN\u3068\u30d7\u30ebCDN\u306e\u9055\u3044](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)\n* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/h81n9iK.png\"/>\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>\n</p>\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u5165\u529b\u3055\u308c\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u3068\u5206\u6563\u3055\u305b\u308b\u3002\u3069\u306e\u30b1\u30fc\u30b9\u3067\u3082\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30b5\u30fc\u30d0\u30fc\u7b49\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u9069\u5207\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3059\u3002\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u306b\u52b9\u679c\u7684\u3067\u3059:\n\n* \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u72b6\u614b\u306e\u826f\u304f\u306a\u3044\u30b5\u30fc\u30d0\u30fc\u306b\u884c\u304f\u306e\u3092\u9632\u3050\n* \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u904e\u5270\u306b\u9001\u308b\u306e\u3092\u9632\u3050\n* \u7279\u5b9a\u7b87\u6240\u306e\u6b20\u9665\u3067\u30b5\u30fc\u30d3\u30b9\u304c\u843d\u3061\u308b\u3053\u3068\u3092\u9632\u3050\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f (\u8cbb\u7528\u306e\u9ad8\u3044) \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3082\u3057\u304f\u306fHAProxy\u306a\u3069\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3002\n\n\u4ed6\u306e\u5229\u70b9\u3068\u3057\u3066\u306f:\n\n* **SSL termination** - \u5165\u529b\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u89e3\u8aad\u3059\u308b\u3001\u307e\u305f\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6697\u53f7\u5316\u3059\u308b\u3053\u3068\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u3053\u306e\u30b3\u30b9\u30c8\u304c\u9ad8\u304f\u3064\u304d\u304c\u3061\u306a\u51e6\u7406\u3092\u8acb\u3051\u8ca0\u308f\u306a\u304f\u3066\u3044\u3044\u3088\u3046\u306b\u80a9\u4ee3\u308f\u308a\u3057\u307e\u3059\u3002\n    * [X.509 certificates](https://en.wikipedia.org/wiki/X.509) \u3092\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u3092\u306a\u304f\u3057\u307e\u3059\n* **\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406** - \u30af\u30c3\u30ad\u30fc\u3092\u53d6\u308a\u6271\u3046\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u306a\u3044\u6642\u306a\u3069\u306b\u3001\u7279\u5b9a\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u3068\u6d41\u3057\u307e\u3059\u3002\n\n\u969c\u5bb3\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001[\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6](#\u30a2\u30af\u30c6\u30a3\u30d6\u30d1\u30c3\u30b7\u30d6) \u3082\u3057\u304f\u306f [\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6](#\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6) \u30e2\u30fc\u30c9\u306e\u3069\u3061\u3089\u306b\u304a\u3044\u3066\u3082\u3001\u8907\u6570\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u914d\u7f6e\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7a2e\u3005\u306e\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u7528\u3044\u3066\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\n* \u30e9\u30f3\u30c0\u30e0\n* Least loaded\n* \u30bb\u30c3\u30b7\u30e7\u30f3/\u30af\u30c3\u30ad\u30fc\n* [\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3082\u3057\u304f\u306f\u52a0\u91cd\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3](http://g33kinfo.com/info/archives/2657)\n* [Layer 4](#layer-4-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n* [Layer 7](#layer-7-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n\n### Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n\nLayer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f [\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u30ec\u30a4\u30e4\u30fc](#\u901a\u4fe1) \u3092\u53c2\u7167\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u914d\u5206\u3059\u308b\u304b\u5224\u65ad\u3057\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u3001\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066\u306f\u3001\u30bd\u30fc\u30b9\u3001\u9001\u4fe1\u5148IP\u30a2\u30c9\u30ec\u30b9\u3001\u30d8\u30c3\u30c0\u30fc\u306b\u8a18\u8ff0\u3055\u308c\u305f\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u542b\u307e\u308c\u307e\u3059\u304c\u3001\u30d1\u30b1\u30c3\u30c8\u306e\u4e2d\u8eab\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u542b\u307f\u307e\u305b\u3093\u3002 Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d1\u30b1\u30c3\u30c8\u3092\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u3078\u5c4a\u3051\u3001\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u914d\u4fe1\u3059\u308b\u3053\u3068\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30c9\u30ec\u30b9\u5909\u63db [Network Address Translation (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/) \u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n### Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n\nLayer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc](#\u901a\u4fe1) \u3092\u53c2\u7167\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u914d\u5206\u3059\u308b\u304b\u5224\u65ad\u3057\u307e\u3059\u3002\u30d8\u30c3\u30c0\u30fc\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u30af\u30c3\u30ad\u30fc\u306a\u3069\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u3053\u3068\u3067\u3059\u3002Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u7d42\u7aef\u3092\u53d7\u3051\u6301\u3061 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u306e\u5224\u65ad\u3092\u3057\u3001\u9078\u629e\u3057\u305f\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u63a5\u7d9a\u3092\u7e4b\u304e\u307e\u3059\u3002\u4f8b\u3048\u3070 layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u52d5\u753b\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u76f4\u63a5\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u30db\u30b9\u30c8\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30fc\u306b\u3064\u306a\u3050\u3068\u540c\u6642\u306b\u3001\u6c7a\u6e08\u51e6\u7406\u306a\u3069\u306e\u3088\u308a\u7e4a\u7d30\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u306b\u6d41\u3059\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\u67d4\u8edf\u6027\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u306a\u308a\u307e\u3059\u304c\u3001 layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u306fLayer 7\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3088\u308a\u3082\u6240\u8981\u6642\u9593\u3001\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u3092\u5c11\u306a\u304f\u6e08\u307e\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6628\u4eca\u306e\u6c4e\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u6700\u5c0f\u9650\u306e\u307f\u3057\u304b\u767a\u63ee\u3067\u304d\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u306f\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u53ef\u7528\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u624b\u9803\u306a\u6c4e\u7528\u30de\u30b7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3055\u305b\u308b\u65b9\u304c\u3001\u4e00\u3064\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u3088\u308a\u9ad8\u4fa1\u306a\u30de\u30b7\u30f3\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\uff08**\u5782\u76f4\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0**\uff09\u3088\u308a\u8cbb\u7528\u5bfe\u52b9\u679c\u3082\u9ad8\u304f\u306a\u308a\u3001\u7d50\u679c\u7684\u306b\u53ef\u7528\u6027\u3082\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u6c4e\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6271\u3048\u308b\u4eba\u6750\u3092\u96c7\u3046\u65b9\u304c\u3001\u7279\u5316\u578b\u306e\u5546\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6271\u3048\u308b\u4eba\u6750\u3092\u96c7\u3046\u3088\u308a\u3082\u7c21\u5358\u3067\u3057\u3087\u3046\u3002\n\n#### \u6b20\u70b9: \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\n* \u6c34\u5e73\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u3044\u304f\u3068\u3001\u8907\u96d1\u3055\u304c\u5897\u3059\u4e0a\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30af\u30ed\u30fc\u30cb\u30f3\u30b0\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n    * \u30b5\u30fc\u30d0\u30fc\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b: \u30e6\u30fc\u30b6\u30fc\u306b\u95a2\u9023\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u3001\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u5199\u771f\u306a\u3069\u306e\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u306f\u3044\u3051\u306a\u3044\n    * \u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u4e00\u5143\u7684\u306a[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9) (SQL\u3001 NoSQL)\u306a\u3069\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u30b9\u30c8\u30a2\u3055\u308c\u308b\u304b [\u30ad\u30e3\u30c3\u30b7\u30e5](#\u30ad\u30e3\u30c3\u30b7\u30e5) (Redis\u3001 Memcached)\u306b\u6b8b\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u4e0b\u6d41\u30b5\u30fc\u30d0\u30fc\u306f\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3059\u308b\u306b\u3064\u308c\u3066\u3088\u308a\u591a\u304f\u306e\u540c\u6642\u63a5\u7d9a\u3092\u4fdd\u305f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n### \u6b20\u70b9: \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30ea\u30bd\u30fc\u30b9\u304c\u4e0d\u8db3\u3057\u3066\u3044\u305f\u308a\u3001\u8a2d\u5b9a\u304c\u9069\u5207\u3067\u306a\u3044\u5834\u5408\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u5358\u4e00\u969c\u5bb3\u70b9\u3092\u9664\u3053\u3046\u3068\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5c0e\u5165\u3057\u305f\u7d50\u679c\u3001\u8907\u96d1\u3055\u304c\u5897\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u4e00\u3064\u3060\u3051\u3060\u3068\u305d\u3053\u304c\u5358\u4e00\u969c\u5bb3\u70b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u8907\u6570\u306b\u3059\u308b\u3068\u3001\u3055\u3089\u306b\u8907\u96d1\u3055\u304c\u5897\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [NGINX \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30ac\u30a4\u30c9](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [ELB listener config](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7(web\u30b5\u30fc\u30d0\u30fc)\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/n41Azff.png\"/>\n  <br/>\n  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Source: Wikipedia</a></i>\n  <br/>\n</p>\n\n\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u306f\u5185\u90e8\u30b5\u30fc\u30d3\u30b9\u3092\u307e\u3068\u3081\u3066\u5916\u90e8\u306b\u7d71\u4e00\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u3066\u3001\u305d\u306e\u5f8c\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3057\u307e\u3059\u3002\n\n\u4ed6\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5229\u70b9\u304c\u3042\u308a\u307e\u3059:\n\n* **\u3088\u308a\u5805\u7262\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3** - \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u306e\u60c5\u5831\u3092\u96a0\u3057\u305f\u308a\u3001IP\u30a2\u30c9\u30ec\u30b9\u3092\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u5316\u3057\u305f\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3054\u3068\u306e\u63a5\u7d9a\u6570\u3092\u5236\u9650\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n* **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3084\u67d4\u8edf\u6027\u304c\u5897\u3057\u307e\u3059** - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306eIP\u3057\u304b\u898b\u306a\u3044\u306e\u3067\u3001\u88cf\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u30b9\u30b1\u30fc\u30eb\u3057\u305f\u308a\u3001\u8a2d\u5b9a\u3092\u5909\u3048\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n* **SSL termination** - \u5165\u529b\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u89e3\u8aad\u3057\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6697\u53f7\u5316\u3059\u308b\u3053\u3068\u3067\u30b5\u30fc\u30d0\u30fc\u304c\u3053\u306e\u30b3\u30b9\u30c8\u306e\u304b\u304b\u308a\u3046\u308b\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n    * [X.509 \u8a3c\u660e\u66f8](https://en.wikipedia.org/wiki/X.509) \u3092\u5404\u30b5\u30fc\u30d0\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n* **\u5727\u7e2e** - \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5727\u7e2e\u3067\u304d\u307e\u3059\n* **\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0** - \u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\n* **\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4** - \u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u76f4\u63a5\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n    * HTML/CSS/JS\n    * \u5199\u771f\n    * \u52d5\u753b\n    * \u306a\u3069\u306a\u3069\n\n### \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc vs \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\n\n* \u8907\u6570\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u3042\u308b\u6642\u306b\u306f\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046\u3002 \u3057\u3070\u3057\u3070\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u540c\u3058\u6a5f\u80fd\u3092\u679c\u305f\u3059\u30b5\u30fc\u30d0\u30fc\u7fa4\u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304d\u307e\u3059\u3002\n* \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3067\u306f\u3001\u4e0a\u8a18\u306b\u8ff0\u3079\u305f\u3088\u3046\u306a\u5229\u70b9\u3092\u3001\u5358\u4e00\u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u5bfe\u3057\u3066\u3082\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n* NGINX \u3084 HAProxy \u306a\u3069\u306e\u6280\u8853\u306flayer 7 \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3068\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\n\n* \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u5c0e\u5165\u3059\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u306e\u8907\u96d1\u6027\u304c\u5897\u3057\u307e\u3059\u3002\n* \u5358\u4e00\u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306f\u5358\u4e00\u969c\u5bb3\u70b9\u306b\u306a\u308a\u3048\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u8907\u6570\u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u5c0e\u5165\u3059\u308b\u3068(\u4f8b: [\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc](https://en.wikipedia.org/wiki/Failover)) \u8907\u96d1\u6027\u306f\u3088\u308a\u5897\u3057\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7 vs \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n* [NGINX \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u30ac\u30a4\u30c9](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/yB5SYwm.png\"/>\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\n\u30a6\u30a7\u30d6\u30ec\u30a4\u30e4\u30fc\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64 (\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5c64\u3068\u3082\u8a00\u308f\u308c\u308b) \u3068\u5206\u96e2\u3059\u308b\u3053\u3068\u3067\u305d\u308c\u305e\u308c\u306e\u5c64\u3092\u72ec\u7acb\u306b\u30b9\u30b1\u30fc\u30eb\u3001\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u65b0\u3057\u3044API\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306b\u8ffd\u52a0\u3059\u308b\u969b\u306b\u3001\u4e0d\u5fc5\u8981\u306b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n **\u5358\u4e00\u8cac\u4efb\u306e\u539f\u5247** \u3067\u306f\u3001\u5c0f\u3055\u3044\u81ea\u5f8b\u7684\u306a\u30b5\u30fc\u30d3\u30b9\u304c\u5354\u8abf\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\u63d0\u5531\u3057\u3066\u3044\u307e\u3059\u3002\u5c0f\u3055\u3044\u30b5\u30fc\u30d3\u30b9\u306e\u5c0f\u3055\u3044\u30c1\u30fc\u30e0\u304c\u6025\u6210\u9577\u306e\u305f\u3081\u306b\u3088\u308a\u7a4d\u6975\u7684\u306a\u8a08\u753b\u3092\u7acb\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306f[\u975e\u540c\u671f\u51e6\u7406](#\u975e\u540c\u671f\u51e6\u7406)\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n### \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\n\n\u72ec\u7acb\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3001\u5c0f\u898f\u6a21\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u69d8\u5f0f\u3067\u3042\u308b[\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9](https://en.wikipedia.org/wiki/Microservices)\u3082\u3053\u306e\u8b70\u8ad6\u306b\u95a2\u4fc2\u3057\u3066\u304f\u308b\u6280\u8853\u3067\u3057\u3087\u3046\u3002\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u72ec\u81ea\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u51e6\u7406\u3057\u3001\u660e\u78ba\u3067\u8efd\u91cf\u306a\u30e1\u30ab\u30cb\u30ba\u30e0\u3067\u901a\u4fe1\u3057\u3066\u3001\u305d\u306e\u76ee\u7684\u3068\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002<sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\n\u4f8b\u3048\u3070Pinterest\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u3001\u30d5\u30a9\u30ed\u30ef\u30fc\u3001\u30d5\u30a3\u30fc\u30c9\u3001\u691c\u7d22\u3001\u5199\u771f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306a\u3069\u3067\u3059\u3002\n\n### \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30fc\n\n[Consul](https://www.consul.io/docs/index.html)\u3001 [Etcd](https://coreos.com/etcd/docs/latest)\u3001 [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) \u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u540d\u524d\u3001\u30a2\u30c9\u30ec\u30b9\u3001\u30dd\u30fc\u30c8\u306e\u60c5\u5831\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30fc\u30d3\u30b9\u540c\u58eb\u304c\u4e92\u3044\u3092\u898b\u3064\u3051\u3084\u3059\u304f\u3057\u3066\u3044\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u306e\u5b8c\u5168\u6027\u306e\u78ba\u8a8d\u306b\u306f [Health checks](https://www.consul.io/intro/getting-started/checks.html) \u304c\u4fbf\u5229\u3067\u3001\u3053\u308c\u306b\u306f [HTTP](#hypertext-transfer-protocol-http) \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002 Consul \u3068 Etcd \u306e\u3044\u305a\u308c\u3082\u7d44\u307f\u8fbc\u307f\u306e [key-value store](#\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2) \u3092\u6301\u3063\u3066\u304a\u308a\u3001\u8a2d\u5b9a\u30c7\u30fc\u30bf\u3084\u5171\u6709\u30c7\u30fc\u30bf\u306a\u3069\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n* \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u904b\u7528\u3001\u305d\u3057\u3066\u30d7\u30ed\u30bb\u30b9\u3092\u8003\u616e\u3059\u308b\u3068\u3001\u7de9\u304f\u7d50\u3073\u4ed8\u3051\u3089\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u306a\u30b7\u30b9\u30c6\u30e0\u3068\u306f\u7570\u306a\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u5fc5\u8981\u3067\u3059\u3002\n* \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u30c7\u30d7\u30ed\u30a4\u3068\u904b\u7528\u306e\u70b9\u304b\u3089\u898b\u308b\u3068\u8907\u96d1\u6027\u304c\u5897\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8a2d\u8a08\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed](http://lethain.com/introduction-to-architecting-systems-for-scale)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30a4\u30f3\u30bf\u30d3\u30e5\u30fc\u3092\u7d10\u89e3\u304f](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [\u30b5\u30fc\u30d3\u30b9\u6307\u5411\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://en.wikipedia.org/wiki/Service-oriented_architecture)\n* [Zookeeper\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n* [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u305f\u3081\u306b\u77e5\u3063\u3066\u304a\u304d\u305f\u3044\u3053\u3068](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/Xkm5CXz.png\"/>\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=w95murBkYmU>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\n### \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0 (RDBMS)\n\nSQL\u306a\u3069\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u30c6\u30fc\u30d6\u30eb\u306b\u6574\u7406\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u96c6\u5408\u3067\u3042\u308b\u3002\n\n**ACID** \u306f\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u304a\u3051\u308b[\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3](https://en.wikipedia.org/wiki/Database_transaction)\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u96c6\u5408\u3067\u3042\u308b\n\n* **\u4e0d\u53ef\u5206\u6027** - \u305d\u308c\u305e\u308c\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3042\u308b\u304b\u306a\u3044\u304b\u306e\u3044\u305a\u308c\u304b\u3067\u3042\u308b\n* **\u4e00\u8cab\u6027** - \u3069\u3093\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u3042\u308b\u78ba\u304b\u306a\u72b6\u614b\u304b\u3089\u6b21\u306e\u72b6\u614b\u306b\u9077\u79fb\u3055\u305b\u308b\u3002\n* **\u72ec\u7acb\u6027** - \u540c\u6642\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u306f\u3001\u9023\u7d9a\u7684\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u306e\u3068\u540c\u3058\u7d50\u679c\u3092\u3082\u305f\u3089\u3059\u3002\n* **\u6c38\u7d9a\u6027** - \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u51e6\u7406\u3055\u308c\u305f\u3089\u3001\u305d\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3055\u308c\u308b\n\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u305f\u304f\u3055\u3093\u306e\u6280\u8853\u304c\u3042\u308b: **\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3001 **\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3001 **federation**\u3001 **\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0**\u3001 **\u975e\u6b63\u898f\u5316**\u3001 \u305d\u3057\u3066 **SQL \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0**\n\n#### \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8aad\u307f\u53d6\u308a\u3068\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3057\u3001\u66f8\u304d\u8fbc\u307f\u3092\u4e00\u3064\u4ee5\u4e0a\u306e\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8907\u88fd\u3057\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u8aad\u307f\u53d6\u308a\u306e\u307f\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u6728\u69cb\u9020\u306e\u3088\u3046\u306b\u8ffd\u52a0\u306e\u30b9\u30ec\u30fc\u30d6\u306b\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30aa\u30d5\u30e9\u30a4\u30f3\u306b\u306a\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u3044\u305a\u308c\u304b\u306e\u30b9\u30ec\u30fc\u30d6\u304c\u30de\u30b9\u30bf\u30fc\u306b\u6607\u683c\u3059\u308b\u304b\u3001\u65b0\u3057\u3044\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u307e\u3067\u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u30e2\u30fc\u30c9\u3067\u7a3c\u50cd\u3057\u307e\u3059\u3002\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/C9ioGtn.png\"/>\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### \u6b20\u70b9: \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u30b9\u30ec\u30fc\u30d6\u3092\u30de\u30b9\u30bf\u30fc\u306b\u6607\u683c\u3055\u305b\u308b\u306b\u306f\u8ffd\u52a0\u306e\u30ed\u30b8\u30c3\u30af\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n* \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e **\u4e21\u65b9** \u306e\u6b20\u70b9\u306f[\u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u6b20\u70b9-\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\u3092\u53c2\u7167\n\n#### \u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u3044\u305a\u308c\u306e\u30de\u30b9\u30bf\u30fc\u3082\u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3059\u308b\u3002\u66f8\u304d\u8fbc\u307f\u306b\u95a2\u3057\u3066\u306f\u305d\u308c\u305e\u308c\u5354\u8abf\u3059\u308b\u3002\u3044\u305a\u308c\u304b\u306e\u30de\u30b9\u30bf\u30fc\u304c\u843d\u3061\u3066\u3082\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3068\u3057\u3066\u306f\u8aad\u307f\u66f8\u304d\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u305f\u307e\u307e\u904b\u7528\u3067\u304d\u308b\u3002\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/krAHLGg.png\"/>\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### \u6b20\u70b9: \u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5c0e\u5165\u3059\u308b\u304b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3069\u3053\u306b\u66f8\u304d\u8fbc\u3080\u304b\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n* \u5927\u4f53\u306e\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u4e00\u8cab\u6027\u304c\u7de9\u3044\uff08ACID\u539f\u7406\u3092\u5b88\u3063\u3066\u3044\u306a\u3044\uff09\u3082\u3057\u304f\u306f\u3001\u540c\u671f\u3059\u308b\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u306b\u66f8\u304d\u8fbc\u307f\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002\n* \u66f8\u304d\u8fbc\u307f\u30ce\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3059\u308b\u306b\u3064\u308c\u66f8\u304d\u8fbc\u307f\u306e\u885d\u7a81\u306e\u53ef\u80fd\u6027\u304c\u5897\u3048\u308b\u3002\n* \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e **\u4e21\u65b9** \u306e\u6b20\u70b9\u306f[\u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u6b20\u70b9-\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3) \u3092\u53c2\u7167\n\n##### \u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u65b0\u3057\u3044\u30c7\u30fc\u30bf\u66f8\u304d\u8fbc\u307f\u3092\u8907\u88fd\u3059\u308b\u524d\u306b\u30de\u30b9\u30bf\u30fc\u304c\u843d\u3061\u305f\u5834\u5408\u306b\u306f\u305d\u306e\u30c7\u30fc\u30bf\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n* \u66f8\u304d\u8fbc\u307f\u306f\u8aad\u307f\u53d6\u308a\u30ec\u30d7\u30ea\u30ab\u306b\u304a\u3044\u3066\u30ea\u30d7\u30ec\u30a4\u3055\u308c\u308b\u3002\u66f8\u304d\u8fbc\u307f\u304c\u591a\u3044\u5834\u5408\u3001\u8907\u88fd\u30ce\u30fc\u30c9\u304c\u66f8\u304d\u8fbc\u307f\u306e\u51e6\u7406\u306e\u307f\u3067\u884c\u304d\u8a70\u307e\u3063\u3066\u3001\u8aad\u307f\u53d6\u308a\u306e\u51e6\u7406\u3092\u6e80\u8db3\u306b\u884c\u3048\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n* \u8aad\u307f\u53d6\u308a\u30b9\u30ec\u30fc\u30d6\u30ce\u30fc\u30c9\u306e\u6570\u304c\u591a\u3051\u308c\u3070\u591a\u3044\u307b\u3069\u3001\u8907\u88fd\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u6570\u3082\u5897\u3048\u3001\u8907\u88fd\u6642\u9593\u304c\u4f38\u3073\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n* \u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u306f\u3001\u30de\u30b9\u30bf\u30fc\u3078\u306e\u66f8\u304d\u8fbc\u307f\u306f\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u51e6\u7406\u3067\u304d\u308b\u4e00\u65b9\u3001\u30b9\u30ec\u30fc\u30d6\u3078\u306e\u8907\u88fd\u306f\u5358\u4e00\u30b9\u30ec\u30c3\u30c9\u3067\u9023\u7d9a\u7684\u306b\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001 \u53ef\u7528\u6027\u3001 \u30b9\u30bf\u30d3\u30ea\u30c6\u30a3 \u30d1\u30bf\u30fc\u30f3](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [\u30de\u30eb\u30c1\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### Federation\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/U3qV33e.png\"/>\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=w95murBkYmU>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\n\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3 (\u3082\u3057\u304f\u306f\u6a5f\u80fd\u5206\u5272\u5316\u3068\u3082\u8a00\u3046) \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6a5f\u80fd\u3054\u3068\u306b\u5206\u5272\u3059\u308b\u3002\u4f8b\u3048\u3070\u3001\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u306a\u5358\u4e00\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092 **\u30d5\u30a9\u30fc\u30e9\u30e0**\u3001 **\u30e6\u30fc\u30b6\u30fc**\u3001 **\u30d7\u30ed\u30c0\u30af\u30c8** \u306e\u3088\u3046\u306b\u4e09\u3064\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e00\u3064\u3042\u305f\u308a\u306e\u66f8\u304d\u8fbc\u307f\u30fb\u8aad\u307f\u53d6\u308a\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u6e1b\u308a\u3001\u305d\u306e\u7d50\u679c\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30b0\u3082\u77ed\u304f\u306a\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5c0f\u3055\u304f\u306a\u308b\u3053\u3068\u3067\u3001\u30e1\u30e2\u30ea\u30fc\u306b\u53ce\u307e\u308b\u30c7\u30fc\u30bf\u304c\u5897\u3048\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5c40\u6240\u6027\u304c\u9ad8\u307e\u308b\u305f\u3081\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u7387\u3082\u4e0a\u304c\u308a\u307e\u3059\u3002\u5358\u4e00\u306e\u4e2d\u592e\u30de\u30b9\u30bf\u30fc\u3067\u66f8\u304d\u8fbc\u307f\u3092\u76f4\u5217\u5316\u3057\u305f\u308a\u3057\u306a\u3044\u305f\u3081\u3001\u4e26\u5217\u3067\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n##### \u6b20\u70b9: federation\n\n* \u5927\u898f\u6a21\u306a\u51e6\u7406\u3084\u30c6\u30fc\u30d6\u30eb\u3092\u8981\u3059\u308b\u30b9\u30ad\u30fc\u30de\u306e\u5834\u5408\u3001\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\u52b9\u679c\u7684\u3068\u306f\u8a00\u3048\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n* \u3069\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8aad\u307f\u66f8\u304d\u3092\u3059\u308b\u306e\u304b\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u66f4\u65b0\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n* [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers)\u3067\u4e8c\u3064\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3059\u308b\u306e\u306f\u3088\u308a\u8907\u96d1\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n* \u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: federation\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=w95murBkYmU)\n\n#### \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/wU8x5Id.png\"/>\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u7570\u306a\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u305d\u308c\u305e\u308c\u304c\u30c7\u30fc\u30bf\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u65ad\u7247\u306e\u307f\u3092\u6301\u3064\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u5206\u5272\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f8b\u306b\u3068\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u6570\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u306f\u3088\u308a\u591a\u304f\u306e\u65ad\u7247\u304c\u52a0\u3048\u3089\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n[federation](#federation)\u306e\u5229\u70b9\u306b\u4f3c\u3066\u3044\u3066\u3001\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u8aad\u307f\u66f8\u304d\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u6e1b\u3089\u3057\u3001\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6e1b\u3089\u3057\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30b5\u30a4\u30ba\u3082\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u3068\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5411\u4e0a\u3057\u30af\u30a8\u30ea\u901f\u5ea6\u304c\u901f\u304f\u306a\u308a\u307e\u3059\u3002\u306a\u306b\u304c\u3057\u304b\u306e\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3059\u308b\u6a5f\u80fd\u304c\u306a\u3051\u308c\u3070\u30c7\u30fc\u30bf\u30ed\u30b9\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u304c\u3001\u3082\u3057\u3001\u4e00\u3064\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u843d\u3061\u3066\u3082\u3001\u4ed6\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u3068\u540c\u3058\u304f\u3001\u5358\u4e00\u306e\u4e2d\u592e\u30de\u30b9\u30bf\u30fc\u304c\u66f8\u304d\u8fbc\u307f\u306e\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u3082\u3001\u4e26\u5217\u3067\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u30c6\u30fc\u30d6\u30eb\u3092\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30e9\u30b9\u30c8\u30cd\u30fc\u30e0\u30a4\u30cb\u30b7\u30e3\u30eb\u3067\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u304b\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5730\u7406\u7684\u914d\u7f6e\u3067\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u306a\u3069\u3067\u3059\u3002\n\n##### \u6b20\u70b9: \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n* \u30b7\u30e3\u30fc\u30c9\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u5909\u66f4\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u7d50\u679c\u3068\u3057\u3066SQL\u30af\u30a8\u30ea\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30b7\u30e3\u30fc\u30c9\u3067\u306f\u30c7\u30fc\u30bf\u914d\u5206\u304c\u3044\u3073\u3064\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6a19\u6e96\u30e6\u30fc\u30b6\u30fc\u306e\u96c6\u5408\u3092\u6301\u3064\u30b7\u30e3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u4ed6\u306e\u30b7\u30e3\u30fc\u30c9\u3088\u308a\u3082\u91cd\u3044\u8ca0\u8377\u3092\u8ca0\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n    * \u30ea\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3092\u3059\u308b\u3068\u8907\u96d1\u6027\u304c\u3088\u308a\u5897\u3057\u307e\u3059\u3002[consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) \u306b\u57fa\u3065\u3044\u305f\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u3001\u901a\u4fe1\u30c7\u30fc\u30bf\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n* \u8907\u6570\u306e\u30b7\u30e3\u30fc\u30c9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3059\u308b\u306e\u306f\u3088\u308a\u8907\u96d1\u3067\u3059\u3002\n* \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n* [\u30b7\u30e3\u30fc\u30c9\u306e\u767b\u5834](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [\u30b7\u30e3\u30fc\u30c9\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### \u975e\u6b63\u898f\u5316\n\n\u975e\u6b63\u898f\u5316\u3067\u306f\u3001\u66f8\u304d\u8fbc\u307f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u3044\u304f\u3089\u304b\u72a0\u7272\u306b\u3057\u3066\u8aad\u307f\u8fbc\u307f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u8a08\u7b97\u7684\u306b\u91cd\u3044\u30c6\u30fc\u30d6\u30eb\u306e\u7d50\u5408\u306a\u3069\u3092\u305b\u305a\u306b\u3001\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u30b3\u30d4\u30fc\u304c\u66f8\u304d\u8fbc\u307e\u308c\u308b\u306e\u3092\u8a31\u5bb9\u3057\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306eRDBMS\u4f8b\u3048\u3070\u3001[PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) \u3084Oracle\u306f\u3053\u306e\u5197\u9577\u306a\u60c5\u5831\u3092\u53d6\u308a\u6271\u3044\u3001\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u305f\u3081\u306e[materialized views](https://en.wikipedia.org/wiki/Materialized_view) \u3068\u3044\u3046\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n[\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3](#federation) \u3084 [\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0](#\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0)\u306a\u3069\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306b\u3088\u3063\u3066\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u306b\u5206\u914d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u5408\u4e00\u3055\u305b\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u8907\u96d1\u306a\u4f5c\u696d\u3067\u3059\u3002\u975e\u6b63\u898f\u5316\u306b\u3088\u3063\u3066\u305d\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u591a\u304f\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u3001100\u5bfe1\u3042\u308b\u3044\u306f1000\u5bfe1\u304f\u3089\u3044\u306b\u306a\u308b\u304f\u3089\u3044\u8aad\u307f\u53d6\u308a\u306e\u65b9\u304c\u3001\u66f8\u304d\u8fbc\u307f\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3088\u308a\u3082\u591a\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30b8\u30e7\u30a4\u30f3\u51e6\u7406\u304c\u542b\u307e\u308c\u308b\u3082\u306e\u306f\u8a08\u7b97\u7684\u306b\u9ad8\u4fa1\u306b\u3064\u304d\u307e\u3059\u3057\u3001\u30c7\u30a3\u30b9\u30af\u306e\u51e6\u7406\u6642\u9593\u3067\u81a8\u5927\u306a\u6642\u9593\u3092\u8cbb\u6d88\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u975e\u6b63\u898f\u5316\n\n* \u30c7\u30fc\u30bf\u304c\u8907\u88fd\u3055\u308c\u308b\u3002\n* \u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u8907\u88fd\u304c\u540c\u671f\u3055\u308c\u308b\u3088\u3046\u306b\u5236\u7d04\u304c\u5b58\u5728\u3057\u3001\u305d\u306e\u3053\u3068\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5168\u4f53\u306e\u8a2d\u8a08\u304c\u8907\u96d1\u5316\u3059\u308b\u3002\n* \u975e\u6b63\u898f\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u904e\u5927\u306a\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u3001\u6b63\u898f\u5316\u3055\u308c\u3066\u3044\u308b\u305d\u308c\u3088\u308a\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u304a\u3044\u3066\u52a3\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n###### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u975e\u6b63\u898f\u5316\n\n* [Denormalization](https://en.wikipedia.org/wiki/Denormalization)\n\n#### SQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\nSQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u5e83\u7bc4\u306a\u77e5\u8b58\u3092\u5fc5\u8981\u3068\u3059\u308b\u5206\u91ce\u3067\u591a\u304f\u306e [\u672c](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) \u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3092\u660e\u3089\u304b\u306b\u3057\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u4e0a\u3067\u3001 **\u30d9\u30f3\u30c1\u30de\u30fc\u30af** \u3092\u5b9a\u3081\u3001 **\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb** \u3059\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u91cd\u8981\u3067\u3059\u3002\n\n* **\u30d9\u30f3\u30c1\u30de\u30fc\u30af** - [ab](http://httpd.apache.org/docs/2.2/programs/ab.html)\u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u9ad8\u8ca0\u8377\u306e\u72b6\u6cc1\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n* **\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb** - [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) \u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u72b6\u6cc1\u306e\u78ba\u8a8d\u3092\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3068\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u3068\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u52b9\u7387\u5316\u306e\u9078\u629e\u80a2\u3092\u3068\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n##### \u30b9\u30ad\u30fc\u30de\u3092\u7d5e\u308b\n\n* MySQL\u306f\u30a2\u30af\u30bb\u30b9\u901f\u5ea6\u5411\u4e0a\u306e\u305f\u3081\u3001\u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u9023\u7d9a\u3057\u305f\u30d6\u30ed\u30c3\u30af\u3078\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n* \u9577\u3055\u306e\u6c7a\u307e\u3063\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u3057\u3066\u306f `VARCHAR` \u3088\u308a\u3082 `CHAR` \u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n    * `CHAR` \u306e\u65b9\u304c\u52b9\u7387\u7684\u306b\u901f\u304f\u30e9\u30f3\u30c0\u30e0\u306b\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u4e00\u65b9\u3001 `VARCHAR` \u3067\u306f\u6b21\u306e\u30c7\u30fc\u30bf\u306b\u79fb\u308b\u524d\u306b\u30c7\u30fc\u30bf\u306e\u672b\u5c3e\u3092\u691c\u77e5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u305f\u3081\u306b\u901f\u5ea6\u304c\u72a0\u7272\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30d6\u30ed\u30b0\u306e\u6295\u7a3f\u306a\u3069\u3001\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u306b\u306f TEXT \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002 TEXT \u3067\u306f\u30d6\u30fc\u30ea\u30a2\u30f3\u578b\u306e\u691c\u7d22\u3082\u53ef\u80fd\u3067\u3059\u3002 TEXT \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30d6\u30ed\u30c3\u30af\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\u3001\u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u5834\u6240\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n* 2\u306e32\u4e57\u308440\u5104\u4ee5\u4e0b\u3092\u8d85\u3048\u306a\u3044\u7a0b\u5ea6\u306e\u5927\u304d\u306a\u6570\u306b\u306f INT \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u901a\u8ca8\u306b\u95a2\u3057\u3066\u306f\u5c0f\u6570\u70b9\u8868\u793a\u4e0a\u306e\u30a8\u30e9\u30fc\u3092\u907f\u3051\u308b\u305f\u3081\u306b `DECIMAL` \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u5927\u304d\u306a `BLOBS` \u3092\u4fdd\u5b58\u3059\u308b\u306e\u306f\u907f\u3051\u307e\u3057\u3087\u3046\u3002\u3069\u3053\u304b\u3089\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\u3002\n* `VARCHAR(255)` \u306f8\u30d3\u30c3\u30c8\u3067\u6570\u3048\u3089\u308c\u308b\u6700\u5927\u306e\u6587\u5b57\u6570\u3067\u3059\u3002\u4e00\u90e8\u306eDBMS\u3067\u306f\u30011\u30d0\u30a4\u30c8\u306e\u5229\u7528\u52b9\u7387\u3092\u6700\u5927\u5316\u3059\u308b\u305f\u3081\u306b\u3053\u306e\u6587\u5b57\u6570\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\n* [\u691c\u7d22\u6027\u80fd\u5411\u4e0a\u306e\u305f\u3081](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search) \u3001\u53ef\u80fd\u3067\u3042\u308c\u3070 `NOT NULL` \u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\n\n##### \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u52b9\u679c\u7684\u306b\u7528\u3044\u308b\n\n* \u30af\u30a8\u30ea(`SELECT`\u3001 `GROUP BY`\u3001 `ORDER BY`\u3001 `JOIN`) \u306e\u5bfe\u8c61\u3068\u306a\u308b\u5217\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u901f\u5ea6\u3092\u5411\u4e0a\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u901a\u5e38\u3001\u5e73\u8861\u63a2\u7d22\u6728\u3067\u3042\u308b[B\u6728](https://en.wikipedia.org/wiki/B-tree)\u306e\u5f62\u3067\u8868\u3055\u308c\u307e\u3059\u3002B\u6728\u306b\u3088\u308a\u30c7\u30fc\u30bf\u306f\u5e38\u306b\u30bd\u30fc\u30c8\u3055\u308c\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u691c\u7d22\u3001\u9806\u6b21\u30a2\u30af\u30bb\u30b9\u3001\u633f\u5165\u3001\u524a\u9664\u3092\u5bfe\u6570\u6642\u9593\u3067\u884c\u3048\u307e\u3059\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u914d\u7f6e\u3059\u308b\u3053\u3068\u306f\u30c7\u30fc\u30bf\u3092\u30e1\u30e2\u30ea\u30fc\u306b\u6b8b\u3059\u3053\u3068\u306b\u3064\u306a\u304c\u308a\u3088\u308a\u5bb9\u91cf\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u66f4\u65b0\u3082\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u66f8\u304d\u8fbc\u307f\u3082\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n* \u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u969b\u306b\u306f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5207\u3063\u3066\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u3066\u518d\u3073\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u30d3\u30eb\u30c9\u3057\u305f\u65b9\u304c\u901f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n##### \u9ad8\u8ca0\u8377\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u907f\u3051\u308b\n\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u5fc5\u8981\u306a\u3068\u3053\u308d\u306b\u306f[\u975e\u6b63\u898f\u5316](#\u975e\u6b63\u898f\u5316)\u3092\u9069\u7528\u3059\u308b\n\n##### \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\n\n* \u30c6\u30fc\u30d6\u30eb\u3092\u5206\u5272\u3057\u3001\u30db\u30c3\u30c8\u30b9\u30dd\u30c3\u30c8\u3092\u72ec\u7acb\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306b\u5206\u96e2\u3057\u3066\u30e1\u30e2\u30ea\u30fc\u306b\u4e57\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n##### \u30af\u30a8\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u8abf\u6574\u3059\u308b\n\n* \u5834\u5408\u306b\u3088\u3063\u3066\u306f[\u30af\u30a8\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5](http://dev.mysql.com/doc/refman/5.7/en/query-cache) \u304c[\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u554f\u984c](https://www.percona.com/blog/2014/01/28/10-mysql-performance-tuning-settings-after-installation/) \u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: SQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\n* [MySQL\u30af\u30a8\u30ea\u3092\u6700\u9069\u5316\u3059\u308b\u305f\u3081\u306eTips](http://20bits.com/article/10-tips-for-optimizing-mysql-queries-that-dont-suck)\n* [VARCHAR(255)\u3092\u3084\u305f\u3089\u3088\u304f\u898b\u304b\u3051\u308b\u306e\u306f\u306a\u3093\u3067\uff1f](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [null\u5024\u306f\u3069\u306e\u3088\u3046\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5f71\u97ff\u3059\u308b\u306e\u304b\uff1f](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n* [Slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL \u306f **key-value store**\u3001 **document-store**\u3001 **wide column store**\u3001 \u3082\u3057\u304f\u306f **graph database**\u306b\u3088\u3063\u3066\u8868\u73fe\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306f\u4e00\u822c\u7684\u306b\u6b63\u898f\u5316\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u30b8\u30e7\u30a4\u30f3\u304c\u884c\u308f\u308c\u307e\u3059\u3002\u5927\u90e8\u5206\u306eNoSQL\u306f\u771f\u306eACID\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6301\u305f\u305a\u3001 [\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027) \u7684\u306a\u632f\u308b\u821e\u3044\u306e\u65b9\u3092\u597d\u307f\u307e\u3059\u3002\n\n**BASE** \u306f\u3057\u3070\u3057\u3070NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002[CAP Theorem](#cap-\u7406\u8ad6) \u3068\u5bfe\u7167\u7684\u306b\u3001BASE\u306f\u4e00\u8cab\u6027\u3088\u308a\u3082\u53ef\u7528\u6027\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\n* **Basically available** - \u30b7\u30b9\u30c6\u30e0\u306f\u53ef\u7528\u6027\u3092\u4fdd\u8a3c\u3057\u307e\u3059\u3002\n* **Soft state** - \u30b7\u30b9\u30c6\u30e0\u306e\u72b6\u614b\u306f\u5165\u529b\u304c\u306a\u304f\u3066\u3082\u6642\u9593\u7d4c\u904e\u3068\u3068\u3082\u306b\u5909\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* **\u7d50\u679c\u6574\u5408\u6027** - \u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306f\u6642\u9593\u7d4c\u904e\u3068\u3068\u3082\u306b\u305d\u306e\u9593\u306b\u5165\u529b\u304c\u306a\u3044\u3068\u3044\u3046\u524d\u63d0\u306e\u3082\u3068\u3001\u4e00\u8cab\u6027\u304c\u9054\u6210\u3055\u308c\u307e\u3059\u3002\n\n[SQL\u304b\uff1fNoSQL\u304b\uff1f](#sql\u304bnosql\u304b) \u3092\u9078\u629e\u3059\u308b\u306e\u306b\u52a0\u3048\u3066\u3001\u3069\u306e\u30bf\u30a4\u30d7\u306eNoSQL\u304c\u3069\u306e\u4f7f\u7528\u4f8b\u306b\u6700\u3082\u9069\u3059\u308b\u304b\u3092\u7406\u89e3\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u6709\u76ca\u3067\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f **\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2**\u3001 **\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2**\u3001 **\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2**\u3001 \u3068 **\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9** \u306b\u3064\u3044\u3066\u89e6\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\n#### \u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n> \u6982\u8981: \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u4e00\u822c\u7684\u306bO(1)\u306e\u8aad\u307f\u66f8\u304d\u304c\u3067\u304d\u3001\u305d\u308c\u3089\u306f\u30e1\u30e2\u30ea\u306a\u3044\u3057SSD\u3067\u88cf\u4ed8\u3051\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306f\u30ad\u30fc\u3092 [\u8f9e\u66f8\u7684\u9806\u5e8f](https://en.wikipedia.org/wiki/Lexicographical_order) \u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067\u30ad\u30fc\u306e\u52b9\u7387\u7684\u306a\u53d6\u5f97\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u5024\u3068\u3068\u3082\u306b\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306a\u6319\u52d5\u304c\u53ef\u80fd\u3067\u3001\u5358\u7d14\u306a\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\u3084\u30a4\u30f3\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30a4\u30e4\u30fc\u306a\u3069\u306e\u30c7\u30fc\u30bf\u304c\u6025\u901f\u306b\u5909\u308f\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u5358\u7d14\u306a\u51e6\u7406\u306e\u307f\u306b\u6a5f\u80fd\u304c\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u8ffd\u52a0\u306e\u51e6\u7406\u6a5f\u80fd\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306f\u305d\u306e\u8907\u96d1\u6027\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306b\u8f09\u305b\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3084\u3001\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u57fa\u672c\u3067\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n* [\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https://en.wikipedia.org/wiki/Key-value_database)\n* [\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306e\u6b20\u70b9](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http://qnimate.com/overview-of-redis-architecture/)\n* [\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\n\n> \u6982\u8981: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u30d0\u30ea\u30e5\u30fc\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u305f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u95a2\u3059\u308b\u5168\u3066\u306e\u60c5\u5831\u3092\u6301\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(XML\u3001 JSON\u3001 binary\u306a\u3069)\u3092\u4e2d\u5fc3\u306b\u636e\u3048\u305f\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3067\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u81ea\u8eab\u306e\u5185\u90e8\u69cb\u9020\u306b\u57fa\u3065\u3044\u305f\u3001API\u3082\u3057\u304f\u306f\u30af\u30a8\u30ea\u8a00\u8a9e\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 *\u30e1\u30e2\uff1a\u591a\u304f\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u3001\u5024\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6271\u3046\u6a5f\u80fd\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u3053\u3068\u306b\u3088\u3063\u3066\u4e8c\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3068\u306e\u5883\u754c\u7dda\u304c\u66d6\u6627\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002*\n\n\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3001\u30bf\u30b0\u3001\u30e1\u30bf\u30c7\u30fc\u30bf\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306a\u3069\u3068\u3057\u3066\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u540c\u58eb\u306f\u307e\u3068\u3081\u3066\u30b0\u30eb\u30fc\u30d7\u306b\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u305d\u308c\u305e\u308c\u3067\u5168\u304f\u7570\u306a\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n[MongoDB](https://www.mongodb.com/mongodb-architecture) \u3084 [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) \u306a\u3069\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3082\u3001\u8907\u96d1\u306a\u30af\u30a8\u30ea\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306eSQL\u306e\u3088\u3046\u306a\u8a00\u8a9e\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002[DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) \u306f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u306f\u9ad8\u3044\u67d4\u8edf\u6027\u3092\u62c5\u4fdd\u3059\u308b\u306e\u3067\u3001\u983b\u7e41\u306b\u5909\u5316\u3059\u308b\u30c7\u30fc\u30bf\u3092\u6271\u3046\u6642\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\n\n* [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https://en.wikipedia.org/wiki/Document-oriented_database)\n* [MongoDB \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.mongodb.com/mongodb-architecture)\n* [CouchDB \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n* [Elasticsearch \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### \u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/n16iOGk.png\"/>\n  <br/>\n  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history</a></i>\n</p>\n\n> \u6982\u8981: \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30de\u30c3\u30d7 `\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc<\u884c\u30ad\u30fc\u3001 \u30ab\u30e9\u30e0<ColKey\u3001 Value\u3001 Timestamp>>`\n\n\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u306e\u30c7\u30fc\u30bf\u306e\u57fa\u672c\u5358\u4f4d\u306f\u30ab\u30e9\u30e0\uff08\u30cd\u30fc\u30e0\u30fb\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\uff09\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30ab\u30e9\u30e0\u306f\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u3068\u3057\u3066\uff08SQL\u30c6\u30fc\u30d6\u30eb\u306e\u3088\u3046\u306b\uff09\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30fc\u30d1\u30fc\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u306f\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u306e\u96c6\u5408\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30ab\u30e9\u30e0\u306b\u306f\u884c\u30ad\u30fc\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u540c\u3058\u884c\u30ad\u30fc\u3092\u6301\u3064\u30ab\u30e9\u30e0\u306f\u540c\u3058\u884c\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u5024\u306f\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3068\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u304c\u8d77\u304d\u305f\u6642\u306e\u305f\u3081\u306b\u3001\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u542b\u307f\u307e\u3059\u3002\n\nGoogle\u306f[Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\u3092\u521d\u306e\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u3068\u3057\u3066\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u304c\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067Hadoop\u306a\u3069\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b[HBase](https://www.mapr.com/blog/in-depth-look-hbase-architecture) \u3084Facebook\u306b\u3088\u308b[Cassandra](http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architectureIntro_c.html) \u306a\u3069\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u307e\u3057\u305f\u3002BigTable\u3001HBase\u3084Cassandra\u306a\u3069\u306e\u30b9\u30c8\u30a2\u306f\u30ad\u30fc\u3092\u8f9e\u66f8\u5f62\u5f0f\u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067\u9078\u629e\u3057\u305f\u30ad\u30fc\u30ec\u30f3\u30b8\u3067\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u3092\u52b9\u7387\u7684\u306b\u3057\u307e\u3059\u3002\n\n\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u306f\u9ad8\u3044\u53ef\u7528\u6027\u3068\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u62c5\u4fdd\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3068\u3066\u3082\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6271\u3046\u3053\u3068\u306b\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\n\n* [SQL & NoSQL\u7c21\u5358\u306b\u6b74\u53f2\u3092\u3055\u3089\u3046](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)\n* [Bigtable \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n* [HBase \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.mapr.com/blog/in-depth-look-hbase-architecture)\n* [Cassandra \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architectureIntro_c.html)\n\n#### \u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/fNcl65g.png\"/>\n  <br/>\n  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Source: Graph database</a></i>\n</p>\n\n> \u6982\u8981: \u30b0\u30e9\u30d5\n\n\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30ce\u30fc\u30c9\u304c\u30ec\u30b3\u30fc\u30c9\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30a2\u30fc\u30af\u306f\u4e8c\u3064\u306e\u30ce\u30fc\u30c9\u3092\u7e4b\u3050\u95a2\u4fc2\u6027\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u591a\u6570\u306e\u5916\u90e8\u30ad\u30fc\u3084\u591a\u5bfe\u591a\u306a\u3069\u306e\u8907\u96d1\u306a\u95a2\u4fc2\u6027\u3092\u8868\u3059\u306e\u306b\u6700\u9069\u3067\u3059\u3002\n\n\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306fSNS\u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u8907\u96d1\u306a\u95a2\u4fc2\u6027\u30e2\u30c7\u30eb\u306a\u3069\u306b\u3064\u3044\u3066\u9ad8\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\u6bd4\u8f03\u7684\u65b0\u3057\u304f\u3001\u307e\u3060\u4e00\u822c\u7684\u306b\u306f\u7528\u3044\u3089\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u958b\u767a\u30c4\u30fc\u30eb\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u63a2\u3059\u306e\u304c\u4ed6\u306e\u65b9\u6cd5\u306b\u6bd4\u3079\u3066\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u591a\u304f\u306e\u30b0\u30e9\u30d5\u306f[REST APIs](#representational-state-transfer-rest)\u3092\u901a\u3058\u3066\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30b0\u30e9\u30d5\n\n* [Graph\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https://en.wikipedia.org/wiki/Graph_database)\n* [Neo4j](https://neo4j.com/)\n* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  NoSQL\n\n* [\u57fa\u672c\u7528\u8a9e\u306e\u8aac\u660e](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n* [NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u3064\u3044\u3066\u8abf\u67fb\u3068\u9078\u629e\u30ac\u30a4\u30c9](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n* [NoSQL\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n* [NoSQL\u30d1\u30bf\u30fc\u30f3](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL\u304b\uff1fNoSQL\u304b\uff1f\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/wXGqG5f.png\"/>\n  <br/>\n  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Source: Transitioning from RDBMS to NoSQL</a></i>\n</p>\n\n**SQL** \u3092\u9078\u3076\u7406\u7531:\n\n* \u69cb\u9020\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\n* \u53b3\u683c\u306a\u30b9\u30ad\u30fc\u30de\n* \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\n* \u8907\u96d1\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u3059\u308b\u5fc5\u8981\u6027\n* \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n* \u30b9\u30b1\u30fc\u30eb\u3059\u308b\u969b\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u660e\u78ba\u306a\u3068\u304d\n* \u958b\u767a\u8005\u306e\u6570\u3001\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3001\u30b3\u30fc\u30c9\u7b49\u304c\u3088\u308a\u5145\u5b9f\u3057\u3066\u3044\u308b\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3088\u308b\u30c7\u30fc\u30bf\u63a2\u7d22\u306f\u3068\u3066\u3082\u901f\u3044\n\n**NoSQL** \u3092\u9078\u3076\u7406\u7531:\n\n* \u6e96\u69cb\u9020\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\n* \u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u3044\u3057\u3001\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u306a\u30b9\u30ad\u30fc\u30de\n* \u30ce\u30f3\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u306a\u30c7\u30fc\u30bf\n* \u8907\u96d1\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n* \u30c7\u30fc\u30bf\u306e\u591a\u304f\u306eTB (\u3082\u3057\u304f\u306f PB) \u3092\u4fdd\u5b58\u3059\u308b\n* \u96c6\u4e2d\u7684\u3001\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u8ca0\u8377\u306b\u8010\u3048\u3089\u308c\u308b\n* IOPS\u306b\u3064\u3044\u3066\u306f\u6975\u3081\u3066\u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u793a\u3059\n\nNoSQL\u306b\u9069\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf:\n\n* \u6025\u6fc0\u306a\u30af\u30ea\u30c3\u30af\u30b9\u30c8\u30ea\u30fc\u30e0\u3084\u30ed\u30b0\u30c7\u30fc\u30bf\u306e\u53ce\u96c6\n* \u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u3084\u30b9\u30b3\u30a2\u30ea\u30f3\u30b0\u30c7\u30fc\u30bf\n* \u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c8\u306a\u3069\u306e\u4e00\u6642\u7684\u60c5\u5831\n* \u983b\u7e41\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b ('\u30db\u30c3\u30c8\u306a') \u30c6\u30fc\u30d6\u30eb\n* \u30e1\u30bf\u30c7\u30fc\u30bf\u3084\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u3000SQL\u3082\u3057\u304f\u306fNoSQL\n\n* [\u6700\u521d\u306e1000\u4e07\u30e6\u30fc\u30b6\u30fc\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b](https://www.youtube.com/watch?v=w95murBkYmU)\n* [SQL\u3068NoSQL\u306e\u9055\u3044](https://www.sitepoint.com/sql-vs-nosql-differences/)\n\n## \u30ad\u30e3\u30c3\u30b7\u30e5\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/Q6z24La.png\"/>\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>\n</p>\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u6642\u9593\u3092\u524a\u6e1b\u3057\u3001\u30b5\u30fc\u30d0\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u8ca0\u8377\u3092\u4f4e\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u3001\u5b9f\u969b\u306e\u51e6\u7406\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30e3\u30fc\u304c\u307e\u305a\u4ee5\u524d\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3001\u76f4\u524d\u306e\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u305d\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306b\u6e21\u3063\u3066\u7d71\u5408\u3055\u308c\u305f\u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u306e\u5206\u914d\u3092\u8981\u6c42\u3057\u307e\u3059\u304c\u3001\u4eba\u6c17\u30a2\u30a4\u30c6\u30e0\u306f\u305d\u306e\u5206\u914d\u3092\u6b6a\u3081\u3066\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u3067\u3053\u306e\u3088\u3046\u306b\u3001\u5747\u4e00\u3067\u306a\u3044\u8ca0\u8377\u3084\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u6025\u6fc0\u306a\u5897\u52a0\u3092\u5438\u53ce\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306fOS\u3084\u30d6\u30e9\u30a6\u30b6\u30fc\u306a\u3069\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3001[\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc) \u3082\u3057\u304f\u306f\u72ec\u7acb\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30a4\u30e4\u30fc\u306b\u8a2d\u7f6e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### CDN\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n[CDN](#\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30afcontent-delivery-network) \u3082\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e00\u3064\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### Web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n[\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc) \u3084 [Varnish](https://www.varnish-cache.org/) \u306a\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u9759\u7684\u305d\u3057\u3066\u52d5\u7684\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u76f4\u63a5\u914d\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 web\u30b5\u30fc\u30d0\u30fc\u3082\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u666e\u901a\u3001\u4e00\u822c\u7684\u306a\u4f7f\u7528\u72b6\u6cc1\u306b\u9069\u3059\u308b\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306e\u8a2d\u5b9a\u3092\u521d\u671f\u72b6\u614b\u3067\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u3092\u7279\u5b9a\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u3066\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3069\u306eIn-memory\u30ad\u30e3\u30c3\u30b7\u30e5\u3084Redis\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u9593\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306fRAM\u3067\u4fdd\u6301\u3055\u308c\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u304c\u30c7\u30a3\u30b9\u30af\u3067\u4fdd\u5b58\u3055\u308c\u308b\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u3082\u3060\u3044\u3076\u901f\u3044\u3067\u3059\u3002RAM\u5bb9\u91cf\u306f\u30c7\u30a3\u30b9\u30af\u3088\u308a\u3082\u9650\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u3001[least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_algorithms#Least_Recently_Used)\u306a\u3069\u306e[cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c '\u30b3\u30fc\u30eb\u30c9' \u306a\u30a8\u30f3\u30c8\u30ea\u3092\u5f3e\u304d\u3001'\u30db\u30c3\u30c8' \u306a\u30c7\u30fc\u30bf\u3092RAM\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nRedis\u306f\u3055\u3089\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059:\n\n* \u30d1\u30fc\u30b8\u30b9\u30c6\u30f3\u30b9\u8a2d\u5b9a\n* \u30bd\u30fc\u30c8\u6e08\u307f\u30bb\u30c3\u30c8\u3001\u30ea\u30b9\u30c8\u306a\u3069\u306e\u7d44\u307f\u8fbc\u307f\u30c7\u30fc\u30bf\u69cb\u9020\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u306f\u69d8\u3005\u306a\u30ec\u30d9\u30eb\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3044\u305a\u308c\u3082\u5927\u304d\u304f\u4e8c\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u3044\u305a\u308c\u304b\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059: **\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea** \u3068 **\u30aa\u30d6\u30b8\u30a7\u30af\u30c8** \u3067\u3059:\n\n* \u884c\u30ec\u30d9\u30eb\n* \u30af\u30a8\u30ea\u30ec\u30d9\u30eb\n* Fully-formed serializable objects\n* Fully-rendered HTML\n\n\u4e00\u822c\u7684\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306f\u30af\u30ed\u30fc\u30f3\u3092\u4f5c\u308a\u51fa\u3057\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u96e3\u3057\u304f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30af\u30a8\u30ea\u3059\u308b\u969b\u306b\u306f\u5fc5\u305a\u30af\u30a8\u30ea\u3092\u30ad\u30fc\u3068\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u3057\u3066\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u624b\u6cd5\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u671f\u9650\u5207\u308c\u554f\u984c\u306b\u60a9\u3080\u3053\u3068\u306b\u306a\u308a\u307e\u3059:\n\n* \u8907\u96d1\u306a\u30af\u30a8\u30ea\u306b\u3088\u308a\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u7d50\u679c\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\n* \u30c6\u30fc\u30d6\u30eb\u30bb\u30eb\u306a\u3069\u306e\u30c7\u30fc\u30bf\u65ad\u7247\u304c\u5909\u5316\u3057\u305f\u6642\u306b\u3001\u305d\u306e\u5909\u5316\u3057\u305f\u30bb\u30eb\u3092\u542b\u3080\u304b\u3082\u3057\u308c\u306a\u3044\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n### \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3067\u305d\u3046\u3059\u308b\u3088\u3046\u306b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6349\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30af\u30e9\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u7d44\u307f\u7acb\u3066\u3055\u305b\u307e\u3059\u3002:\n\n* \u305d\u306e\u30c7\u30fc\u30bf\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u524a\u9664\u3059\u308b\u3053\u3068\n* \u975e\u540c\u671f\u51e6\u7406\u3092\u8a31\u5bb9\u3057\u307e\u3059: \u30ef\u30fc\u30ab\u30fc\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u3067\u6700\u65b0\u306e\u3082\u306e\u3092\u96c6\u3081\u3066\u304d\u307e\u3059\n\n\u4f55\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u304b:\n\n* \u30e6\u30fc\u30b6\u30fc\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\n* \u5b8c\u5168\u306b\u30ec\u30f3\u30c0\u30fc\u3055\u308c\u305f\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\n* \u30a2\u30af\u30c6\u30d3\u30c6\u30a3\u30b9\u30c8\u30ea\u30fc\u30e0\n* \u30e6\u30fc\u30b6\u30fc\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\n\n### \u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\u3067\u304d\u308b\u5bb9\u91cf\u306f\u9650\u3089\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u81ea\u5206\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u624b\u6cd5\u304c\u4e00\u756a\u3044\u3044\u304b\u306f\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/ONjORqk.png\"/>\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u8aad\u307f\u66f8\u304d\u306e\u51e6\u7406\u3092\u3057\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u306f\u76f4\u63a5\u3084\u308a\u3068\u308a\u3092\u3057\u307e\u305b\u3093\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u307e\u3059:\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e2d\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u53c2\u7167\u3057\u307e\u3059\u304c\u3001\u7d50\u679c\u3068\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306b\u306a\u308a\u307e\u3059\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30a8\u30f3\u30c8\u30ea\u3092\u53d6\u5f97\u3057\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u8ffd\u52a0\u3057\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u8fd4\u3057\u307e\u3059\n\n```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```\n\n[Memcached](https://memcached.org/) \u306f\u901a\u5e38\u3053\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u308b\u3002\n\n\u305d\u306e\u5f8c\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306f\u901f\u3044\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u306f\u30ec\u30fc\u30b8\u30fc\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3042\u308b\u3068\u3082\u8a00\u308f\u308c\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u307f\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u6ea2\u308c\u308b\u306e\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\n\n* \u5404\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306f\u4e09\u3064\u306e\u30c8\u30ea\u30c3\u30d7\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u306a\u308a\u3001\u4f53\u611f\u3067\u304d\u308b\u307b\u3069\u306e\u9045\u5ef6\u304c\u8d77\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u306f\u53e4\u3044\u3082\u306e\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002time-to-live (TTL)\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u30a8\u30f3\u30c8\u30ea\u306e\u66f4\u65b0\u3092\u5f37\u5236\u7684\u306b\u884c\u3046\u3001\u3082\u3057\u304f\u306f\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u554f\u984c\u306f\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n* \u30ce\u30fc\u30c9\u304c\u843d\u3061\u308b\u3068\u3001\u65b0\u898f\u306e\u7a7a\u306e\u30ce\u30fc\u30c9\u3067\u4ee3\u66ff\u3055\u308c\u308b\u3053\u3068\u3067\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### \u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/0vBc0hN.png\"/>\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30e1\u30a4\u30f3\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3068\u3057\u3066\u4f7f\u3044\u3001\u305d\u3053\u306b\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u66f8\u304d\u3092\u884c\u3044\u307e\u3059\u3002\u4e00\u65b9\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u8aad\u307f\u66f8\u304d\u3092\u62c5\u5f53\u3057\u307e\u3059\u3002\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3042\u308b\u30a8\u30f3\u30c8\u30ea\u3092\u8ffd\u52a0\u30fb\u66f4\u65b0\u3057\u307e\u3059\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u540c\u671f\u7684\u306b\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u66f8\u304d\u8fbc\u307f\u3092\u884c\u3044\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u8fd4\u3057\u307e\u3059\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9:\n\n```\nset_user(12345, {\"foo\":\"bar\"})\n```\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9:\n\n```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```\n\n\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u306f\u66f8\u304d\u8fbc\u307f\u51e6\u7406\u306e\u305b\u3044\u3067\u5168\u4f53\u3068\u3057\u3066\u306f\u9045\u3044\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u304c\u3001\u66f8\u304d\u8fbc\u307e\u308c\u305f\u3070\u304b\u308a\u306e\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u8aad\u307f\u8fbc\u307f\u306f\u901f\u3044\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u5074\u306f\u4e00\u822c\u7684\u306b\u30c7\u30fc\u30bf\u66f4\u65b0\u6642\u306e\u65b9\u304c\u8aad\u307f\u8fbc\u307f\u6642\u3088\u308a\u3082\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306b\u8a31\u5bb9\u7684\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30c7\u30fc\u30bf\u306f\u6700\u65b0\u7248\u3067\u4fdd\u305f\u308c\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\n\n* \u30ce\u30fc\u30c9\u304c\u843d\u3061\u305f\u3053\u3068\u3001\u3082\u3057\u304f\u306f\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u304c\u4f5c\u6210\u3055\u308c\u305f\u6642\u306b\u3001\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u304c\u66f4\u65b0\u3055\u308c\u308b\u307e\u3067\u306f\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u305b\u3093\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u3068\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3092\u4f75\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u554f\u984c\u3092\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n* \u66f8\u304d\u8fbc\u307e\u308c\u305f\u30c7\u30fc\u30bf\u306e\u5927\u90e8\u5206\u306f\u4e00\u5ea6\u3082\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u30c7\u30fc\u30bf\u306fTTL\u306b\u3088\u3063\u3066\u5727\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n#### \u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9 (\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/rgSrvjG.png\"/>\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u307e\u3059:\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u8ffd\u52a0\u30fb\u66f4\u65b0\u3057\u307e\u3059\n* \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3092\u975e\u540c\u671f\u7684\u306b\u884c\u3046\u3053\u3068\u3067\u3001\u66f8\u304d\u8fbc\u307f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u5185\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u30d2\u30c3\u30c8\u3059\u308b\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u843d\u3061\u308b\u3068\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u8d77\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u3084\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3088\u308a\u3082\u5b9f\u88c5\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/kxtjqgE.png\"/>\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\n\u671f\u9650\u5207\u308c\u3088\u308a\u3082\u524d\u306b\u3001\u76f4\u8fd1\u3067\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a8\u30f3\u30c8\u30ea\u3092\u81ea\u52d5\u7684\u306b\u66f4\u65b0\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3082\u3057\u3069\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u5c06\u6765\u5fc5\u8981\u306b\u306a\u308b\u306e\u304b\u3092\u6b63\u78ba\u306b\u4e88\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u306a\u3089\u3070\u3001\u30ea\u30fc\u30c9\u30b9\u30eb\u30fc\u3088\u308a\u3082\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\n\n* \u3069\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u306e\u4e88\u6e2c\u304c\u6b63\u78ba\u3067\u306a\u3044\u5834\u5408\u306b\u306f\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\u304c\u306a\u3044\u65b9\u304c\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306f\u826f\u3044\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30ad\u30e3\u30c3\u30b7\u30e5\n\n* [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms)\u306a\u3069\u3092\u7528\u3044\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u771f\u306e\u30c7\u30fc\u30bf\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u9593\u306e\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* Redis\u3084memcached\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u6210\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* Cache invalidation\u3082\u96e3\u3057\u3044\u3067\u3059\u304c\u305d\u308c\u306b\u52a0\u3048\u3066\u3001\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b\u3068\u3044\u3046\u8907\u96d1\u306a\u554f\u984c\u306b\u3082\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [From cache to in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n* [\u30b9\u30b1\u30fc\u30eb\u3067\u304d\u308b\u30b7\u30b9\u30c6\u30e0\u3092\u8a2d\u8a08\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u53ef\u7528\u6027\u3001\u5b89\u5b9a\u6027\u3001\u30d1\u30bf\u30fc\u30f3](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache\u306e\u30b9\u30c8\u30e9\u30c6\u30b8\u30fc](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## \u975e\u540c\u671f\u51e6\u7406\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/54GYsSx.png\"/>\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\n\u975e\u540c\u671f\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u3082\u3057\u3001\u9023\u7d9a\u7684\u306b\u884c\u308f\u308c\u308b\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u9593\u3092\u5727\u8feb\u3057\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u91cd\u3044\u51e6\u7406\u3092\u5225\u3067\u51e6\u7406\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002\u307e\u305f\u3001\u5b9a\u671f\u7684\u306b\u30c7\u30fc\u30bf\u3092\u96c6\u5408\u3055\u305b\u308b\u306a\u3069\u306e\u6642\u9593\u304c\u304b\u304b\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u524d\u3082\u3063\u3066\u51e6\u7406\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n### \u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u4fdd\u5b58\u3057\u3001\u914d\u4fe1\u3057\u307e\u3059\u3002\u3082\u3057\u3001\u51e6\u7406\u304c\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u884c\u3046\u306b\u306f\u9045\u3059\u304e\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3092\u7528\u3044\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30b8\u30e7\u30d6\u3092\u30ad\u30e5\u30fc\u306b\u914d\u4fe1\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u30b8\u30e7\u30d6\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u4f1d\u3048\u307e\u3059\u3002\n* \u30ef\u30fc\u30ab\u30fc\u304c\u30b8\u30e7\u30d6\u30ad\u30e5\u30fc\u304b\u3089\u53d7\u3051\u53d6\u3063\u3066\u3001\u51e6\u7406\u3092\u884c\u3044\u3001\u7d42\u4e86\u3057\u305f\u3089\u305d\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u51e6\u7406\u304c\u6b62\u307e\u308b\u3053\u3068\u306f\u306a\u304f\u3001\u30b8\u30e7\u30d6\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u9593\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u304b\u306e\u3088\u3046\u306b\u898b\u305b\u308b\u305f\u3081\u306b\u5c0f\u898f\u6a21\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c4\u30a4\u30fc\u30c8\u3092\u6295\u7a3f\u3059\u308b\u3068\u304d\u306b\u3001\u30c4\u30a4\u30fc\u30c8\u306f\u3059\u3050\u306b\u3042\u306a\u305f\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306b\u53cd\u6620\u3055\u308c\u305f\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u305d\u306e\u30c4\u30a4\u30fc\u30c8\u304c\u5b9f\u969b\u306b\u5168\u3066\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306b\u914d\u4fe1\u3055\u308c\u308b\u307e\u3067\u306b\u306f\u3082\u3046\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\n**Redis** \u306f\u30b7\u30f3\u30d7\u30eb\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u4ef2\u4ecb\u3068\u3057\u3066\u306f\u3044\u3044\u3067\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n**RabbitMQ** \u306f\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001'AMQP'\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5bfe\u5fdc\u3057\u3066\u3001\u81ea\u524d\u306e\u30ce\u30fc\u30c9\u3092\u7acb\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n**Amazon SQS** \u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u9ad8\u304f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u91cd\u8907\u3057\u3066\u914d\u4fe1\u3055\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30bf\u30b9\u30af\u30ad\u30e5\u30fc\n\n\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u306f\u30bf\u30b9\u30af\u3068\u305d\u306e\u95a2\u9023\u3059\u308b\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u3001\u51e6\u7406\u3057\u305f\u4e0a\u3067\u305d\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u7ba1\u7406\u3092\u3067\u304d\u308b\u307b\u304b\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u3068\u3066\u3082\u91cd\u3044\u30b8\u30e7\u30d6\u3092\u3053\u306a\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n**Celery** \u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3068python\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc\n\n\u3082\u3057\u3001\u30ad\u30e5\u30fc\u304c\u62e1\u5927\u3057\u3059\u304e\u308b\u3068\u3001\u30e1\u30e2\u30ea\u30fc\u3088\u308a\u3082\u30ad\u30e5\u30fc\u306e\u65b9\u304c\u5927\u304d\u304f\u306a\u308a\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u304c\u8d77\u3053\u308a\u3001\u30c7\u30a3\u30b9\u30af\u8aad\u307f\u51fa\u3057\u306b\u3064\u306a\u304c\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002[\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\u306f\u30ad\u30e5\u30fc\u30b5\u30a4\u30ba\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u78ba\u4fdd\u3057\u30ad\u30e5\u30fc\u306b\u3059\u3067\u306b\u3042\u308b\u30b8\u30e7\u30d6\u306b\u3064\u3044\u3066\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u6642\u9593\u3092\u77ed\u7e2e\u3067\u304d\u307e\u3059\u3002\u30ad\u30e5\u30fc\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u308b\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30b5\u30fc\u30d0\u30fc\u30d3\u30b8\u30fc\u3082\u3057\u304f\u306fHTTP 503\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u307e\u305f\u5f8c\u3067\u6642\u9593\u3092\u304a\u3044\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f[exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff)\u306a\u3069\u306b\u3088\u3063\u3066\u5f8c\u307b\u3069\u518d\u5ea6\u6642\u9593\u3092\u7f6e\u3044\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u975e\u540c\u671f\u51e6\u7406\n\n* \u30ad\u30e5\u30fc\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u9045\u5ef6\u304c\u8d77\u3053\u308a\u3001\u8907\u96d1\u3055\u3082\u5897\u3059\u305f\u3081\u3001\u3042\u307e\u308a\u91cd\u304f\u306a\u3044\u8a08\u7b97\u51e6\u7406\u3084\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306b\u304a\u3044\u3066\u306f\u540c\u671f\u51e6\u7406\u306e\u65b9\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)\n* [\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u305f\u6642\u306b\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc\u3092\u9069\u7528\u3059\u308b](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)\n* [\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3068\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u306e\u9055\u3044\u3068\u306f\uff1f](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## \u901a\u4fe1\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/5KeocQs.jpg\"/>\n  <br/>\n  <i><a href=http://www.escotal.com/osilayer.html>Source: OSI 7 layer model</a></i>\n</p>\n\n### Hypertext transfer protocol (HTTP)\n\nHTTP \u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u306e\u30c7\u30fc\u30bf\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u8ee2\u9001\u3059\u308b\u305f\u3081\u306e\u624b\u6cd5\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u95a2\u308f\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30b5\u30fc\u30d0\u30fc\u306b\u6295\u3052\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u4fc2\u3059\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u5b8c\u4e86\u30b9\u30c6\u30fc\u30bf\u30b9\u60c5\u5831\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002HTTP\u306f\u81ea\u5df1\u5b8c\u7d50\u3059\u308b\u306e\u3067\u3001\u9593\u306b\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30a8\u30f3\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3001\u5727\u7e2e\u306a\u3069\u306e\u3069\u3093\u306a\u4e2d\u9593\u30eb\u30fc\u30bf\u30fc\u304c\u5165\u3063\u3066\u3082\u52d5\u304f\u3088\u3046\u306b\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306aHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306fHTTP\u52d5\u8a5e(\u30e1\u30bd\u30c3\u30c9)\u3068\u30ea\u30bd\u30fc\u30b9(\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8)\u3067\u6210\u308a\u7acb\u3063\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u304c\u3088\u304f\u3042\u308bHTTP\u52d5\u8a5e\u3067\u3059\u3002:\n\n| \u52d5\u8a5e | \u8a73\u7d30 | \u51aa\u7b49\u6027* | \u30bb\u30fc\u30d5 | \u30ad\u30e3\u30c3\u30b7\u30e5\u3067\u304d\u308b\u304b |\n|---|---|---|---|---|\n| GET | \u30ea\u30bd\u30fc\u30b9\u3092\u8aad\u307f\u53d6\u308b | Yes | Yes | Yes |\n| POST | \u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3082\u3057\u304f\u306f\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u30c8\u30ea\u30ac\u30fc | No | No | Yes \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u65b0\u3057\u3044\u60c5\u5831\u3092\u542b\u3080\u5834\u5408 |\n| PUT | \u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3082\u3057\u304f\u306f\u5165\u308c\u66ff\u3048\u308b | Yes | No | No |\n| PATCH | \u30ea\u30bd\u30fc\u30b9\u3092\u90e8\u5206\u7684\u306b\u66f4\u65b0\u3059\u308b | No | No | Yes \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u65b0\u3057\u3044\u60c5\u5831\u3092\u542b\u3080\u5834\u5408 |\n| DELETE | \u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b | Yes | No | No |\n\n*\u4f55\u5ea6\u547c\u3093\u3067\u3082\u540c\u3058\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068*\n\nHTTP\u306f**TCP** \u3084 **UDP** \u306a\u3069\u306e\u4f4e\u7d1a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308b\u3002\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: HTTP\n\n* [HTTP\u3063\u3066\u306a\u306b?](https://www.nginx.com/resources/glossary/http/)\n* [HTTP \u3068 TCP\u306e\u9055\u3044](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [PUT \u3068 PATCH\u306e\u9055\u3044](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### \u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb (TCP)\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/JdAsdvG.jpg\"/>\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nTCP\u306f[IP network](https://en.wikipedia.org/wiki/Internet_Protocol)\u306e\u4e0a\u3067\u6210\u308a\u7acb\u3064\u63a5\u7d9a\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u63a5\u7d9a\u306f[handshake](https://en.wikipedia.org/wiki/Handshaking)\u306b\u3088\u3063\u3066\u958b\u59cb\u3001\u89e3\u9664\u3055\u308c\u307e\u3059\u3002\u5168\u3066\u306e\u9001\u4fe1\u3055\u308c\u305f\u30d1\u30b1\u30c3\u30c8\u306f\u6b20\u640d\u306a\u3057\u3067\u9001\u4fe1\u5148\u306b\u9001\u4fe1\u3055\u308c\u305f\u9806\u756a\u3067\u5230\u9054\u3059\u308b\u3088\u3046\u306b\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059:\n\n* \u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u3068[checksum fields](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation)\u304c\u5168\u3066\u306e\u30d1\u30b1\u30c3\u30c8\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n* [Acknowledgement](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks))\u30d1\u30b1\u30c3\u30c8\u3068\u81ea\u52d5\u518d\u9001\u4fe1\n\n\u3082\u3057\u9001\u4fe1\u8005\u304c\u6b63\u3057\u3044\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3089\u306a\u304b\u3063\u305f\u3068\u304d\u3001\u30d1\u30b1\u30c3\u30c8\u3092\u518d\u9001\u4fe1\u3057\u307e\u3059\u3002\u8907\u6570\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u63a5\u7d9a\u306f\u89e3\u9664\u3055\u308c\u307e\u3059\u3002TCP \u306f[\u30d5\u30ed\u30fc\u5236\u5fa1](https://en.wikipedia.org/wiki/Flow_control_(data)) \u3068 [\u8f3b\u8f33\u5236\u5fa1](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control)\u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066\u901f\u5ea6\u306f\u4f4e\u4e0b\u3057\u3001\u4e00\u822c\u7684\u306bUDP\u3088\u308a\u3082\u975e\u52b9\u7387\u306a\u8ee2\u9001\u624b\u6bb5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30cf\u30a4\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u306f\u304b\u306a\u308a\u5927\u304d\u306a\u6570\u306eTCP\u63a5\u7d9a\u3092\u958b\u3044\u3066\u304a\u304f\u3053\u3068\u304c\u3042\u308a\u3001\u305d\u306e\u3053\u3068\u3067\u30e1\u30e2\u30ea\u30fc\u4f7f\u7528\u304c\u5727\u8feb\u3055\u308c\u307e\u3059\u3002\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30b9\u30ec\u30c3\u30c9\u3068\u4f8b\u3048\u3070[memcached](#memcached) \u30b5\u30fc\u30d0\u30fc\u306e\u9593\u3067\u591a\u6570\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u4fdd\u3063\u3066\u304a\u304f\u3053\u3068\u306f\u9ad8\u304f\u3064\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u53ef\u80fd\u306a\u3068\u3053\u308d\u3067\u306fUDP\u306b\u5207\u308a\u66ff\u3048\u308b\u3060\u3051\u3067\u306a\u304f[\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30ea\u30f3\u30b0](https://en.wikipedia.org/wiki/Connection_pool)\u306a\u3069\u3082\u5f79\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nTCP\u306f\u9ad8\u3044\u4f9d\u5b58\u6027\u3092\u8981\u3057\u3001\u6642\u9593\u5236\u7d04\u304c\u53b3\u3057\u304f\u306a\u3044\u3082\u306e\u306b\u9069\u3057\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u60c5\u5831\u3001SMTP\u3001FTP\u3084SSH\u306a\u3069\u306e\u4f8b\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u6642\u306bUDP\u3088\u308a\u3082TCP\u3092\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u5168\u3066\u306e\u30c7\u30fc\u30bf\u304c\u6b20\u640d\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u5c4a\u3044\u3066\u307b\u3057\u3044\n* \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u6700\u9069\u306a\u81ea\u52d5\u63a8\u6e2c\u3092\u3057\u3066\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u305f\u3044\n\n### \u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb (UDP)\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/yzDrJtA.jpg\"/>\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nUDP\u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30ec\u30b9\u3067\u3059\u3002\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\uff08\u30d1\u30b1\u30c3\u30c8\u306e\u3088\u3046\u306a\u3082\u306e\uff09\u306f\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30ec\u30d9\u30eb\u3067\u306e\u4fdd\u8a3c\u3057\u304b\u3055\u308c\u307e\u305b\u3093\u3002\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306f\u9806\u4e0d\u540c\u3067\u53d7\u3051\u53d6\u308a\u5148\u306b\u5230\u7740\u3057\u305f\u308a\u305d\u3082\u305d\u3082\u7740\u304b\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002UDP\u306f\u8f3b\u8f33\u5236\u5fa1\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002TCP\u306b\u304a\u3044\u3066\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3053\u308c\u3089\u306e\u4fdd\u8a3c\u304c\u306a\u3044\u305f\u3081\u3001UDP\u306f\u4e00\u822c\u7684\u306b\u3001TCP\u3088\u308a\u3082\u52b9\u7387\u7684\u3067\u3059\u3002\n\nUDP\u306f\u30b5\u30d6\u30cd\u30c3\u30c8\u4e0a\u306e\u3059\u3079\u3066\u306e\u6a5f\u5668\u306b\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f[DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) \u306b\u304a\u3044\u3066\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u307e\u3060IP\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001IP\u30a2\u30c9\u30ec\u30b9\u3092\u5fc5\u8981\u3068\u3059\u308bTCP\u306b\u3088\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3067\u304d\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\nUDP\u306f\u4fe1\u983c\u6027\u306e\u9762\u3067\u306f\u52a3\u308a\u307e\u3059\u304c\u3001VoIP\u3001\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\u3001\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3084\u540c\u6642\u901a\u4fe1\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306a\u3069\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u91cd\u8996\u3055\u308c\u308b\u6642\u306b\u306f\u3068\u3066\u3082\u52b9\u679c\u7684\u3067\u3059\u3002\n\nTCP\u3088\u308a\u3082UDP\u3092\u4f7f\u3046\u306e\u306f:\n\n* \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u6700\u4f4e\u9650\u306b\u6291\u3048\u305f\u3044\u6642\n* \u30c7\u30fc\u30bf\u6b20\u640d\u3088\u308a\u3082\u3001\u30c7\u30fc\u30bf\u9045\u5ef6\u3092\u91cd\u8996\u3059\u308b\u3068\u304d\n* \u30a8\u30e9\u30fc\u4fee\u6b63\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u305f\u3044\u3068\u304d\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: TCP \u3068 UDP\n\n* [\u30b2\u30fc\u30e0\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [TCP \u3068 UDP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u4e3b\u306a\u9055\u3044](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [TCP \u3068 UDP\u306e\u9055\u3044](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [Transmission control protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [User datagram protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Facebook\u306e\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### \u9060\u9694\u624b\u7d9a\u547c\u51fa (RPC)\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/iF4Mkb5.png\"/>\n  <br/>\n  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview</a></i>\n</p>\n\nRPC\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e\u7570\u306a\u308b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3067\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304c\u51e6\u7406\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30b3\u30fc\u30eb\u306e\u3088\u3046\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u306b\u3069\u306e\u3088\u3046\u306b\u901a\u4fe1\u3059\u308b\u304b\u3068\u3044\u3046\u8a73\u7d30\u3092\u7701\u3044\u305f\u72b6\u614b\u3067\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u307e\u3059\u3002\u30ea\u30e2\u30fc\u30c8\u306e\u30b3\u30fc\u30eb\u306f\u666e\u901a\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30b3\u30fc\u30eb\u3088\u308a\u3082\u9045\u304f\u3001\u4fe1\u983c\u6027\u306b\u6b20\u3051\u308b\u305f\u3081\u3001RPC\u30b3\u30fc\u30eb\u3092\u30ed\u30fc\u30ab\u30eb\u30b3\u30fc\u30eb\u3068\u533a\u5225\u3055\u305b\u3066\u304a\u304f\u3053\u3068\u304c\u597d\u307e\u3057\u3044\u3067\u3057\u3087\u3046\u3002\u4eba\u6c17\u306eRPC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u4ee5\u4e0b\u3067\u3059\u3002[Protobuf](https://developers.google.com/protocol-buffers/)\u3001 [Thrift](https://thrift.apache.org/)\u3001[Avro](https://avro.apache.org/docs/current/)\n\nRPC \u306f \u30ea\u30af\u30a8\u30b9\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u30d7\u30ed\u30c8\u30b3\u30eb:\n\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0** - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u30b3\u30fc\u30eb\u306e\u3088\u3046\u306b\u30b9\u30bf\u30c3\u30af\u3078\u3068\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc** - \u30d7\u30ed\u30b7\u30fc\u30b8\u30e3ID\u3068\u30a2\u30fc\u30ae\u30e5\u30e1\u30f3\u30c8\u3092\u30d1\u30c3\u30af\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3057\u307e\u3059\u3002\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb** - OS\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u3078\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\u3002\n* **\u30b5\u30fc\u30d0\u30fc\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb** - OS\u304c\u53d7\u3051\u53d6\u3063\u305f\u30d1\u30b1\u30c3\u30c8\u3092\u30b5\u30fc\u30d0\u30fc\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306b\u53d7\u3051\u6e21\u3057\u307e\u3059\u3002\n* **\u30b5\u30fc\u30d0\u30fc\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc** -  \u7d50\u679c\u3092\u5c55\u958b\u3057\u3001\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fcID\u306b\u30de\u30c3\u30c1\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092\u547c\u3073\u51fa\u3057\u3001\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n* \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u4e0a\u8a18\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u9006\u9806\u3067\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\nSample RPC calls:\n\n```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```\n\nRPC\u306f\u632f\u308b\u821e\u3044\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002RPC\u306f\u5185\u90e8\u901a\u4fe1\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u7406\u7531\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u4f7f\u7528\u3059\u308b\u72b6\u6cc1\u306b\u5408\u308f\u305b\u3066\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30eb\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc (aka SDK) \u3092\u547c\u3076\u306e\u306f\u4ee5\u4e0b\u306e\u6642:\n\n* \u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u77e5\u3063\u3066\u3044\u308b\u6642\n* \u30ed\u30b8\u30c3\u30af\u304c\u3069\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u306e\u304b\u3092\u7ba1\u7406\u3057\u305f\u3044\u3068\u304d\n* \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u5916\u3067\u30a8\u30e9\u30fc\u304c\u3069\u306e\u3088\u3046\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3055\u308c\u308b\u304b\u3092\u7ba1\u7406\u3057\u305f\u3044\u6642\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u304c\u6700\u512a\u5148\u306e\u6642\n\n**REST** \u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5f93\u3046HTTP API\u306f\u30d1\u30d6\u30ea\u30c3\u30afAPI\u306b\u304a\u3044\u3066\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n#### \u6b20\u70b9: RPC\n\n* RPC\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306f\u30b5\u30fc\u30d3\u30b9\u5b9f\u88c5\u306b\u3088\u308a\u53b3\u5bc6\u306b\u5de6\u53f3\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u65b0\u3057\u3044\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3001\u4f7f\u7528\u4f8b\u304c\u3042\u308b\u305f\u3073\u306b\u65b0\u3057\u304fAPI\u304c\u5b9a\u7fa9\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n* RPC\u3092\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u65e2\u5b58\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001[Squid](http://www.squid-cache.org/)\u306a\u3069\u306e\u30b5\u30fc\u30d0\u30fc\u306b[RPC\u30b3\u30fc\u30eb\u304c\u6b63\u3057\u304f\u30ad\u30e3\u30c3\u30b7\u30e5](http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) \u3055\u308c\u308b\u3088\u3046\u306b\u8ffd\u52a0\u3067\u9aa8\u3092\u6298\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### Representational state transfer (REST)\n\nREST\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30b5\u30fc\u30d0\u30fc\u306b\u3088\u3063\u3066\u30de\u30cd\u30fc\u30b8\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u884c\u3046\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30b5\u30fc\u30d0\u30fc\u30e2\u30c7\u30eb\u3092\u652f\u6301\u3059\u308b\u30a2\u30fc\u30ad\u30c6\u30ad\u30c1\u30e3\u30b9\u30bf\u30a4\u30eb\u3067\u3059\u3002\u30b5\u30fc\u30d0\u30fc\u306f\u64cd\u4f5c\u3067\u304d\u308b\u3082\u3057\u304f\u306f\u65b0\u3057\u3044\u30ea\u30bd\u30fc\u30b9\u30ec\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3084\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30ec\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u901a\u4fe1\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u53ef\u80fd\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\nRESTful \u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306f\u6b21\u306e\u56db\u3064\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059:\n\n* **\u7279\u5fb4\u7684\u306a\u30ea\u30bd\u30fc\u30b9 (URI in HTTP)** - \u3069\u306e\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u3063\u3066\u3082\u540c\u3058URI\u3092\u4f7f\u3046\u3002\n* **HTTP\u52d5\u8a5e\u306b\u3088\u3063\u3066\u5909\u308f\u308b (Verbs in HTTP)** - \u52d5\u8a5e\u3001\u30d8\u30c3\u30c0\u30fc\u3001\u30dc\u30c7\u30a3\u3092\u4f7f\u3046\n* **\u81ea\u5df1\u8aac\u660e\u7684\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 (status response in HTTP)** - \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u4f7f\u3044\u3001\u65b0\u3057\u304f\u4f5c\u3063\u305f\u308a\u3057\u306a\u3044\u3053\u3068\u3002\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTML interface for HTTP)** - \u81ea\u5206\u306eweb\u30b5\u30fc\u30d3\u30b9\u304c\u30d6\u30e9\u30a6\u30b6\u3067\u5b8c\u5168\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3002\n\n\u30b5\u30f3\u30d7\u30eb REST \u30b3\u30fc\u30eb:\n\n```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```\n\nREST\u306f\u30c7\u30fc\u30bf\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u306e\u30ab\u30c3\u30d7\u30ea\u30f3\u30b0\u3092\u6700\u5c0f\u9650\u306b\u3059\u308b\u3082\u306e\u3067\u3001\u30d1\u30d6\u30ea\u30c3\u30afAPI\u306a\u3069\u306b\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002REST\u306fURI\u3001 [representation through headers](https://github.com/for-GET/know-your-http-well/blob/master/headers.md)\u3001\u305d\u3057\u3066\u3001GET\u3001POST\u3001PUT\u3001 DELETE\u3001PATCH\u306a\u3069\u306eHTTP\u52d5\u8a5e\u7b49\u306e\u3088\u308a\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u3067\u7d71\u4e00\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3042\u308b\u306e\u3067REST\u306f\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3084\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30cb\u30f3\u30b0\u306b\u6700\u9069\u3067\u3059\u3002\n\n#### \u6b20\u70b9: REST\n\n* REST\u306f\u30c7\u30fc\u30bf\u516c\u958b\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u308b\u306e\u3067\u3001\u30ea\u30bd\u30fc\u30b9\u304c\u81ea\u7136\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30d2\u30a8\u30e9\u30eb\u30ad\u30fc\u3067\u8868\u305b\u3089\u308c\u306a\u3044\u6642\u306b\u306f\u3088\u3044\u9078\u629e\u80a2\u3068\u306f\u8a00\u3048\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u3068\u3042\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u30bb\u30c3\u30c8\u306b\u30de\u30c3\u30c1\u3059\u308b\u3059\u3079\u3066\u306e\u66f4\u65b0\u60c5\u5831\u3092\u8fd4\u3059\u3068\u8a00\u3063\u305f\u51e6\u7406\u306f\u7c21\u5358\u306b\u306f\u30d1\u30b9\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002REST\u3067\u306f\u3001URI\u30d1\u30b9\u3001\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u305d\u3057\u3066\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306a\u3069\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\n* REST\u306f\u5c11\u6570\u306e\u52d5\u8a5e\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059(GET\u3001POST\u3001PUT\u3001DELETE\u3001\u305d\u3057\u3066 PATCH) \u304c\u6642\u306b\u306f\u4f7f\u3044\u305f\u3044\u4e8b\u4f8b\u306b\u5408\u308f\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u671f\u9650\u306e\u5207\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a2\u30fc\u30ab\u30a4\u30d6\u306b\u79fb\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u306f\u3053\u308c\u3089\u306e\u52d5\u8a5e\u306e\u4e2d\u306b\u306f\u7dba\u9e97\u306b\u306f\u30d5\u30a3\u30c3\u30c8\u3057\u307e\u305b\u3093\u3002\n* \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30d2\u30a8\u30e9\u30eb\u30ad\u30fc\u306e\u4e2d\u306b\u3042\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u3068\u3063\u3066\u304f\u308b\u306e\u306f\u30b7\u30f3\u30b0\u30eb\u30d3\u30e5\u30fc\u3092\u63cf\u753b\u3059\u308b\u306e\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u6570\u56de\u3084\u308a\u3068\u308a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u4f8b\u3068\u3057\u3066\u3001\u30d6\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u305d\u308c\u306b\u5bfe\u3059\u308b\u30b3\u30e1\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u3002\u69d8\u3005\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u74b0\u5883\u3067\u52d5\u4f5c\u3059\u308b\u53ef\u80fd\u6027\u304c\u8003\u3048\u3089\u308c\u308b\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u306f\u3053\u306e\u3088\u3046\u306a\u8907\u6570\u306e\u3084\u308a\u53d6\u308a\u306f\u597d\u307e\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n* \u6642\u304c\u7d4c\u3064\u306b\u3064\u308c\u3066\u3001API\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u3088\u308a\u591a\u304f\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u4e0e\u3048\u3089\u308c\u3066\u3001\u53e4\u3044\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3059\u3067\u306b\u3044\u3089\u306a\u3044\u3082\u306e\u3082\u542b\u3081\u3066\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u3053\u3068\u3067\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u3066\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3082\u62e1\u5927\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### RPC\u3068REST\u6bd4\u8f03\n\n| Operation | RPC | REST |\n|---|---|---|\n| \u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\t| **POST** /signup | **POST** /persons |\n| \u30ea\u30b6\u30a4\u30f3\t| **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |\n| Person\u8aad\u307f\u8fbc\u307f | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |\n| Person\u306e\u30a2\u30a4\u30c6\u30e0\u30ea\u30b9\u30c8\u8aad\u307f\u8fbc\u307f | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |\n| Person\u306e\u30a2\u30a4\u30c6\u30e0\u3078\u306e\u30a2\u30a4\u30c6\u30e0\u8ffd\u52a0 | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |\n| \u30a2\u30a4\u30c6\u30e0\u66f4\u65b0\t| **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |\n| \u30a2\u30a4\u30c6\u30e0\u524a\u9664 | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |\n\n<p align=\"center\">\n  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Source: Do you really know why you prefer REST over RPC</a></i>\n</p>\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: REST \u3068 RPC\n\n* [Do you really know why you prefer REST over RPC](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [When are RPC-ish approaches more appropriate than REST?](http://programmers.stackexchange.com/a/181186)\n* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [Debunking the myths of RPC and REST](http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [What are the drawbacks of using REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [Why REST for internal use and not RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u66f4\u65b0\u304c\u5fc5\u8981\u3067\u3059\u3002[contributing](#contributing)\u3057\u3066\u304f\u3060\u3055\u3044\uff01\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u5e45\u5e83\u3044\u30c8\u30d4\u30c3\u30af\u3067\u3059\u3002\u5341\u5206\u306a\u7d4c\u9a13\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5206\u91ce\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u304c\u306a\u304f\u3066\u3082\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u77e5\u8b58\u3092\u8981\u3059\u308b\u8077\u306b\u5fdc\u52df\u3059\u308b\u306e\u3067\u306a\u3044\u9650\u308a\u3001\u57fa\u672c\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n* \u60c5\u5831\u4f1d\u9054\u3001\u4fdd\u5b58\u306b\u304a\u3051\u308b\u6697\u53f7\u5316\n* [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) \u3084 [SQL injection](https://en.wikipedia.org/wiki/SQL_injection)\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3082\u3057\u304f\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u9732\u51fa\u3055\u308c\u308b\u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u30b5\u30cb\u30bf\u30a4\u30ba\u3059\u308b\n* SQL injection\u3092\u9632\u3050\u305f\u3081\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u7528\u3044\u308b\u3002\n* [least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege)\u306e\u539f\u7406\u3092\u7528\u3044\u308b\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [\u958b\u767a\u8005\u306e\u305f\u3081\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ac\u30a4\u30c9](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## \u88dc\u907a\n\n\u6697\u7b97\u3067\u3001\u63a8\u8a08\u5024\u3092\u6c42\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3082\u6642\u306b\u306f\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c7\u30a3\u30b9\u30af\u304b\u3089100\u679a\u30a4\u30e1\u30fc\u30b8\u5206\u306e\u30b5\u30e0\u30cd\u30a4\u30eb\u3092\u4f5c\u308b\u6642\u9593\u3092\u6c42\u3081\u305f\u308a\u3001\u305d\u306e\u6642\u306b\u3069\u308c\u3060\u3051\u30c7\u30a3\u30b9\u30af\u30e1\u30e2\u30ea\u30fc\u304c\u6d88\u8cbb\u3055\u308c\u308b\u304b\u306a\u3069\u306e\u5024\u3067\u3059\u3002**2\u306e\u4e57\u6570\u8868** \u3068 **\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024** \u306f\u826f\u3044\u53c2\u8003\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n### 2\u306e\u4e57\u6570\u8868\n\n```\n\u4e57\u6570           \u53b3\u5bc6\u306a\u5024         \u7d04        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [2\u306e\u4e57\u6570\u8868](https://en.wikipedia.org/wiki/Power_of_two)\n\n### \u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024\n\n```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```\n\n\u4e0a\u8a18\u8868\u306b\u57fa\u3065\u3044\u305f\u5f79\u306b\u7acb\u3064\u6570\u5024:\n\n* \u30c7\u30a3\u30b9\u30af\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 30 MB/s\n* 1 Gbps Ethernet\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6\u3000100 MB/s\n* SSD\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 1 GB/s\n* main memory\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 4 GB/s\n* 1\u79d2\u3067\u5730\u74036-7\u5468\u3067\u304d\u308b\n* 1\u79d2\u3067\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u30682000\u5468\u3084\u308a\u3068\u308a\u3067\u304d\u308b\n\n#### \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306e\u8996\u899a\u7684\u8868\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024 - 1](https://gist.github.com/jboner/2841832)\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024 - 2](https://gist.github.com/hellerbarde/2843375)\n* [Designs, lessons, and advice from building large distributed systems](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [Software Engineering Advice from Building Large-Scale Distributed Systems](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### \u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c\n\n> \u983b\u51fa\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u305d\u306e\u89e3\u7b54\u3078\u306e\u30ea\u30f3\u30af\n\n| \u8cea\u554f | \u89e3\u7b54 |\n|---|---|\n| Dropbox\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u540c\u671f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| Google\u306e\u3088\u3046\u306a\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u8a2d\u8a08 | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |\n| Google\u306e\u3088\u3046\u306a\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306aweb\u30af\u30ed\u30fc\u30e9\u30fc\u306e\u8a2d\u8a08 | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |\n| Google docs\u306e\u8a2d\u8a08 | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |\n| Redis\u306e\u3088\u3046\u306a\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306e\u8a2d\u8a08 | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| Memcached\u306e\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Amazon\u306e\u3088\u3046\u306a\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [hulu.com](http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |\n| Bitly\u306e\u3088\u3046\u306aURL\u77ed\u7e2e\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |\n| WhatsApp\u306e\u3088\u3046\u306a\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\u306e\u8a2d\u8a08 | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Instagram\u306e\u3088\u3046\u306a\u5199\u771f\u5171\u6709\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Facebook\u30cb\u30e5\u30fc\u30b9\u30d5\u30a3\u30fc\u30c9\u306e\u8a2d\u8a08 | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |\n| Facebook\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u8a2d\u8a08 | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Facebook\u30c1\u30e3\u30c3\u30c8\u306e\u8a2d\u8a08 | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |\n| Facebook\u306e\u3088\u3046\u306agraph\u691c\u7d22\u306e\u8a2d\u8a08 | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| CloudFlare\u306e\u3088\u3046\u306aCDN\u306e\u8a2d\u8a08 | [cmu.edu](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci) |\n| Twitter\u306e\u30c8\u30ec\u30f3\u30c9\u6a5f\u80fd\u306e\u8a2d\u8a08 | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |\n| \u30e9\u30f3\u30c0\u30e0ID\u767a\u884c\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |\n| \u4e00\u5b9a\u306e\u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\u6642\u9593\u3067\u306e\u4e0a\u4f4dk\u4ef6\u3092\u8fd4\u3059 | [ucsb.edu](https://icmi.cs.ucsb.edu/research/tech_reports/reports/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |\n| \u8907\u6570\u306e\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u914d\u4fe1\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |\n| \u30aa\u30f3\u30e9\u30a4\u30f3\u306e\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u30ab\u30fc\u30c9\u30b2\u30fc\u30e0\u306e\u8a2d\u8a08 | [indieflashblog.com](http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |\n| \u30ac\u30fc\u30d9\u30c3\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |\n| \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u4f8b\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### \u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n> \u4e16\u306e\u4e2d\u306e\u30b7\u30b9\u30c6\u30e0\u304c\u3069\u306e\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u304b\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/TcUo2fw.png\"/>\n  <br/>\n  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Source: Twitter timelines at scale</a></i>\n</p>\n\n**\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306e\u91cd\u7bb1\u306e\u9685\u3092\u3064\u3064\u304f\u3088\u3046\u306a\u7d30\u304b\u3044\u8a73\u7d30\u306b\u3053\u3060\u308f\u3089\u306a\u3044\u3053\u3068\u3002\u3080\u3057\u308d**\n\n* \u5171\u901a\u306e\u539f\u7406\u3001\u6280\u8853\u3001\u30d1\u30bf\u30fc\u30f3\u3092\u63a2\u308b\u3053\u3068\n* \u305d\u308c\u305e\u308c\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3069\u3093\u306a\u554f\u984c\u304c\u89e3\u6c7a\u3055\u308c\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3069\u3053\u3067\u3046\u307e\u304f\u4f7f\u3048\u3082\u3057\u304f\u306f\u4f7f\u3048\u306a\u3044\u304b\u3092\u77e5\u308b\u3053\u3068\n* \u5b66\u3093\u3060\u3053\u3068\u3092\u5fa9\u7fd2\u3059\u308b\u3053\u3068\n\n|\u7a2e\u985e | \u30b7\u30b9\u30c6\u30e0 | \u53c2\u8003\u30da\u30fc\u30b8 |\n|---|---|---|\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **MapReduce** - Google\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **Spark** - Databricks\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **Storm** - Twitter\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |\n| | | |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Bigtable** - Google\u306e\u30ab\u30e9\u30e0\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **HBase** - Bigtable\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5 | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Cassandra** - Facebook\u306e\u30ab\u30e9\u30e0\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **DynamoDB** - Amazon\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **MongoDB** - \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Spanner** - Google\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Memcached** - \u5206\u6563\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Redis** - \u6c38\u7d9a\u6027\u3068\u30d0\u30ea\u30e5\u30fc\u30bf\u30a4\u30d7\u3092\u517c\u306d\u5099\u3048\u305f\u5206\u6563\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| | | |\n| \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | **Google File System (GFS)** - \u5206\u6563\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |\n| \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | **Hadoop File System (HDFS)** - GFS\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5 | [apache.org](https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html) |\n| | | |\n| Misc | **Chubby** - \u758e\u7d50\u5408\u306e\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u30ed\u30c3\u30af\u3059\u308bGoogle\u306e\u30b5\u30fc\u30d3\u30b9 | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| Misc | **Dapper** - \u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u8ffd\u8de1\u3059\u308b\u30a4\u30f3\u30d5\u30e9 | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)\n| Misc | **Kafka** - LinkedIn\u306b\u3088\u308bPub/sub\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |\n| Misc | **Zookeeper** - \u540c\u671f\u3092\u53ef\u80fd\u306b\u3059\u308b\u4e2d\u592e\u96c6\u6a29\u30a4\u30f3\u30d5\u30e9\u3068\u30b5\u30fc\u30d3\u30b9 | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |\n| | \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### \u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n| \u4f01\u696d | \u53c2\u8003\u30da\u30fc\u30b8 |\n|---|---|\n| Amazon | [Amazon architecture](http://highscalability.com/amazon-architecture) |\n| Cinchcast | [Producing 1,500 hours of audio every day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Realtime datamining At 120,000 tweets per second](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| DropBox | [How we've scaled Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| ESPN | [Operating At 100,000 duh nuh nuhs per second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Google architecture](http://highscalability.com/google-architecture) |\n| Instagram | [14 million users, terabytes of photos](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[What powers Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Justin.Tv's live video broadcasting architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Scaling memcached at Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook\u2019s distributed data store for the social graph](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook\u2019s photo storage](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf) |\n| Flickr | [Flickr architecture](http://highscalability.com/flickr-architecture) |\n| Mailbox | [From 0 to one million users in 6 weeks](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Pinterest | [From 0 To 10s of billions of page views a month](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 million visitors, 10x growth, 12 employees](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 million monthly users and growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [PlentyOfFish architecture](http://highscalability.com/plentyoffish-architecture) |\n| Salesforce | [How they handle 1.3 billion transactions a day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow architecture](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |\n| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [15 billion page views a month](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Storing 250 million tweets a day using MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M active users, 300K QPS, a 22 MB/S firehose](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timelines at scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Big and small data at Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Operations at Twitter: scaling beyond 100 million users](https://www.youtube.com/watch?v=z8LU0Cj6BOU) |\n| Uber | [How Uber scales their real-time market platform](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html) |\n| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [YouTube scalability](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube architecture](http://highscalability.com/youtube-architecture) |\n\n### \u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0\n\n> \u9762\u63a5\u3092\u53d7\u3051\u308b\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n>\n> \u6295\u3052\u3089\u308c\u308b\u8cea\u554f\u306f\u540c\u3058\u5206\u91ce\u304b\u3089\u6765\u308b\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\n\n* [Airbnb Engineering](http://nerds.airbnb.com/)\n* [Atlassian Developers](https://developer.atlassian.com/blog/)\n* [Autodesk Engineering](http://cloudengineering.autodesk.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Engineering Blog](http://word.bitly.com/)\n* [Box Blogs](https://www.box.com/blog/engineering/)\n* [Cloudera Developer Blog](http://blog.cloudera.com/blog/)\n* [Dropbox Tech Blog](https://tech.dropbox.com/)\n* [Engineering at Quora](http://engineering.quora.com/)\n* [Ebay Tech Blog](http://www.ebaytechblog.com/)\n* [Evernote Tech Blog](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Engineering](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Engineering Blog](http://engineering.foursquare.com/)\n* [GitHub Engineering Blog](http://githubengineering.com/)\n* [Google Research Blog](http://googleresearch.blogspot.com/)\n* [Groupon Engineering Blog](https://engineering.groupon.com/)\n* [Heroku Engineering Blog](https://engineering.heroku.com/)\n* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Engineering](http://instagram-engineering.tumblr.com/)\n* [Intel Software Blog](https://software.intel.com/en-us/blogs/)\n* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Engineering](http://engineering.linkedin.com/blog)\n* [Microsoft Engineering](https://engineering.microsoft.com/)\n* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Tech Blog](http://techblog.netflix.com/)\n* [Paypal Developer Blog](https://devblog.paypal.com/category/engineering/)\n* [Pinterest Engineering Blog](http://engineering.pinterest.com/)\n* [Quora Engineering](https://engineering.quora.com/)\n* [Reddit Blog](http://www.redditblog.com/)\n* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Engineering Blog](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Twilio Engineering Blog](http://www.twilio.com/engineering)\n* [Twitter Engineering](https://engineering.twitter.com/)\n* [Uber Engineering Blog](http://eng.uber.com/)\n* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)\n* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)\n* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n\u3053\u3053\u306b\u3042\u308b\u30ea\u30b9\u30c8\u306f\u6bd4\u8f03\u7684\u5c0f\u898f\u6a21\u306a\u3082\u306e\u306b\u3068\u3069\u3081\u3001[kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\u306b\u3088\u308a\u8a73\u7d30\u306b\u8a18\u3059\u3053\u3068\u3067\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3059\u308b\u3002\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0\u3078\u306e\u30ea\u30f3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306f\u3053\u3053\u3067\u306f\u306a\u304f\u3001engineering-blogs\u30ec\u30dc\u30b8\u30c8\u30ea\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u9032\u884c\u4e2d\u306e\u4f5c\u696d\n\n\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\u3084\u3001\u9032\u884c\u4e2d\u306e\u4f5c\u696d\u3092\u624b\u4f1d\u3063\u3066\u3044\u305f\u3060\u3051\u308b\u5834\u5408\u306f[\u3053\u3061\u3089](#contributing)!\n\n* MapReduce\u306b\u3088\u308b\u5206\u6563\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\n* Consistent hashing\n* Scatter gather\n* [Contribute](#contributing)\n\n## \u30af\u30ec\u30b8\u30c3\u30c8\n\n\u30af\u30ec\u30b8\u30c3\u30c8\u53ca\u3073\u3001\u53c2\u7167\u30da\u30fc\u30b8\u306f\u9069\u6642\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306b\u8a18\u8f09\u3057\u3066\u3042\u308a\u307e\u3059\n\nSpecial thanks to:\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [A distributed systems reading list](http://dancres.github.io/Pages/)\n* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## Contact info\n\nFeel free to contact me to discuss any issues, questions, or comments.\n\nMy contact info can be found on my [GitHub page](https://github.com/donnemartin).\n\n## License\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*\n\n    Copyright 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n"
 },
 {
  "repo": "nodejs/node",
  "language": "JavaScript",
  "readme_contents": "<!--lint disable no-literal-urls-->\n<p align=\"center\">\n  <a href=\"https://nodejs.org/\">\n    <img\n      alt=\"Node.js\"\n      src=\"https://nodejs.org/static/images/logo-light.svg\"\n      width=\"400\"\n    />\n  </a>\n</p>\n\nNode.js is an open-source, cross-platform, JavaScript runtime environment. It\nexecutes JavaScript code outside of a browser. For more information on using\nNode.js, see the [Node.js Website][].\n\nThe Node.js project uses an [open governance model](./GOVERNANCE.md). The\n[OpenJS Foundation][] provides support for the project.\n\n**This project is bound by a [Code of Conduct][].**\n\n# Table of Contents\n\n* [Support](#support)\n* [Release Types](#release-types)\n  * [Download](#download)\n    * [Current and LTS Releases](#current-and-lts-releases)\n    * [Nightly Releases](#nightly-releases)\n    * [API Documentation](#api-documentation)\n  * [Verifying Binaries](#verifying-binaries)\n* [Building Node.js](#building-nodejs)\n* [Security](#security)\n* [Contributing to Node.js](#contributing-to-nodejs)\n* [Current Project Team Members](#current-project-team-members)\n  * [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)\n  * [Collaborators](#collaborators)\n  * [Release Keys](#release-keys)\n\n## Support\n\nLooking for help? Check out the\n[instructions for getting support](.github/SUPPORT.md).\n\n## Release Types\n\n* **Current**: Under active development. Code for the Current release is in the\n  branch for its major version number (for example,\n  [v10.x](https://github.com/nodejs/node/tree/v10.x)). Node.js releases a new\n  major version every 6 months, allowing for breaking changes. This happens in\n  April and October every year. Releases appearing each October have a support\n  life of 8 months. Releases appearing each April convert to LTS (see below)\n  each October.\n* **LTS**: Releases that receive Long-term Support, with a focus on stability\n  and security. Every even-numbered major version will become an LTS release.\n  LTS releases receive 12 months of _Active LTS_ support and a further 18 months\n  of _Maintenance_. LTS release lines have alphabetically-ordered codenames,\n  beginning with v4 Argon. There are no breaking changes or feature additions,\n  except in some special circumstances.\n* **Nightly**: Code from the Current branch built every 24-hours when there are\n  changes. Use with caution.\n\nCurrent and LTS releases follow [Semantic Versioning](https://semver.org). A\nmember of the Release Team [signs](#release-keys) each Current and LTS release.\nFor more information, see the\n[Release README](https://github.com/nodejs/Release#readme).\n\n### Download\n\nBinaries, installers, and source tarballs are available at\n<https://nodejs.org/en/download/>.\n\n#### Current and LTS Releases\n<https://nodejs.org/download/release/>\n\nThe [latest](https://nodejs.org/download/release/latest/) directory is an\nalias for the latest Current release. The latest-_codename_ directory is an\nalias for the latest release from an LTS line. For example, the\n[latest-carbon](https://nodejs.org/download/release/latest-carbon/) directory\ncontains the latest Carbon (Node.js 8) release.\n\n#### Nightly Releases\n<https://nodejs.org/download/nightly/>\n\nEach directory name and filename contains a date (in UTC) and the commit\nSHA at the HEAD of the release.\n\n#### API Documentation\n\nDocumentation for the latest Current release is at <https://nodejs.org/api/>.\nVersion-specific documentation is available in each release directory in the\n_docs_ subdirectory. Version-specific documentation is also at\n<https://nodejs.org/download/docs/>.\n\n### Verifying Binaries\n\nDownload directories contain a `SHASUMS256.txt` file with SHA checksums for the\nfiles.\n\nTo download `SHASUMS256.txt` using `curl`:\n\n```console\n$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt\n```\n\nTo check that a downloaded file matches the checksum, run\nit through `sha256sum` with a command such as:\n\n```console\n$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\n```\n\nFor Current and LTS, the GPG detached signature of `SHASUMS256.txt` is in\n`SHASUMS256.txt.sig`. You can use it with `gpg` to verify the integrity of\n`SHASUM256.txt`. You will first need to import\n[the GPG keys of individuals authorized to create releases](#release-keys). To\nimport the keys:\n\n```console\n$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\n```\n\nSee the bottom of this README for a full script to import active release keys.\n\nNext, download the `SHASUMS256.txt.sig` for the release:\n\n```console\n$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig\n```\n\nThen use `gpg --verify SHASUMS256.txt.sig SHASUMS256.txt` to verify\nthe file's signature.\n\n## Building Node.js\n\nSee [BUILDING.md](BUILDING.md) for instructions on how to build Node.js from\nsource and a list of supported platforms.\n\n## Security\n\nFor information on reporting security vulnerabilities in Node.js, see\n[SECURITY.md](./SECURITY.md).\n\n## Contributing to Node.js\n\n* [Contributing to the project][]\n* [Working Groups][]\n* [Strategic Initiatives][]\n\n## Current Project Team Members\n\nFor information about the governance of the Node.js project, see\n[GOVERNANCE.md](./GOVERNANCE.md).\n\n### TSC (Technical Steering Committee)\n\n* [addaleax](https://github.com/addaleax) -\n**Anna Henningsen** &lt;anna@addaleax.net&gt; (she/her)\n* [apapirovski](https://github.com/apapirovski) -\n**Anatoli Papirovski** &lt;apapirovski@mac.com&gt; (he/him)\n* [BethGriggs](https://github.com/BethGriggs) -\n**Beth Griggs** &lt;Bethany.Griggs@uk.ibm.com&gt; (she/her)\n* [BridgeAR](https://github.com/BridgeAR) -\n**Ruben Bridgewater** &lt;ruben@bridgewater.de&gt; (he/him)\n* [ChALkeR](https://github.com/ChALkeR) -\n**\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447** &lt;chalkerx@gmail.com&gt; (he/him)\n* [cjihrig](https://github.com/cjihrig) -\n**Colin Ihrig** &lt;cjihrig@gmail.com&gt; (he/him)\n* [codebytere](https://github.com/codebytere) -\n**Shelley Vohr** &lt;codebytere@gmail.com&gt; (she/her)\n* [danbev](https://github.com/danbev) -\n**Daniel Bevenius** &lt;daniel.bevenius@gmail.com&gt; (he/him)\n* [fhinkel](https://github.com/fhinkel) -\n**Franziska Hinkelmann** &lt;franziska.hinkelmann@gmail.com&gt; (she/her)\n* [gabrielschulhof](https://github.com/gabrielschulhof) -\n**Gabriel Schulhof** &lt;gabriel.schulhof@intel.com&gt;\n* [gireeshpunathil](https://github.com/gireeshpunathil) -\n**Gireesh Punathil** &lt;gpunathi@in.ibm.com&gt; (he/him)\n* [jasnell](https://github.com/jasnell) -\n**James M Snell** &lt;jasnell@gmail.com&gt; (he/him)\n* [joyeecheung](https://github.com/joyeecheung) -\n**Joyee Cheung** &lt;joyeec9h3@gmail.com&gt; (she/her)\n* [mcollina](https://github.com/mcollina) -\n**Matteo Collina** &lt;matteo.collina@gmail.com&gt; (he/him)\n* [mhdawson](https://github.com/mhdawson) -\n**Michael Dawson** &lt;michael_dawson@ca.ibm.com&gt; (he/him)\n* [mmarchini](https://github.com/mmarchini) -\n**Matheus Marchini** &lt;mat@mmarchini.me&gt;\n* [MylesBorins](https://github.com/MylesBorins) -\n**Myles Borins** &lt;myles.borins@gmail.com&gt; (he/him)\n* [sam-github](https://github.com/sam-github) -\n**Sam Roberts** &lt;vieuxtech@gmail.com&gt;\n* [targos](https://github.com/targos) -\n**Micha\u00ebl Zasso** &lt;targos@protonmail.com&gt; (he/him)\n* [tniessen](https://github.com/tniessen) -\n**Tobias Nie\u00dfen** &lt;tniessen@tnie.de&gt;\n* [Trott](https://github.com/Trott) -\n**Rich Trott** &lt;rtrott@gmail.com&gt; (he/him)\n\n### TSC Emeriti\n\n* [bnoordhuis](https://github.com/bnoordhuis) -\n**Ben Noordhuis** &lt;info@bnoordhuis.nl&gt;\n* [chrisdickinson](https://github.com/chrisdickinson) -\n**Chris Dickinson** &lt;christopher.s.dickinson@gmail.com&gt;\n* [evanlucas](https://github.com/evanlucas) -\n**Evan Lucas** &lt;evanlucas@me.com&gt; (he/him)\n* [Fishrock123](https://github.com/Fishrock123) -\n**Jeremiah Senkpiel** &lt;fishrock123@rocketmail.com&gt; (he/they)\n* [gibfahn](https://github.com/gibfahn) -\n**Gibson Fahnestock** &lt;gibfahn@gmail.com&gt; (he/him)\n* [indutny](https://github.com/indutny) -\n**Fedor Indutny** &lt;fedor.indutny@gmail.com&gt;\n* [isaacs](https://github.com/isaacs) -\n**Isaac Z. Schlueter** &lt;i@izs.me&gt;\n* [joshgav](https://github.com/joshgav) -\n**Josh Gavant** &lt;josh.gavant@outlook.com&gt;\n* [mscdex](https://github.com/mscdex) -\n**Brian White** &lt;mscdex@mscdex.net&gt;\n* [nebrius](https://github.com/nebrius) -\n**Bryan Hughes** &lt;bryan@nebri.us&gt;\n* [ofrobots](https://github.com/ofrobots) -\n**Ali Ijaz Sheikh** &lt;ofrobots@google.com&gt; (he/him)\n* [orangemocha](https://github.com/orangemocha) -\n**Alexis Campailla** &lt;orangemocha@nodejs.org&gt;\n* [piscisaureus](https://github.com/piscisaureus) -\n**Bert Belder** &lt;bertbelder@gmail.com&gt;\n* [rvagg](https://github.com/rvagg) -\n**Rod Vagg** &lt;r@va.gg&gt;\n* [shigeki](https://github.com/shigeki) -\n**Shigeki Ohtsu** &lt;ohtsu@ohtsu.org&gt; (he/him)\n* [thefourtheye](https://github.com/thefourtheye) -\n**Sakthipriyan Vairamani** &lt;thechargingvolcano@gmail.com&gt; (he/him)\n* [TimothyGu](https://github.com/TimothyGu) -\n**Tiancheng \"Timothy\" Gu** &lt;timothygu99@gmail.com&gt; (he/him)\n* [trevnorris](https://github.com/trevnorris) -\n**Trevor Norris** &lt;trev.norris@gmail.com&gt;\n\n### Collaborators\n\n* [addaleax](https://github.com/addaleax) -\n**Anna Henningsen** &lt;anna@addaleax.net&gt; (she/her)\n* [ak239](https://github.com/ak239) -\n**Aleksei Koziatinskii** &lt;ak239spb@gmail.com&gt;\n* [AndreasMadsen](https://github.com/AndreasMadsen) -\n**Andreas Madsen** &lt;amwebdk@gmail.com&gt; (he/him)\n* [antsmartian](https://github.com/antsmartian) -\n**Anto Aravinth** &lt;anto.aravinth.cse@gmail.com&gt; (he/him)\n* [apapirovski](https://github.com/apapirovski) -\n**Anatoli Papirovski** &lt;apapirovski@mac.com&gt; (he/him)\n* [bcoe](https://github.com/bcoe) -\n**Ben Coe** &lt;bencoe@gmail.com&gt; (he/him)\n* [bengl](https://github.com/bengl) -\n**Bryan English** &lt;bryan@bryanenglish.com&gt; (he/him)\n* [benjamingr](https://github.com/benjamingr) -\n**Benjamin Gruenbaum** &lt;benjamingr@gmail.com&gt;\n* [BethGriggs](https://github.com/BethGriggs) -\n**Beth Griggs** &lt;Bethany.Griggs@uk.ibm.com&gt; (she/her)\n* [bmeck](https://github.com/bmeck) -\n**Bradley Farias** &lt;bradley.meck@gmail.com&gt;\n* [bmeurer](https://github.com/bmeurer) -\n**Benedikt Meurer** &lt;benedikt.meurer@gmail.com&gt;\n* [bnoordhuis](https://github.com/bnoordhuis) -\n**Ben Noordhuis** &lt;info@bnoordhuis.nl&gt;\n* [boneskull](https://github.com/boneskull) -\n**Christopher Hiller** &lt;boneskull@boneskull.com&gt; (he/him)\n* [BridgeAR](https://github.com/BridgeAR) -\n**Ruben Bridgewater** &lt;ruben@bridgewater.de&gt; (he/him)\n* [bzoz](https://github.com/bzoz) -\n**Bartosz Sosnowski** &lt;bartosz@janeasystems.com&gt;\n* [cclauss](https://github.com/cclauss) -\n**Christian Clauss** &lt;cclauss@me.com&gt; (he/him)\n* [ChALkeR](https://github.com/ChALkeR) -\n**\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447** &lt;chalkerx@gmail.com&gt; (he/him)\n* [cjihrig](https://github.com/cjihrig) -\n**Colin Ihrig** &lt;cjihrig@gmail.com&gt; (he/him)\n* [codebytere](https://github.com/codebytere) -\n**Shelley Vohr** &lt;codebytere@gmail.com&gt; (she/her)\n* [danbev](https://github.com/danbev) -\n**Daniel Bevenius** &lt;daniel.bevenius@gmail.com&gt; (he/him)\n* [davisjam](https://github.com/davisjam) -\n**Jamie Davis** &lt;davisjam@vt.edu&gt; (he/him)\n* [devnexen](https://github.com/devnexen) -\n**David Carlier** &lt;devnexen@gmail.com&gt;\n* [devsnek](https://github.com/devsnek) -\n**Gus Caplan** &lt;me@gus.host&gt; (he/him)\n* [digitalinfinity](https://github.com/digitalinfinity) -\n**Hitesh Kanwathirtha** &lt;digitalinfinity@gmail.com&gt; (he/him)\n* [edsadr](https://github.com/edsadr) -\n**Adrian Estrada** &lt;edsadr@gmail.com&gt; (he/him)\n* [eugeneo](https://github.com/eugeneo) -\n**Eugene Ostroukhov** &lt;eostroukhov@google.com&gt;\n* [evanlucas](https://github.com/evanlucas) -\n**Evan Lucas** &lt;evanlucas@me.com&gt; (he/him)\n* [fhinkel](https://github.com/fhinkel) -\n**Franziska Hinkelmann** &lt;franziska.hinkelmann@gmail.com&gt; (she/her)\n* [Fishrock123](https://github.com/Fishrock123) -\n**Jeremiah Senkpiel** &lt;fishrock123@rocketmail.com&gt;  (he/they)\n* [Flarna](https://github.com/Flarna) -\n**Gerhard St\u00f6bich** &lt;deb2001-github@yahoo.de&gt;  (he/they)\n* [gabrielschulhof](https://github.com/gabrielschulhof) -\n**Gabriel Schulhof** &lt;gabriel.schulhof@intel.com&gt;\n* [gdams](https://github.com/gdams) -\n**George Adams** &lt;george.adams@uk.ibm.com&gt; (he/him)\n* [geek](https://github.com/geek) -\n**Wyatt Preul** &lt;wpreul@gmail.com&gt;\n* [gengjiawen](https://github.com/gengjiawen) -\n**Jiawen Geng** &lt;technicalcute@gmail.com&gt;\n* [GeoffreyBooth](https://github.com/geoffreybooth) -\n**Geoffrey Booth** &lt;webmaster@geoffreybooth.com&gt; (he/him)\n* [gibfahn](https://github.com/gibfahn) -\n**Gibson Fahnestock** &lt;gibfahn@gmail.com&gt; (he/him)\n* [gireeshpunathil](https://github.com/gireeshpunathil) -\n**Gireesh Punathil** &lt;gpunathi@in.ibm.com&gt; (he/him)\n* [guybedford](https://github.com/guybedford) -\n**Guy Bedford** &lt;guybedford@gmail.com&gt; (he/him)\n* [hashseed](https://github.com/hashseed) -\n**Yang Guo** &lt;yangguo@chromium.org&gt; (he/him)\n* [himself65](https://github.com/himself65) -\n**Zeyu Yang** &lt;himself65@outlook.com&gt; (he/him)\n* [hiroppy](https://github.com/hiroppy) -\n**Yuta Hiroto** &lt;hello@hiroppy.me&gt; (he/him)\n* [indutny](https://github.com/indutny) -\n**Fedor Indutny** &lt;fedor.indutny@gmail.com&gt;\n* [JacksonTian](https://github.com/JacksonTian) -\n**Jackson Tian** &lt;shyvo1987@gmail.com&gt;\n* [jasnell](https://github.com/jasnell) -\n**James M Snell** &lt;jasnell@gmail.com&gt; (he/him)\n* [jdalton](https://github.com/jdalton) -\n**John-David Dalton** &lt;john.david.dalton@gmail.com&gt;\n* [jkrems](https://github.com/jkrems) -\n**Jan Krems** &lt;jan.krems@gmail.com&gt; (he/him)\n* [joaocgreis](https://github.com/joaocgreis) -\n**Jo\u00e3o Reis** &lt;reis@janeasystems.com&gt;\n* [joyeecheung](https://github.com/joyeecheung) -\n**Joyee Cheung** &lt;joyeec9h3@gmail.com&gt; (she/her)\n* [juanarbol](https://github.com/juanarbol) -\n**Juan Jos\u00e9 Arboleda** &lt;soyjuanarbol@gmail.com&gt; (he/him)\n* [JungMinu](https://github.com/JungMinu) -\n**Minwoo Jung** &lt;nodecorelab@gmail.com&gt; (he/him)\n* [kfarnung](https://github.com/kfarnung) -\n**Kyle Farnung** &lt;kfarnung@microsoft.com&gt; (he/him)\n* [lance](https://github.com/lance) -\n**Lance Ball** &lt;lball@redhat.com&gt; (he/him)\n* [legendecas](https://github.com/legendecas) -\n**Chengzhong Wu** &lt;legendecas@gmail.com&gt; (he/him)\n* [Leko](https://github.com/Leko) -\n**Shingo Inoue** &lt;leko.noor@gmail.com&gt; (he/him)\n* [lpinca](https://github.com/lpinca) -\n**Luigi Pinca** &lt;luigipinca@gmail.com&gt; (he/him)\n* [lundibundi](https://github.com/lundibundi) -\n**Denys Otrishko** &lt;shishugi@gmail.com&gt; (he/him)\n* [mafintosh](https://github.com/mafintosh) -\n**Mathias Buus** &lt;mathiasbuus@gmail.com&gt; (he/him)\n* [mcollina](https://github.com/mcollina) -\n**Matteo Collina** &lt;matteo.collina@gmail.com&gt; (he/him)\n* [mhdawson](https://github.com/mhdawson) -\n**Michael Dawson** &lt;michael_dawson@ca.ibm.com&gt; (he/him)\n* [mildsunrise](https://github.com/mildsunrise) -\n**Alba Mendez** &lt;me@alba.sh&gt; (she/her)\n* [misterdjules](https://github.com/misterdjules) -\n**Julien Gilli** &lt;jgilli@nodejs.org&gt;\n* [mmarchini](https://github.com/mmarchini) -\n**Matheus Marchini** &lt;mat@mmarchini.me&gt;\n* [mscdex](https://github.com/mscdex) -\n**Brian White** &lt;mscdex@mscdex.net&gt;\n* [MylesBorins](https://github.com/MylesBorins) -\n**Myles Borins** &lt;myles.borins@gmail.com&gt; (he/him)\n* [ofrobots](https://github.com/ofrobots) -\n**Ali Ijaz Sheikh** &lt;ofrobots@google.com&gt; (he/him)\n* [oyyd](https://github.com/oyyd) -\n**Ouyang Yadong** &lt;oyydoibh@gmail.com&gt; (he/him)\n* [psmarshall](https://github.com/psmarshall) -\n**Peter Marshall** &lt;petermarshall@chromium.org&gt; (he/him)\n* [puzpuzpuz](https://github.com/puzpuzpuz) -\n**Andrey Pechkurov** &lt;apechkurov@gmail.com&gt; (he/him)\n* [Qard](https://github.com/Qard) -\n**Stephen Belanger** &lt;admin@stephenbelanger.com&gt; (he/him)\n* [refack](https://github.com/refack) -\n**Refael Ackermann (\u05e8\u05e4\u05d0\u05dc \u05e4\u05dc\u05d7\u05d9)** &lt;refack@gmail.com&gt; (he/him/\u05d4\u05d5\u05d0/\u05d0\u05ea\u05d4)\n* [richardlau](https://github.com/richardlau) -\n**Richard Lau** &lt;riclau@uk.ibm.com&gt;\n* [ronag](https://github.com/ronag) -\n**Robert Nagy** &lt;ronagy@icloud.com&gt;\n* [ronkorving](https://github.com/ronkorving) -\n**Ron Korving** &lt;ron@ronkorving.nl&gt;\n* [rubys](https://github.com/rubys) -\n**Sam Ruby** &lt;rubys@intertwingly.net&gt;\n* [rvagg](https://github.com/rvagg) -\n**Rod Vagg** &lt;rod@vagg.org&gt;\n* [ryzokuken](https://github.com/ryzokuken) -\n**Ujjwal Sharma** &lt;ryzokuken@disroot.org&gt; (he/him)\n* [saghul](https://github.com/saghul) -\n**Sa\u00fal Ibarra Corretg\u00e9** &lt;saghul@gmail.com&gt;\n* [sam-github](https://github.com/sam-github) -\n**Sam Roberts** &lt;vieuxtech@gmail.com&gt;\n* [santigimeno](https://github.com/santigimeno) -\n**Santiago Gimeno** &lt;santiago.gimeno@gmail.com&gt;\n* [sebdeckers](https://github.com/sebdeckers) -\n**Sebastiaan Deckers** &lt;sebdeckers83@gmail.com&gt;\n* [seishun](https://github.com/seishun) -\n**Nikolai Vavilov** &lt;vvnicholas@gmail.com&gt;\n* [shigeki](https://github.com/shigeki) -\n**Shigeki Ohtsu** &lt;ohtsu@ohtsu.org&gt; (he/him)\n* [shisama](https://github.com/shisama) -\n**Masashi Hirano** &lt;shisama07@gmail.com&gt; (he/him)\n* [silverwind](https://github.com/silverwind) -\n**Roman Reiss** &lt;me@silverwind.io&gt;\n* [srl295](https://github.com/srl295) -\n**Steven R Loomis** &lt;srloomis@us.ibm.com&gt;\n* [starkwang](https://github.com/starkwang) -\n**Weijia Wang** &lt;starkwang@126.com&gt;\n* [targos](https://github.com/targos) -\n**Micha\u00ebl Zasso** &lt;targos@protonmail.com&gt; (he/him)\n* [thefourtheye](https://github.com/thefourtheye) -\n**Sakthipriyan Vairamani** &lt;thechargingvolcano@gmail.com&gt; (he/him)\n* [TimothyGu](https://github.com/TimothyGu) -\n**Tiancheng \"Timothy\" Gu** &lt;timothygu99@gmail.com&gt; (he/him)\n* [tniessen](https://github.com/tniessen) -\n**Tobias Nie\u00dfen** &lt;tniessen@tnie.de&gt;\n* [trivikr](https://github.com/trivikr) -\n**Trivikram Kamat** &lt;trivikr.dev@gmail.com&gt;\n* [Trott](https://github.com/Trott) -\n**Rich Trott** &lt;rtrott@gmail.com&gt; (he/him)\n* [vdeturckheim](https://github.com/vdeturckheim) -\n**Vladimir de Turckheim** &lt;vlad2t@hotmail.com&gt; (he/him)\n* [watilde](https://github.com/watilde) -\n**Daijiro Wachi** &lt;daijiro.wachi@gmail.com&gt; (he/him)\n* [watson](https://github.com/watson) -\n**Thomas Watson** &lt;w@tson.dk&gt;\n* [XadillaX](https://github.com/XadillaX) -\n**Khaidi Chu** &lt;i@2333.moe&gt; (he/him)\n* [yhwang](https://github.com/yhwang) -\n**Yihong Wang** &lt;yh.wang@ibm.com&gt;\n* [yorkie](https://github.com/yorkie) -\n**Yorkie Liu** &lt;yorkiefixer@gmail.com&gt;\n* [yosuke-furukawa](https://github.com/yosuke-furukawa) -\n**Yosuke Furukawa** &lt;yosuke.furukawa@gmail.com&gt;\n* [ZYSzys](https://github.com/ZYSzys) -\n**Yongsheng Zhang** &lt;zyszys98@gmail.com&gt; (he/him)\n\n### Collaborator Emeriti\n\n* [andrasq](https://github.com/andrasq) -\n**Andras** &lt;andras@kinvey.com&gt;\n* [AnnaMag](https://github.com/AnnaMag) -\n**Anna M. Kedzierska** &lt;anna.m.kedzierska@gmail.com&gt;\n* [aqrln](https://github.com/aqrln) -\n**Alexey Orlenko** &lt;eaglexrlnk@gmail.com&gt; (he/him)\n* [brendanashworth](https://github.com/brendanashworth) -\n**Brendan Ashworth** &lt;brendan.ashworth@me.com&gt;\n* [calvinmetcalf](https://github.com/calvinmetcalf) -\n**Calvin Metcalf** &lt;calvin.metcalf@gmail.com&gt;\n* [chrisdickinson](https://github.com/chrisdickinson) -\n**Chris Dickinson** &lt;christopher.s.dickinson@gmail.com&gt;\n* [claudiorodriguez](https://github.com/claudiorodriguez) -\n**Claudio Rodriguez** &lt;cjrodr@yahoo.com&gt;\n* [DavidCai1993](https://github.com/DavidCai1993) -\n**David Cai** &lt;davidcai1993@yahoo.com&gt; (he/him)\n* [eljefedelrodeodeljefe](https://github.com/eljefedelrodeodeljefe) -\n**Robert Jefe Lindstaedt** &lt;robert.lindstaedt@gmail.com&gt;\n* [estliberitas](https://github.com/estliberitas) -\n**Alexander Makarenko** &lt;estliberitas@gmail.com&gt;\n* [firedfox](https://github.com/firedfox) -\n**Daniel Wang** &lt;wangyang0123@gmail.com&gt;\n* [glentiki](https://github.com/glentiki) -\n**Glen Keane** &lt;glenkeane.94@gmail.com&gt; (he/him)\n* [iarna](https://github.com/iarna) -\n**Rebecca Turner** &lt;me@re-becca.org&gt;\n* [imran-iq](https://github.com/imran-iq) -\n**Imran Iqbal** &lt;imran@imraniqbal.org&gt;\n* [imyller](https://github.com/imyller) -\n**Ilkka Myller** &lt;ilkka.myller@nodefield.com&gt;\n* [isaacs](https://github.com/isaacs) -\n**Isaac Z. Schlueter** &lt;i@izs.me&gt;\n* [italoacasas](https://github.com/italoacasas) -\n**Italo A. Casas** &lt;me@italoacasas.com&gt; (he/him)\n* [jasongin](https://github.com/jasongin) -\n**Jason Ginchereau** &lt;jasongin@microsoft.com&gt;\n* [jbergstroem](https://github.com/jbergstroem) -\n**Johan Bergstr\u00f6m** &lt;bugs@bergstroem.nu&gt;\n* [jhamhader](https://github.com/jhamhader) -\n**Yuval Brik** &lt;yuval@brik.org.il&gt;\n* [joshgav](https://github.com/joshgav) -\n**Josh Gavant** &lt;josh.gavant@outlook.com&gt;\n* [julianduque](https://github.com/julianduque) -\n**Julian Duque** &lt;julianduquej@gmail.com&gt; (he/him)\n* [kunalspathak](https://github.com/kunalspathak) -\n**Kunal Pathak** &lt;kunal.pathak@microsoft.com&gt;\n* [lucamaraschi](https://github.com/lucamaraschi) -\n**Luca Maraschi** &lt;luca.maraschi@gmail.com&gt; (he/him)\n* [lxe](https://github.com/lxe) -\n**Aleksey Smolenchuk** &lt;lxe@lxe.co&gt;\n* [maclover7](https://github.com/maclover7) -\n**Jon Moss** &lt;me@jonathanmoss.me&gt; (he/him)\n* [matthewloring](https://github.com/matthewloring) -\n**Matthew Loring** &lt;mattloring@google.com&gt;\n* [micnic](https://github.com/micnic) -\n**Nicu Micleu\u0219anu** &lt;micnic90@gmail.com&gt; (he/him)\n* [mikeal](https://github.com/mikeal) -\n**Mikeal Rogers** &lt;mikeal.rogers@gmail.com&gt;\n* [monsanto](https://github.com/monsanto) -\n**Christopher Monsanto** &lt;chris@monsan.to&gt;\n* [MoonBall](https://github.com/MoonBall) -\n**Chen Gang** &lt;gangc.cxy@foxmail.com&gt;\n* [not-an-aardvark](https://github.com/not-an-aardvark) -\n**Teddy Katz** &lt;teddy.katz@gmail.com&gt; (he/him)\n* [Olegas](https://github.com/Olegas) -\n**Oleg Elifantiev** &lt;oleg@elifantiev.ru&gt;\n* [orangemocha](https://github.com/orangemocha) -\n**Alexis Campailla** &lt;orangemocha@nodejs.org&gt;\n* [othiym23](https://github.com/othiym23) -\n**Forrest L Norvell** &lt;ogd@aoaioxxysz.net&gt; (he/him)\n* [petkaantonov](https://github.com/petkaantonov) -\n**Petka Antonov** &lt;petka_antonov@hotmail.com&gt;\n* [phillipj](https://github.com/phillipj) -\n**Phillip Johnsen** &lt;johphi@gmail.com&gt;\n* [piscisaureus](https://github.com/piscisaureus) -\n**Bert Belder** &lt;bertbelder@gmail.com&gt;\n* [pmq20](https://github.com/pmq20) -\n**Minqi Pan** &lt;pmq2001@gmail.com&gt;\n* [princejwesley](https://github.com/princejwesley) -\n**Prince John Wesley** &lt;princejohnwesley@gmail.com&gt;\n* [rlidwka](https://github.com/rlidwka) -\n**Alex Kocharin** &lt;alex@kocharin.ru&gt;\n* [rmg](https://github.com/rmg) -\n**Ryan Graham** &lt;r.m.graham@gmail.com&gt;\n* [robertkowalski](https://github.com/robertkowalski) -\n**Robert Kowalski** &lt;rok@kowalski.gd&gt;\n* [romankl](https://github.com/romankl) -\n**Roman Klauke** &lt;romaaan.git@gmail.com&gt;\n* [RReverser](https://github.com/RReverser) -\n**Ingvar Stepanyan** &lt;me@rreverser.com&gt;\n* [stefanmb](https://github.com/stefanmb) -\n**Stefan Budeanu** &lt;stefan@budeanu.com&gt;\n* [tellnes](https://github.com/tellnes) -\n**Christian Tellnes** &lt;christian@tellnes.no&gt;\n* [thlorenz](https://github.com/thlorenz) -\n**Thorsten Lorenz** &lt;thlorenz@gmx.de&gt;\n* [trevnorris](https://github.com/trevnorris) -\n**Trevor Norris** &lt;trev.norris@gmail.com&gt;\n* [tunniclm](https://github.com/tunniclm) -\n**Mike Tunnicliffe** &lt;m.j.tunnicliffe@gmail.com&gt;\n* [vkurchatkin](https://github.com/vkurchatkin) -\n**Vladimir Kurchatkin** &lt;vladimir.kurchatkin@gmail.com&gt;\n* [vsemozhetbyt](https://github.com/vsemozhetbyt) -\n**Vse Mozhet Byt** &lt;vsemozhetbyt@gmail.com&gt; (he/him)\n* [whitlockjc](https://github.com/whitlockjc) -\n**Jeremy Whitlock** &lt;jwhitlock@apache.org&gt;\n\nCollaborators follow the [Collaborator Guide](./doc/guides/collaborator-guide.md) in\nmaintaining the Node.js project.\n\n### Release Keys\n\nPrimary GPG keys for Node.js Releasers (some Releasers sign with subkeys):\n\n* **Beth Griggs** &lt;bethany.griggs@uk.ibm.com&gt;\n`4ED778F539E3634C779C87C6D7062848A1AB005C`\n* **Colin Ihrig** &lt;cjihrig@gmail.com&gt;\n`94AE36675C464D64BAFA68DD7434390BDBE9B9C5`\n* **James M Snell** &lt;jasnell@keybase.io&gt;\n`71DCFD284A79C3B38668286BC97EC7A07EDE3FC1`\n* **Micha\u00ebl Zasso** &lt;targos@protonmail.com&gt;\n`8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600`\n* **Myles Borins** &lt;myles.borins@gmail.com&gt;\n`C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8`\n* **Rod Vagg** &lt;rod@vagg.org&gt;\n`DD8F2338BAE7501E3DD5AC78C273792F7D83545D`\n* **Ruben Bridgewater** &lt;ruben@bridgewater.de&gt;\n`A48C2BEE680E841632CD4E44F07496B3EB3C1762`\n* **Shelley Vohr** &lt;shelley.vohr@gmail.com&gt;\n`B9E2F5981AA6E0CD28160D9FF13993A75599653C`\n\nTo import the full set of trusted release keys:\n\n```bash\ngpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C\ngpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5\ngpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\ngpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\ngpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\ngpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\ngpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762\ngpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C\n```\n\nSee the section above on [Verifying Binaries](#verifying-binaries) for how to\nuse these keys to verify a downloaded file.\n\nOther keys used to sign some previous releases:\n\n* **Chris Dickinson** &lt;christopher.s.dickinson@gmail.com&gt;\n`9554F04D7259F04124DE6B476D5A82AC7E37093B`\n* **Evan Lucas** &lt;evanlucas@me.com&gt;\n`B9AE9905FFD7803F25714661B63B535A4C206CA9`\n* **Gibson Fahnestock** &lt;gibfahn@gmail.com&gt;\n`77984A986EBC2AA786BC0F66B01FBB92821C587A`\n* **Isaac Z. Schlueter** &lt;i@izs.me&gt;\n`93C7E9E91B49E432C2F75674B0A78B0A6C481CF6`\n* **Italo A. Casas** &lt;me@italoacasas.com&gt;\n`56730D5401028683275BD23C23EFEFE93C4CFFFE`\n* **Jeremiah Senkpiel** &lt;fishrock@keybase.io&gt;\n`FD3A5288F042B6850C66B31F09FE44734EB7990E`\n* **Julien Gilli** &lt;jgilli@fastmail.fm&gt;\n`114F43EE0176B71C7BC219DD50A3051F888C628D`\n* **Timothy J Fontaine** &lt;tjfontaine@gmail.com&gt;\n`7937DFD2AB06298B2293C3187D33FF9D0246406D`\n\n[Code of Conduct]: https://github.com/nodejs/admin/blob/master/CODE_OF_CONDUCT.md\n[Contributing to the project]: CONTRIBUTING.md\n[Node.js Website]: https://nodejs.org/\n[OpenJS Foundation]: https://openjsf.org/\n[Working Groups]: https://github.com/nodejs/TSC/blob/master/WORKING_GROUPS.md\n[Strategic Initiatives]: https://github.com/nodejs/TSC/blob/master/Strategic-Initiatives.md\n"
 },
 {
  "repo": "antirez/redis",
  "language": "C",
  "readme_contents": "This README is just a fast *quick start* document. You can find more detailed documentation at [redis.io](https://redis.io).\n\nWhat is Redis?\n--------------\n\nRedis is often referred as a *data structures* server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a *server-client* model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.\n\nData structures implemented into Redis have a few special properties:\n\n* Redis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that is also non-volatile.\n* Implementation of data structures stress on memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modeled using an high level programming language.\n* Redis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, cluster, high availability.\n\nAnother good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations to work with complex data types like Lists, Sets, ordered data structures, and so forth.\n\nIf you want to know more, this is a list of selected starting points:\n\n* Introduction to Redis data types. http://redis.io/topics/data-types-intro\n* Try Redis directly inside your browser. http://try.redis.io\n* The full list of Redis commands. http://redis.io/commands\n* There is much more inside the Redis official documentation. http://redis.io/documentation\n\nBuilding Redis\n--------------\n\nRedis can be compiled and used on Linux, OSX, OpenBSD, NetBSD, FreeBSD.\nWe support big endian and little endian architectures, and both 32 bit\nand 64 bit systems.\n\nIt may compile on Solaris derived systems (for instance SmartOS) but our\nsupport for this platform is *best effort* and Redis is not guaranteed to\nwork as well as in Linux, OSX, and \\*BSD there.\n\nIt is as simple as:\n\n    % make\n\nTo build with TLS support, you'll need OpenSSL development libraries (e.g.\nlibssl-dev on Debian/Ubuntu) and run:\n\n    % make BUILD_TLS=yes\n\nYou can run a 32 bit Redis binary using:\n\n    % make 32bit\n\nAfter building Redis, it is a good idea to test it using:\n\n    % make test\n\nIf TLS is built, running the tests with TLS enabled (you will need `tcl-tls`\ninstalled):\n\n    % ./utils/gen-test-certs.sh\n    % ./runtest --tls\n\n\nFixing build problems with dependencies or cached build options\n---------\n\nRedis has some dependencies which are included into the `deps` directory.\n`make` does not automatically rebuild dependencies even if something in\nthe source code of dependencies changes.\n\nWhen you update the source code with `git pull` or when code inside the\ndependencies tree is modified in any other way, make sure to use the following\ncommand in order to really clean everything and rebuild from scratch:\n\n    make distclean\n\nThis will clean: jemalloc, lua, hiredis, linenoise.\n\nAlso if you force certain build options like 32bit target, no C compiler\noptimizations (for debugging purposes), and other similar build time options,\nthose options are cached indefinitely until you issue a `make distclean`\ncommand.\n\nFixing problems building 32 bit binaries\n---------\n\nIf after building Redis with a 32 bit target you need to rebuild it\nwith a 64 bit target, or the other way around, you need to perform a\n`make distclean` in the root directory of the Redis distribution.\n\nIn case of build errors when trying to build a 32 bit binary of Redis, try\nthe following steps:\n\n* Install the packages libc6-dev-i386 (also try g++-multilib).\n* Try using the following command line instead of `make 32bit`:\n  `make CFLAGS=\"-m32 -march=native\" LDFLAGS=\"-m32\"`\n\nAllocator\n---------\n\nSelecting a non-default memory allocator when building Redis is done by setting\nthe `MALLOC` environment variable. Redis is compiled and linked against libc\nmalloc by default, with the exception of jemalloc being the default on Linux\nsystems. This default was picked because jemalloc has proven to have fewer\nfragmentation problems than libc malloc.\n\nTo force compiling against libc malloc, use:\n\n    % make MALLOC=libc\n\nTo compile against jemalloc on Mac OS X systems, use:\n\n    % make MALLOC=jemalloc\n\nVerbose build\n-------------\n\nRedis will build with a user friendly colorized output by default.\nIf you want to see a more verbose output use the following:\n\n    % make V=1\n\nRunning Redis\n-------------\n\nTo run Redis with the default configuration just type:\n\n    % cd src\n    % ./redis-server\n\nIf you want to provide your redis.conf, you have to run it using an additional\nparameter (the path of the configuration file):\n\n    % cd src\n    % ./redis-server /path/to/redis.conf\n\nIt is possible to alter the Redis configuration by passing parameters directly\nas options using the command line. Examples:\n\n    % ./redis-server --port 9999 --replicaof 127.0.0.1 6379\n    % ./redis-server /etc/redis/6379.conf --loglevel debug\n\nAll the options in redis.conf are also supported as options using the command\nline, with exactly the same name.\n\nRunning Redis with TLS:\n------------------\n\nPlease consult the [TLS.md](TLS.md) file for more information on\nhow to use Redis with TLS.\n\nPlaying with Redis\n------------------\n\nYou can use redis-cli to play with Redis. Start a redis-server instance,\nthen in another terminal try the following:\n\n    % cd src\n    % ./redis-cli\n    redis> ping\n    PONG\n    redis> set foo bar\n    OK\n    redis> get foo\n    \"bar\"\n    redis> incr mycounter\n    (integer) 1\n    redis> incr mycounter\n    (integer) 2\n    redis>\n\nYou can find the list of all the available commands at http://redis.io/commands.\n\nInstalling Redis\n-----------------\n\nIn order to install Redis binaries into /usr/local/bin just use:\n\n    % make install\n\nYou can use `make PREFIX=/some/other/directory install` if you wish to use a\ndifferent destination.\n\nMake install will just install binaries in your system, but will not configure\ninit scripts and configuration files in the appropriate place. This is not\nneeded if you want just to play a bit with Redis, but if you are installing\nit the proper way for a production system, we have a script doing this\nfor Ubuntu and Debian systems:\n\n    % cd utils\n    % ./install_server.sh\n\n_Note_: `install_server.sh` will not work on Mac OSX; it is built for Linux only.\n\nThe script will ask you a few questions and will setup everything you need\nto run Redis properly as a background daemon that will start again on\nsystem reboots.\n\nYou'll be able to stop and start Redis using the script named\n`/etc/init.d/redis_<portnumber>`, for instance `/etc/init.d/redis_6379`.\n\nCode contributions\n-----------------\n\nNote: by contributing code to the Redis project in any form, including sending\na pull request via Github, a code fragment or patch via private email or\npublic discussion groups, you agree to release your code under the terms\nof the BSD license that you can find in the [COPYING][1] file included in the Redis\nsource distribution.\n\nPlease see the [CONTRIBUTING][2] file in this source distribution for more\ninformation.\n\n[1]: https://github.com/antirez/redis/blob/unstable/COPYING\n[2]: https://github.com/antirez/redis/blob/unstable/CONTRIBUTING\n\nRedis internals\n===\n\nIf you are reading this README you are likely in front of a Github page\nor you just untarred the Redis distribution tar ball. In both the cases\nyou are basically one step away from the source code, so here we explain\nthe Redis source code layout, what is in each file as a general idea, the\nmost important functions and structures inside the Redis server and so forth.\nWe keep all the discussion at a high level without digging into the details\nsince this document would be huge otherwise and our code base changes\ncontinuously, but a general idea should be a good starting point to\nunderstand more. Moreover most of the code is heavily commented and easy\nto follow.\n\nSource code layout\n---\n\nThe Redis root directory just contains this README, the Makefile which\ncalls the real Makefile inside the `src` directory and an example\nconfiguration for Redis and Sentinel. You can find a few shell\nscripts that are used in order to execute the Redis, Redis Cluster and\nRedis Sentinel unit tests, which are implemented inside the `tests`\ndirectory.\n\nInside the root are the following important directories:\n\n* `src`: contains the Redis implementation, written in C.\n* `tests`: contains the unit tests, implemented in Tcl.\n* `deps`: contains libraries Redis uses. Everything needed to compile Redis is inside this directory; your system just needs to provide `libc`, a POSIX compatible interface and a C compiler. Notably `deps` contains a copy of `jemalloc`, which is the default allocator of Redis under Linux. Note that under `deps` there are also things which started with the Redis project, but for which the main repository is not `antirez/redis`.\n\nThere are a few more directories but they are not very important for our goals\nhere. We'll focus mostly on `src`, where the Redis implementation is contained,\nexploring what there is inside each file. The order in which files are\nexposed is the logical one to follow in order to disclose different layers\nof complexity incrementally.\n\nNote: lately Redis was refactored quite a bit. Function names and file\nnames have been changed, so you may find that this documentation reflects the\n`unstable` branch more closely. For instance in Redis 3.0 the `server.c`\nand `server.h` files were named `redis.c` and `redis.h`. However the overall\nstructure is the same. Keep in mind that all the new developments and pull\nrequests should be performed against the `unstable` branch.\n\nserver.h\n---\n\nThe simplest way to understand how a program works is to understand the\ndata structures it uses. So we'll start from the main header file of\nRedis, which is `server.h`.\n\nAll the server configuration and in general all the shared state is\ndefined in a global structure called `server`, of type `struct redisServer`.\nA few important fields in this structure are:\n\n* `server.db` is an array of Redis databases, where data is stored.\n* `server.commands` is the command table.\n* `server.clients` is a linked list of clients connected to the server.\n* `server.master` is a special client, the master, if the instance is a replica.\n\nThere are tons of other fields. Most fields are commented directly inside\nthe structure definition.\n\nAnother important Redis data structure is the one defining a client.\nIn the past it was called `redisClient`, now just `client`. The structure\nhas many fields, here we'll just show the main ones:\n\n    struct client {\n        int fd;\n        sds querybuf;\n        int argc;\n        robj **argv;\n        redisDb *db;\n        int flags;\n        list *reply;\n        char buf[PROTO_REPLY_CHUNK_BYTES];\n        ... many other fields ...\n    }\n\nThe client structure defines a *connected client*:\n\n* The `fd` field is the client socket file descriptor.\n* `argc` and `argv` are populated with the command the client is executing, so that functions implementing a given Redis command can read the arguments.\n* `querybuf` accumulates the requests from the client, which are parsed by the Redis server according to the Redis protocol and executed by calling the implementations of the commands the client is executing.\n* `reply` and `buf` are dynamic and static buffers that accumulate the replies the server sends to the client. These buffers are incrementally written to the socket as soon as the file descriptor is writable.\n\nAs you can see in the client structure above, arguments in a command\nare described as `robj` structures. The following is the full `robj`\nstructure, which defines a *Redis object*:\n\n    typedef struct redisObject {\n        unsigned type:4;\n        unsigned encoding:4;\n        unsigned lru:LRU_BITS; /* lru time (relative to server.lruclock) */\n        int refcount;\n        void *ptr;\n    } robj;\n\nBasically this structure can represent all the basic Redis data types like\nstrings, lists, sets, sorted sets and so forth. The interesting thing is that\nit has a `type` field, so that it is possible to know what type a given\nobject has, and a `refcount`, so that the same object can be referenced\nin multiple places without allocating it multiple times. Finally the `ptr`\nfield points to the actual representation of the object, which might vary\neven for the same type, depending on the `encoding` used.\n\nRedis objects are used extensively in the Redis internals, however in order\nto avoid the overhead of indirect accesses, recently in many places\nwe just use plain dynamic strings not wrapped inside a Redis object.\n\nserver.c\n---\n\nThis is the entry point of the Redis server, where the `main()` function\nis defined. The following are the most important steps in order to startup\nthe Redis server.\n\n* `initServerConfig()` setups the default values of the `server` structure.\n* `initServer()` allocates the data structures needed to operate, setup the listening socket, and so forth.\n* `aeMain()` starts the event loop which listens for new connections.\n\nThere are two special functions called periodically by the event loop:\n\n1. `serverCron()` is called periodically (according to `server.hz` frequency), and performs tasks that must be performed from time to time, like checking for timedout clients.\n2. `beforeSleep()` is called every time the event loop fired, Redis served a few requests, and is returning back into the event loop.\n\nInside server.c you can find code that handles other vital things of the Redis server:\n\n* `call()` is used in order to call a given command in the context of a given client.\n* `activeExpireCycle()` handles eviciton of keys with a time to live set via the `EXPIRE` command.\n* `freeMemoryIfNeeded()` is called when a new write command should be performed but Redis is out of memory according to the `maxmemory` directive.\n* The global variable `redisCommandTable` defines all the Redis commands, specifying the name of the command, the function implementing the command, the number of arguments required, and other properties of each command.\n\nnetworking.c\n---\n\nThis file defines all the I/O functions with clients, masters and replicas\n(which in Redis are just special clients):\n\n* `createClient()` allocates and initializes a new client.\n* the `addReply*()` family of functions are used by commands implementations in order to append data to the client structure, that will be transmitted to the client as a reply for a given command executed.\n* `writeToClient()` transmits the data pending in the output buffers to the client and is called by the *writable event handler* `sendReplyToClient()`.\n* `readQueryFromClient()` is the *readable event handler* and accumulates data from read from the client into the query buffer.\n* `processInputBuffer()` is the entry point in order to parse the client query buffer according to the Redis protocol. Once commands are ready to be processed, it calls `processCommand()` which is defined inside `server.c` in order to actually execute the command.\n* `freeClient()` deallocates, disconnects and removes a client.\n\naof.c and rdb.c\n---\n\nAs you can guess from the names these files implement the RDB and AOF\npersistence for Redis. Redis uses a persistence model based on the `fork()`\nsystem call in order to create a thread with the same (shared) memory\ncontent of the main Redis thread. This secondary thread dumps the content\nof the memory on disk. This is used by `rdb.c` to create the snapshots\non disk and by `aof.c` in order to perform the AOF rewrite when the\nappend only file gets too big.\n\nThe implementation inside `aof.c` has additional functions in order to\nimplement an API that allows commands to append new commands into the AOF\nfile as clients execute them.\n\nThe `call()` function defined inside `server.c` is responsible to call\nthe functions that in turn will write the commands into the AOF.\n\ndb.c\n---\n\nCertain Redis commands operate on specific data types, others are general.\nExamples of generic commands are `DEL` and `EXPIRE`. They operate on keys\nand not on their values specifically. All those generic commands are\ndefined inside `db.c`.\n\nMoreover `db.c` implements an API in order to perform certain operations\non the Redis dataset without directly accessing the internal data structures.\n\nThe most important functions inside `db.c` which are used in many commands\nimplementations are the following:\n\n* `lookupKeyRead()` and `lookupKeyWrite()` are used in order to get a pointer to the value associated to a given key, or `NULL` if the key does not exist.\n* `dbAdd()` and its higher level counterpart `setKey()` create a new key in a Redis database.\n* `dbDelete()` removes a key and its associated value.\n* `emptyDb()` removes an entire single database or all the databases defined.\n\nThe rest of the file implements the generic commands exposed to the client.\n\nobject.c\n---\n\nThe `robj` structure defining Redis objects was already described. Inside\n`object.c` there are all the functions that operate with Redis objects at\na basic level, like functions to allocate new objects, handle the reference\ncounting and so forth. Notable functions inside this file:\n\n* `incrRefcount()` and `decrRefCount()` are used in order to increment or decrement an object reference count. When it drops to 0 the object is finally freed.\n* `createObject()` allocates a new object. There are also specialized functions to allocate string objects having a specific content, like `createStringObjectFromLongLong()` and similar functions.\n\nThis file also implements the `OBJECT` command.\n\nreplication.c\n---\n\nThis is one of the most complex files inside Redis, it is recommended to\napproach it only after getting a bit familiar with the rest of the code base.\nIn this file there is the implementation of both the master and replica role\nof Redis.\n\nOne of the most important functions inside this file is `replicationFeedSlaves()` that writes commands to the clients representing replica instances connected\nto our master, so that the replicas can get the writes performed by the clients:\nthis way their data set will remain synchronized with the one in the master.\n\nThis file also implements both the `SYNC` and `PSYNC` commands that are\nused in order to perform the first synchronization between masters and\nreplicas, or to continue the replication after a disconnection.\n\nOther C files\n---\n\n* `t_hash.c`, `t_list.c`, `t_set.c`, `t_string.c`, `t_zset.c` and `t_stream.c` contains the implementation of the Redis data types. They implement both an API to access a given data type, and the client commands implementations for these data types.\n* `ae.c` implements the Redis event loop, it's a self contained library which is simple to read and understand.\n* `sds.c` is the Redis string library, check http://github.com/antirez/sds for more information.\n* `anet.c` is a library to use POSIX networking in a simpler way compared to the raw interface exposed by the kernel.\n* `dict.c` is an implementation of a non-blocking hash table which rehashes incrementally.\n* `scripting.c` implements Lua scripting. It is completely self contained from the rest of the Redis implementation and is simple enough to understand if you are familar with the Lua API.\n* `cluster.c` implements the Redis Cluster. Probably a good read only after being very familiar with the rest of the Redis code base. If you want to read `cluster.c` make sure to read the [Redis Cluster specification][3].\n\n[3]: http://redis.io/topics/cluster-spec\n\nAnatomy of a Redis command\n---\n\nAll the Redis commands are defined in the following way:\n\n    void foobarCommand(client *c) {\n        printf(\"%s\",c->argv[1]->ptr); /* Do something with the argument. */\n        addReply(c,shared.ok); /* Reply something to the client. */\n    }\n\nThe command is then referenced inside `server.c` in the command table:\n\n    {\"foobar\",foobarCommand,2,\"rtF\",0,NULL,0,0,0,0,0},\n\nIn the above example `2` is the number of arguments the command takes,\nwhile `\"rtF\"` are the command flags, as documented in the command table\ntop comment inside `server.c`.\n\nAfter the command operates in some way, it returns a reply to the client,\nusually using `addReply()` or a similar function defined inside `networking.c`.\n\nThere are tons of commands implementations inside the Redis source code\nthat can serve as examples of actual commands implementations. To write\na few toy commands can be a good exercise to familiarize with the code base.\n\nThere are also many other files not described here, but it is useless to\ncover everything. We want to just help you with the first steps.\nEventually you'll find your way inside the Redis code base :-)\n\nEnjoy!\n"
 },
 {
  "repo": "elastic/elasticsearch",
  "language": "Java",
  "readme_contents": "= Elasticsearch\n\n== A Distributed RESTful Search Engine\n\n=== https://www.elastic.co/products/elasticsearch[https://www.elastic.co/products/elasticsearch]\n\nElasticsearch is a distributed RESTful search engine built for the cloud. Features include:\n\n* Distributed and Highly Available Search Engine.\n** Each index is fully sharded with a configurable number of shards.\n** Each shard can have one or more replicas.\n** Read / Search operations performed on any of the replica shards.\n* Multi Tenant.\n** Support for more than one index.\n** Index level configuration (number of shards, index storage, ...).\n* Various set of APIs\n** HTTP RESTful API\n** All APIs perform automatic node operation rerouting.\n* Document oriented\n** No need for upfront schema definition.\n** Schema can be defined for customization of the indexing process.\n* Reliable, Asynchronous Write Behind for long term persistency.\n* (Near) Real Time Search.\n* Built on top of Apache Lucene\n** Each shard is a fully functional Lucene index\n** All the power of Lucene easily exposed through simple configuration / plugins.\n* Per operation consistency\n** Single document level operations are atomic, consistent, isolated and durable.\n\n== Getting Started\n\nFirst of all, DON'T PANIC. It will take 5 minutes to get the gist of what Elasticsearch is all about.\n\n=== Installation\n\n* https://www.elastic.co/downloads/elasticsearch[Download] and unpack the Elasticsearch official distribution.\n* Run `bin/elasticsearch` on Linux or macOS. Run `bin\\elasticsearch.bat` on Windows.\n* Run `curl -X GET http://localhost:9200/`.\n* Start more servers ...\n\n=== Indexing\n\nLet's try and index some twitter like information. First, let's index some tweets (the `twitter` index will be created automatically):\n\n----\ncurl -XPUT 'http://localhost:9200/twitter/_doc/1?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T13:12:00\",\n    \"message\": \"Trying out Elasticsearch, so far so good?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/twitter/_doc/2?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T14:12:12\",\n    \"message\": \"Another tweet, will it be indexed?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/twitter/_doc/3?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"elastic\",\n    \"post_date\": \"2010-01-15T01:46:38\",\n    \"message\": \"Building the site, should be kewl\"\n}'\n----\n\nNow, let's see if the information was added by GETting it:\n\n----\ncurl -XGET 'http://localhost:9200/twitter/_doc/1?pretty=true'\ncurl -XGET 'http://localhost:9200/twitter/_doc/2?pretty=true'\ncurl -XGET 'http://localhost:9200/twitter/_doc/3?pretty=true'\n----\n\n=== Searching\n\nMmm search..., shouldn't it be elastic?\nLet's find all the tweets that `kimchy` posted:\n\n----\ncurl -XGET 'http://localhost:9200/twitter/_search?q=user:kimchy&pretty=true'\n----\n\nWe can also use the JSON query language Elasticsearch provides instead of a query string:\n\n----\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match\" : { \"user\": \"kimchy\" }\n    }\n}'\n----\n\nJust for kicks, let's get all the documents stored (we should see the tweet from `elastic` as well):\n\n----\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n----\n\nWe can also do range search (the `post_date` was automatically identified as date)\n\n----\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"range\" : {\n            \"post_date\" : { \"from\" : \"2009-11-15T13:00:00\", \"to\" : \"2009-11-15T14:00:00\" }\n        }\n    }\n}'\n----\n\nThere are many more options to perform search, after all, it's a search product no? All the familiar Lucene queries are available through the JSON query language, or through the query parser.\n\n=== Multi Tenant and Indices\n\nMan, that twitter index might get big (in this case, index size == valuation). Let's see if we can structure our twitter system a bit differently in order to support such large amounts of data.\n\nElasticsearch supports multiple indices. In the previous example we used an index called `twitter` that stored tweets for every user.\n\nAnother way to define our simple twitter system is to have a different index per user (note, though that each index has an overhead). Here is the indexing curl's in this case:\n\n----\ncurl -XPUT 'http://localhost:9200/kimchy/_doc/1?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T13:12:00\",\n    \"message\": \"Trying out Elasticsearch, so far so good?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/kimchy/_doc/2?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T14:12:12\",\n    \"message\": \"Another tweet, will it be indexed?\"\n}'\n----\n\nThe above will index information into the `kimchy` index. Each user will get their own special index.\n\nComplete control on the index level is allowed. As an example, in the above case, we might want to change from the default 1 shard with 1 replica per index, to 2 shards with 1 replica per index (because this user tweets a lot). Here is how this can be done (the configuration can be in yaml as well):\n\n----\ncurl -XPUT http://localhost:9200/another_user?pretty -H 'Content-Type: application/json' -d '\n{\n    \"settings\" : {\n        \"index.number_of_shards\" : 2,\n        \"index.number_of_replicas\" : 1\n    }\n}'\n----\n\nSearch (and similar operations) are multi index aware. This means that we can easily search on more than one\nindex (twitter user), for example:\n\n----\ncurl -XGET 'http://localhost:9200/kimchy,another_user/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n----\n\nOr on all the indices:\n\n----\ncurl -XGET 'http://localhost:9200/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n----\n\nAnd the cool part about that? You can easily search on multiple twitter users (indices), with different boost levels per user (index), making social search so much simpler (results from my friends rank higher than results from friends of my friends).\n\n=== Distributed, Highly Available\n\nLet's face it, things will fail....\n\nElasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 1 shard and 1 replica per shard (1/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards).\n\nIn order to play with the distributed nature of Elasticsearch, simply bring more nodes up and shut down nodes. The system will continue to serve requests (make sure you use the correct http port) with the latest data indexed.\n\n=== Where to go from here?\n\nWe have just covered a very small portion of what Elasticsearch is all about. For more information, please refer to the https://www.elastic.co/products/elasticsearch[elastic.co] website. General questions can be asked on the https://discuss.elastic.co[Elastic Forum] or https://ela.st/slack[on Slack]. The Elasticsearch GitHub repository is reserved for bug reports and feature requests only.\n\n=== Building from Source\n\nElasticsearch uses https://gradle.org[Gradle] for its build system.\n\nIn order to create a distribution, simply run the `./gradlew assemble` command in the cloned directory.\n\nThe distribution for each project will be created under the `build/distributions` directory in that project.\n\nSee the xref:TESTING.asciidoc[TESTING] for more information about running the Elasticsearch test suite.\n\n=== Upgrading from older Elasticsearch versions\n\nIn order to ensure a smooth upgrade process from earlier versions of Elasticsearch, please see our https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html[upgrade documentation] for more details on the upgrade process.\n"
 },
 {
  "repo": "angular/angular",
  "language": "TypeScript",
  "readme_contents": "[![CircleCI](https://circleci.com/gh/angular/angular/tree/master.svg?style=shield)](https://circleci.com/gh/angular/workflows/angular/tree/master)\n[![Join the chat at https://gitter.im/angular/angular](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/angular/angular?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![npm version](https://badge.fury.io/js/%40angular%2Fcore.svg)](https://www.npmjs.com/@angular/core)\n\n\n# Angular\n\nAngular is a development platform for building mobile and desktop web applications using TypeScript/JavaScript and other languages.\n\n## Quickstart\n\n[Get started in 5 minutes][quickstart].\n\n## Changelog\n\n[Learn about the latest improvements][changelog].\n\n## Want to help?\n\nWant to file a bug, contribute some code, or improve documentation? Excellent! Read up on our\nguidelines for [contributing][contributing] and then check out one of our issues in the [hotlist: community-help](https://github.com/angular/angular/labels/hotlist%3A%20community-help).\n\n[contributing]: https://github.com/angular/angular/blob/master/CONTRIBUTING.md\n[quickstart]: https://angular.io/start\n[changelog]: https://github.com/angular/angular/blob/master/CHANGELOG.md\n[ng]: https://angular.io\n"
 },
 {
  "repo": "moby/moby",
  "language": "Go",
  "readme_contents": "The Moby Project\n================\n\n![Moby Project logo](docs/static_files/moby-project-logo.png \"The Moby Project\")\n\nMoby is an open-source project created by Docker to enable and accelerate software containerization.\n\nIt provides a \"Lego set\" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas.\nComponents include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.\n\n## Principles\n\nMoby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience.\nIt is open to the community to help set its direction.\n\n- Modular: the project includes lots of components that have well-defined functions and APIs that work together.\n- Batteries included but swappable: Moby includes enough components to build fully featured container system, but its modular architecture ensures that most of the components can be swapped by different implementations.\n- Usable security: Moby provides secure defaults without compromising usability.\n- Developer focused: The APIs are intended to be functional and useful to build powerful tools.\nThey are not necessarily intended as end user tools but as components aimed at developers.\nDocumentation and UX is aimed at developers not end users.\n\n## Audience\n\nThe Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers.\nIt is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.\n\n## Relationship with Docker\n\nThe components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project.\nNew projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product.\nHowever, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.\n\nThe Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful.\nThe releases are supported by the maintainers, community and users, on a best efforts basis only, and are not intended for customers who want enterprise or commercial support; Docker EE is the appropriate product for these use cases.\n\n-----\n\nLegal\n=====\n\n*Brought to you courtesy of our legal counsel. For more context,\nplease see the [NOTICE](https://github.com/moby/moby/blob/master/NOTICE) document in this repo.*\n\nUse and transfer of Moby may be subject to certain restrictions by the\nUnited States and other governments.\n\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, please see https://www.bis.doc.gov\n\nLicensing\n=========\nMoby is licensed under the Apache License, Version 2.0. See\n[LICENSE](https://github.com/moby/moby/blob/master/LICENSE) for the full\nlicense text.\n"
 },
 {
  "repo": "mui-org/material-ui",
  "language": "JavaScript",
  "readme_contents": "<p align=\"center\">\n  <a href=\"https://material-ui.com/\" rel=\"noopener\" target=\"_blank\"><img width=\"150\" src=\"https://material-ui.com/static/logo.svg\" alt=\"Material-UI logo\"></a></p>\n</p>\n\n<h1 align=\"center\">Material-UI</h1>\n\n<div align=\"center\">\n\n[React](https://reactjs.org/) components for faster and easier web development. Build your own design system, or start with [Material Design](https://material.io/design/introduction/).\n\n[![npm package](https://img.shields.io/npm/v/@material-ui/core/latest.svg)](https://www.npmjs.com/package/@material-ui/core)\n[![npm downloads](https://img.shields.io/npm/dm/@material-ui/core.svg)](https://www.npmjs.com/package/@material-ui/core)\n[![CircleCI](https://img.shields.io/circleci/project/github/mui-org/material-ui/master.svg)](https://circleci.com/gh/mui-org/material-ui/tree/master)\n[![Build Status](https://dev.azure.com/mui-org/Material-UI/_apis/build/status/mui-org.material-ui?branchName=master)](https://dev.azure.com/mui-org/Material-UI/_build/latest?definitionId=1&branchName=master)\n[![Coverage Status](https://img.shields.io/codecov/c/github/mui-org/material-ui/master.svg)](https://codecov.io/gh/mui-org/material-ui/branch/master)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1320/badge)](https://bestpractices.coreinfrastructure.org/projects/1320)\n![Code style](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/MaterialUI.svg?label=follow+Material-UI)](https://twitter.com/MaterialUI)\n[![Dependabot Status](https://api.dependabot.com/badges/status?host=github&repo=mui-org/material-ui)](https://dependabot.com)\n[![PeerDependencies](https://david-dm.org/mui-org/material-ui/master/peer-status.svg?path=packages/material-ui)](https://david-dm.org/mui-org/material-ui/master?type=peer&path=packages/material-ui)\n[![Dependencies](https://david-dm.org/mui-org/material-ui/master/status.svg?path=packages/material-ui)](https://david-dm.org/mui-org/material-ui/master?path=packages/material-ui)\n[![DevDependencies](https://david-dm.org/mui-org/material-ui/master/dev-status.svg?path=packages/material-ui)](https://david-dm.org/mui-org/material-ui/master?type=dev)\n[![Average time to resolve an issue](https://isitmaintained.com/badge/resolution/mui-org/material-ui.svg)](https://isitmaintained.com/project/mui-org/material-ui \"Average time to resolve an issue\")\n[![Crowdin](https://d322cqt584bo4o.cloudfront.net/material-ui-docs/localized.svg?cache=v1)](https://translate.material-ui.com/project/material-ui-docs)\n\n</div>\n\n## Installation\n\nMaterial-UI is available as an [npm package](https://www.npmjs.com/package/@material-ui/core).\n\n**[Stable channel v4](https://material-ui.com/)**\n```sh\n// with npm\nnpm install @material-ui/core\n\n// with yarn\nyarn add @material-ui/core\n```\n\n**[v3.x](https://v3.material-ui.com/)** ([Migration from v3 to v4](https://material-ui.com/guides/migration-v3/))\n\n**[v0.x](https://v0.material-ui.com/)** ([Migration to v1](https://material-ui.com/guides/migration-v0x/))\n\nPlease note that `@next` will only point to pre-releases; to get the latest stable release use `@latest` instead.\n\n## Who sponsors Material-UI?\n\n### Diamond \ud83d\udc8e\n\n<p style=\"display: flex; justify-content: center;\">\n  <a data-ga-event-category=\"sponsor\" data-ga-event-action=\"logo\" data-ga-event-label=\"sencha\" href=\"https://www.sencha.com/products/extreact/extreact-for-material-ui/?utm_source=materialui&utm_medium=referral&utm_content=product-200429-extreactmaterialui\" rel=\"noopener sponsored\" target=\"_blank\" style=\"margin-right: 16px;\"><img height=\"128\" width=\"128\" src=\"https://material-ui.com/static/in-house/sencha-256x256.png\" alt=\"sencha\" title=\"UI Components for Productive Dev Teams\" loading=\"lazy\" /></a>\n</p>\n\nDiamond Sponsors are those who have pledged $1,500/month or more to Material-UI.\n\n### Gold \ud83c\udfc6\n\nvia [Patreon](https://www.patreon.com/oliviertassinari)\n\n<p style=\"display: flex; justify-content: center;\">\n  <a data-ga-event-category=\"sponsor\" data-ga-event-action=\"logo\" data-ga-event-label=\"tidelift\" href=\"https://tidelift.com/subscription/pkg/npm-material-ui?utm_source=npm-material-ui&utm_medium=referral&utm_campaign=homepage\" rel=\"noopener sponsored\" target=\"_blank\" style=\"margin-right: 16px;\"><img height=\"96\" width=\"96\" src=\"https://github.com/tidelift.png?size=96\" srcset=\"https://github.com/tidelift.png?size=192 2x\" alt=\"tidelift\" title=\"Enterprise-ready open source software\" loading=\"lazy\" /></a>\n  <a data-ga-event-category=\"sponsor\" data-ga-event-action=\"logo\" data-ga-event-label=\"bitsrc\" href=\"https://bit.dev\" rel=\"noopener sponsored\" target=\"_blank\" style=\"margin-right: 16px;\"><img height=\"96\" width=\"96\" src=\"https://github.com/teambit.png?size=96\" srcset=\"https://github.com/teambit.png?size=192 2x\" alt=\"bitsrc\" title=\"The fastest way to share code\" loading=\"lazy\" /></a>\n</p>\n\nvia [OpenCollective](https://opencollective.com/material-ui)\n\n<p style=\"display: flex; justify-content: center; flex-wrap: wrap;\">\n  <a data-ga-event-category=\"sponsor\" data-ga-event-action=\"logo\" data-ga-event-label=\"callemall\" href=\"https://www.call-em-all.com\" rel=\"noopener sponsored\" target=\"_blank\" style=\"margin-right: 16px;\"><img src=\"https://images.opencollective.com/callemall/a6946da/logo/96.png\" srcset=\"https://images.opencollective.com/callemall/a6946da/logo/192.png 2x\" alt=\"call-em-all\" title=\"The easy way to message your group\" height=\"96\" width=\"96\" loading=\"lazy\"></a>\n</p>\n\nGold Sponsors are those who have pledged $500/month or more to Material-UI.\n\n### There is more!\n\nSee the full list of [our backers](https://material-ui.com/discover-more/backers/).\n\n## Usage\n\nHere is a quick example to get you started, **it's all you need**:\n\n```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  return (\n    <Button variant=\"contained\" color=\"primary\">\n      Hello World\n    </Button>\n  );\n}\n\nReactDOM.render(<App />, document.querySelector('#app'));\n```\n\nYes, it's really all you need to get started as you can see in this live and interactive demo:\n\n[![Edit Button](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/4j7m47vlm4)\n\n## Questions\n\nFor *how-to* questions and other non-issues,\nplease use [StackOverflow](https://stackoverflow.com/questions/tagged/material-ui) instead of Github issues.\nThere is a StackOverflow tag called \"material-ui\" that you can use to tag your questions.\n\n## Examples\n\nAre you looking for an example project to get started?\n[We host some](https://material-ui.com/getting-started/example-projects/).\n\n## Documentation\n\nCheck out our [documentation website](https://material-ui.com/).\n\n## Premium Themes\n\nYou can find complete templates & themes in the [Material-UI store](https://material-ui.com/store/?utm_source=docs&utm_medium=referral&utm_campaign=readme-store) .\n\n## Contributing\n\nRead our [contributing guide](/CONTRIBUTING.md) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.\n\nNotice that contributions go far beyond pull requests and commits.\nAlthough we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of [other contributions](https://material-ui.com/getting-started/faq/#material-ui-is-awesome-how-can-i-support-the-project).\n\n## Changelog\n\nRecently Updated?\nPlease read the [changelog](https://github.com/mui-org/material-ui/releases).\n\n## Roadmap\n\nThe future plans and high priority features and enhancements can be found in the [roadmap](https://material-ui.com/discover-more/roadmap/) file.\n\n## License\n\nThis project is licensed under the terms of the\n[MIT license](/LICENSE).\n"
 },
 {
  "repo": "vinta/awesome-python",
  "language": "Python",
  "readme_contents": "# Awesome Python [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nA curated list of awesome Python frameworks, libraries, software and resources.\n\nInspired by [awesome-php](https://github.com/ziadoz/awesome-php).\n\n- [Awesome Python](#awesome-python)\n    - [Admin Panels](#admin-panels)\n    - [Algorithms and Design Patterns](#algorithms-and-design-patterns)\n    - [ASGI Servers](#asgi-servers)\n    - [Asynchronous Programming](#asynchronous-programming)\n    - [Audio](#audio)\n    - [Authentication](#authentication)\n    - [Build Tools](#build-tools)\n    - [Built-in Classes Enhancement](#built-in-classes-enhancement)\n    - [Caching](#caching)\n    - [ChatOps Tools](#chatops-tools)\n    - [CMS](#cms)\n    - [Code Analysis](#code-analysis)\n    - [Command-line Interface Development](#command-line-interface-development)\n    - [Command-line Tools](#command-line-tools)\n    - [Compatibility](#compatibility)\n    - [Computer Vision](#computer-vision)\n    - [Concurrency and Parallelism](#concurrency-and-parallelism)\n    - [Configuration](#configuration)\n    - [Cryptography](#cryptography)\n    - [Data Analysis](#data-analysis)\n    - [Data Validation](#data-validation)\n    - [Data Visualization](#data-visualization)\n    - [Database Drivers](#database-drivers)\n    - [Database](#database)\n    - [Date and Time](#date-and-time)\n    - [Debugging Tools](#debugging-tools)\n    - [Deep Learning](#deep-learning)\n    - [DevOps Tools](#devops-tools)\n    - [Distributed Computing](#distributed-computing)\n    - [Distribution](#distribution)\n    - [Documentation](#documentation)\n    - [Downloader](#downloader)\n    - [E-commerce](#e-commerce)\n    - [Editor Plugins and IDEs](#editor-plugins-and-ides)\n    - [Email](#email)\n    - [Environment Management](#environment-management)\n    - [Files](#files)\n    - [Foreign Function Interface](#foreign-function-interface)\n    - [Forms](#forms)\n    - [Functional Programming](#functional-programming)\n    - [Game Development](#game-development)\n    - [Geolocation](#geolocation)\n    - [GUI Development](#gui-development)\n    - [Hardware](#hardware)\n    - [HTML Manipulation](#html-manipulation)\n    - [HTTP Clients](#http-clients)\n    - [Image Processing](#image-processing)\n    - [Implementations](#implementations)\n    - [Interactive Interpreter](#interactive-interpreter)\n    - [Internationalization](#internationalization)\n    - [Job Scheduler](#job-scheduler)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Network Virtualization](#network-virtualization)\n    - [News Feed](#news-feed)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Package Repositories](#package-repositories)\n    - [Permissions](#permissions)\n    - [Processes](#processes)\n    - [Recommender Systems](#recommender-systems)\n    - [Refactoring](#refactoring)\n    - [RESTful API](#restful-api)\n    - [Robotics](#robotics)\n    - [RPC Servers](#rpc-servers)\n    - [Science](#science)\n    - [Search](#search)\n    - [Serialization](#serialization)\n    - [Serverless Frameworks](#serverless-frameworks)\n    - [Specific Formats Processing](#specific-formats-processing)\n    - [Static Site Generator](#static-site-generator)\n    - [Tagging](#tagging)\n    - [Task Queues](#task-queues)\n    - [Template Engine](#template-engine)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [URL Manipulation](#url-manipulation)\n    - [Video](#video)\n    - [Web Asset Management](#web-asset-management)\n    - [Web Content Extracting](#web-content-extracting)\n    - [Web Crawling](#web-crawling)\n    - [Web Frameworks](#web-frameworks)\n    - [WebSocket](#websocket)\n    - [WSGI Servers](#wsgi-servers)\n- [Resources](#resources)\n    - [Podcasts](#podcasts)\n    - [Twitter](#twitter)\n    - [Websites](#websites)\n    - [Weekly](#weekly)\n- [Contributing](#contributing)\n\n---\n\n## Admin Panels\n\n*Libraries for administrative interfaces.*\n\n* [ajenti](https://github.com/ajenti/ajenti) - The admin panel your servers deserve.\n* [django-grappelli](https://grappelliproject.com/) - A jazzy skin for the Django Admin-Interface.\n* [django-jet](https://github.com/geex-arts/django-jet) - Modern responsive template for the Django admin interface with improved functionality.\n* [django-suit](https://djangosuit.com/) - Alternative Django Admin-Interface (free only for Non-commercial use).\n* [django-xadmin](https://github.com/sshwsfc/xadmin) - Drop-in replacement of Django admin comes with lots of goodies.\n* [jet-bridge](https://github.com/jet-admin/jet-bridge) - Admin panel framework for any application with nice UI (ex Jet Django)\n* [flask-admin](https://github.com/flask-admin/flask-admin) - Simple and extensible administrative interface framework for Flask.\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery.\n* [wooey](https://github.com/wooey/wooey) - A Django app which creates automatic web UIs for Python scripts.\n\n## Algorithms and Design Patterns\n\n*Python implementation of algorithms and design patterns.*\n\n* [algorithms](https://github.com/keon/algorithms) - Minimal examples of data structures and algorithms in Python.\n* [PyPattyrn](https://github.com/tylerlaberge/PyPattyrn) - A simple yet effective library for implementing common design patterns.\n* [python-ds](https://github.com/prabhupant/python-ds) - Clean and simple collection of data structure and algorithms in Python for coding interviews.\n* [python-patterns](https://github.com/faif/python-patterns) - A collection of design patterns in Python.\n* [sortedcontainers](https://github.com/grantjenks/python-sortedcontainers) - Fast, pure-Python implementation of SortedList, SortedDict, and SortedSet types.\n* [transitions](https://github.com/pytransitions/transitions) - A lightweight, object-oriented finite state machine implementation in Python.\n\n## ASGI Servers\n\n*ASGI-compatible web servers.*\n\n* [uvicorn](https://github.com/encode/uvicorn) - Uvicorn is a lightning-fast ASGI server implementation, using uvloop and httptools.\n\n## Asynchronous Programming\n\n* [asyncio](https://docs.python.org/3/library/asyncio.html) - (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.\n    - [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio)\n* [uvloop](https://github.com/MagicStack/uvloop) - Ultra fast asyncio event loop.\n* [Twisted](https://twistedmatrix.com/trac/) - An event-driven networking engine.\n\n## Audio\n\n*Libraries for manipulating audio and its metadata.*\n\n* Audio\n    * [audioread](https://github.com/beetbox/audioread) - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\n    * [dejavu](https://github.com/worldveil/dejavu) - Audio fingerprinting and recognition.\n    * [matchering](https://github.com/sergree/matchering) - A library for automated reference audio mastering.\n    * [mingus](http://bspaans.github.io/python-mingus/) - An advanced music theory and notation package with MIDI file and playback support.\n    * [pyAudioAnalysis](https://github.com/tyiannak/pyAudioAnalysis) - Audio feature extraction, classification, segmentation and applications.\n    * [pydub](https://github.com/jiaaro/pydub) - Manipulate audio with a simple and easy high level interface.\n    * [TimeSide](https://github.com/Parisson/TimeSide) - Open web audio processing framework.\n* Metadata\n    * [beets](https://github.com/beetbox/beets) - A music library manager and [MusicBrainz](https://musicbrainz.org/) tagger.\n    * [eyeD3](https://github.com/nicfit/eyeD3) - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\n    * [mutagen](https://github.com/quodlibet/mutagen) - A Python module to handle audio metadata.\n    * [tinytag](https://github.com/devsnd/tinytag) - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n## Authentication\n\n*Libraries for implementing authentications schemes.*\n\n* OAuth\n    * [authlib](https://github.com/lepture/authlib) - JavaScript Object Signing and Encryption draft implementation.\n    * [django-allauth](https://github.com/pennersr/django-allauth) - Authentication app for Django that \"just works.\"\n    * [django-oauth-toolkit](https://github.com/evonove/django-oauth-toolkit) - OAuth 2 goodies for Django.\n    * [oauthlib](https://github.com/idan/oauthlib) - A generic and thorough implementation of the OAuth request-signing logic.\n    * [python-oauth2](https://github.com/joestump/python-oauth2) - A fully tested, abstract interface to creating OAuth clients and servers.\n    * [python-social-auth](https://github.com/omab/python-social-auth) - An easy-to-setup social authentication mechanism.\n* JWT\n    * [pyjwt](https://github.com/jpadilla/pyjwt) - JSON Web Token implementation in Python.\n    * [python-jose](https://github.com/mpdavis/python-jose/) - A JOSE implementation in Python.\n    * [python-jwt](https://github.com/davedoesdev/python-jwt) - A module for generating and verifying JSON Web Tokens.\n\n## Build Tools\n\n*Compile software from source code.*\n\n* [BitBake](http://www.yoctoproject.org/docs/1.6/bitbake-user-manual/bitbake-user-manual.html) - A make-like build tool for embedded Linux.\n* [buildout](http://www.buildout.org/en/latest/) - A build system for creating, assembling and deploying applications from multiple parts.\n* [PlatformIO](https://github.com/platformio/platformio-core) - A console tool to build code with different development platforms.\n* [pybuilder](https://github.com/pybuilder/pybuilder) - A continuous build tool written in pure Python.\n* [SCons](http://www.scons.org/) - A software construction tool.\n\n## Built-in Classes Enhancement\n\n*Libraries for enhancing Python built-in classes.*\n\n* [dataclasses](https://docs.python.org/3/library/dataclasses.html) - (Python standard library) Data classes.\n* [attrs](https://github.com/python-attrs/attrs) - Replacement for `__init__`, `__eq__`, `__repr__`, etc. boilerplate in class definitions.\n* [bidict](https://github.com/jab/bidict) - Efficient, Pythonic bidirectional map data structures and related functionality..\n* [Box](https://github.com/cdgriffith/Box) - Python dictionaries with advanced dot notation access.\n* [DottedDict](https://github.com/carlosescri/DottedDict) - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\n## CMS\n\n*Content Management Systems.*\n\n* [wagtail](https://wagtail.io/) - A Django content management system.\n* [django-cms](https://www.django-cms.org/en/) - An Open source enterprise CMS based on the Django.\n* [feincms](https://github.com/feincms/feincms) - One of the most advanced Content Management Systems built on Django.\n* [indico](https://github.com/indico/indico) - A feature-rich event management system, made @ [CERN](https://en.wikipedia.org/wiki/CERN).\n* [Kotti](https://github.com/Kotti/Kotti) - A high-level, Pythonic web application framework built on Pyramid.\n* [mezzanine](https://github.com/stephenmcd/mezzanine) - A powerful, consistent, and flexible content management platform.\n* [plone](https://plone.org/) - A CMS built on top of the open source application server Zope.\n* [quokka](https://github.com/rochacbruno/quokka) - Flexible, extensible, small CMS powered by Flask and MongoDB.\n\n## Caching\n\n*Libraries for caching data.*\n\n* [beaker](https://github.com/bbangert/beaker) - A WSGI middleware for sessions and caching.\n* [django-cache-machine](https://github.com/django-cache-machine/django-cache-machine) - Automatic caching and invalidation for Django models.\n* [django-cacheops](https://github.com/Suor/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\n* [dogpile.cache](http://dogpilecache.readthedocs.io/en/latest/) - dogpile.cache is next generation replacement for Beaker made by same authors.\n* [HermesCache](https://pypi.org/project/HermesCache/) - Python caching library with tag-based invalidation and dogpile effect prevention.\n* [pylibmc](https://github.com/lericson/pylibmc) - A Python wrapper around the [libmemcached](https://libmemcached.org/libMemcached.html) interface.\n* [python-diskcache](http://www.grantjenks.com/docs/diskcache/) - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\n## ChatOps Tools\n\n*Libraries for chatbot development.*\n\n* [errbot](https://github.com/errbotio/errbot/) - The easiest and most popular chatbot to implement ChatOps.\n\n## Code Analysis\n\n*Tools of static analysis, linters and code quality checkers. Also see [awesome-static-analysis](https://github.com/mre/awesome-static-analysis).*\n\n* Code Analysis\n    * [coala](https://github.com/coala/coala/) - Language independent and easily extendable code analysis application.\n    * [code2flow](https://github.com/scottrogowski/code2flow) - Turn your Python and JavaScript code into DOT flowcharts.\n    * [prospector](https://github.com/PyCQA/prospector) - A tool to analyse Python code.\n    * [pycallgraph](https://github.com/gak/pycallgraph) - A library that visualises the flow (call graph) of your Python application.\n    * [vulture](https://github.com/jendrikseipp/vulture) - A tool for finding and analysing dead Python code.\n* Code Linters\n    * [flake8](https://pypi.org/project/flake8/) - A wrapper around `pycodestyle`, `pyflakes` and McCabe.\n        * [awesome-flake8-extensions](https://github.com/DmytroLitvinov/awesome-flake8-extensions)\n    * [pylint](https://www.pylint.org/) - A fully customizable source code analyzer.\n    * [pylama](https://github.com/klen/pylama) - A code audit tool for Python and JavaScript.\n    * [wemake-python-styleguide](https://github.com/wemake-services/wemake-python-styleguide) - The strictest and most opinionated python linter ever.\n* Code Formatters\n    * [black](https://github.com/python/black) - The uncompromising Python code formatter.\n    * [yapf](https://github.com/google/yapf) - Yet another Python code formatter from Google.\n* Static Type Checkers, also see [awesome-python-typing](https://github.com/typeddjango/awesome-python-typing)\n    * [mypy](http://mypy-lang.org/) - Check variable types during compile time.\n    * [typeshed](https://github.com/python/typeshed) - Collection of library stubs for Python, with static types.\n    * [pyre-check](https://github.com/facebook/pyre-check) - Performant type checking.\n* Static Type Annotations Generators\n    * [MonkeyType](https://github.com/Instagram/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types\n\n## Command-line Interface Development\n\n*Libraries for building command-line applications.*\n\n* Command-line Application Development\n    * [cement](http://builtoncement.com/) - CLI Application Framework for Python.\n    * [click](http://click.pocoo.org/dev/) - A package for creating beautiful command line interfaces in a composable way.\n    * [cliff](https://docs.openstack.org/developer/cliff/) - A framework for creating command-line programs with multi-level commands.\n    * [docopt](http://docopt.org/) - Pythonic command line arguments parser.\n    * [python-fire](https://github.com/google/python-fire) - A library for creating command line interfaces from absolutely any Python object.\n    * [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit) - A library for building powerful interactive command lines.\n* Terminal Rendering\n    * [asciimatics](https://github.com/peterbrittain/asciimatics) - A package to create full-screen text UIs (from interactive forms to ASCII animations).\n    * [bashplotlib](https://github.com/glamp/bashplotlib) - Making basic plots in the terminal.\n    * [colorama](https://pypi.org/project/colorama/) - Cross-platform colored terminal text.\n    * [rich](https://github.com/willmcgugan/rich) - Python library for rich text and beautiful formatting in the terminal. Also provides a great `RichHandler` log handler.\n    * [tqdm](https://github.com/tqdm/tqdm) - Fast, extensible progress bar for loops and CLI.\n\n## Command-line Tools\n\n*Useful CLI-based tools for productivity.*\n\n* Productivity Tools\n    * [cookiecutter](https://github.com/audreyr/cookiecutter) - A command-line utility that creates projects from cookiecutters (project templates).\n    * [doitlive](https://github.com/sloria/doitlive) - A tool for live presentations in the terminal.\n    * [howdoi](https://github.com/gleitz/howdoi) - Instant coding answers via the command line.\n    * [Invoke](https://github.com/pyinvoke/invoke#readme) - A tool for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks.\n    * [PathPicker](https://github.com/facebook/PathPicker) - Select files out of bash output.\n    * [percol](https://github.com/mooz/percol) - Adds flavor of interactive selection to the traditional pipe concept on UNIX.\n    * [thefuck](https://github.com/nvbn/thefuck) - Correcting your previous console command.\n    * [tmuxp](https://github.com/tony/tmuxp) - A [tmux](https://github.com/tmux/tmux) session manager.\n    * [try](https://github.com/timofurrer/try) - A dead simple CLI to try out python packages - it's never been easier.\n* CLI Enhancements\n    * [httpie](https://github.com/jakubroztocil/httpie) - A command line HTTP client, a user-friendly cURL replacement.\n    * [kube-shell](https://github.com/cloudnativelabs/kube-shell) - An integrated shell for working with the Kubernetes CLI.\n    * [mycli](https://github.com/dbcli/mycli) - MySQL CLI with autocompletion and syntax highlighting.\n    * [pgcli](https://github.com/dbcli/pgcli) - PostgreSQL CLI with autocompletion and syntax highlighting.\n    * [iredis](https://github.com/laixintao/iredis) - Redis CLI with autocompletion and syntax highlighting.\n    * [litecli](https://github.com/dbcli/litecli) - SQLite CLI with autocompletion and syntax highlighting.\n    * [saws](https://github.com/donnemartin/saws) - A Supercharged [aws-cli](https://github.com/aws/aws-cli).\n\n## Compatibility\n\n*Libraries for migrating from Python 2 to 3.*\n\n* [python-future](http://python-future.org/index.html) - The missing compatibility layer between Python 2 and Python 3.\n* [python-modernize](https://github.com/mitsuhiko/python-modernize) - Modernizes Python code for eventual Python 3 migration.\n* [six](https://pypi.org/project/six/) - Python 2 and 3 compatibility utilities.\n\n## Computer Vision\n\n*Libraries for Computer Vision.*\n\n* [Kornia](https://github.com/kornia/kornia/) - Open Source Differentiable Computer Vision Library for PyTorch.\n* [OpenCV](https://opencv.org/) - Open Source Computer Vision Library.\n* [pytesseract](https://github.com/madmaze/pytesseract) - Another wrapper for [Google Tesseract OCR](https://github.com/tesseract-ocr).\n* [tesserocr](https://github.com/sirfz/tesserocr) - A simple, Pillow-friendly, wrapper around the `tesseract-ocr` API for OCR.\n* [SimpleCV](https://github.com/sightmachine/SimpleCV) - An open source framework for building computer vision applications.\n\n## Concurrency and Parallelism\n\n*Libraries for concurrent and parallel execution. Also see [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio).*\n\n* [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html) - (Python standard library) A high-level interface for asynchronously executing callables.\n* [multiprocessing](https://docs.python.org/3/library/multiprocessing.html) - (Python standard library) Process-based parallelism.\n* [eventlet](http://eventlet.net/) - Asynchronous framework with WSGI support.\n* [gevent](http://www.gevent.org/) - A coroutine-based Python networking library that uses [greenlet](https://github.com/python-greenlet/greenlet).\n* [uvloop](https://github.com/MagicStack/uvloop) - Ultra fast implementation of `asyncio` event loop on top of `libuv`.\n* [scoop](https://github.com/soravux/scoop) - Scalable Concurrent Operations in Python.\n\n## Configuration\n\n*Libraries for storing and parsing configuration options.*\n\n* [configobj](https://github.com/DiffSK/configobj) - INI file parser with validation.\n* [configparser](https://docs.python.org/3/library/configparser.html) - (Python standard library) INI file parser.\n* [profig](https://profig.readthedocs.io/en/latest/) - Config from multiple formats with value conversion.\n* [python-decouple](https://github.com/henriquebastos/python-decouple) - Strict separation of settings from code.\n\n## Cryptography\n\n* [cryptography](https://cryptography.io/en/latest/) - A package designed to expose cryptographic primitives and recipes to Python developers.\n* [paramiko](https://github.com/paramiko/paramiko) - The leading native Python SSHv2 protocol library.\n* [passlib](https://passlib.readthedocs.io/en/stable/) - Secure password storage/hashing library, very high level.\n* [pynacl](https://github.com/pyca/pynacl) - Python binding to the Networking and Cryptography (NaCl) library.\n\n## Data Analysis\n\n*Libraries for data analyzing.*\n\n* [Blaze](https://github.com/blaze/blaze) - NumPy and Pandas interface to Big Data.\n* [Open Mining](https://github.com/mining/mining) - Business Intelligence (BI) in Pandas interface.\n* [Orange](https://orange.biolab.si/) - Data mining, data visualization, analysis and machine learning through visual programming or scripts.\n* [Pandas](http://pandas.pydata.org/) - A library providing high-performance, easy-to-use data structures and data analysis tools.\n* [Optimus](https://github.com/ironmussa/Optimus) - Agile Data Science Workflows made easy with PySpark.\n* [AWS Data Wrangler](https://github.com/awslabs/aws-data-wrangler) - Pandas on AWS.\n\n## Data Validation\n\n*Libraries for validating data. Used for forms in many cases.*\n\n* [Cerberus](https://github.com/pyeve/cerberus) - A lightweight and extensible data validation library.\n* [colander](https://docs.pylonsproject.org/projects/colander/en/latest/) - Validating and deserializing data obtained via XML, JSON, an HTML form post.\n* [jsonschema](https://github.com/Julian/jsonschema) - An implementation of [JSON Schema](http://json-schema.org/) for Python.\n* [schema](https://github.com/keleshev/schema) - A library for validating Python data structures.\n* [Schematics](https://github.com/schematics/schematics) - Data Structure Validation.\n* [valideer](https://github.com/podio/valideer) - Lightweight extensible data validation and adaptation library.\n* [voluptuous](https://github.com/alecthomas/voluptuous) - A Python data validation library.\n\n## Data Visualization\n\n*Libraries for visualizing data. Also see [awesome-javascript](https://github.com/sorrycc/awesome-javascript#data-visualization).*\n\n* [Altair](https://github.com/altair-viz/altair) - Declarative statistical visualization library for Python.\n* [Bokeh](https://github.com/bokeh/bokeh) - Interactive Web Plotting for Python.\n* [bqplot](https://github.com/bloomberg/bqplot) - Interactive Plotting Library for the Jupyter Notebook\n* [Dash](https://plot.ly/products/dash/) - Built on top of Flask, React and Plotly aimed at analytical web applications.\n    * [awesome-dash](https://github.com/Acrotrend/awesome-dash)\n* [diagrams](https://github.com/mingrammer/diagrams) - Diagram as Code.\n* [plotnine](https://github.com/has2k1/plotnine) - A grammar of graphics for Python based on ggplot2.\n* [Matplotlib](http://matplotlib.org/) - A Python 2D plotting library.\n* [Pygal](http://www.pygal.org/en/latest/) - A Python SVG Charts Creator.\n* [PyGraphviz](https://pypi.org/project/pygraphviz/) - Python interface to [Graphviz](http://www.graphviz.org/).\n* [PyQtGraph](http://www.pyqtgraph.org/) - Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.\n* [Seaborn](https://github.com/mwaskom/seaborn) - Statistical data visualization using Matplotlib.\n* [VisPy](https://github.com/vispy/vispy) - High-performance scientific visualization based on OpenGL.\n\n## Database\n\n*Databases implemented in Python.*\n\n* [pickleDB](https://github.com/patx/pickledb) - A simple and lightweight key-value store for Python.\n* [tinydb](https://github.com/msiemens/tinydb) - A tiny, document-oriented database.\n* [ZODB](https://github.com/zopefoundation/ZODB) - A native object database for Python. A key-value and object graph database.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* MySQL - [awesome-mysql](http://shlomi-noach.github.io/awesome-mysql/)\n    * [mysqlclient](https://github.com/PyMySQL/mysqlclient-python) - MySQL connector with Python 3 support ([mysql-python](https://sourceforge.net/projects/mysql-python/) fork).\n    * [PyMySQL](https://github.com/PyMySQL/PyMySQL) - A pure Python MySQL driver compatible to mysql-python.\n* PostgreSQL - [awesome-postgres](https://github.com/dhamaniasad/awesome-postgres)\n    * [psycopg2](http://initd.org/psycopg/) - The most popular PostgreSQL adapter for Python.\n    * [queries](https://github.com/gmr/queries) - A wrapper of the psycopg2 library for interacting with PostgreSQL.\n* Other Relational Databases\n    * [pymssql](https://pymssql.readthedocs.io/en/latest/) - A simple database interface to Microsoft SQL Server.\n    * [SuperSQLite](https://github.com/plasticityai/supersqlite) - A supercharged SQLite library built on top of [apsw](https://github.com/rogerbinns/apsw).\n* NoSQL Databases\n    * [cassandra-driver](https://github.com/datastax/python-driver) - The Python Driver for Apache Cassandra.\n    * [happybase](https://github.com/wbolster/happybase) - A developer-friendly library for Apache HBase.\n    * [kafka-python](https://github.com/dpkp/kafka-python) - The Python client for Apache Kafka.\n    * [py2neo](https://py2neo.org/) - A client library and toolkit for working with Neo4j.\n    * [pymongo](https://github.com/mongodb/mongo-python-driver) - The official Python client for MongoDB.\n    * [redis-py](https://github.com/andymccurdy/redis-py) - The Python client for Redis.\n* Asynchronous Clients\n    * [motor](https://github.com/mongodb/motor) - The async Python driver for MongoDB.\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [Arrow](https://arrow.readthedocs.io/en/latest/) - A Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting dates, times and timestamps.\n* [Chronyk](https://github.com/KoffeinFlummi/Chronyk) - A Python 3 library for parsing human-written times and dates.\n* [dateutil](https://github.com/dateutil/dateutil) - Extensions to the standard Python [datetime](https://docs.python.org/3/library/datetime.html) module.\n* [delorean](https://github.com/myusuf3/delorean/) - A library for clearing up the inconvenient truths that arise dealing with datetimes.\n* [moment](https://github.com/zachwill/moment) - A Python library for dealing with dates/times. Inspired by [Moment.js](http://momentjs.com/).\n* [Pendulum](https://github.com/sdispater/pendulum) - Python datetimes made easy.\n* [PyTime](https://github.com/shinux/PyTime) - An easy-to-use Python module which aims to operate date/time/datetime by string.\n* [pytz](https://launchpad.net/pytz) - World timezone definitions, modern and historical. Brings the [tz database](https://en.wikipedia.org/wiki/Tz_database) into Python.\n* [when.py](https://github.com/dirn/When.py) - Providing user-friendly functions to help perform common date and time actions.\n* [maya](https://github.com/timofurrer/maya) - Datetimes for Humans.\n\n## Debugging Tools\n\n*Libraries for debugging code.*\n\n* pdb-like Debugger\n    * [ipdb](https://github.com/gotcha/ipdb) - IPython-enabled [pdb](https://docs.python.org/3/library/pdb.html).\n    * [pdb++](https://github.com/antocuni/pdb) - Another drop-in replacement for pdb.\n    * [pudb](https://github.com/inducer/pudb) - A full-screen, console-based Python debugger.\n    * [wdb](https://github.com/Kozea/wdb) - An improbable web debugger through WebSockets.\n* Tracing\n    * [lptrace](https://github.com/khamidou/lptrace) - [strace](http://man7.org/linux/man-pages/man1/strace.1.html) for Python programs.\n    * [manhole](https://github.com/ionelmc/python-manhole) - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\n    * [pyringe](https://github.com/google/pyringe) - Debugger capable of attaching to and injecting code into Python processes.\n    * [python-hunter](https://github.com/ionelmc/python-hunter) - A flexible code tracing toolkit.\n* Profiler\n    * [line_profiler](https://github.com/rkern/line_profiler) - Line-by-line profiling.\n    * [memory_profiler](https://github.com/fabianp/memory_profiler) - Monitor Memory usage of Python code.\n    * [profiling](https://github.com/what-studio/profiling) - An interactive Python profiler.\n    * [py-spy](https://github.com/benfred/py-spy) - A sampling profiler for Python programs. Written in Rust.\n    * [pyflame](https://github.com/uber/pyflame) - A ptracing profiler For Python.\n    * [vprof](https://github.com/nvdv/vprof) - Visual Python profiler.\n* Others\n    * [icecream](https://github.com/gruns/icecream) - Inspect variables, expressions, and program execution with a single, simple function call.\n    * [django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar) - Display various debug information for Django.\n    * [django-devserver](https://github.com/dcramer/django-devserver) - A drop-in replacement for Django's runserver.\n    * [flask-debugtoolbar](https://github.com/mgood/flask-debugtoolbar) - A port of the django-debug-toolbar to flask.\n    * [pyelftools](https://github.com/eliben/pyelftools) - Parsing and analyzing ELF files and DWARF debugging information.\n\n## Deep Learning\n\n*Frameworks for Neural Networks and Deep Learning. Also see [awesome-deep-learning](https://github.com/ChristosChristofidis/awesome-deep-learning).*\n\n* [caffe](https://github.com/BVLC/caffe) - A fast open framework for deep learning..\n* [keras](https://github.com/keras-team/keras) - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\n* [mxnet](https://github.com/dmlc/mxnet) - A deep learning framework designed for both efficiency and flexibility.\n* [pytorch](https://github.com/pytorch/pytorch) - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\n* [SerpentAI](https://github.com/SerpentAI/SerpentAI) - Game agent framework. Use any video game as a deep learning sandbox.\n* [tensorflow](https://github.com/tensorflow/tensorflow) - The most popular Deep Learning framework created by Google.\n* [Theano](https://github.com/Theano/Theano) - A library for fast numerical computation.\n\n## DevOps Tools\n\n*Software and libraries for DevOps.*\n\n* [ansible](https://github.com/ansible/ansible) - A radically simple IT automation platform.\n* [cloudinit](https://cloudinit.readthedocs.io/en/latest/) - A multi-distribution package that handles early initialization of a cloud instance.\n* [cuisine](https://github.com/sebastien/cuisine) - Chef-like functionality for Fabric.\n* [docker-compose](https://docs.docker.com/compose/) - Fast, isolated development environments using [Docker](https://www.docker.com/).\n* [fabric](https://github.com/fabric/fabric) - A simple, Pythonic tool for remote execution and deployment.\n* [fabtools](https://github.com/fabtools/fabtools) - Tools for writing awesome Fabric files.\n* [honcho](https://github.com/nickstenning/honcho) - A Python clone of [Foreman](https://github.com/ddollar/foreman), for managing Procfile-based applications.\n* [OpenStack](https://www.openstack.org/) - Open source software for building private and public clouds.\n* [pexpect](https://github.com/pexpect/pexpect) - Controlling interactive programs in a pseudo-terminal like GNU expect.\n* [psutil](https://github.com/giampaolo/psutil) - A cross-platform process and system utilities module.\n* [saltstack](https://github.com/saltstack/salt) - Infrastructure automation and management system.\n* [supervisor](https://github.com/Supervisor/supervisor) - Supervisor process control system for UNIX.\n\n## Distributed Computing\n\n*Frameworks and libraries for Distributed Computing.*\n\n* Batch Processing\n    * [PySpark](https://pypi.org/project/pyspark/) - [Apache Spark](https://spark.apache.org/) Python API.\n    * [dask](https://github.com/dask/dask) - A flexible parallel computing library for analytic computing.\n    * [luigi](https://github.com/spotify/luigi) - A module that helps you build complex pipelines of batch jobs.\n    * [mrjob](https://github.com/Yelp/mrjob) - Run MapReduce jobs on Hadoop or Amazon Web Services.\n    * [Ray](https://github.com/ray-project/ray/) - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n* Stream Processing\n    * [faust](https://github.com/robinhood/faust) - A stream processing library, porting the ideas from [Kafka Streams](https://kafka.apache.org/documentation/streams/) to Python.\n    * [streamparse](https://github.com/Parsely/streamparse) - Run Python code against real-time streams of data via [Apache Storm](http://storm.apache.org/).\n\n## Distribution\n\n*Libraries to create packaged executables for release distribution.*\n\n* [dh-virtualenv](https://github.com/spotify/dh-virtualenv) - Build and distribute a virtualenv as a Debian package.\n* [Nuitka](http://nuitka.net/) - Compile scripts, modules, packages to an executable or extension module.\n* [py2app](http://pythonhosted.org/py2app/) - Freezes Python scripts (Mac OS X).\n* [py2exe](http://www.py2exe.org/) - Freezes Python scripts (Windows).\n* [PyInstaller](https://github.com/pyinstaller/pyinstaller) - Converts Python programs into stand-alone executables (cross-platform).\n* [pynsist](http://pynsist.readthedocs.io/en/latest/) - A tool to build Windows installers, installers bundle Python itself.\n* [pyarmor](https://github.com/dashingsoft/pyarmor) - A tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\n* [shiv](https://github.com/linkedin/shiv) - A command line utility for building fully self-contained zipapps (PEP 441), but with all their dependencies included.\n\n## Documentation\n\n*Libraries for generating project documentation.*\n\n* [sphinx](https://github.com/sphinx-doc/sphinx/) - Python Documentation generator.\n    * [awesome-sphinxdoc](https://github.com/yoloseem/awesome-sphinxdoc)\n* [pdoc](https://github.com/mitmproxy/pdoc) - Epydoc replacement to auto generate API documentation for Python libraries.\n* [pycco](https://github.com/pycco-docs/pycco) - The literate-programming-style documentation generator.\n\n## Downloader\n\n*Libraries for downloading.*\n\n* [s3cmd](https://github.com/s3tools/s3cmd) - A command line tool for managing Amazon S3 and CloudFront.\n* [s4cmd](https://github.com/bloomreach/s4cmd) - Super S3 command line tool, good for higher performance.\n* [you-get](https://you-get.org/) - A YouTube/Youku/Niconico video downloader written in Python 3.\n* [youtube-dl](https://rg3.github.io/youtube-dl/) - A small command-line program to download videos from YouTube.\n* [akshare](https://github.com/jindaxiang/akshare) - A financial data interface library, built for human beings!\n\n## E-commerce\n\n*Frameworks and libraries for e-commerce and payments.*\n\n* [alipay](https://github.com/lxneng/alipay) - Unofficial Alipay API for Python.\n* [Cartridge](https://github.com/stephenmcd/cartridge) - A shopping cart app built using the Mezzanine.\n* [django-oscar](http://oscarcommerce.com/) - An open-source e-commerce framework for Django.\n* [django-shop](https://github.com/awesto/django-shop) - A Django based shop system.\n* [merchant](https://github.com/agiliq/merchant) - A Django app to accept payments from various payment processors.\n* [money](https://github.com/carlospalol/money) - `Money` class with optional CLDR-backed locale-aware formatting and an extensible currency exchange.\n* [python-currencies](https://github.com/Alir3z4/python-currencies) - Display money format and its filthy currencies.\n* [forex-python](https://github.com/MicroPyramid/forex-python) - Foreign exchange rates, Bitcoin price index and currency conversion.\n* [saleor](http://getsaleor.com/) - An e-commerce storefront for Django.\n* [shoop](https://www.shuup.com/en/) - An open source E-Commerce platform based on Django.\n\n## Editor Plugins and IDEs\n\n* Emacs\n    * [elpy](https://github.com/jorgenschaefer/elpy) - Emacs Python Development Environment.\n* Sublime Text\n    * [anaconda](https://github.com/DamnWidget/anaconda) - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.\n    * [SublimeJEDI](https://github.com/srusskih/SublimeJEDI) - A Sublime Text plugin to the awesome auto-complete library Jedi.\n* Vim\n    * [jedi-vim](https://github.com/davidhalter/jedi-vim) - Vim bindings for the Jedi auto-completion library for Python.\n    * [python-mode](https://github.com/python-mode/python-mode) - An all in one plugin for turning Vim into a Python IDE.\n    * [YouCompleteMe](https://github.com/Valloric/YouCompleteMe) - Includes [Jedi](https://github.com/davidhalter/jedi)-based completion engine for Python.\n* Visual Studio\n    * [PTVS](https://github.com/Microsoft/PTVS) - Python Tools for Visual Studio.\n* Visual Studio Code\n    * [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python) - The official VSCode extension with rich support for Python.\n* IDE\n    * [PyCharm](https://www.jetbrains.com/pycharm/) - Commercial Python IDE by JetBrains. Has free community edition available.\n    * [spyder](https://github.com/spyder-ide/spyder) - Open Source Python IDE.\n\n## Email\n\n*Libraries for sending and parsing email.*\n\n* Mail Servers\n    * [modoboa](https://github.com/modoboa/modoboa) - A mail hosting and management platform including a modern Web UI.\n    * [salmon](https://github.com/moggers87/salmon) - A Python Mail Server.\n* Clients\n    * [imbox](https://github.com/martinrusev/imbox) - Python IMAP for Humans.\n    * [yagmail](https://github.com/kootenpv/yagmail) - Yet another Gmail/SMTP client.\n* Others\n    * [flanker](https://github.com/mailgun/flanker) - An email address and Mime parsing library.\n    * [mailer](https://github.com/marrow/mailer) - High-performance extensible mail delivery framework.\n\n## Environment Management\n\n*Libraries for Python version and virtual environment management.*\n\n* [pyenv](https://github.com/pyenv/pyenv) - Simple Python version management.\n* [virtualenv](https://github.com/pypa/virtualenv) - A tool to create isolated Python environments.\n\n## Files\n\n*Libraries for file manipulation and MIME type detection.*\n\n* [mimetypes](https://docs.python.org/3/library/mimetypes.html) - (Python standard library) Map filenames to MIME types.\n* [path.py](https://github.com/jaraco/path.py) - A module wrapper for [os.path](https://docs.python.org/3/library/os.path.html).\n* [pathlib](https://docs.python.org/3/library/pathlib.html) - (Python standard library) An cross-platform, object-oriented path library.\n* [PyFilesystem2](https://github.com/pyfilesystem/pyfilesystem2) - Python's filesystem abstraction layer.\n* [python-magic](https://github.com/ahupp/python-magic) - A Python interface to the libmagic file type identification library.\n* [Unipath](https://github.com/mikeorr/Unipath) - An object-oriented approach to file/directory operations.\n* [watchdog](https://github.com/gorakhargosh/watchdog) - API and shell utilities to monitor file system events.\n\n## Foreign Function Interface\n\n*Libraries for providing foreign function interface.*\n\n* [cffi](https://pypi.org/project/cffi/) - Foreign Function Interface for Python calling C code.\n* [ctypes](https://docs.python.org/3/library/ctypes.html) - (Python standard library) Foreign Function Interface for Python calling C code.\n* [PyCUDA](https://mathema.tician.de/software/pycuda/) - A Python wrapper for Nvidia's CUDA API.\n* [SWIG](http://www.swig.org/Doc1.3/Python.html) - Simplified Wrapper and Interface Generator.\n\n## Forms\n\n*Libraries for working with forms.*\n\n* [Deform](https://github.com/Pylons/deform) - Python HTML form generation library influenced by the formish form generation library.\n* [django-bootstrap3](https://github.com/dyve/django-bootstrap3) - Bootstrap 3 integration with Django.\n* [django-bootstrap4](https://github.com/zostera/django-bootstrap4) - Bootstrap 4 integration with Django.\n* [django-crispy-forms](https://github.com/django-crispy-forms/django-crispy-forms) - A Django app which lets you create beautiful forms in a very elegant and DRY way.\n* [django-remote-forms](https://github.com/WiserTogether/django-remote-forms) - A platform independent Django form serializer.\n* [WTForms](https://github.com/wtforms/wtforms) - A flexible forms validation and rendering library.\n\n## Functional Programming\n\n*Functional Programming with Python.*\n\n* [Coconut](https://github.com/evhub/coconut) - A variant of Python built for simple, elegant, Pythonic functional programming.\n* [fn.py](https://github.com/kachayev/fn.py) - Functional programming in Python: implementation of missing features to enjoy FP.\n* [funcy](https://github.com/Suor/funcy) - A fancy and practical functional tools.\n* [more-itertools](https://github.com/erikrose/more-itertools) - More routines for operating on iterables, beyond `itertools`.\n* [returns](https://github.com/dry-python/returns) - A set of type-safe monads, tranformers, and composition utilities.\n* [Toolz](https://github.com/pytoolz/toolz) - A collection of functional utilities for iterators, functions, and dictionaries.\n* [CyToolz](https://github.com/pytoolz/cytoolz/) - Cython implementation of `Toolz`: High performance functional utilities.\n\n## GUI Development\n\n*Libraries for working with graphical user interface applications.*\n\n* [curses](https://docs.python.org/3/library/curses.html) - Built-in wrapper for [ncurses](http://www.gnu.org/software/ncurses/) used to create terminal GUI applications.\n* [Eel](https://github.com/ChrisKnott/Eel) - A library for making simple Electron-like offline HTML/JS GUI apps.\n* [enaml](https://github.com/nucleic/enaml) - Creating beautiful user-interfaces with Declarative Syntax like QML.\n* [Flexx](https://github.com/zoofIO/flexx) - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\n* [Gooey](https://github.com/chriskiehl/Gooey) - Turn command line programs into a full GUI application with one line.\n* [kivy](https://kivy.org/) - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\n* [pyglet](https://bitbucket.org/pyglet/pyglet/wiki/Home) - A cross-platform windowing and multimedia library for Python.\n* [PyGObject](https://wiki.gnome.org/Projects/PyGObject) - Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).\n* [PyQt](https://riverbankcomputing.com/software/pyqt/intro) - Python bindings for the [Qt](https://www.qt.io/) cross-platform application and UI framework.\n* [PySimpleGUI](https://github.com/PySimpleGUI/PySimpleGUI) - Wrapper for tkinter, Qt, WxPython and Remi.\n* [pywebview](https://github.com/r0x0r/pywebview/) - A lightweight cross-platform native wrapper around a webview component.\n* [Tkinter](https://wiki.python.org/moin/TkInter) - Tkinter is Python's de-facto standard GUI package.\n* [Toga](https://github.com/pybee/toga) - A Python native, OS native GUI toolkit.\n* [urwid](http://urwid.org/) - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\n* [wxPython](https://wxpython.org/) - A blending of the wxWidgets C++ class library with the Python.\n\n## GraphQL\n\n*Libraries for working with GraphQL.*\n\n* [tartiflette](https://tartiflette.io) - SDL-first GraphQL engine implementation for Python 3.6+ and asyncio.\n* [tartiflette-aiohttp](https://github.com/tartiflette/tartiflette-aiohttp/) - An `aiohttp`-based wrapper for Tartiflette to expose GraphQL APIs over HTTP.\n* [tartiflette-asgi](https://github.com/tartiflette/tartiflette-asgi/) - ASGI support for the Tartiflette GraphQL engine.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Cocos2d](http://cocos2d.org/) - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications.\n* [Harfang3D](http://www.harfang3d.com) - Python framework for 3D, VR and game development.\n* [Panda3D](https://www.panda3d.org/) - 3D game engine developed by Disney.\n* [Pygame](http://www.pygame.org/news.html) - Pygame is a set of Python modules designed for writing games.\n* [PyOgre](http://www.ogre3d.org/tikiwiki/PyOgre) - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\n* [PyOpenGL](http://pyopengl.sourceforge.net/) - Python ctypes bindings for OpenGL and it's related APIs.\n* [PySDL2](https://pysdl2.readthedocs.io) - A ctypes based wrapper for the SDL2 library.\n* [RenPy](https://www.renpy.org/) - A Visual Novel engine.\n\n## Geolocation\n\n*Libraries for geocoding addresses and working with latitudes and longitudes.*\n\n* [django-countries](https://github.com/SmileyChris/django-countries) - A Django app that provides a country field for models and forms.\n* [GeoDjango](https://docs.djangoproject.com/en/dev/ref/contrib/gis/) - A world-class geographic web framework.\n* [GeoIP](https://github.com/maxmind/geoip-api-python) - Python API for MaxMind GeoIP Legacy Database.\n* [geojson](https://github.com/frewsxcv/python-geojson) - Python bindings and utilities for GeoJSON.\n* [geopy](https://github.com/geopy/geopy) - Python Geocoding Toolbox.\n* [pygeoip](https://github.com/appliedsec/pygeoip) - Pure Python GeoIP API.\n\n## HTML Manipulation\n\n*Libraries for working with HTML and XML.*\n\n* [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\n* [bleach](https://github.com/mozilla/bleach) - A whitelist-based HTML sanitization and text linkification library.\n* [cssutils](https://pypi.org/project/cssutils/) - A CSS library for Python.\n* [html5lib](https://github.com/html5lib/html5lib-python) - A standards-compliant library for parsing and serializing HTML documents and fragments.\n* [lxml](http://lxml.de/) - A very fast, easy-to-use and versatile library for handling HTML and XML.\n* [MarkupSafe](https://github.com/pallets/markupsafe) - Implements a XML/HTML/XHTML Markup safe string for Python.\n* [pyquery](https://github.com/gawel/pyquery) - A jQuery-like library for parsing HTML.\n* [untangle](https://github.com/stchris/untangle) - Converts XML documents to Python objects for easy access.\n* [WeasyPrint](http://weasyprint.org) - A visual rendering engine for HTML and CSS that can export to PDF.\n* [xmldataset](https://xmldataset.readthedocs.io/en/latest/) - Simple XML Parsing.\n* [xmltodict](https://github.com/martinblech/xmltodict) - Working with XML feel like you are working with JSON.\n\n## HTTP Clients\n\n*Libraries for working with HTTP.*\n\n* [grequests](https://github.com/spyoungtech/grequests) - requests + gevent for asynchronous HTTP requests.\n* [httplib2](https://github.com/httplib2/httplib2) - Comprehensive HTTP client library.\n* [httpx](https://github.com/encode/httpx) - A next generation HTTP client for Python.\n* [requests](https://github.com/psf/requests) - HTTP Requests for Humans.\n* [treq](https://github.com/twisted/treq) - Python requests like API built on top of Twisted's HTTP client.\n* [urllib3](https://github.com/shazow/urllib3) - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\n## Hardware\n\n*Libraries for programming with hardware.*\n\n* [ino](http://inotool.org/) - Command line toolkit for working with [Arduino](https://www.arduino.cc/).\n* [keyboard](https://github.com/boppreh/keyboard) - Hook and simulate global keyboard events on Windows and Linux.\n* [mouse](https://github.com/boppreh/mouse) - Hook and simulate global mouse events on Windows and Linux.\n* [Pingo](http://www.pingo.io/) - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc.\n* [PyUserInput](https://github.com/SavinaRoja/PyUserInput) - A module for cross-platform control of the mouse and keyboard.\n* [scapy](https://github.com/secdev/scapy) - A brilliant packet manipulation library.\n* [wifi](https://github.com/rockymeza/wifi) - A Python library and command line tool for working with WiFi on Linux.\n\n## Image Processing\n\n*Libraries for manipulating images.*\n\n* [hmap](https://github.com/rossgoodwin/hmap) - Image histogram remapping.\n* [imgSeek](https://sourceforge.net/projects/imgseek/) - A project for searching a collection of images using visual similarity.\n* [nude.py](https://github.com/hhatto/nude.py) - Nudity detection.\n* [pagan](https://github.com/daboth/pagan) - Retro identicon (Avatar) generation based on input string and hash.\n* [pillow](https://github.com/python-pillow/Pillow) - Pillow is the friendly [PIL](http://www.pythonware.com/products/pil/) fork.\n* [pyBarcode](https://pythonhosted.org/pyBarcode/) - Create barcodes in Python without needing PIL.\n* [pygram](https://github.com/ajkumar25/pygram) - Instagram-like image filters.\n* [python-qrcode](https://github.com/lincolnloop/python-qrcode) - A pure Python QR Code generator.\n* [Quads](https://github.com/fogleman/Quads) - Computer art based on quadtrees.\n* [scikit-image](http://scikit-image.org/) - A Python library for (scientific) image processing.\n* [thumbor](https://github.com/thumbor/thumbor) - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\n* [wand](https://github.com/dahlia/wand) - Python bindings for [MagickWand](http://www.imagemagick.org/script/magick-wand.php), C API for ImageMagick.\n\n## Implementations\n\n*Implementations of Python.*\n\n* [CPython](https://github.com/python/cpython) - **Default, most widely used implementation of the Python programming language written in C.**\n* [Cython](http://cython.org/) - Optimizing Static Compiler for Python.\n* [CLPython](https://github.com/metawilm/cl-python) - Implementation of the Python programming language written in Common Lisp.\n* [Grumpy](https://github.com/google/grumpy) - More compiler than interpreter as more powerful CPython2.7 replacement (alpha).\n* [IronPython](https://github.com/IronLanguages/ironpython3) - Implementation of the Python programming language written in C#.\n* [Jython](https://hg.python.org/jython) - Implementation of Python programming language written in Java for the JVM.\n* [MicroPython](https://github.com/micropython/micropython) - A lean and efficient Python programming language implementation.\n* [Numba](http://numba.pydata.org/) - Python JIT compiler to LLVM aimed at scientific Python.\n* [PeachPy](https://github.com/Maratyszcza/PeachPy) - x86-64 assembler embedded in Python.\n* [Pyjion](https://github.com/Microsoft/Pyjion) - A JIT for Python based upon CoreCLR.\n* [PyPy](https://foss.heptapod.net/pypy/pypy) - A very fast and compliant implementation of the Python language.\n* [Pyston](https://github.com/dropbox/pyston) - A Python implementation using JIT techniques.\n* [Stackless Python](https://github.com/stackless-dev/stackless) - An enhanced version of the Python programming language.\n\n## Interactive Interpreter\n\n*Interactive Python interpreters (REPL).*\n\n* [bpython](https://github.com/bpython/bpython) - A fancy interface to the Python interpreter.\n* [Jupyter Notebook (IPython)](https://jupyter.org) - A rich toolkit to help you make the most out of using Python interactively.\n    * [awesome-jupyter](https://github.com/markusschanta/awesome-jupyter)\n* [ptpython](https://github.com/jonathanslenders/ptpython) - Advanced Python REPL built on top of the [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit).\n\n## Internationalization\n\n*Libraries for working with i18n.*\n\n* [Babel](http://babel.pocoo.org/en/latest/) - An internationalization library for Python.\n* [PyICU](https://github.com/ovalhub/pyicu) - A wrapper of International Components for Unicode C++ library ([ICU](http://site.icu-project.org/)).\n\n## Job Scheduler\n\n*Libraries for scheduling jobs.*\n\n* [APScheduler](http://apscheduler.readthedocs.io/en/latest/) - A light but powerful in-process task scheduler that lets you schedule functions.\n* [django-schedule](https://github.com/thauber/django-schedule) - A calendaring app for Django.\n* [doit](http://pydoit.org/) - A task runner and build tool.\n* [gunnery](https://github.com/gunnery/gunnery) - Multipurpose task execution tool for distributed systems with web-based interface.\n* [Joblib](https://joblib.readthedocs.io/) - A set of tools to provide lightweight pipelining in Python.\n* [Plan](https://github.com/fengsp/plan) - Writing crontab file in Python like a charm.\n* [schedule](https://github.com/dbader/schedule) - Python job scheduling for humans.\n* [Spiff](https://github.com/knipknap/SpiffWorkflow) - A powerful workflow engine implemented in pure Python.\n* [TaskFlow](https://docs.openstack.org/developer/taskflow/) - A Python library that helps to make task execution easy, consistent and reliable.\n* [Airflow](https://airflow.apache.org/) - Airflow is a platform to programmatically author, schedule and monitor workflows.\n\n## Logging\n\n*Libraries for generating and working with logs.*\n\n* [Eliot](https://github.com/ScatterHQ/eliot) - Logging for complex & distributed systems.\n* [logbook](http://logbook.readthedocs.io/en/stable/) - Logging replacement for Python.\n* [logging](https://docs.python.org/3/library/logging.html) - (Python standard library) Logging facility for Python.\n* [raven](https://github.com/getsentry/raven-python) - Python client for Sentry, a log/error tracking, crash reporting and aggregation platform for web applications.\n\n## Machine Learning\n\n*Libraries for Machine Learning. Also see [awesome-machine-learning](https://github.com/josephmisiti/awesome-machine-learning#python).*\n\n* [H2O](https://github.com/h2oai/h2o-3) - Open Source Fast Scalable Machine Learning Platform.\n* [Metrics](https://github.com/benhamner/Metrics) - Machine learning evaluation metrics.\n* [NuPIC](https://github.com/numenta/nupic) - Numenta Platform for Intelligent Computing.\n* [scikit-learn](http://scikit-learn.org/) - The most popular Python library for Machine Learning.\n* [Spark ML](http://spark.apache.org/docs/latest/ml-guide.html) - [Apache Spark](http://spark.apache.org/)'s scalable Machine Learning library.\n* [vowpal_porpoise](https://github.com/josephreisinger/vowpal_porpoise) - A lightweight Python wrapper for [Vowpal Wabbit](https://github.com/JohnLangford/vowpal_wabbit/).\n* [xgboost](https://github.com/dmlc/xgboost) - A scalable, portable, and distributed gradient boosting library.\n\n## Microsoft Windows\n\n*Python programming on Microsoft Windows.*\n\n* [Python(x,y)](http://python-xy.github.io/) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\n* [pythonlibs](http://www.lfd.uci.edu/~gohlke/pythonlibs/) - Unofficial Windows binaries for Python extension packages.\n* [PythonNet](https://github.com/pythonnet/pythonnet) - Python Integration with the .NET Common Language Runtime (CLR).\n* [PyWin32](https://github.com/mhammond/pywin32) - Python Extensions for Windows.\n* [WinPython](https://winpython.github.io/) - Portable development environment for Windows 7/8.\n\n## Miscellaneous\n\n*Useful libraries or tools that don't fit in the categories above.*\n\n* [blinker](https://github.com/jek/blinker) - A fast Python in-process signal/event dispatching system.\n* [boltons](https://github.com/mahmoud/boltons) - A set of pure-Python utilities.\n* [itsdangerous](https://github.com/pallets/itsdangerous) - Various helpers to pass trusted data to untrusted environments.\n* [pluginbase](https://github.com/mitsuhiko/pluginbase) - A simple but flexible plugin system for Python.\n* [tryton](http://www.tryton.org/) - A general purpose business framework.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n- General\n    * [gensim](https://github.com/RaRe-Technologies/gensim) - Topic Modeling for Humans.\n    * [langid.py](https://github.com/saffsd/langid.py) - Stand-alone language identification system.\n    * [nltk](http://www.nltk.org/) - A leading platform for building Python programs to work with human language data.\n    * [pattern](https://github.com/clips/pattern) - A web mining module.\n    * [polyglot](https://github.com/aboSamoor/polyglot) - Natural language pipeline supporting hundreds of languages.\n    * [pytext](https://github.com/facebookresearch/pytext) - A natural language modeling framework based on PyTorch.\n    * [PyTorch-NLP](https://github.com/PetrochukM/PyTorch-NLP) - A toolkit enabling rapid deep learning NLP prototyping for research.\n    * [spacy](https://spacy.io/) - A library for industrial-strength natural language processing in Python and Cython.\n    * [Stanza](https://github.com/stanfordnlp/stanza) - The Stanford NLP Group's official Python library, supporting 60+ languages.\n- Chinese\n    * [jieba](https://github.com/fxsjy/jieba) - The most popular Chinese text segmentation library.\n    * [pkuseg-python](https://github.com/lancopku/pkuseg-python) - A toolkit for Chinese word segmentation in various domains.\n    * [snownlp](https://github.com/isnowfy/snownlp) - A library for processing Chinese text.\n    * [funNLP](https://github.com/fighting41love/funNLP) - A collection of tools and datasets for Chinese NLP.\n\n## Network Virtualization\n\n*Tools and libraries for Virtual Networking and SDN (Software Defined Networking).*\n\n* [mininet](https://github.com/mininet/mininet) - A popular network emulator and API written in Python.\n* [napalm](https://github.com/napalm-automation/napalm) - Cross-vendor API to manipulate network devices.\n* [pox](https://github.com/noxrepo/pox) - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\n## News Feed\n\n*Libraries for building user's activities.*\n\n* [django-activity-stream](https://github.com/justquick/django-activity-stream) - Generating generic activity streams from the actions on your site.\n* [Stream Framework](https://github.com/tschellenbach/Stream-Framework) - Building news feed and notification systems using Cassandra and Redis.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or data mapping techniques.*\n\n* Relational Databases\n    * [Django Models](https://docs.djangoproject.com/en/dev/topics/db/models/) - The Django ORM.\n    * [SQLAlchemy](https://www.sqlalchemy.org/) - The Python SQL Toolkit and Object Relational Mapper.\n        * [awesome-sqlalchemy](https://github.com/dahlia/awesome-sqlalchemy)\n    * [dataset](https://github.com/pudo/dataset) - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\n    * [orator](https://github.com/sdispater/orator) -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\n    * [orm](https://github.com/encode/orm) - An async ORM.\n    * [peewee](https://github.com/coleifer/peewee) - A small, expressive ORM.\n    * [pony](https://github.com/ponyorm/pony/) - ORM that provides a generator-oriented interface to SQL.\n    * [pydal](https://github.com/web2py/pydal/) - A pure Python Database Abstraction Layer.\n* NoSQL Databases\n    * [hot-redis](https://github.com/stephenmcd/hot-redis) - Rich Python data types for Redis.\n    * [mongoengine](https://github.com/MongoEngine/mongoengine) - A Python Object-Document-Mapper for working with MongoDB.\n    * [PynamoDB](https://github.com/pynamodb/PynamoDB) - A Pythonic interface for [Amazon DynamoDB](https://aws.amazon.com/dynamodb/).\n    * [redisco](https://github.com/kiddouk/redisco) - A Python Library for Simple Models and Containers Persisted in Redis.\n\n## Package Management\n\n*Libraries for package and dependency management.*\n\n* [pip](https://pip.pypa.io/en/stable/) - The package installer for Python.\n    * [PyPI](https://pypi.org/)\n    * [pip-tools](https://github.com/jazzband/pip-tools) - A set of tools to keep your pinned Python dependencies fresh.\n* [poetry](https://github.com/sdispater/poetry) - Python dependency management and packaging made easy.\n* [conda](https://github.com/conda/conda/) - Cross-platform, Python-agnostic binary package manager.\n\n## Package Repositories\n\n*Local PyPI repository server and proxies.*\n\n* [warehouse](https://github.com/pypa/warehouse) - Next generation Python Package Repository (PyPI).\n* [bandersnatch](https://github.com/pypa/bandersnatch/) - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\n* [devpi](https://github.com/devpi/devpi) - PyPI server and packaging/testing/release tool.\n* [localshop](https://github.com/jazzband/localshop) - Local PyPI server (custom packages and auto-mirroring of pypi).\n\n## Permissions\n\n*Libraries that allow or deny users access to data or functionality.*\n\n* [django-guardian](https://github.com/django-guardian/django-guardian) - Implementation of per object permissions for Django 1.2+\n* [django-rules](https://github.com/dfunckt/django-rules) - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\n## Processes\n\n*Libraries for starting and communicating with OS processes.*\n\n* [delegator.py](https://github.com/amitt001/delegator.py) - [Subprocesses](https://docs.python.org/3/library/subprocess.html) for Humans 2.0.\n* [sarge](https://sarge.readthedocs.io/en/latest/) - Yet another wrapper for subprocess.\n* [sh](https://github.com/amoffat/sh) - A full-fledged subprocess replacement for Python.\n\n## Recommender Systems\n\n*Libraries for building recommender systems.*\n\n* [annoy](https://github.com/spotify/annoy) - Approximate Nearest Neighbors in C++/Python optimized for memory usage.\n* [fastFM](https://github.com/ibayer/fastFM) - A library for Factorization Machines.\n* [implicit](https://github.com/benfred/implicit) - A fast Python implementation of collaborative filtering for implicit datasets.\n* [libffm](https://github.com/guestwalk/libffm) - A library for Field-aware Factorization Machine (FFM).\n* [lightfm](https://github.com/lyst/lightfm) - A Python implementation of a number of popular recommendation algorithms.\n* [spotlight](https://github.com/maciejkula/spotlight) - Deep recommender models using PyTorch.\n* [Surprise](https://github.com/NicolasHug/Surprise) - A scikit for building and analyzing recommender systems.\n* [tensorrec](https://github.com/jfkirk/tensorrec) - A Recommendation Engine Framework in TensorFlow.\n\n## Refactoring\n\n*Refactoring tools and libraries for Python*\n\n * [Bicycle Repair Man](http://bicyclerepair.sourceforge.net/) - Bicycle Repair Man, a refactoring tool for Python.\n * [Bowler](https://pybowler.io/) - Safe code refactoring for modern Python.\n * [Rope](https://github.com/python-rope/rope) -  Rope is a python refactoring library.\n\n## RESTful API\n\n*Libraries for building RESTful APIs.*\n\n* Django\n    * [django-rest-framework](http://www.django-rest-framework.org/) - A powerful and flexible toolkit to build web APIs.\n    * [django-tastypie](http://tastypieapi.org/) - Creating delicious APIs for Django apps.\n* Flask\n    * [eve](https://github.com/pyeve/eve) - REST API framework powered by Flask, MongoDB and good intentions.\n    * [flask-api](https://github.com/flask-api/flask-api) - Browsable Web APIs for Flask.\n    * [flask-restful](https://github.com/flask-restful/flask-restful) - Quickly building REST APIs for Flask.\n* Pyramid\n    * [cornice](https://github.com/Cornices/cornice) - A RESTful framework for Pyramid.\n* Framework agnostic\n    * [apistar](https://github.com/encode/apistar) - A smart Web API framework, designed for Python 3.\n    * [falcon](https://github.com/falconry/falcon) - A high-performance framework for building cloud APIs and web app backends.\n    * [fastapi](https://github.com/tiangolo/fastapi) - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\n    * [hug](https://github.com/hugapi/hug) - A Python 3 framework for cleanly exposing APIs.\n    * [sandman2](https://github.com/jeffknupp/sandman2) - Automated REST APIs for existing database-driven systems.\n    * [sanic](https://github.com/huge-success/sanic) - A Python 3.6+ web server and web framework that's written to go fast.\n    * [vibora](https://vibora.io/) - Fast, efficient and asynchronous Web framework inspired by Flask.\n\n## Robotics\n\n*Libraries for robotics.*\n\n* [PythonRobotics](https://github.com/AtsushiSakai/PythonRobotics) - This is a compilation of various robotics algorithms with visualizations.\n* [rospy](http://wiki.ros.org/rospy) - This is a library for ROS (Robot Operating System).\n\n## RPC Servers\n\n*RPC-compatible servers.*\n\n* [zeroRPC](https://github.com/0rpc/zerorpc-python) - zerorpc is a flexible RPC implementation based on [ZeroMQ](http://zeromq.org/) and [MessagePack](http://msgpack.org/).\n* [RPyC](https://github.com/tomerfiliba/rpyc) (Remote Python Call) - A transparent and symmetric RPC library for Python\n\n## Science\n\n*Libraries for scientific computing. Also see [Python-for-Scientists](https://github.com/TomNicholas/Python-for-Scientists)*\n\n* [astropy](http://www.astropy.org/) - A community Python library for Astronomy.\n* [bcbio-nextgen](https://github.com/chapmanb/bcbio-nextgen) - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\n* [bccb](https://github.com/chapmanb/bcbb) - Collection of useful code related to biological analysis.\n* [Biopython](http://biopython.org/wiki/Main_Page) - Biopython is a set of freely available tools for biological computation.\n* [cclib](http://cclib.github.io/) - A library for parsing and interpreting the results of computational chemistry packages.\n* [Colour](http://colour-science.org/) - Implementing a comprehensive number of colour theory transformations and algorithms.\n* [Karate Club](https://github.com/benedekrozemberczki/karateclub) - Unsupervised machine learning toolbox for graph structured data.\n* [NetworkX](https://networkx.github.io/) - A high-productivity software for complex networks.\n* [NIPY](http://nipy.org) - A collection of neuroimaging toolkits.\n* [NumPy](http://www.numpy.org/) - A fundamental package for scientific computing with Python.\n* [Open Babel](http://openbabel.org/wiki/Main_Page) - A chemical toolbox designed to speak the many languages of chemical data.\n* [ObsPy](https://github.com/obspy/obspy/wiki/) - A Python toolbox for seismology.\n* [PyDy](http://www.pydy.org/) - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\n* [PyMC](https://github.com/pymc-devs/pymc3) - Markov Chain Monte Carlo sampling toolkit.\n* [QuTiP](http://qutip.org/) - Quantum Toolbox in Python.\n* [RDKit](http://www.rdkit.org/) - Cheminformatics and Machine Learning Software.\n* [SciPy](https://www.scipy.org/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\n* [statsmodels](https://github.com/statsmodels/statsmodels) - Statistical modeling and econometrics in Python.\n* [SymPy](https://github.com/sympy/sympy) - A Python library for symbolic mathematics.\n* [Zipline](https://github.com/quantopian/zipline) - A Pythonic algorithmic trading library.\n* [SimPy](https://bitbucket.org/simpy/simpy) -  A process-based discrete-event simulation framework.\n\n## Search\n\n*Libraries and software for indexing and performing search queries on data.*\n\n* [elasticsearch-py](https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html) - The official low-level Python client for [Elasticsearch](https://www.elastic.co/products/elasticsearch).\n* [elasticsearch-dsl-py](https://github.com/elastic/elasticsearch-dsl-py) - The official high-level Python client for Elasticsearch.\n* [django-haystack](https://github.com/django-haystack/django-haystack) - Modular search for Django.\n* [pysolr](https://github.com/django-haystack/pysolr) - A lightweight Python wrapper for [Apache Solr](https://lucene.apache.org/solr/).\n* [whoosh](http://whoosh.readthedocs.io/en/latest/) - A fast, pure Python search engine library.\n\n## Serialization\n\n*Libraries for serializing complex data types*\n\n* [marshmallow](https://github.com/marshmallow-code/marshmallow) - A lightweight library for converting complex objects to and from simple Python datatypes.\n* [pysimdjson](https://github.com/TkTech/pysimdjson) - A Python bindings for [simdjson](https://github.com/lemire/simdjson).\n* [python-rapidjson](https://github.com/python-rapidjson/python-rapidjson) - A Python wrapper around [RapidJSON](https://github.com/Tencent/rapidjson).\n* [ultrajson](https://github.com/esnme/ultrajson) - A fast JSON decoder and encoder written in C with Python bindings.\n\n## Serverless Frameworks\n\n*Frameworks for developing serverless Python code.*\n\n* [python-lambda](https://github.com/nficano/python-lambda) - A toolkit for developing and deploying Python code in AWS Lambda.\n* [Zappa](https://github.com/Miserlou/Zappa) - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\n## Specific Formats Processing\n\n*Libraries for parsing and manipulating specific text formats.*\n\n* General\n    * [tablib](https://github.com/jazzband/tablib) - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n* Office\n    * [openpyxl](https://openpyxl.readthedocs.io/en/stable/) - A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.\n    * [pyexcel](https://github.com/pyexcel/pyexcel) - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\n    * [python-docx](https://github.com/python-openxml/python-docx) - Reads, queries and modifies Microsoft Word 2007/2008 docx files.\n    * [python-pptx](https://github.com/scanny/python-pptx) - Python library for creating and updating PowerPoint (.pptx) files.\n    * [unoconv](https://github.com/unoconv/unoconv) - Convert between any document format supported by LibreOffice/OpenOffice.\n    * [XlsxWriter](https://github.com/jmcnamara/XlsxWriter) - A Python module for creating Excel .xlsx files.\n    * [xlwings](https://github.com/ZoomerAnalytics/xlwings) - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\n    * [xlwt](https://github.com/python-excel/xlwt) / [xlrd](https://github.com/python-excel/xlrd) - Writing and reading data and formatting information from Excel files.\n* PDF\n    * [PDFMiner](https://github.com/euske/pdfminer) - A tool for extracting information from PDF documents.\n    * [PyPDF2](https://github.com/mstamy2/PyPDF2) - A library capable of splitting, merging and transforming PDF pages.\n    * [ReportLab](https://www.reportlab.com/opensource/) - Allowing Rapid creation of rich PDF documents.\n* Markdown\n    * [Mistune](https://github.com/lepture/mistune) - Fastest and full featured pure Python parsers of Markdown.\n    * [Python-Markdown](https://github.com/waylan/Python-Markdown) - A Python implementation of John Gruber\u2019s Markdown.\n* YAML\n    * [PyYAML](http://pyyaml.org/) - YAML implementations for Python.\n* CSV\n    * [csvkit](https://github.com/wireservice/csvkit) - Utilities for converting to and working with CSV.\n* Archive\n    * [unp](https://github.com/mitsuhiko/unp) - A command line tool that can unpack archives easily.\n\n## Static Site Generator\n\n*Static site generator is a software that takes some text + templates as input and produces HTML files on the output.*\n\n* [mkdocs](https://github.com/mkdocs/mkdocs/) - Markdown friendly documentation generator.\n* [pelican](https://github.com/getpelican/pelican) - Static site generator that supports Markdown and reST syntax.\n* [lektor](https://github.com/lektor/lektor) - An easy to use static CMS and blog engine.\n* [nikola](https://github.com/getnikola/nikola) - A static website and blog generator.\n\n## Tagging\n\n*Libraries for tagging items.*\n\n* [django-taggit](https://github.com/jazzband/django-taggit) - Simple tagging for Django.\n\n## Task Queues\n\n*Libraries for working with task queues.*\n\n* [celery](http://www.celeryproject.org/) - An asynchronous task queue/job queue based on distributed message passing.\n* [huey](https://github.com/coleifer/huey) - Little multi-threaded task queue.\n* [mrq](https://github.com/pricingassistant/mrq) - A distributed worker task queue in Python using Redis & gevent.\n* [rq](https://github.com/rq/rq) - Simple job queues for Python.\n\n## Template Engine\n\n*Libraries and tools for templating and lexing.*\n\n* [Jinja2](https://github.com/pallets/jinja) - A modern and designer friendly templating language.\n* [Genshi](https://genshi.edgewall.org/) - Python templating toolkit for generation of web-aware output.\n* [Mako](http://www.makotemplates.org/) - Hyperfast and lightweight templating for the Python platform.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [pytest](https://docs.pytest.org/en/latest/) - A mature full-featured Python testing tool.\n    * [hypothesis](https://github.com/HypothesisWorks/hypothesis) - Hypothesis is an advanced Quickcheck style property based testing library.\n    * [nose2](https://github.com/nose-devs/nose2) - The successor to `nose`, based on `unittest2.\n    * [Robot Framework](https://github.com/robotframework/robotframework) - A generic test automation framework.\n    * [unittest](https://docs.python.org/3/library/unittest.html) - (Python standard library) Unit testing framework.\n* Test Runners\n    * [green](https://github.com/CleanCut/green) - A clean, colorful test runner.\n    * [mamba](http://nestorsalceda.github.io/mamba/) - The definitive testing tool for Python. Born under the banner of BDD.\n    * [tox](https://tox.readthedocs.io/en/latest/) - Auto builds and tests distributions in multiple Python versions\n* GUI / Web Testing\n    * [locust](https://github.com/locustio/locust) - Scalable user load testing tool written in Python.\n    * [PyAutoGUI](https://github.com/asweigart/pyautogui) - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\n    * [Selenium](https://pypi.org/project/selenium/) - Python bindings for [Selenium](http://www.seleniumhq.org/) WebDriver.\n    * [sixpack](https://github.com/seatgeek/sixpack) - A language-agnostic A/B Testing framework.\n    * [splinter](https://github.com/cobrateam/splinter) - Open source tool for testing web applications.\n* Mock\n    * [mock](https://docs.python.org/3/library/unittest.mock.html) - (Python standard library) A mocking and patching library.\n    * [doublex](https://pypi.org/project/doublex/) - Powerful test doubles framework for Python.\n    * [freezegun](https://github.com/spulec/freezegun) - Travel through time by mocking the datetime module.\n    * [httmock](https://github.com/patrys/httmock) - A mocking library for requests for Python 2.6+ and 3.2+.\n    * [httpretty](https://github.com/gabrielfalcao/HTTPretty) - HTTP request mock tool for Python.\n    * [mocket](https://github.com/mindflayer/python-mocket) - A socket mock framework with gevent/asyncio/SSL support.\n    * [responses](https://github.com/getsentry/responses) - A utility library for mocking out the requests Python library.\n    * [VCR.py](https://github.com/kevin1024/vcrpy) - Record and replay HTTP interactions on your tests.\n* Object Factories\n    * [factory_boy](https://github.com/FactoryBoy/factory_boy) - A test fixtures replacement for Python.\n    * [mixer](https://github.com/klen/mixer) - Another fixtures replacement. Supported Django, Flask, SQLAlchemy, Peewee and etc.\n    * [model_mommy](https://github.com/vandersonmota/model_mommy) - Creating random fixtures for testing in Django.\n* Code Coverage\n    * [coverage](https://pypi.org/project/coverage/) - Code coverage measurement.\n* Fake Data\n    * [mimesis](https://github.com/lk-geimfari/mimesis) - is a Python library that help you generate fake data.\n    * [fake2db](https://github.com/emirozer/fake2db) - Fake database generator.\n    * [faker](https://github.com/joke2k/faker) - A Python package that generates fake data.\n    * [radar](https://pypi.org/project/radar/) - Generate random datetime / time.\n\n## Text Processing\n\n*Libraries for parsing and manipulating plain texts.*\n\n* General\n    * [chardet](https://github.com/chardet/chardet) - Python 2/3 compatible character encoding detector.\n    * [difflib](https://docs.python.org/3/library/difflib.html) - (Python standard library) Helpers for computing deltas.\n    * [ftfy](https://github.com/LuminosoInsight/python-ftfy) - Makes Unicode text less broken and more consistent automagically.\n    * [fuzzywuzzy](https://github.com/seatgeek/fuzzywuzzy) - Fuzzy String Matching.\n    * [Levenshtein](https://github.com/ztane/python-Levenshtein/) - Fast computation of Levenshtein distance and string similarity.\n    * [pangu.py](https://github.com/vinta/pangu.py) - Paranoid text spacing.\n    * [pyfiglet](https://github.com/pwaller/pyfiglet) - An implementation of figlet written in Python.\n    * [pypinyin](https://github.com/mozillazg/python-pinyin) - Convert Chinese hanzi (\u6f22\u5b57) to pinyin (\u62fc\u97f3).\n    * [textdistance](https://github.com/orsinium/textdistance) - Compute distance between sequences with 30+ algorithms.\n    * [unidecode](https://pypi.org/project/Unidecode/) - ASCII transliterations of Unicode text.\n* Slugify\n    * [awesome-slugify](https://github.com/dimka665/awesome-slugify) - A Python slugify library that can preserve unicode.\n    * [python-slugify](https://github.com/un33k/python-slugify) - A Python slugify library that translates unicode to ASCII.\n    * [unicode-slugify](https://github.com/mozilla/unicode-slugify) - A slugifier that generates unicode slugs with Django as a dependency.\n* Unique identifiers\n    * [hashids](https://github.com/davidaurelio/hashids-python) - Implementation of [hashids](http://hashids.org) in Python.\n    * [shortuuid](https://github.com/skorokithakis/shortuuid) - A generator library for concise, unambiguous and URL-safe UUIDs.\n* Parser\n    * [ply](https://github.com/dabeaz/ply) - Implementation of lex and yacc parsing tools for Python.\n    * [pygments](http://pygments.org/) - A generic syntax highlighter.\n    * [pyparsing](https://github.com/pyparsing/pyparsing) - A general purpose framework for generating parsers.\n    * [python-nameparser](https://github.com/derek73/python-nameparser) - Parsing human names into their individual components.\n    * [python-phonenumbers](https://github.com/daviddrysdale/python-phonenumbers) - Parsing, formatting, storing and validating international phone numbers.\n    * [python-user-agents](https://github.com/selwin/python-user-agents) - Browser user agent parser.\n    * [sqlparse](https://github.com/andialbrecht/sqlparse) - A non-validating SQL parser.\n\n## Third-party APIs\n\n*Libraries for accessing third party services APIs. Also see [List of Python API Wrappers and Libraries](https://github.com/realpython/list-of-python-api-wrappers).*\n\n* [apache-libcloud](https://libcloud.apache.org/) - One Python library for all clouds.\n* [boto3](https://github.com/boto/boto3) - Python interface to Amazon Web Services.\n* [django-wordpress](https://github.com/istrategylabs/django-wordpress) - WordPress models and views for Django.\n* [facebook-sdk](https://github.com/mobolic/facebook-sdk) - Facebook Platform Python SDK.\n* [google-api-python-client](https://github.com/google/google-api-python-client) - Google APIs Client Library for Python.\n* [gspread](https://github.com/burnash/gspread) - Google Spreadsheets Python API.\n* [twython](https://github.com/ryanmcgrath/twython) - A Python wrapper for the Twitter API.\n\n## URL Manipulation\n\n*Libraries for parsing URLs.*\n\n* [furl](https://github.com/gruns/furl) - A small Python library that makes parsing and manipulating URLs easy.\n* [purl](https://github.com/codeinthehole/purl) - A simple, immutable URL class with a clean API for interrogation and manipulation.\n* [pyshorteners](https://github.com/ellisonleao/pyshorteners) - A pure Python URL shortening lib.\n* [webargs](https://github.com/marshmallow-code/webargs) - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\n## Video\n\n*Libraries for manipulating video and GIFs.*\n\n* [vidgear](https://github.com/abhiTronix/vidgear) - Most Powerful multi-threaded Video Processing framework.\n* [moviepy](https://zulko.github.io/moviepy/) - A module for script-based movie editing with many formats, including animated GIFs.\n* [scikit-video](https://github.com/aizvorski/scikit-video) - Video processing routines for SciPy.\n\n## Web Asset Management\n\n*Tools for managing, compressing and minifying website assets.*\n\n* [django-compressor](https://github.com/django-compressor/django-compressor) - Compresses linked and inline JavaScript or CSS into a single cached file.\n* [django-pipeline](https://github.com/jazzband/django-pipeline) - An asset packaging library for Django.\n* [django-storages](https://github.com/jschneier/django-storages) - A collection of custom storage back ends for Django.\n* [fanstatic](http://www.fanstatic.org/en/latest/) - Packages, optimizes, and serves static file dependencies as Python packages.\n* [fileconveyor](http://wimleers.com/fileconveyor) - A daemon to detect and sync files to CDNs, S3 and FTP.\n* [flask-assets](https://github.com/miracle2k/flask-assets) - Helps you integrate webassets into your Flask app.\n* [webassets](https://github.com/miracle2k/webassets) - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\n## Web Content Extracting\n\n*Libraries for extracting web contents.*\n\n* [html2text](https://github.com/Alir3z4/html2text) - Convert HTML to Markdown-formatted text.\n* [lassie](https://github.com/michaelhelmick/lassie) - Web Content Retrieval for Humans.\n* [micawber](https://github.com/coleifer/micawber) - A small library for extracting rich content from URLs.\n* [newspaper](https://github.com/codelucas/newspaper) - News extraction, article extraction and content curation in Python.\n* [python-readability](https://github.com/buriy/python-readability) - Fast Python port of arc90's readability tool.\n* [requests-html](https://github.com/psf/requests-html) - Pythonic HTML Parsing for Humans.\n* [sumy](https://github.com/miso-belica/sumy) - A module for automatic summarization of text documents and HTML pages.\n* [textract](https://github.com/deanmalmgren/textract) - Extract text from any document, Word, PowerPoint, PDFs, etc.\n* [toapi](https://github.com/gaojiuli/toapi) - Every web site provides APIs.\n\n## Web Crawling\n\n*Libraries to automate web scraping.*\n\n* [cola](https://github.com/chineking/cola) - A distributed crawling framework.\n* [feedparser](https://pythonhosted.org/feedparser/) - Universal feed parser.\n* [grab](https://github.com/lorien/grab) - Site scraping framework.\n* [MechanicalSoup](https://github.com/MechanicalSoup/MechanicalSoup) - A Python library for automating interaction with websites.\n* [pyspider](https://github.com/binux/pyspider) - A powerful spider system.\n* [robobrowser](https://github.com/jmcarp/robobrowser) - A simple, Pythonic library for browsing the web without a standalone web browser.\n* [scrapy](https://scrapy.org/) - A fast high-level screen scraping and web crawling framework.\n* [portia](https://github.com/scrapinghub/portia) - Visual scraping for Scrapy.\n\n## Web Frameworks\n\n*Traditional full stack web frameworks. Also see [RESTful API](https://github.com/vinta/awesome-python#restful-api)*\n\n* Synchronous\n    * [Django](https://www.djangoproject.com/) - The most popular web framework in Python.\n        * [awesome-django](https://github.com/wsvincent/awesome-django)\n        * [awesome-django](https://github.com/shahraizali/awesome-django)\n    * [Flask](http://flask.pocoo.org/) - A microframework for Python.\n        * [awesome-flask](https://github.com/humiaozuzu/awesome-flask)\n    * [Pyramid](https://pylonsproject.org/) - A small, fast, down-to-earth, open source Python web framework.\n        * [awesome-pyramid](https://github.com/uralbash/awesome-pyramid)\n    * [Masonite](https://github.com/MasoniteFramework/masonite) - The modern and developer centric Python web framework.\n* Asynchronous\n    * [Tornado](http://www.tornadoweb.org/en/latest/) - A web framework and asynchronous networking library.\n\n## WebSocket\n\n*Libraries for working with WebSocket.*\n\n* [autobahn-python](https://github.com/crossbario/autobahn-python) - WebSocket & WAMP for Python on Twisted and [asyncio](https://docs.python.org/3/library/asyncio.html).\n* [channels](https://github.com/django/channels) - Developer-friendly asynchrony for Django.\n* [websockets](https://github.com/aaugustin/websockets) - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\n## WSGI Servers\n\n*WSGI-compatible web servers.*\n\n* [bjoern](https://github.com/jonashaag/bjoern) - Asynchronous, very fast and written in C.\n* [gunicorn](https://github.com/benoitc/gunicorn) - Pre-forked, partly written in C.\n* [uWSGI](https://uwsgi-docs.readthedocs.io/en/latest/) - A project aims at developing a full stack for building hosting services, written in C.\n* [waitress](https://github.com/Pylons/waitress) - Multi-threaded, powers Pyramid.\n* [werkzeug](https://github.com/pallets/werkzeug) - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\n# Resources\n\nWhere to discover new Python libraries.\n\n## Podcasts\n\n* [From Python Import Podcast](http://frompythonimportpodcast.com/)\n* [Podcast.init](https://podcastinit.com/)\n* [Python Bytes](https://pythonbytes.fm)\n* [Python Testing](http://pythontesting.net)\n* [Radio Free Python](http://radiofreepython.com/)\n* [Talk Python To Me](https://talkpython.fm/)\n* [Test and Code](https://testandcode.com/)\n* [The Real Python Podcast](https://realpython.com/podcasts/rpp/)\n\n## Twitter\n\n* [@codetengu](https://twitter.com/codetengu)\n* [@getpy](https://twitter.com/getpy)\n* [@importpython](https://twitter.com/importpython)\n* [@planetpython](https://twitter.com/planetpython)\n* [@pycoders](https://twitter.com/pycoders)\n* [@pypi](https://twitter.com/pypi)\n* [@pythontrending](https://twitter.com/pythontrending)\n* [@PythonWeekly](https://twitter.com/PythonWeekly)\n* [@TalkPython](https://twitter.com/talkpython)\n* [@realpython](https://twitter.com/realpython)\n\n## Websites\n\n* [/r/CoolGithubProjects](https://www.reddit.com/r/coolgithubprojects/)\n* [/r/Python](https://www.reddit.com/r/python)\n* [Awesome Python @LibHunt](https://python.libhunt.com/)\n* [Django Packages](https://djangopackages.org/)\n* [Full Stack Python](https://www.fullstackpython.com/)\n* [Python Cheatsheet](https://www.pythoncheatsheet.org/)\n* [Python ZEEF](https://python.zeef.com/alan.richmond)\n* [Python \u5f00\u53d1\u793e\u533a](https://www.ctolib.com/python/)\n* [Real Python](https://realpython.com)\n* [Trending Python repositories on GitHub today](https://github.com/trending?l=python)\n* [\u0421\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e Python \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432](https://python-scripts.com/)\n* [Pythonic News](https://news.python.sc/)\n\n## Weekly\n\n* [CodeTengu Weekly \u78bc\u5929\u72d7\u9031\u520a](https://weekly.codetengu.com/)\n* [Import Python Newsletter](http://importpython.com/newsletter/)\n* [Pycoder's Weekly](http://pycoders.com/)\n* [Python Weekly](http://www.pythonweekly.com/)\n* [Python Tricks](https://realpython.com/python-tricks/)\n\n# Contributing\n\nYour contributions are always welcome! Please take a look at the [contribution guidelines](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md) first.\n\nI will keep some pull requests open if I'm not sure whether those libraries are awesome, you could [vote for them](https://github.com/vinta/awesome-python/pulls) by adding :+1: to them. Pull requests will be merged when their votes reach **20**.\n\n- - -\n\nIf you have any question about this opinionated list, do not hesitate to contact me [@vinta](https://twitter.com/vinta) on Twitter or open an issue on GitHub.\n"
 },
 {
  "repo": "gabrielecirulli/2048",
  "language": "CSS",
  "readme_contents": "# 2048\nA small clone of [1024](https://play.google.com/store/apps/details?id=com.veewo.a1024), based on [Saming's 2048](http://saming.fr/p/2048/) (also a clone).\n\nMade just for fun. [Play it here!](http://gabrielecirulli.github.io/2048/)\n\nThe official app can also be found on the [Play Store](https://play.google.com/store/apps/details?id=com.gabrielecirulli.app2048) and [App Store!](https://itunes.apple.com/us/app/2048-by-gabriele-cirulli/id868076805)\n\n### Contributions\n\n[Anna Harren](https://github.com/iirelu/) and [sigod](https://github.com/sigod) are maintainers for this repository.\n\nOther notable contributors:\n\n - [TimPetricola](https://github.com/TimPetricola) added best score storage\n - [chrisprice](https://github.com/chrisprice) added custom code for swipe handling on mobile\n - [marcingajda](https://github.com/marcingajda) made swipes work on Windows Phone\n - [mgarciaisaia](https://github.com/mgarciaisaia) added support for Android 2.3\n\nMany thanks to [rayhaanj](https://github.com/rayhaanj), [Mechazawa](https://github.com/Mechazawa), [grant](https://github.com/grant), [remram44](https://github.com/remram44) and [ghoullier](https://github.com/ghoullier) for the many other good contributions.\n\n### Screenshot\n\n<p align=\"center\">\n  <img src=\"https://cloud.githubusercontent.com/assets/1175750/8614312/280e5dc2-26f1-11e5-9f1f-5891c3ca8b26.png\" alt=\"Screenshot\"/>\n</p>\n\nThat screenshot is fake, by the way. I never reached 2048 :smile:\n\n## Contributing\nChanges and improvements are more than welcome! Feel free to fork and open a pull request. Please make your changes in a specific branch and request to pull into `master`! If you can, please make sure the game fully works before sending the PR, as that will help speed up the process.\n\nYou can find the same information in the [contributing guide.](https://github.com/gabrielecirulli/2048/blob/master/CONTRIBUTING.md)\n\n## License\n2048 is licensed under the [MIT license.](https://github.com/gabrielecirulli/2048/blob/master/LICENSE.txt)\n\n## Donations\nI made this in my spare time, and it's hosted on GitHub (which means I don't have any hosting costs), but if you enjoyed the game and feel like buying me coffee, you can donate at my BTC address: `1Ec6onfsQmoP9kkL3zkpB6c5sA4PVcXU2i`. Thank you very much!\n"
 },
 {
  "repo": "shadowsocks/shadowsocks-windows",
  "language": "C#",
  "readme_contents": "<img src=\"shadowsocks-csharp/Resources/ssw128.png\" alt=\"[logo]\" width=\"48\"/> Shadowsocks for Windows\r\n=======================\r\n\r\n[![Build Status]][Appveyor]\r\n\r\n[\u4e2d\u6587\u8bf4\u660e]\r\n\r\n#### Features\r\n\r\n1. System proxy configuration\r\n2. PAC mode and global mode\r\n3. [GeoSite] and user rules\r\n4. Supports HTTP proxy\r\n5. Supports server auto switching\r\n6. Supports UDP relay (see Usage)\r\n7. Supports plugins\r\n\r\n#### Download\r\n\r\nDownload the latest release from [release page].\r\n\r\n#### Requirements\r\n\r\nMicrosoft [.NET Framework 4.7.2] or higher, Microsoft [Visual C++ 2015 Redistributable] (x86) .\r\n\r\n#### Basic\r\n\r\n1. Find Shadowsocks icon in the notification tray\r\n2. You can add multiple servers in servers menu\r\n3. Select `Enable System Proxy` menu to enable system proxy. Please disable other\r\nproxy addons in your browser, or set them to use system proxy\r\n4. You can also configure your browser proxy manually if you don't want to enable\r\nsystem proxy. Set Socks5 or HTTP proxy to 127.0.0.1:1080. You can change this\r\nport in `Servers -> Edit Servers`\r\n\r\n#### PAC\r\n\r\n1. You can change PAC rules by editing the PAC file. When you save the PAC file\r\nwith any editor, Shadowsocks will notify browsers about the change automatically\r\n2. You can also update PAC file from [GeoSite] \\(maintained by 3rd party)\r\n3. You can also use online PAC URL\r\n\r\nFor Windows10 Store and related applications, please execute the following command under Admin privilege:\r\n```\r\nnetsh winhttp import proxy source=ie\r\n```\r\n\r\n#### Server Auto Switching\r\n\r\n1. Load balance: choosing server randomly\r\n2. High availability: choosing the best server (low latency and packet loss)\r\n3. Choose By Total Package Loss: ping and choose. Please also enable\r\n   `Availability Statistics` in the menu if you want to use this\r\n4. Write your own strategy by implement IStrategy interface and send us a pull request!\r\n\r\n#### UDP\r\n\r\nFor UDP, you need to use SocksCap or ProxyCap to force programs you want\r\nto be proxied to tunnel over Shadowsocks\r\n\r\n#### Multiple Instances\r\n\r\nIf you want to manage multiple servers using other tools like SwitchyOmega,\r\nyou can start multiple Shadowsocks instances. To avoid configuration conflicts,\r\ncopy Shadowsocks to a new directory and choose a different local port.\r\n\r\n#### Plugins\r\n\r\nIf you would like to connect to server via a plugin, please set the plugin's\r\npath (relative or absolute) on Edit Servers form.\r\n_Note_: Forward Proxy will not be used while a plugin is enabled.\r\n\r\nDetails:\r\n[Working with non SIP003 standard Plugin].\r\n\r\n#### Global hotkeys\r\n\r\nHotkeys could be registered automatically on startup.\r\nIf you are using multiple instances of Shadowsocks,\r\nyou must set different key combination for each instance.\r\n\r\n##### How to input?\r\n\r\n1. Put focus in the corresponding textbox.\r\n2. Press the key combination that you want to use.\r\n3. Release all keys when you think it is ready.\r\n4. Your input appears in the textbox.\r\n\r\n##### How to change?\r\n\r\n1. Put focus in the corresponding textbox.\r\n2. Press BackSpace key to clear content.\r\n3. Re-input new key combination.\r\n\r\n##### How to deactivate?\r\n\r\n1. Clear content in the textbox that you want to deactivate,\r\nif you want to deactivate all, please clear all textboxes.\r\n2. Press OK button to confirm.\r\n\r\n##### Meaning of label color\r\n\r\n- Green: This key combination is not occupied by other programs and register successfully.\r\n- Yellow: This key combination is occupied by other programs and you have to change to another one.\r\n- Transparent without color: The initial status.\r\n\r\n#### Server Configuration\r\n\r\nPlease visit [Servers] for more information.\r\n\r\n#### Experimental\r\n\r\n[Experimental Features]\r\n\r\n#### Development\r\n\r\n1. [Visual Studio 2017] & [.NET Framework 4.7.2 Developer Pack] are required.\r\n2. It is recommended to share your idea on the Issue Board before you start to work,\r\nespecially for feature development.\r\n\r\n#### License\r\n\r\n[GPLv3]\r\n\r\n#### Open Source Components / Libraries\r\n\r\n```\r\nCaseless.Fody (MIT)    https://github.com/Fody/Caseless\r\nCostura.Fody (MIT)     https://github.com/Fody/Costura\r\nFody (MIT)             https://github.com/Fody/Fody\r\nGlobalHotKey (GPLv3)   https://github.com/kirmir/GlobalHotKey\r\nNewtonsoft.Json (MIT)  https://www.newtonsoft.com/json\r\nStringEx.CS ()         https://github.com/LazyMode/StringEx\r\nZXing.Net (Apache 2.0) https://github.com/micjahn/ZXing.Net\r\n\r\nlibsscrypto (GPLv2)    https://github.com/shadowsocks/libsscrypto\r\nPrivoxy (GPLv2)        https://www.privoxy.org\r\nSysproxy ()            https://github.com/Noisyfox/sysproxy\r\n```\r\n\r\n\r\n\r\n[Appveyor]:     https://ci.appveyor.com/project/celeron533/shadowsocks-windows\r\n[Build Status]: https://ci.appveyor.com/api/projects/status/tfw57q6eecippsl5/branch/master?svg=true\r\n[release page]: https://github.com/shadowsocks/shadowsocks-csharp/releases\r\n[GeoSite]:      https://github.com/v2ray/domain-list-community\r\n[Servers]:      https://github.com/shadowsocks/shadowsocks/wiki/Ports-and-Clients#linux--server-side\r\n[\u4e2d\u6587\u8bf4\u660e]:     https://github.com/shadowsocks/shadowsocks-windows/wiki/Shadowsocks-Windows-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\r\n[Visual Studio 2017]:   https://www.visualstudio.com/downloads/\r\n[.NET Framework 4.7.2]: https://dotnet.microsoft.com/download/dotnet-framework/net472\r\n[.NET Framework 4.7.2 Developer Pack]: https://dotnet.microsoft.com/download/dotnet-framework/net472\r\n[Visual C++ 2015 Redistributable]:     https://www.microsoft.com/en-us/download/details.aspx?id=53840\r\n[GPLv3]:        https://github.com/shadowsocks/shadowsocks-windows/blob/master/LICENSE.txt\r\n[Working with non SIP003 standard Plugin]: https://github.com/shadowsocks/shadowsocks-windows/wiki/Working-with-non-SIP003-standard-Plugin\r\n[Experimental Features]: https://github.com/shadowsocks/shadowsocks-windows/wiki/Experimental"
 },
 {
  "repo": "microsoft/vscode",
  "language": "TypeScript",
  "readme_contents": "# Visual Studio Code - Open Source (\"Code - OSS\")\n\n<!-- [![Build Status](https://dev.azure.com/vscode/VSCode/_apis/build/status/VS%20Code?branchName=master)](https://aka.ms/vscode-builds) -->\n[![Build Status](https://dev.azure.com/vscode/VSCode/_apis/build/status/VS%20Code?branchName=master)](https://dev.azure.com/vscode/VSCode/_build/latest?definitionId=12)\n[![Feature Requests](https://img.shields.io/github/issues/Microsoft/vscode/feature-request.svg)](https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)\n[![Bugs](https://img.shields.io/github/issues/Microsoft/vscode/bug.svg)](https://github.com/Microsoft/vscode/issues?utf8=\u2713&q=is%3Aissue+is%3Aopen+label%3Abug)\n[![Gitter](https://img.shields.io/badge/chat-on%20gitter-yellow.svg)](https://gitter.im/Microsoft/vscode)\n\n## The Repository\n\nThis repository (\"`Code - OSS`\") is where we (Microsoft) develop the [Visual Studio Code](https://code.visualstudio.com) product. Not only do we work on code and issues here, we also publish our [roadmap](https://github.com/microsoft/vscode/wiki/Roadmap), [monthly iteration plans](https://github.com/microsoft/vscode/wiki/Iteration-Plans), and our [endgame plans](https://github.com/microsoft/vscode/wiki/Running-the-Endgame). This source code is available to everyone under the standard [MIT license](https://github.com/microsoft/vscode/blob/master/LICENSE.txt).\n\n## Visual Studio Code\n\n<p align=\"center\">\n  <img alt=\"VS Code in action\" src=\"https://user-images.githubusercontent.com/1487073/58344409-70473b80-7e0a-11e9-8570-b2efc6f8fa44.png\">\n</p>\n\n[Visual Studio Code](https://code.visualstudio.com) is a distribution of the `Code - OSS` repository with Microsoft specific customizations released under a traditional [Microsoft product license](https://code.visualstudio.com/License/).\n\n[Visual Studio Code](https://code.visualstudio.com) combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive code editing, navigation, and understanding support along with lightweight debugging, a rich extensibility model, and lightweight integration with existing tools.\n\nVisual Studio Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on [Visual Studio Code's website](https://code.visualstudio.com/Download). To get the latest releases every day, install the [Insiders build](https://code.visualstudio.com/insiders).\n\n## Contributing\n\nThere are many ways in which you can participate in the project, for example:\n\n* [Submit bugs and feature requests](https://github.com/microsoft/vscode/issues), and help us verify as they are checked in\n* Review [source code changes](https://github.com/microsoft/vscode/pulls)\n* Review the [documentation](https://github.com/microsoft/vscode-docs) and make pull requests for anything from typos to new content\n\nIf you are interested in fixing issues and contributing directly to the code base,\nplease see the document [How to Contribute](https://github.com/Microsoft/vscode/wiki/How-to-Contribute), which covers the following:\n\n* [How to build and run from source](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run)\n* [The development workflow, including debugging and running tests](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#debugging)\n* [Coding guidelines](https://github.com/Microsoft/vscode/wiki/Coding-Guidelines)\n* [Submitting pull requests](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#pull-requests)\n* [Finding an issue to work on](https://github.com/microsoft/vscode/wiki/How-to-Contribute#where-to-contribute)\n* [Contributing to translations](https://aka.ms/vscodeloc)\n\n## Feedback\n\n* Ask a question on [Stack Overflow](https://stackoverflow.com/questions/tagged/vscode)\n* [Request a new feature](CONTRIBUTING.md)\n* Upvote [popular feature requests](https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)\n* [File an issue](https://github.com/Microsoft/vscode/issues)\n* Follow [@code](https://twitter.com/code) and let us know what you think!\n\n## Related Projects\n\nMany of the core components and extensions to VS Code live in their own repositories on GitHub. For example, the [node debug adapter](https://github.com/microsoft/vscode-node-debug) and the [mono debug adapter](https://github.com/microsoft/vscode-mono-debug) have their own repositories. For a complete list, please visit the [Related Projects](https://github.com/Microsoft/vscode/wiki/Related-Projects) page on our [wiki](https://github.com/Microsoft/vscode/wiki).\n\n## Bundled Extensions\n\nVS Code includes a set of built-in extensions located in the [extensions](extensions) folder, including grammars and snippets for many languages. Extensions that provide rich language support (code completion, Go to Definition) for a language have the suffix `language-features`. For example, the `json` extension provides coloring for `JSON` and the `json-language-features` provides rich language support for `JSON`.\n\n## Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## License\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nLicensed under the [MIT](LICENSE.txt) license.\n"
 },
 {
  "repo": "wakaleo/game-of-life",
  "language": "HTML",
  "readme_contents": "This is a simple demonstration application used in the [Jenkins: The Definitive Guide](http://wakaleo.com/books/jenkins-the-definitive-guide) book.\n\n## Building the project\n\nThe project is a simple multi-module Maven project. To build the whole project, just run `mvn install` from the root directory.\n\n## Running the game\n\nThe application is a very simple online version of [Conway's 'game of life'](http://en.wikipedia.org/wiki/Conway's_Game_of_Life). To see what the game does, run `mvn install` as described above, then go to the gameoflife-web directory and run `mvn jetty:run`. The application will be running on http://localhost:9090.\n\n## Running the acceptance tests\n\nThe acceptance tests are written using Webdriver and [Serenity (previously known as 'Thucydides')](http://thucydides.info). They are designed to run against a running server. Run the jetty instance as described about, then, in another window, go to the gameoflife-acceptance-tests directory and run `mvn clean verify`. The test reports will be generated in the `target/site/thucydides` directory.\n\n## The book\n\nStreamline software development with Jenkins, the popular Java-based open source tool that has revolutionized the way teams think about Continuous Integration (CI). This complete guide shows you how to automate your build, integration, release, and deployment processes with Jenkins\u2014and demonstrates how CI can save you time, money, and many headaches.\n\nIdeal for developers, software architects, and project managers, Jenkins: The Definitive Guide is both a CI tutorial and a comprehensive Jenkins reference. Through its wealth of best practices and real-world tips, you'll discover how easy it is to set up a CI service with Jenkins.\n\n - Learn how to install, configure, and secure your Jenkins server\n - Organize and monitor general-purpose build jobs\n - Integrate automated tests to verify builds, and set up code quality reporting\n - Establish effective team notification strategies and techniques\n - Configure build pipelines, parameterized jobs, matrix builds, and other advanced jobs\n - Manage a farm of Jenkins servers to run distributed builds\n - Implement automated deployment and continuous delivery\n\n## The author\n\nJohn is an experienced consultant and trainer specialising in Enterprise Java, Web Development, and Open Source technologies, based in Sydney, Australia. Well known in the Java community for his many published articles, and as author of Java Power Tools, John helps organisations around the world to optimize their Java development processes and infrastructures and provides training and mentoring in open source technologies, SDLC tools, and agile development processes. John is CEO of [Wakaleo Consulting](http://www.wakaleo.com), a company that provides consulting, training and mentoring services in Enterprise Java and Agile Development. He is also part of the founding team of [Test Automation](http://www.testautomation.com.au/), a service that automates the manual regression tests conducted during the integration and acceptance testing stages of a web site release.\n"
 },
 {
  "repo": "macrozheng/mall",
  "language": "Java",
  "readme_contents": "# mall\n\n<p>\n  <a href=\"#\u516c\u4f17\u53f7\"><img src=\"http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%85%AC%E4%BC%97%E5%8F%B7-macrozheng-blue.svg\" alt=\"\u516c\u4f17\u53f7\"></a>\n  <a href=\"https://github.com/macrozheng/mall-learning\"><img src=\"http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%AD%A6%E4%B9%A0%E6%95%99%E7%A8%8B-mall--learning-green.svg\" alt=\"\u5b66\u4e60\u6559\u7a0b\"></a>\n  <a href=\"https://github.com/macrozheng/mall-swarm\"><img src=\"http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/Cloud%E7%89%88%E6%9C%AC-mall--swarm-brightgreen.svg\" alt=\"SpringCloud\u7248\u672c\"></a>\n  <a href=\"https://github.com/macrozheng/mall-admin-web\"><img src=\"http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE-mall--admin--web-green.svg\" alt=\"\u524d\u7aef\u9879\u76ee\"></a>\n  <a href=\"http://qm.qq.com/cgi-bin/qm/qr?k=V6xu5c12j9qhnMUNdDRzakNxRKzOxibQ\"><img src=\"http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/QQ%E7%BE%A4-959351312-red.svg\" alt=\"QQ\u7fa4\"></a>\n  <a href=\"#\u516c\u4f17\u53f7\"><img src=\"http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E4%BA%A4%E6%B5%81-%E5%BE%AE%E4%BF%A1%E7%BE%A4-2BA245.svg\" alt=\"\u4ea4\u6d41\"></a>\n  <a href=\"https://gitee.com/macrozheng/mall\"><img src=\"http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E7%A0%81%E4%BA%91-%E9%A1%B9%E7%9B%AE%E5%9C%B0%E5%9D%80-orange.svg\" alt=\"\u7801\u4e91\"></a>\n</p>\n\n## \u524d\u8a00\n\n`mall`\u9879\u76ee\u81f4\u529b\u4e8e\u6253\u9020\u4e00\u4e2a\u5b8c\u6574\u7684\u7535\u5546\u7cfb\u7edf\uff0c\u91c7\u7528\u73b0\u9636\u6bb5\u6d41\u884c\u6280\u672f\u5b9e\u73b0\u3002\n\n## \u9879\u76ee\u6587\u6863\n\n- \u6587\u6863\u5730\u5740\uff1a[http://www.macrozheng.com](http://www.macrozheng.com)\n- \u5907\u7528\u5730\u5740\uff1a[https://macrozheng.github.io/mall-learning](https://macrozheng.github.io/mall-learning)\n\n## \u9879\u76ee\u4ecb\u7ecd\n\n`mall`\u9879\u76ee\u662f\u4e00\u5957\u7535\u5546\u7cfb\u7edf\uff0c\u5305\u62ec\u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u53ca\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\uff0c\u57fa\u4e8eSpringBoot+MyBatis\u5b9e\u73b0\uff0c\u91c7\u7528Docker\u5bb9\u5668\u5316\u90e8\u7f72\u3002\u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u5305\u542b\u9996\u9875\u95e8\u6237\u3001\u5546\u54c1\u63a8\u8350\u3001\u5546\u54c1\u641c\u7d22\u3001\u5546\u54c1\u5c55\u793a\u3001\u8d2d\u7269\u8f66\u3001\u8ba2\u5355\u6d41\u7a0b\u3001\u4f1a\u5458\u4e2d\u5fc3\u3001\u5ba2\u6237\u670d\u52a1\u3001\u5e2e\u52a9\u4e2d\u5fc3\u7b49\u6a21\u5757\u3002\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u5305\u542b\u5546\u54c1\u7ba1\u7406\u3001\u8ba2\u5355\u7ba1\u7406\u3001\u4f1a\u5458\u7ba1\u7406\u3001\u4fc3\u9500\u7ba1\u7406\u3001\u8fd0\u8425\u7ba1\u7406\u3001\u5185\u5bb9\u7ba1\u7406\u3001\u7edf\u8ba1\u62a5\u8868\u3001\u8d22\u52a1\u7ba1\u7406\u3001\u6743\u9650\u7ba1\u7406\u3001\u8bbe\u7f6e\u7b49\u6a21\u5757\u3002\n\n### \u9879\u76ee\u6f14\u793a\n\n#### \u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\n\n\u524d\u7aef\u9879\u76ee`mall-admin-web`\u5730\u5740\uff1ahttps://github.com/macrozheng/mall-admin-web\n\n\u9879\u76ee\u6f14\u793a\u5730\u5740\uff1a [http://www.macrozheng.com/admin/index.html](http://www.macrozheng.com/admin/index.html)  \n\n![\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u529f\u80fd\u6f14\u793a.gif](/document/resource/mall-admin.gif)\n\n#### \u524d\u53f0\u5546\u57ce\u7cfb\u7edf\n\n\u524d\u7aef\u9879\u76ee`mall-app-web`\u5730\u5740\uff1a\u656c\u8bf7\u671f\u5f85......\n\n\u9879\u76ee\u6f14\u793a\u5730\u5740\uff1a[http://www.macrozheng.com/app/index.html](http://www.macrozheng.com/app/index.html)\n\n![\u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u529f\u80fd\u6f14\u793a.gif](/document/resource/mall-app.gif)\n\n### \u7ec4\u7ec7\u7ed3\u6784\n\n``` lua\nmall\n\u251c\u2500\u2500 mall-common -- \u5de5\u5177\u7c7b\u53ca\u901a\u7528\u4ee3\u7801\n\u251c\u2500\u2500 mall-mbg -- MyBatisGenerator\u751f\u6210\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u4ee3\u7801\n\u251c\u2500\u2500 mall-security -- SpringSecurity\u5c01\u88c5\u516c\u7528\u6a21\u5757\n\u251c\u2500\u2500 mall-admin -- \u540e\u53f0\u5546\u57ce\u7ba1\u7406\u7cfb\u7edf\u63a5\u53e3\n\u251c\u2500\u2500 mall-search -- \u57fa\u4e8eElasticsearch\u7684\u5546\u54c1\u641c\u7d22\u7cfb\u7edf\n\u251c\u2500\u2500 mall-portal -- \u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u63a5\u53e3\n\u2514\u2500\u2500 mall-demo -- \u6846\u67b6\u642d\u5efa\u65f6\u7684\u6d4b\u8bd5\u4ee3\u7801\n```\n\n### \u6280\u672f\u9009\u578b\n\n#### \u540e\u7aef\u6280\u672f\n\n| \u6280\u672f                 | \u8bf4\u660e                | \u5b98\u7f51                                                 |\n| -------------------- | ------------------- | ---------------------------------------------------- |\n| SpringBoot           | \u5bb9\u5668+MVC\u6846\u67b6        | https://spring.io/projects/spring-boot               |\n| SpringSecurity       | \u8ba4\u8bc1\u548c\u6388\u6743\u6846\u67b6      | https://spring.io/projects/spring-security           |\n| MyBatis              | ORM\u6846\u67b6             | http://www.mybatis.org/mybatis-3/zh/index.html       |\n| MyBatisGenerator     | \u6570\u636e\u5c42\u4ee3\u7801\u751f\u6210      | http://www.mybatis.org/generator/index.html          |\n| PageHelper           | MyBatis\u7269\u7406\u5206\u9875\u63d2\u4ef6 | http://git.oschina.net/free/Mybatis_PageHelper       |\n| Swagger-UI           | \u6587\u6863\u751f\u4ea7\u5de5\u5177        | https://github.com/swagger-api/swagger-ui            |\n| Hibernator-Validator | \u9a8c\u8bc1\u6846\u67b6            | http://hibernate.org/validator                       |\n| Elasticsearch        | \u641c\u7d22\u5f15\u64ce            | https://github.com/elastic/elasticsearch             |\n| RabbitMq             | \u6d88\u606f\u961f\u5217            | https://www.rabbitmq.com/                            |\n| Redis                | \u5206\u5e03\u5f0f\u7f13\u5b58          | https://redis.io/                                    |\n| MongoDb              | NoSql\u6570\u636e\u5e93         | https://www.mongodb.com                              |\n| Docker               | \u5e94\u7528\u5bb9\u5668\u5f15\u64ce        | https://www.docker.com                               |\n| Druid                | \u6570\u636e\u5e93\u8fde\u63a5\u6c60        | https://github.com/alibaba/druid                     |\n| OSS                  | \u5bf9\u8c61\u5b58\u50a8            | https://github.com/aliyun/aliyun-oss-java-sdk        |\n| MinIO                | \u5bf9\u8c61\u5b58\u50a8            | https://github.com/minio/minio                       |\n| JWT                  | JWT\u767b\u5f55\u652f\u6301         | https://github.com/jwtk/jjwt                         |\n| LogStash             | \u65e5\u5fd7\u6536\u96c6\u5de5\u5177        | https://github.com/logstash/logstash-logback-encoder |\n| Lombok               | \u7b80\u5316\u5bf9\u8c61\u5c01\u88c5\u5de5\u5177    | https://github.com/rzwitserloot/lombok               |\n| Jenkins              | \u81ea\u52a8\u5316\u90e8\u7f72\u5de5\u5177      | https://github.com/jenkinsci/jenkins                 |\n\n#### \u524d\u7aef\u6280\u672f\n\n| \u6280\u672f       | \u8bf4\u660e                  | \u5b98\u7f51                                   |\n| ---------- | --------------------- | -------------------------------------- |\n| Vue        | \u524d\u7aef\u6846\u67b6              | https://vuejs.org/                     |\n| Vue-router | \u8def\u7531\u6846\u67b6              | https://router.vuejs.org/              |\n| Vuex       | \u5168\u5c40\u72b6\u6001\u7ba1\u7406\u6846\u67b6      | https://vuex.vuejs.org/                |\n| Element    | \u524d\u7aefUI\u6846\u67b6            | https://element.eleme.io               |\n| Axios      | \u524d\u7aefHTTP\u6846\u67b6          | https://github.com/axios/axios         |\n| v-charts   | \u57fa\u4e8eEcharts\u7684\u56fe\u8868\u6846\u67b6 | https://v-charts.js.org/               |\n| Js-cookie  | cookie\u7ba1\u7406\u5de5\u5177        | https://github.com/js-cookie/js-cookie |\n| nprogress  | \u8fdb\u5ea6\u6761\u63a7\u4ef6            | https://github.com/rstacruz/nprogress  |\n\n#### \u67b6\u6784\u56fe\n\n##### \u7cfb\u7edf\u67b6\u6784\u56fe\n\n![\u7cfb\u7edf\u67b6\u6784\u56fe](document/resource/mall_micro_service_arch.jpg)\n\n##### \u4e1a\u52a1\u67b6\u6784\u56fe\n\n![\u7cfb\u7edf\u67b6\u6784\u56fe](document/resource/mall_business_arch.png)\n\n#### \u6a21\u5757\u4ecb\u7ecd\n\n##### \u540e\u53f0\u7ba1\u7406\u7cfb\u7edf `mall-admin`\n\n- \u5546\u54c1\u7ba1\u7406\uff1a[\u529f\u80fd\u7ed3\u6784\u56fe-\u5546\u54c1.jpg](document/resource/mind_product.jpg)\n- \u8ba2\u5355\u7ba1\u7406\uff1a[\u529f\u80fd\u7ed3\u6784\u56fe-\u8ba2\u5355.jpg](document/resource/mind_order.jpg)\n- \u4fc3\u9500\u7ba1\u7406\uff1a[\u529f\u80fd\u7ed3\u6784\u56fe-\u4fc3\u9500.jpg](document/resource/mind_sale.jpg)\n- \u5185\u5bb9\u7ba1\u7406\uff1a[\u529f\u80fd\u7ed3\u6784\u56fe-\u5185\u5bb9.jpg](document/resource/mind_content.jpg)\n- \u7528\u6237\u7ba1\u7406\uff1a[\u529f\u80fd\u7ed3\u6784\u56fe-\u7528\u6237.jpg](document/resource/mind_member.jpg)\n\n##### \u524d\u53f0\u5546\u57ce\u7cfb\u7edf `mall-portal`\n\n[\u529f\u80fd\u7ed3\u6784\u56fe-\u524d\u53f0.jpg](document/resource/mind_portal.jpg)\n\n#### \u5f00\u53d1\u8fdb\u5ea6\n\n![\u9879\u76ee\u5f00\u53d1\u8fdb\u5ea6\u56fe](document/resource/mall_dev_flow.png)\n\n## \u73af\u5883\u642d\u5efa\n\n### \u5f00\u53d1\u5de5\u5177\n\n| \u5de5\u5177          | \u8bf4\u660e                | \u5b98\u7f51                                            |\n| ------------- | ------------------- | ----------------------------------------------- |\n| IDEA          | \u5f00\u53d1IDE             | https://www.jetbrains.com/idea/download         |\n| RedisDesktop  | redis\u5ba2\u6237\u7aef\u8fde\u63a5\u5de5\u5177 | https://redisdesktop.com/download               |\n| Robomongo     | mongo\u5ba2\u6237\u7aef\u8fde\u63a5\u5de5\u5177 | https://robomongo.org/download                  |\n| SwitchHosts   | \u672c\u5730host\u7ba1\u7406        | https://oldj.github.io/SwitchHosts/             |\n| X-shell       | Linux\u8fdc\u7a0b\u8fde\u63a5\u5de5\u5177   | http://www.netsarang.com/download/software.html |\n| Navicat       | \u6570\u636e\u5e93\u8fde\u63a5\u5de5\u5177      | http://www.formysql.com/xiazai.html             |\n| PowerDesigner | \u6570\u636e\u5e93\u8bbe\u8ba1\u5de5\u5177      | http://powerdesigner.de/                        |\n| Axure         | \u539f\u578b\u8bbe\u8ba1\u5de5\u5177        | https://www.axure.com/                          |\n| MindMaster    | \u601d\u7ef4\u5bfc\u56fe\u8bbe\u8ba1\u5de5\u5177    | http://www.edrawsoft.cn/mindmaster              |\n| ScreenToGif   | gif\u5f55\u5236\u5de5\u5177         | https://www.screentogif.com/                    |\n| ProcessOn     | \u6d41\u7a0b\u56fe\u7ed8\u5236\u5de5\u5177      | https://www.processon.com/                      |\n| PicPick       | \u56fe\u7247\u5904\u7406\u5de5\u5177        | https://picpick.app/zh/                         |\n| Snipaste      | \u5c4f\u5e55\u622a\u56fe\u5de5\u5177        | https://www.snipaste.com/                       |\n| Postman       | API\u63a5\u53e3\u8c03\u8bd5\u5de5\u5177      | https://www.postman.com/                        |\n| Typora        | Markdown\u7f16\u8f91\u5668      | https://typora.io/                              |\n\n### \u5f00\u53d1\u73af\u5883\n\n| \u5de5\u5177          | \u7248\u672c\u53f7 | \u4e0b\u8f7d                                                         |\n| ------------- | ------ | ------------------------------------------------------------ |\n| JDK           | 1.8    | https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html |\n| Mysql         | 5.7    | https://www.mysql.com/                                       |\n| Redis         | 3.2    | https://redis.io/download                                    |\n| Elasticsearch | 6.2.2  | https://www.elastic.co/downloads                             |\n| MongoDb       | 3.2    | https://www.mongodb.com/download-center                      |\n| RabbitMq      | 3.7.14 | http://www.rabbitmq.com/download.html                        |\n| Nginx         | 1.10   | http://nginx.org/en/download.html                            |\n\n### \u642d\u5efa\u6b65\u9aa4\n\n> Windows\u73af\u5883\u90e8\u7f72\n\n- Windows\u73af\u5883\u642d\u5efa\u8bf7\u53c2\u8003\uff1a[mall\u5728Windows\u73af\u5883\u4e0b\u7684\u90e8\u7f72](http://www.macrozheng.com/#/deploy/mall_deploy_windows);\n- \u6ce8\u610f\uff1a\u53ea\u542f\u52a8mall-admin,\u4ec5\u9700\u5b89\u88c5mysql\u5373\u53ef;\n- \u514b\u9686`mall-admin-web`\u9879\u76ee\uff0c\u5e76\u5bfc\u5165\u5230IDEA\u4e2d\u5b8c\u6210\u7f16\u8bd1\uff1a[\u524d\u7aef\u9879\u76ee\u5730\u5740](https://github.com/macrozheng/mall-admin-web);\n- `mall-admin-web`\u9879\u76ee\u7684\u5b89\u88c5\u53ca\u90e8\u7f72\u8bf7\u53c2\u8003\uff1a[mall\u524d\u7aef\u9879\u76ee\u7684\u5b89\u88c5\u4e0e\u90e8\u7f72](http://www.macrozheng.com/#/deploy/mall_deploy_web);\n- ELK\u65e5\u5fd7\u6536\u96c6\u7cfb\u7edf\u7684\u642d\u5efa\u8bf7\u53c2\u8003\uff1a[SpringBoot\u5e94\u7528\u6574\u5408ELK\u5b9e\u73b0\u65e5\u5fd7\u6536\u96c6](http://www.macrozheng.com/#/technology/mall_tiny_elk);\n- \u4f7f\u7528MinIO\u5b58\u50a8\u6587\u4ef6\u8bf7\u53c2\u8003\uff1a[\u524d\u540e\u7aef\u5206\u79bb\u9879\u76ee\uff0c\u5982\u4f55\u4f18\u96c5\u5b9e\u73b0\u6587\u4ef6\u5b58\u50a8](http://www.macrozheng.com/#/technology/minio_use);\n- \u8bfb\u5199\u5206\u79bb\u89e3\u51b3\u65b9\u6848\u8bf7\u53c2\u8003\uff1a[\u4f60\u8fd8\u5728\u4ee3\u7801\u91cc\u505a\u8bfb\u5199\u5206\u79bb\u4e48\uff0c\u8bd5\u8bd5\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u5427](http://www.macrozheng.com/#/reference/gaea)\u3002\n\n> Docker\u73af\u5883\u90e8\u7f72\n\n- \u4f7f\u7528\u865a\u62df\u673a\u5b89\u88c5CentOS7.6\u8bf7\u53c2\u8003\uff1a[\u865a\u62df\u673a\u5b89\u88c5\u53ca\u4f7f\u7528Linux\uff0c\u770b\u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86](http://www.macrozheng.com/#/reference/linux_install);\n- Docker\u73af\u5883\u7684\u5b89\u88c5\u8bf7\u53c2\u8003\uff1a[\u5f00\u53d1\u8005\u5fc5\u5907Docker\u547d\u4ee4](http://www.macrozheng.com/#/reference/docker);\n- \u672c\u9879\u76eeDocker\u955c\u50cf\u6784\u5efa\u8bf7\u53c2\u8003\uff1a[\u4f7f\u7528Maven\u63d2\u4ef6\u4e3aSpringBoot\u5e94\u7528\u6784\u5efaDocker\u955c\u50cf](http://www.macrozheng.com/#/reference/docker_maven);\n- \u672c\u9879\u76ee\u5728Docker\u5bb9\u5668\u4e0b\u7684\u90e8\u7f72\u8bf7\u53c2\u8003\uff1a[mall\u5728Linux\u73af\u5883\u4e0b\u7684\u90e8\u7f72\uff08\u57fa\u4e8eDocker\u5bb9\u5668\uff09](http://www.macrozheng.com/#/deploy/mall_deploy_docker);\n- \u672c\u9879\u76ee\u4f7f\u7528Docker Compose\u8bf7\u53c2\u8003\uff1a [mall\u5728Linux\u73af\u5883\u4e0b\u7684\u90e8\u7f72\uff08\u57fa\u4e8eDocker Compose\uff09](http://www.macrozheng.com/#/deploy/mall_deploy_docker_compose);\n- \u672c\u9879\u76ee\u5728Linux\u4e0b\u7684\u81ea\u52a8\u5316\u90e8\u7f72\u8bf7\u53c2\u8003\uff1a[mall\u5728Linux\u73af\u5883\u4e0b\u7684\u81ea\u52a8\u5316\u90e8\u7f72\uff08\u57fa\u4e8eJenkins\uff09](http://www.macrozheng.com/#/deploy/mall_deploy_jenkins)\u3002\n\n## \u516c\u4f17\u53f7\n\nmall\u9879\u76ee\u5168\u5957\u5b66\u4e60\u6559\u7a0b\u8fde\u8f7d\u4e2d\uff0c\u5173\u6ce8\u516c\u4f17\u53f7\u300c**macrozheng**\u300d\u7b2c\u4e00\u65f6\u95f4\u83b7\u53d6\u3002\n\n\u52a0\u5fae\u4fe1\u7fa4\u4ea4\u6d41\uff0c\u516c\u4f17\u53f7\u540e\u53f0\u56de\u590d\u300c**\u52a0\u7fa4**\u300d\u5373\u53ef\u3002\n\n![\u516c\u4f17\u53f7\u56fe\u7247](http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/banner/qrcode_for_macrozheng_258.jpg)\n\n## \u8bb8\u53ef\u8bc1\n\n[Apache License 2.0](https://github.com/macrozheng/mall/blob/master/LICENSE)\n\nCopyright (c) 2018-2020 macrozheng\n"
 },
 {
  "repo": "wesbos/JavaScript30",
  "language": "HTML",
  "readme_contents": "\ufeff![](https://javascript30.com/images/JS3-social-share.png)\n\n# JavaScript30\n\nStarter Files + Completed solutions for the JavaScript 30 Day Challenge.\n\nGrab the course at [https://JavaScript30.com](https://JavaScript30.com)\n\n## Community #JavaScript30 Content\n\nFeel free to submit a PR adding a link to your own recaps, guides or reviews!\n\n* [Arjun Khode\u2019s blog](http://thesagittariusme.blogspot.com/search/label/JS30) about summaries for each day, including fixed glitches, bugs and extra features\n* [Nitish Dayal's Text Guides](https://github.com/nitishdayal/JavaScript30) are great for those who like reading over watching\n* [Meredith Underell's](http://meredithunderell.com/tag/javascript30/) Quick Lessons Learned\n* [Rowan Weismiller's](http://rowanweismiller.com/blog/javascript-30/) Recaps + Lessons Learned\n* [Thorsten Frommen](https://tfrommen.de/tag/javascript-30/) shares how he solved the exercises before viewing the answers\n* [Soyaine \u5199\u7684\u4e2d\u6587\u6307\u5357](https://github.com/soyaine/JavaScript30)\u5305\u542b\u4e86\u8fc7\u7a0b\u8bb0\u5f55\u548c\u96be\u70b9\u89e3\u91ca\n* [Ayo Isaiah's](https://freshman.tech/archive/#javascript30) Recaps and Lessons Learned\n* [Adriana Rios](https://stpcollabr8nlstn.github.io/JavaScript30/) shares her alternative solutions\n* [Michael Einsohn](http://30daysofjs.michaeleinsohn.com) publishes each challenge after watching the video once\n* [Mike Ekkel](https://medium.com/@mike_ekkel/javascript-30-a-30-day-vanilla-js-challenge-6a733fc9f62c#.9frjtaje9)\n* [Yusef Habib](https://github.com/yhabib/JavaScript30) lessons and tricks learned, and a [gh-page](https://yhabib.github.io/JavaScript30/) to see working all the mini-projects.\n* [Amelie Yeh](https://github.com/amelieyeh/JS30) 30 lessons notes with things I've learned, and those important recaps. and directly view my demos [here](https://amelieyeh.github.io/JS30/) \ud83c\uddf9\ud83c\uddfc\ud83d\ude04\n* [Winar](https://github.com/winar-jin/JavaScript30-Challenge)\u7684JavaScript30\u5929\u6311\u6218\uff0c\u8bb0\u5f55\u7ec3\u4e60\u8fc7\u7a0b\uff0c\u91cd\u96be\u70b9\u548c\u5176\u4ed6\u7684\u89e3\u51b3\u65b9\u6848\u3002\ud83c\udfa8\n* [Rayhatron](https://rayhatron.github.io/blog/) - walkthroughs, recaps and lessons learned.\n* [Andrei Dobra](https://github.com/andreidbr/JS30) Full repo with lessons learned and a [gh-page](https://andreidbr.github.io/JS30/) with all the exercises.\n* [\u4ece\u96f6\u5230\u58f9\u5168\u6808\u90e8\u843d](https://github.com/liyuechun/JavaScript30-liyuechun),\u6625\u54e5\u53d1\u8d77\u7684\u4ece\u96f6\u5230\u58f9\u5168\u6808\u90e8\u843d\uff0c\u65e8\u5728\u5e26\u9886\u5927\u5bb6\u4e00\u8d77\u5b66\u4e60\uff0c\u4e00\u8d77\u8f93\u51fa\uff0c\u6587\u6863\u5316\uff0c\u4ee3\u7801\u5316\uff0c\u4e2d\u6587\u89c6\u9891\u5316\uff0c\u5168\u6808\u90e8\u843d\u53e3\u53f7\uff1a\u8f93\u51fa\u662f\u6700\u597d\u7684\u5b66\u4e60\u65b9\u5f0f\u3002\n* [Usmaan Ali's](https://github.com/usyyy/javascript/blob/master/JavaScript30/analysis.md) summary of the technical skills learned from each project. He's also posting them as separate blog posts [here](https://medium.com/@usyyy)\n* [Axel](https://github.com/afuh/js30)'s lessons learned and a [showcase](https://afuh.github.io/js30/) with the projects.\n* [Chris](https://github.com/dwatow/JavaScript30) \u4e2d\u6587\u5be6\u6230\uff0c\u76ee\u6a19\u63cf\u8ff0\u3001\u904e\u7a0b\u7d00\u9304\u3002\n* [Muhammad D. Ramadhan's](https://miayam.github.io) blog. He shamlesly mixed his personal life with 30 day JavaScript challenge so as to increase his learning retention. He also summarised the challenge on [one single page](https://miayam.github.io/js30). Do not read his blog!\n* [Lee Keitel's Blog](https://blog.keitel.xyz/categories/javascript30/) includes summaries of each lesson, what I learned from each one, and my thoughts about the topic taught and using them in the future.\n* [Dustin Hsiao](https://github.com/dustinhsiao21/Javascript30-dustin) \u5305\u542b\u4e86\u5404\u7bc7\u4ecb\u7d39\u3001 \u6548\u679cDemo\u3001\u5404\u7bc7\u8a73\u89e3\u53ca\u8a18\u9304\u904e\u7a0b\uff0c\u9644\u4e0a\u90e8\u5206\u5ef6\u4f38\u95b1\u8b80\u53ca[gh-page](https://dustinhsiao21.github.io/Javascript30-dustin/)\u3002\n* [GuaHsu](https://github.com/guahsu/JavaScript30) - \u7d00\u9304\u5404\u7bc7\u7df4\u7fd2\u904e\u7a0b\u8207\u5fc3\u5f97\uff0c\u4e26\u5617\u8a66\u64f4\u5145\u90e8\u5206\u7df4\u7fd2\uff0c\u4e5f\u505a\u4e86\u4e00\u500b\u5305\u542b\u5168\u90e8\u7df4\u7fd2\u7684[\u4ecb\u7d39\u7ad9](http://guahsu.io/JavaScript30/)\ud83c\uddf9\ud83c\uddfc\n* [Daniela](https://github.com/misslild)'s completed challenges on [GitHub Pages](https://misslild.github.io/WesBos-30day-Coding-challenge/) and [Codepen](https://codepen.io/collection/DapZeP/) :raised_hands: :muscle: :+1:\n* [Dmitrii Pashutskii's](https://github.com/guar47) code of all challenges on [GitHub with Pages](https://github.com/guar47/javascript30Summary) and review [blog posts](https://blog.dpashutskii.com/tag/javascript30/)\n* [Abid Hasan's](https://github.com/sabidhasan/javascript-30) completion of all challenges. This was awesome!! Learned so much! :+1:\n* [Yusong Notes](https://sky172839465.github.io/course/js30) Records Yusong JS 30 days note and demo :star2:\n* [Ding's Implementation](https://github.com/Ding-Fan/javascript30) code and online demo\n* [Herminio Torres](https://github.com/herminiotorres/JavaScript30) lessons and tricks learned, and a [gh-page](https://herminiotorres.github.io/JavaScript30/) to see working all the mini-projects.\n* [Dmytro Borysovskyi](https://github.com/dimabory) says many thanks to for the course to Wes \ud83e\udd1d It was incredible challenge \ud83d\udc4c The full repository with code available [here](https://github.com/dimabory/dimabory.github.io/tree/gh-pages/src/components/JavaScript30Days) and demos can be reached by the link to [gh-pages](https://dimabory.github.io/#/js30days) \ud83d\udc4d\ud83d\udc4d\ud83d\udc4d \n* [Kizito](https://github.com/akhilome/)'s follow along [repo](https://github.com/akhilome/js30) with [completed challenges](https://akhilome.github.io/js30) and [notes](https://akhilome.github.io/js30/notes).\n* [VannTile](https://github.com/vanntile)'s [repository](https://github.com/vanntile/JavaScript30) and [GitHub Pages showcase](https://vanntile.github.io/JavaScript30/). Thank you for a great \u2328\ufe0f experience.\n* [Alex Kim](https://github.com/Alex-K1m/js30-challenge) completed all the challenges. You can check them out at [github pages](https://alex-k1m.github.io/js30-challenge/).\n* [Mikhail Thomas](https://github.com/seckela) created [JS30++](https://github.com/seckela/js30plusplus) to add another level of challenge ontop of this already great course.\n* [Ramon Morcillo](https://github.com/reymon359/JavaScript30) finished this awesome challenge!. You can see the showcase of his implementations on [this link](https://reymon359.github.io/JavaScript30/).\n* [Santiago Escobar](https://github.com/sescobar99)'s [repository](https://github.com/sescobar99/javascript30-challenge) and [GitHub Pages showcase](https://sescobar99.github.io/javascript30-challenge/).\n* [Harry Xie](https://github.com/a90100/JavaScript30) \u7d00\u9304 30 \u5929\u7684\u7df4\u7fd2\u7b46\u8a18\u5728 [\u6b64\u9023\u7d50](https://github.com/a90100/JavaScript30).\n* [ Van Ribeiro's ](https://vanribeiro-30daysofjavascript.netlify.app/) about demos and recaps. On [GitHub Repo](https://github.com/vanribeiro/30days-Of-JavaScript) there's a summary about what was learned and researched.\n* [Mugilan](https://github.com/Mugilan-Codes) is currently doing this challenge. Check out his [Repo](https://github.com/Mugilan-Codes/javascript-30) and the [Live Demo](https://mugilan-codes.github.io/javascript-30/).\n* [Eshan Vohra] (https://github.com/eshanvohra) is currently doing this challenge. Check out my repo at(https://github.com/eshanvohra/JavaScript30)\n\n\n## Alternative Implementations\nHere are some links of people who have done the tutorials, but in a different language or framework:\n\n* [Thomas Mattacchione](https://github.com/tkjone/clojurescript-30) JavaScript 30 written in ClojureScript\n* [Dave Follett's](https://github.com/davefollett) blog series, [A New Vue on #JavaScript30](https://davefollett.io/categories/a-new-vue-on-javascript30/), where he explores re-implementing #JavaScript30 projects using [Vue](https://vuejs.org).\n* [Akinjide Bankole](https://github.com/akinjide/JS30days) used Node.js with [Jade](http://jadelang.net) to solve the exercises\n* [Adrien Poly](https://github.com/adrienpoly/javascript30-stimulus) a modest attempt to convert Drum Kit, Video Player, Local Tapas, TypeHead to [Stimulus JS](https://stimulusjs.org/) framework in a Rails App.\n* [Bogdan Lazar](https://github.com/tricinel/TypeScript30) all the JavaScript 30 written in [TypeScript](https://www.typescriptlang.org/)\n* [Will Wager](https://github.com/wwags33/JavaScript30) another [TypeScript](https://www.typescriptlang.org/) implementation!\n* [marcoSven](https://github.com/marcoSven) solution suggestion for [10 - Hold Shift and Check Checkboxes](https://github.com/marcoSven/JavaScript30/blob/master/10%20-%20Hold%20Shift%20and%20Check%20Checkboxes/index-FINISHED.html)\n* [ALMaclaine](https://github.com/almaclaine) Javascript 30 written in [Dart 2.0](https://github.com/ALMaclaine/Dart30).\n\n## A note on Pull Requests\n\nThese are meant to be 1:1 copies of what is done in the video. If you found a better / different way to do things, great, but I will be keeping them the same as the videos.\n\nThe starter files + solutions will be updated if/when the videos are updated.\n\nThanks!\n"
 },
 {
  "repo": "python/cpython",
  "language": "Python",
  "readme_contents": "This is Python version 3.10.0 alpha 0\n=====================================\n\n.. image:: https://travis-ci.org/python/cpython.svg?branch=master\n   :alt: CPython build status on Travis CI\n   :target: https://travis-ci.org/python/cpython\n\n.. image:: https://github.com/python/cpython/workflows/Tests/badge.svg\n   :alt: CPython build status on GitHub Actions\n   :target: https://github.com/python/cpython/actions\n\n.. image:: https://dev.azure.com/python/cpython/_apis/build/status/Azure%20Pipelines%20CI?branchName=master\n   :alt: CPython build status on Azure DevOps\n   :target: https://dev.azure.com/python/cpython/_build/latest?definitionId=4&branchName=master\n\n.. image:: https://codecov.io/gh/python/cpython/branch/master/graph/badge.svg\n   :alt: CPython code coverage on Codecov\n   :target: https://codecov.io/gh/python/cpython\n\n.. image:: https://img.shields.io/badge/zulip-join_chat-brightgreen.svg\n   :alt: Python Zulip chat\n   :target: https://python.zulipchat.com\n\n\nCopyright (c) 2001-2020 Python Software Foundation.  All rights reserved.\n\nSee the end of this file for further copyright and license information.\n\n.. contents::\n\nGeneral Information\n-------------------\n\n- Website: https://www.python.org\n- Source code: https://github.com/python/cpython\n- Issue tracker: https://bugs.python.org\n- Documentation: https://docs.python.org\n- Developer's Guide: https://devguide.python.org/\n\nContributing to CPython\n-----------------------\n\nFor more complete instructions on contributing to CPython development,\nsee the `Developer Guide`_.\n\n.. _Developer Guide: https://devguide.python.org/\n\nUsing Python\n------------\n\nInstallable Python kits, and information about using Python, are available at\n`python.org`_.\n\n.. _python.org: https://www.python.org/\n\nBuild Instructions\n------------------\n\nOn Unix, Linux, BSD, macOS, and Cygwin::\n\n    ./configure\n    make\n    make test\n    sudo make install\n\nThis will install Python as ``python3``.\n\nYou can pass many options to the configure script; run ``./configure --help``\nto find out more.  On macOS case-insensitive file systems and on Cygwin,\nthe executable is called ``python.exe``; elsewhere it's just ``python``.\n\nBuilding a complete Python installation requires the use of various\nadditional third-party libraries, depending on your build platform and\nconfigure options.  Not all standard library modules are buildable or\nuseable on all platforms.  Refer to the\n`Install dependencies <https://devguide.python.org/setup/#install-dependencies>`_\nsection of the `Developer Guide`_ for current detailed information on\ndependencies for various Linux distributions and macOS.\n\nOn macOS, there are additional configure and build options related\nto macOS framework and universal builds.  Refer to `Mac/README.rst\n<https://github.com/python/cpython/blob/master/Mac/README.rst>`_.\n\nOn Windows, see `PCbuild/readme.txt\n<https://github.com/python/cpython/blob/master/PCbuild/readme.txt>`_.\n\nIf you wish, you can create a subdirectory and invoke configure from there.\nFor example::\n\n    mkdir debug\n    cd debug\n    ../configure --with-pydebug\n    make\n    make test\n\n(This will fail if you *also* built at the top-level directory.  You should do\na ``make clean`` at the top-level first.)\n\nTo get an optimized build of Python, ``configure --enable-optimizations``\nbefore you run ``make``.  This sets the default make targets up to enable\nProfile Guided Optimization (PGO) and may be used to auto-enable Link Time\nOptimization (LTO) on some platforms.  For more details, see the sections\nbelow.\n\nProfile Guided Optimization\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPGO takes advantage of recent versions of the GCC or Clang compilers.  If used,\neither via ``configure --enable-optimizations`` or by manually running\n``make profile-opt`` regardless of configure flags, the optimized build\nprocess will perform the following steps:\n\nThe entire Python directory is cleaned of temporary files that may have\nresulted from a previous compilation.\n\nAn instrumented version of the interpreter is built, using suitable compiler\nflags for each flavour. Note that this is just an intermediary step.  The\nbinary resulting from this step is not good for real life workloads as it has\nprofiling instructions embedded inside.\n\nAfter the instrumented interpreter is built, the Makefile will run a training\nworkload.  This is necessary in order to profile the interpreter execution.\nNote also that any output, both stdout and stderr, that may appear at this step\nis suppressed.\n\nThe final step is to build the actual interpreter, using the information\ncollected from the instrumented one.  The end result will be a Python binary\nthat is optimized; suitable for distribution or production installation.\n\n\nLink Time Optimization\n^^^^^^^^^^^^^^^^^^^^^^\n\nEnabled via configure's ``--with-lto`` flag.  LTO takes advantage of the\nability of recent compiler toolchains to optimize across the otherwise\narbitrary ``.o`` file boundary when building final executables or shared\nlibraries for additional performance gains.\n\n\nWhat's New\n----------\n\nWe have a comprehensive overview of the changes in the `What's New in Python\n3.10 <https://docs.python.org/3.10/whatsnew/3.10.html>`_ document.  For a more\ndetailed change log, read `Misc/NEWS\n<https://github.com/python/cpython/blob/master/Misc/NEWS.d>`_, but a full\naccounting of changes can only be gleaned from the `commit history\n<https://github.com/python/cpython/commits/master>`_.\n\nIf you want to install multiple versions of Python, see the section below\nentitled \"Installing multiple versions\".\n\n\nDocumentation\n-------------\n\n`Documentation for Python 3.10 <https://docs.python.org/3.10/>`_ is online,\nupdated daily.\n\nIt can also be downloaded in many formats for faster access.  The documentation\nis downloadable in HTML, PDF, and reStructuredText formats; the latter version\nis primarily for documentation authors, translators, and people with special\nformatting requirements.\n\nFor information about building Python's documentation, refer to `Doc/README.rst\n<https://github.com/python/cpython/blob/master/Doc/README.rst>`_.\n\n\nConverting From Python 2.x to 3.x\n---------------------------------\n\nSignificant backward incompatible changes were made for the release of Python\n3.0, which may cause programs written for Python 2 to fail when run with Python\n3.  For more information about porting your code from Python 2 to Python 3, see\nthe `Porting HOWTO <https://docs.python.org/3/howto/pyporting.html>`_.\n\n\nTesting\n-------\n\nTo test the interpreter, type ``make test`` in the top-level directory.  The\ntest set produces some output.  You can generally ignore the messages about\nskipped tests due to optional features which can't be imported.  If a message\nis printed about a failed test or a traceback or core dump is produced,\nsomething is wrong.\n\nBy default, tests are prevented from overusing resources like disk space and\nmemory.  To enable these tests, run ``make testall``.\n\nIf any tests fail, you can re-run the failing test(s) in verbose mode.  For\nexample, if ``test_os`` and ``test_gdb`` failed, you can run::\n\n    make test TESTOPTS=\"-v test_os test_gdb\"\n\nIf the failure persists and appears to be a problem with Python rather than\nyour environment, you can `file a bug report <https://bugs.python.org>`_ and\ninclude relevant output from that command to show the issue.\n\nSee `Running & Writing Tests <https://devguide.python.org/runtests/>`_\nfor more on running tests.\n\nInstalling multiple versions\n----------------------------\n\nOn Unix and Mac systems if you intend to install multiple versions of Python\nusing the same installation prefix (``--prefix`` argument to the configure\nscript) you must take care that your primary python executable is not\noverwritten by the installation of a different version.  All files and\ndirectories installed using ``make altinstall`` contain the major and minor\nversion and can thus live side-by-side.  ``make install`` also creates\n``${prefix}/bin/python3`` which refers to ``${prefix}/bin/pythonX.Y``.  If you\nintend to install multiple versions using the same prefix you must decide which\nversion (if any) is your \"primary\" version.  Install that version using ``make\ninstall``.  Install all other versions using ``make altinstall``.\n\nFor example, if you want to install Python 2.7, 3.6, and 3.10 with 3.10 being the\nprimary version, you would execute ``make install`` in your 3.10 build directory\nand ``make altinstall`` in the others.\n\n\nIssue Tracker and Mailing List\n------------------------------\n\nBug reports are welcome!  You can use the `issue tracker\n<https://bugs.python.org>`_ to report bugs, and/or submit pull requests `on\nGitHub <https://github.com/python/cpython>`_.\n\nYou can also follow development discussion on the `python-dev mailing list\n<https://mail.python.org/mailman/listinfo/python-dev/>`_.\n\n\nProposals for enhancement\n-------------------------\n\nIf you have a proposal to change Python, you may want to send an email to the\ncomp.lang.python or `python-ideas`_ mailing lists for initial feedback.  A\nPython Enhancement Proposal (PEP) may be submitted if your idea gains ground.\nAll current PEPs, as well as guidelines for submitting a new PEP, are listed at\n`python.org/dev/peps/ <https://www.python.org/dev/peps/>`_.\n\n.. _python-ideas: https://mail.python.org/mailman/listinfo/python-ideas/\n\n\nRelease Schedule\n----------------\n\nSee :pep:`596` for Python 3.9 release details.\n\n\nCopyright and License Information\n---------------------------------\n\nCopyright (c) 2001-2020 Python Software Foundation.  All rights reserved.\n\nCopyright (c) 2000 BeOpen.com.  All rights reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.  All\nrights reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.\n\nSee the file \"LICENSE\" for information on the history of this software, terms &\nconditions for usage, and a DISCLAIMER OF ALL WARRANTIES.\n\nThis Python distribution contains *no* GNU General Public License (GPL) code,\nso it may be used in proprietary projects.  There are interfaces to some GNU\ncode but these are entirely optional.\n\nAll trademarks referenced herein are property of their respective holders.\n"
 },
 {
  "repo": "hakimel/reveal.js",
  "language": "JavaScript",
  "readme_contents": "<p align=\"center\">\n  <a href=\"https://revealjs.com\">\n  <img src=\"https://hakim-static.s3.amazonaws.com/reveal-js/logo/v1/reveal-black-text.svg\" alt=\"reveal.js\" width=\"450\">\n  </a>\n  <br><br>\n  <a href=\"https://github.com/hakimel/reveal.js/actions\"><img src=\"https://github.com/hakimel/reveal.js/workflows/tests/badge.svg\"></a>\n  <a href=\"https://slides.com/\"><img src=\"https://s3.amazonaws.com/static.slid.es/images/slides-github-banner-320x40.png?1\" alt=\"Slides\" width=\"160\" height=\"20\"></a>\n</p>\n\nreveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free. [Check out the live demo](https://revealjs.com/).\n\nThe framework comes with a broad range of features including [nested slides](https://revealjs.com/vertical-slides/), [Markdown support](https://revealjs.com/markdown/), [Auto-Animate](https://revealjs.com/auto-animate/), [PDF export](https://revealjs.com/pdf-export/), [speaker notes](https://revealjs.com/speaker-view/), [LaTeX support](https://revealjs.com/math/), [syntax highlighted code](https://revealjs.com/code/) and much more.\n\n<h1>\n  <a href=\"https://revealjs.com/installation\" style=\"font-size: 3em;\">Get Started</a>\n</h1>\n\n## Documentation\nThe full reveal.js documentation is available at [revealjs.com](https://revealjs.com).\n\n## Online Editor\nWant to create your presentation using a visual editor? Try the official reveal.js presentation platform for free at [Slides.com](https://slides.com). It's made by the same people behind reveal.js.\n\n## License\n\nMIT licensed\n\nCopyright (C) 2011-2020 Hakim El Hattab, https://hakim.se\n"
 }
]